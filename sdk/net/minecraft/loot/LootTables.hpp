// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_LOOT_LOOTTABLES_HPP
#define NET_MINECRAFT_LOOT_LOOTTABLES_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.loot.LootTables
 * Remapped: ern
 */
namespace LootTables {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("ern", "net/minecraft/world/level/storage/loot/BuiltInLootTables", "net/minecraft/class_39", "net/minecraft/loot/LootTables", "net/minecraft/src/C_2799_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.loot.LootTables#LOOT_TABLES
    [[maybe_unused]] static jobject get_field_LOOT_TABLES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bj", "LOCATIONS", "field_667", "LOOT_TABLES", "f_78739_"), "Ljava/util/Set;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.loot.LootTables#LOOT_TABLES
    [[maybe_unused]] static void set_field_LOOT_TABLES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bj", "LOCATIONS", "field_667", "LOOT_TABLES", "f_78739_"), "Ljava/util/Set;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.loot.LootTables#LOOT_TABLES_READ_ONLY
    [[maybe_unused]] static jobject get_field_LOOT_TABLES_READ_ONLY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bk", "IMMUTABLE_LOCATIONS", "field_600", "LOOT_TABLES_READ_ONLY", "f_78713_"), "Ljava/util/Set;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.loot.LootTables#LOOT_TABLES_READ_ONLY
    [[maybe_unused]] static void set_field_LOOT_TABLES_READ_ONLY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bk", "IMMUTABLE_LOCATIONS", "field_600", "LOOT_TABLES_READ_ONLY", "f_78713_"), "Ljava/util/Set;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#EMPTY
    [[maybe_unused]] static jobject get_field_EMPTY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "EMPTY", "field_844", "EMPTY", "f_78712_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#EMPTY
    [[maybe_unused]] static void set_field_EMPTY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "EMPTY", "field_844", "EMPTY", "f_78712_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#SPAWN_BONUS_CHEST
    [[maybe_unused]] static jobject get_field_SPAWN_BONUS_CHEST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "SPAWN_BONUS_CHEST", "field_850", "SPAWN_BONUS_CHEST", "f_78740_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#SPAWN_BONUS_CHEST
    [[maybe_unused]] static void set_field_SPAWN_BONUS_CHEST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "SPAWN_BONUS_CHEST", "field_850", "SPAWN_BONUS_CHEST", "f_78740_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#END_CITY_TREASURE_CHEST
    [[maybe_unused]] static jobject get_field_END_CITY_TREASURE_CHEST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "END_CITY_TREASURE", "field_274", "END_CITY_TREASURE_CHEST", "f_78741_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#END_CITY_TREASURE_CHEST
    [[maybe_unused]] static void set_field_END_CITY_TREASURE_CHEST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "END_CITY_TREASURE", "field_274", "END_CITY_TREASURE_CHEST", "f_78741_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#SIMPLE_DUNGEON_CHEST
    [[maybe_unused]] static jobject get_field_SIMPLE_DUNGEON_CHEST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "SIMPLE_DUNGEON", "field_356", "SIMPLE_DUNGEON_CHEST", "f_78742_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#SIMPLE_DUNGEON_CHEST
    [[maybe_unused]] static void set_field_SIMPLE_DUNGEON_CHEST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "SIMPLE_DUNGEON", "field_356", "SIMPLE_DUNGEON_CHEST", "f_78742_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#VILLAGE_WEAPONSMITH_CHEST
    [[maybe_unused]] static jobject get_field_VILLAGE_WEAPONSMITH_CHEST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "VILLAGE_WEAPONSMITH", "field_434", "VILLAGE_WEAPONSMITH_CHEST", "f_78743_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#VILLAGE_WEAPONSMITH_CHEST
    [[maybe_unused]] static void set_field_VILLAGE_WEAPONSMITH_CHEST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "VILLAGE_WEAPONSMITH", "field_434", "VILLAGE_WEAPONSMITH_CHEST", "f_78743_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#VILLAGE_TOOLSMITH_CHEST
    [[maybe_unused]] static jobject get_field_VILLAGE_TOOLSMITH_CHEST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "VILLAGE_TOOLSMITH", "field_17107", "VILLAGE_TOOLSMITH_CHEST", "f_78744_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#VILLAGE_TOOLSMITH_CHEST
    [[maybe_unused]] static void set_field_VILLAGE_TOOLSMITH_CHEST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "VILLAGE_TOOLSMITH", "field_17107", "VILLAGE_TOOLSMITH_CHEST", "f_78744_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#VILLAGE_ARMORER_CHEST
    [[maybe_unused]] static jobject get_field_VILLAGE_ARMORER_CHEST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "VILLAGE_ARMORER", "field_17009", "VILLAGE_ARMORER_CHEST", "f_78745_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#VILLAGE_ARMORER_CHEST
    [[maybe_unused]] static void set_field_VILLAGE_ARMORER_CHEST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "VILLAGE_ARMORER", "field_17009", "VILLAGE_ARMORER_CHEST", "f_78745_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#VILLAGE_CARTOGRAPHER_CHEST
    [[maybe_unused]] static jobject get_field_VILLAGE_CARTOGRAPHER_CHEST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "VILLAGE_CARTOGRAPHER", "field_16751", "VILLAGE_CARTOGRAPHER_CHEST", "f_78746_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#VILLAGE_CARTOGRAPHER_CHEST
    [[maybe_unused]] static void set_field_VILLAGE_CARTOGRAPHER_CHEST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "VILLAGE_CARTOGRAPHER", "field_16751", "VILLAGE_CARTOGRAPHER_CHEST", "f_78746_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#VILLAGE_MASON_CHEST
    [[maybe_unused]] static jobject get_field_VILLAGE_MASON_CHEST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "VILLAGE_MASON", "field_17010", "VILLAGE_MASON_CHEST", "f_78747_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#VILLAGE_MASON_CHEST
    [[maybe_unused]] static void set_field_VILLAGE_MASON_CHEST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "VILLAGE_MASON", "field_17010", "VILLAGE_MASON_CHEST", "f_78747_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#VILLAGE_SHEPARD_CHEST
    [[maybe_unused]] static jobject get_field_VILLAGE_SHEPARD_CHEST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "VILLAGE_SHEPHERD", "field_17011", "VILLAGE_SHEPARD_CHEST", "f_78748_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#VILLAGE_SHEPARD_CHEST
    [[maybe_unused]] static void set_field_VILLAGE_SHEPARD_CHEST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "VILLAGE_SHEPHERD", "field_17011", "VILLAGE_SHEPARD_CHEST", "f_78748_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#VILLAGE_BUTCHER_CHEST
    [[maybe_unused]] static jobject get_field_VILLAGE_BUTCHER_CHEST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "VILLAGE_BUTCHER", "field_17012", "VILLAGE_BUTCHER_CHEST", "f_78749_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#VILLAGE_BUTCHER_CHEST
    [[maybe_unused]] static void set_field_VILLAGE_BUTCHER_CHEST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "VILLAGE_BUTCHER", "field_17012", "VILLAGE_BUTCHER_CHEST", "f_78749_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#VILLAGE_FLETCHER_CHEST
    [[maybe_unused]] static jobject get_field_VILLAGE_FLETCHER_CHEST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "VILLAGE_FLETCHER", "field_17108", "VILLAGE_FLETCHER_CHEST", "f_78750_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#VILLAGE_FLETCHER_CHEST
    [[maybe_unused]] static void set_field_VILLAGE_FLETCHER_CHEST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "VILLAGE_FLETCHER", "field_17108", "VILLAGE_FLETCHER_CHEST", "f_78750_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#VILLAGE_FISHER_CHEST
    [[maybe_unused]] static jobject get_field_VILLAGE_FISHER_CHEST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "VILLAGE_FISHER", "field_18007", "VILLAGE_FISHER_CHEST", "f_78751_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#VILLAGE_FISHER_CHEST
    [[maybe_unused]] static void set_field_VILLAGE_FISHER_CHEST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "VILLAGE_FISHER", "field_18007", "VILLAGE_FISHER_CHEST", "f_78751_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#VILLAGE_TANNERY_CHEST
    [[maybe_unused]] static jobject get_field_VILLAGE_TANNERY_CHEST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "VILLAGE_TANNERY", "field_16750", "VILLAGE_TANNERY_CHEST", "f_78752_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#VILLAGE_TANNERY_CHEST
    [[maybe_unused]] static void set_field_VILLAGE_TANNERY_CHEST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "VILLAGE_TANNERY", "field_16750", "VILLAGE_TANNERY_CHEST", "f_78752_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#VILLAGE_TEMPLE_CHEST
    [[maybe_unused]] static jobject get_field_VILLAGE_TEMPLE_CHEST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "VILLAGE_TEMPLE", "field_17109", "VILLAGE_TEMPLE_CHEST", "f_78753_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#VILLAGE_TEMPLE_CHEST
    [[maybe_unused]] static void set_field_VILLAGE_TEMPLE_CHEST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "VILLAGE_TEMPLE", "field_17109", "VILLAGE_TEMPLE_CHEST", "f_78753_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#VILLAGE_DESERT_HOUSE_CHEST
    [[maybe_unused]] static jobject get_field_VILLAGE_DESERT_HOUSE_CHEST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "VILLAGE_DESERT_HOUSE", "field_16752", "VILLAGE_DESERT_HOUSE_CHEST", "f_78754_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#VILLAGE_DESERT_HOUSE_CHEST
    [[maybe_unused]] static void set_field_VILLAGE_DESERT_HOUSE_CHEST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "VILLAGE_DESERT_HOUSE", "field_16752", "VILLAGE_DESERT_HOUSE_CHEST", "f_78754_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#VILLAGE_PLAINS_CHEST
    [[maybe_unused]] static jobject get_field_VILLAGE_PLAINS_CHEST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "VILLAGE_PLAINS_HOUSE", "field_16748", "VILLAGE_PLAINS_CHEST", "f_78755_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#VILLAGE_PLAINS_CHEST
    [[maybe_unused]] static void set_field_VILLAGE_PLAINS_CHEST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "VILLAGE_PLAINS_HOUSE", "field_16748", "VILLAGE_PLAINS_CHEST", "f_78755_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#VILLAGE_TAIGA_HOUSE_CHEST
    [[maybe_unused]] static jobject get_field_VILLAGE_TAIGA_HOUSE_CHEST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "VILLAGE_TAIGA_HOUSE", "field_16749", "VILLAGE_TAIGA_HOUSE_CHEST", "f_78756_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#VILLAGE_TAIGA_HOUSE_CHEST
    [[maybe_unused]] static void set_field_VILLAGE_TAIGA_HOUSE_CHEST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "VILLAGE_TAIGA_HOUSE", "field_16749", "VILLAGE_TAIGA_HOUSE_CHEST", "f_78756_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#VILLAGE_SNOWY_HOUSE_CHEST
    [[maybe_unused]] static jobject get_field_VILLAGE_SNOWY_HOUSE_CHEST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "VILLAGE_SNOWY_HOUSE", "field_16754", "VILLAGE_SNOWY_HOUSE_CHEST", "f_78757_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#VILLAGE_SNOWY_HOUSE_CHEST
    [[maybe_unused]] static void set_field_VILLAGE_SNOWY_HOUSE_CHEST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "VILLAGE_SNOWY_HOUSE", "field_16754", "VILLAGE_SNOWY_HOUSE_CHEST", "f_78757_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#VILLAGE_SAVANNA_HOUSE_CHEST
    [[maybe_unused]] static jobject get_field_VILLAGE_SAVANNA_HOUSE_CHEST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "VILLAGE_SAVANNA_HOUSE", "field_16753", "VILLAGE_SAVANNA_HOUSE_CHEST", "f_78758_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#VILLAGE_SAVANNA_HOUSE_CHEST
    [[maybe_unused]] static void set_field_VILLAGE_SAVANNA_HOUSE_CHEST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "VILLAGE_SAVANNA_HOUSE", "field_16753", "VILLAGE_SAVANNA_HOUSE_CHEST", "f_78758_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#ABANDONED_MINESHAFT_CHEST
    [[maybe_unused]] static jobject get_field_ABANDONED_MINESHAFT_CHEST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "ABANDONED_MINESHAFT", "field_472", "ABANDONED_MINESHAFT_CHEST", "f_78759_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#ABANDONED_MINESHAFT_CHEST
    [[maybe_unused]] static void set_field_ABANDONED_MINESHAFT_CHEST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "ABANDONED_MINESHAFT", "field_472", "ABANDONED_MINESHAFT_CHEST", "f_78759_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#NETHER_BRIDGE_CHEST
    [[maybe_unused]] static jobject get_field_NETHER_BRIDGE_CHEST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "NETHER_BRIDGE", "field_615", "NETHER_BRIDGE_CHEST", "f_78760_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#NETHER_BRIDGE_CHEST
    [[maybe_unused]] static void set_field_NETHER_BRIDGE_CHEST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "NETHER_BRIDGE", "field_615", "NETHER_BRIDGE_CHEST", "f_78760_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#STRONGHOLD_LIBRARY_CHEST
    [[maybe_unused]] static jobject get_field_STRONGHOLD_LIBRARY_CHEST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "STRONGHOLD_LIBRARY", "field_683", "STRONGHOLD_LIBRARY_CHEST", "f_78761_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#STRONGHOLD_LIBRARY_CHEST
    [[maybe_unused]] static void set_field_STRONGHOLD_LIBRARY_CHEST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "STRONGHOLD_LIBRARY", "field_683", "STRONGHOLD_LIBRARY_CHEST", "f_78761_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#STRONGHOLD_CROSSING_CHEST
    [[maybe_unused]] static jobject get_field_STRONGHOLD_CROSSING_CHEST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "STRONGHOLD_CROSSING", "field_800", "STRONGHOLD_CROSSING_CHEST", "f_78762_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#STRONGHOLD_CROSSING_CHEST
    [[maybe_unused]] static void set_field_STRONGHOLD_CROSSING_CHEST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "STRONGHOLD_CROSSING", "field_800", "STRONGHOLD_CROSSING_CHEST", "f_78762_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#STRONGHOLD_CORRIDOR_CHEST
    [[maybe_unused]] static jobject get_field_STRONGHOLD_CORRIDOR_CHEST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("y", "STRONGHOLD_CORRIDOR", "field_842", "STRONGHOLD_CORRIDOR_CHEST", "f_78763_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#STRONGHOLD_CORRIDOR_CHEST
    [[maybe_unused]] static void set_field_STRONGHOLD_CORRIDOR_CHEST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("y", "STRONGHOLD_CORRIDOR", "field_842", "STRONGHOLD_CORRIDOR_CHEST", "f_78763_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#DESERT_PYRAMID_CHEST
    [[maybe_unused]] static jobject get_field_DESERT_PYRAMID_CHEST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("z", "DESERT_PYRAMID", "field_885", "DESERT_PYRAMID_CHEST", "f_78764_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#DESERT_PYRAMID_CHEST
    [[maybe_unused]] static void set_field_DESERT_PYRAMID_CHEST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("z", "DESERT_PYRAMID", "field_885", "DESERT_PYRAMID_CHEST", "f_78764_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#JUNGLE_TEMPLE_CHEST
    [[maybe_unused]] static jobject get_field_JUNGLE_TEMPLE_CHEST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("A", "JUNGLE_TEMPLE", "field_803", "JUNGLE_TEMPLE_CHEST", "f_78686_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#JUNGLE_TEMPLE_CHEST
    [[maybe_unused]] static void set_field_JUNGLE_TEMPLE_CHEST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("A", "JUNGLE_TEMPLE", "field_803", "JUNGLE_TEMPLE_CHEST", "f_78686_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#JUNGLE_TEMPLE_DISPENSER_CHEST
    [[maybe_unused]] static jobject get_field_JUNGLE_TEMPLE_DISPENSER_CHEST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("B", "JUNGLE_TEMPLE_DISPENSER", "field_751", "JUNGLE_TEMPLE_DISPENSER_CHEST", "f_78687_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#JUNGLE_TEMPLE_DISPENSER_CHEST
    [[maybe_unused]] static void set_field_JUNGLE_TEMPLE_DISPENSER_CHEST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("B", "JUNGLE_TEMPLE_DISPENSER", "field_751", "JUNGLE_TEMPLE_DISPENSER_CHEST", "f_78687_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#IGLOO_CHEST_CHEST
    [[maybe_unused]] static jobject get_field_IGLOO_CHEST_CHEST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("C", "IGLOO_CHEST", "field_662", "IGLOO_CHEST_CHEST", "f_78688_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#IGLOO_CHEST_CHEST
    [[maybe_unused]] static void set_field_IGLOO_CHEST_CHEST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("C", "IGLOO_CHEST", "field_662", "IGLOO_CHEST_CHEST", "f_78688_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#WOODLAND_MANSION_CHEST
    [[maybe_unused]] static jobject get_field_WOODLAND_MANSION_CHEST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("D", "WOODLAND_MANSION", "field_484", "WOODLAND_MANSION_CHEST", "f_78689_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#WOODLAND_MANSION_CHEST
    [[maybe_unused]] static void set_field_WOODLAND_MANSION_CHEST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("D", "WOODLAND_MANSION", "field_484", "WOODLAND_MANSION_CHEST", "f_78689_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#UNDERWATER_RUIN_SMALL_CHEST
    [[maybe_unused]] static jobject get_field_UNDERWATER_RUIN_SMALL_CHEST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("E", "UNDERWATER_RUIN_SMALL", "field_397", "UNDERWATER_RUIN_SMALL_CHEST", "f_78690_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#UNDERWATER_RUIN_SMALL_CHEST
    [[maybe_unused]] static void set_field_UNDERWATER_RUIN_SMALL_CHEST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("E", "UNDERWATER_RUIN_SMALL", "field_397", "UNDERWATER_RUIN_SMALL_CHEST", "f_78690_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#UNDERWATER_RUIN_BIG_CHEST
    [[maybe_unused]] static jobject get_field_UNDERWATER_RUIN_BIG_CHEST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("F", "UNDERWATER_RUIN_BIG", "field_300", "UNDERWATER_RUIN_BIG_CHEST", "f_78691_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#UNDERWATER_RUIN_BIG_CHEST
    [[maybe_unused]] static void set_field_UNDERWATER_RUIN_BIG_CHEST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("F", "UNDERWATER_RUIN_BIG", "field_300", "UNDERWATER_RUIN_BIG_CHEST", "f_78691_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#BURIED_TREASURE_CHEST
    [[maybe_unused]] static jobject get_field_BURIED_TREASURE_CHEST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("G", "BURIED_TREASURE", "field_251", "BURIED_TREASURE_CHEST", "f_78692_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#BURIED_TREASURE_CHEST
    [[maybe_unused]] static void set_field_BURIED_TREASURE_CHEST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("G", "BURIED_TREASURE", "field_251", "BURIED_TREASURE_CHEST", "f_78692_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#SHIPWRECK_MAP_CHEST
    [[maybe_unused]] static jobject get_field_SHIPWRECK_MAP_CHEST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("H", "SHIPWRECK_MAP", "field_841", "SHIPWRECK_MAP_CHEST", "f_78693_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#SHIPWRECK_MAP_CHEST
    [[maybe_unused]] static void set_field_SHIPWRECK_MAP_CHEST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("H", "SHIPWRECK_MAP", "field_841", "SHIPWRECK_MAP_CHEST", "f_78693_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#SHIPWRECK_SUPPLY_CHEST
    [[maybe_unused]] static jobject get_field_SHIPWRECK_SUPPLY_CHEST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("I", "SHIPWRECK_SUPPLY", "field_880", "SHIPWRECK_SUPPLY_CHEST", "f_78694_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#SHIPWRECK_SUPPLY_CHEST
    [[maybe_unused]] static void set_field_SHIPWRECK_SUPPLY_CHEST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("I", "SHIPWRECK_SUPPLY", "field_880", "SHIPWRECK_SUPPLY_CHEST", "f_78694_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#SHIPWRECK_TREASURE_CHEST
    [[maybe_unused]] static jobject get_field_SHIPWRECK_TREASURE_CHEST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("J", "SHIPWRECK_TREASURE", "field_665", "SHIPWRECK_TREASURE_CHEST", "f_78695_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#SHIPWRECK_TREASURE_CHEST
    [[maybe_unused]] static void set_field_SHIPWRECK_TREASURE_CHEST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("J", "SHIPWRECK_TREASURE", "field_665", "SHIPWRECK_TREASURE_CHEST", "f_78695_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#PILLAGER_OUTPOST_CHEST
    [[maybe_unused]] static jobject get_field_PILLAGER_OUTPOST_CHEST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("K", "PILLAGER_OUTPOST", "field_16593", "PILLAGER_OUTPOST_CHEST", "f_78696_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#PILLAGER_OUTPOST_CHEST
    [[maybe_unused]] static void set_field_PILLAGER_OUTPOST_CHEST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("K", "PILLAGER_OUTPOST", "field_16593", "PILLAGER_OUTPOST_CHEST", "f_78696_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#BASTION_TREASURE_CHEST
    [[maybe_unused]] static jobject get_field_BASTION_TREASURE_CHEST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("L", "BASTION_TREASURE", "field_24046", "BASTION_TREASURE_CHEST", "f_78697_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#BASTION_TREASURE_CHEST
    [[maybe_unused]] static void set_field_BASTION_TREASURE_CHEST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("L", "BASTION_TREASURE", "field_24046", "BASTION_TREASURE_CHEST", "f_78697_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#BASTION_OTHER_CHEST
    [[maybe_unused]] static jobject get_field_BASTION_OTHER_CHEST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("M", "BASTION_OTHER", "field_24047", "BASTION_OTHER_CHEST", "f_78698_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#BASTION_OTHER_CHEST
    [[maybe_unused]] static void set_field_BASTION_OTHER_CHEST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("M", "BASTION_OTHER", "field_24047", "BASTION_OTHER_CHEST", "f_78698_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#BASTION_BRIDGE_CHEST
    [[maybe_unused]] static jobject get_field_BASTION_BRIDGE_CHEST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("N", "BASTION_BRIDGE", "field_24048", "BASTION_BRIDGE_CHEST", "f_78699_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#BASTION_BRIDGE_CHEST
    [[maybe_unused]] static void set_field_BASTION_BRIDGE_CHEST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("N", "BASTION_BRIDGE", "field_24048", "BASTION_BRIDGE_CHEST", "f_78699_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#BASTION_HOGLIN_STABLE_CHEST
    [[maybe_unused]] static jobject get_field_BASTION_HOGLIN_STABLE_CHEST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("O", "BASTION_HOGLIN_STABLE", "field_24049", "BASTION_HOGLIN_STABLE_CHEST", "f_78700_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#BASTION_HOGLIN_STABLE_CHEST
    [[maybe_unused]] static void set_field_BASTION_HOGLIN_STABLE_CHEST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("O", "BASTION_HOGLIN_STABLE", "field_24049", "BASTION_HOGLIN_STABLE_CHEST", "f_78700_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#ANCIENT_CITY_CHEST
    [[maybe_unused]] static jobject get_field_ANCIENT_CITY_CHEST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("P", "ANCIENT_CITY", "field_38438", "ANCIENT_CITY_CHEST", "f_230876_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#ANCIENT_CITY_CHEST
    [[maybe_unused]] static void set_field_ANCIENT_CITY_CHEST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("P", "ANCIENT_CITY", "field_38438", "ANCIENT_CITY_CHEST", "f_230876_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#ANCIENT_CITY_ICE_BOX_CHEST
    [[maybe_unused]] static jobject get_field_ANCIENT_CITY_ICE_BOX_CHEST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Q", "ANCIENT_CITY_ICE_BOX", "field_38439", "ANCIENT_CITY_ICE_BOX_CHEST", "f_230877_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#ANCIENT_CITY_ICE_BOX_CHEST
    [[maybe_unused]] static void set_field_ANCIENT_CITY_ICE_BOX_CHEST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Q", "ANCIENT_CITY_ICE_BOX", "field_38439", "ANCIENT_CITY_ICE_BOX_CHEST", "f_230877_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#RUINED_PORTAL_CHEST
    [[maybe_unused]] static jobject get_field_RUINED_PORTAL_CHEST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("R", "RUINED_PORTAL", "field_24050", "RUINED_PORTAL_CHEST", "f_78701_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#RUINED_PORTAL_CHEST
    [[maybe_unused]] static void set_field_RUINED_PORTAL_CHEST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("R", "RUINED_PORTAL", "field_24050", "RUINED_PORTAL_CHEST", "f_78701_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#TRIAL_CHAMBERS_REWARD_CHEST
    [[maybe_unused]] static jobject get_field_TRIAL_CHAMBERS_REWARD_CHEST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("S", "TRIAL_CHAMBERS_REWARD", "field_47415", "TRIAL_CHAMBERS_REWARD_CHEST", "f_303517_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#TRIAL_CHAMBERS_REWARD_CHEST
    [[maybe_unused]] static void set_field_TRIAL_CHAMBERS_REWARD_CHEST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("S", "TRIAL_CHAMBERS_REWARD", "field_47415", "TRIAL_CHAMBERS_REWARD_CHEST", "f_303517_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#TRIAL_CHAMBERS_REWARD_COMMON_CHEST
    [[maybe_unused]] static jobject get_field_TRIAL_CHAMBERS_REWARD_COMMON_CHEST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("T", "TRIAL_CHAMBERS_REWARD_COMMON", "field_49844", "TRIAL_CHAMBERS_REWARD_COMMON_CHEST", "f_315207_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#TRIAL_CHAMBERS_REWARD_COMMON_CHEST
    [[maybe_unused]] static void set_field_TRIAL_CHAMBERS_REWARD_COMMON_CHEST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("T", "TRIAL_CHAMBERS_REWARD_COMMON", "field_49844", "TRIAL_CHAMBERS_REWARD_COMMON_CHEST", "f_315207_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#TRIAL_CHAMBERS_REWARD_RARE_CHEST
    [[maybe_unused]] static jobject get_field_TRIAL_CHAMBERS_REWARD_RARE_CHEST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("U", "TRIAL_CHAMBERS_REWARD_RARE", "field_49845", "TRIAL_CHAMBERS_REWARD_RARE_CHEST", "f_315354_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#TRIAL_CHAMBERS_REWARD_RARE_CHEST
    [[maybe_unused]] static void set_field_TRIAL_CHAMBERS_REWARD_RARE_CHEST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("U", "TRIAL_CHAMBERS_REWARD_RARE", "field_49845", "TRIAL_CHAMBERS_REWARD_RARE_CHEST", "f_315354_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#TRIAL_CHAMBERS_REWARD_UNIQUE_CHEST
    [[maybe_unused]] static jobject get_field_TRIAL_CHAMBERS_REWARD_UNIQUE_CHEST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("V", "TRIAL_CHAMBERS_REWARD_UNIQUE", "field_49846", "TRIAL_CHAMBERS_REWARD_UNIQUE_CHEST", "f_314271_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#TRIAL_CHAMBERS_REWARD_UNIQUE_CHEST
    [[maybe_unused]] static void set_field_TRIAL_CHAMBERS_REWARD_UNIQUE_CHEST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("V", "TRIAL_CHAMBERS_REWARD_UNIQUE", "field_49846", "TRIAL_CHAMBERS_REWARD_UNIQUE_CHEST", "f_314271_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#TRIAL_CHAMBERS_REWARD_OMINOUS_CHEST
    [[maybe_unused]] static jobject get_field_TRIAL_CHAMBERS_REWARD_OMINOUS_CHEST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("W", "TRIAL_CHAMBERS_REWARD_OMINOUS", "field_50194", "TRIAL_CHAMBERS_REWARD_OMINOUS_CHEST", "f_315697_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#TRIAL_CHAMBERS_REWARD_OMINOUS_CHEST
    [[maybe_unused]] static void set_field_TRIAL_CHAMBERS_REWARD_OMINOUS_CHEST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("W", "TRIAL_CHAMBERS_REWARD_OMINOUS", "field_50194", "TRIAL_CHAMBERS_REWARD_OMINOUS_CHEST", "f_315697_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#TRIAL_CHAMBERS_REWARD_OMINOUS_COMMON_CHEST
    [[maybe_unused]] static jobject get_field_TRIAL_CHAMBERS_REWARD_OMINOUS_COMMON_CHEST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("X", "TRIAL_CHAMBERS_REWARD_OMINOUS_COMMON", "field_50195", "TRIAL_CHAMBERS_REWARD_OMINOUS_COMMON_CHEST", "f_315306_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#TRIAL_CHAMBERS_REWARD_OMINOUS_COMMON_CHEST
    [[maybe_unused]] static void set_field_TRIAL_CHAMBERS_REWARD_OMINOUS_COMMON_CHEST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("X", "TRIAL_CHAMBERS_REWARD_OMINOUS_COMMON", "field_50195", "TRIAL_CHAMBERS_REWARD_OMINOUS_COMMON_CHEST", "f_315306_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#TRIAL_CHAMBERS_REWARD_OMINOUS_RARE_CHEST
    [[maybe_unused]] static jobject get_field_TRIAL_CHAMBERS_REWARD_OMINOUS_RARE_CHEST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Y", "TRIAL_CHAMBERS_REWARD_OMINOUS_RARE", "field_50196", "TRIAL_CHAMBERS_REWARD_OMINOUS_RARE_CHEST", "f_315822_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#TRIAL_CHAMBERS_REWARD_OMINOUS_RARE_CHEST
    [[maybe_unused]] static void set_field_TRIAL_CHAMBERS_REWARD_OMINOUS_RARE_CHEST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Y", "TRIAL_CHAMBERS_REWARD_OMINOUS_RARE", "field_50196", "TRIAL_CHAMBERS_REWARD_OMINOUS_RARE_CHEST", "f_315822_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#TRIAL_CHAMBERS_REWARD_OMINOUS_UNIQUE_CHEST
    [[maybe_unused]] static jobject get_field_TRIAL_CHAMBERS_REWARD_OMINOUS_UNIQUE_CHEST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Z", "TRIAL_CHAMBERS_REWARD_OMINOUS_UNIQUE", "field_50197", "TRIAL_CHAMBERS_REWARD_OMINOUS_UNIQUE_CHEST", "f_315133_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#TRIAL_CHAMBERS_REWARD_OMINOUS_UNIQUE_CHEST
    [[maybe_unused]] static void set_field_TRIAL_CHAMBERS_REWARD_OMINOUS_UNIQUE_CHEST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Z", "TRIAL_CHAMBERS_REWARD_OMINOUS_UNIQUE", "field_50197", "TRIAL_CHAMBERS_REWARD_OMINOUS_UNIQUE_CHEST", "f_315133_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#TRIAL_CHAMBERS_SUPPLY_CHEST
    [[maybe_unused]] static jobject get_field_TRIAL_CHAMBERS_SUPPLY_CHEST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aa", "TRIAL_CHAMBERS_SUPPLY", "field_47416", "TRIAL_CHAMBERS_SUPPLY_CHEST", "f_303341_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#TRIAL_CHAMBERS_SUPPLY_CHEST
    [[maybe_unused]] static void set_field_TRIAL_CHAMBERS_SUPPLY_CHEST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aa", "TRIAL_CHAMBERS_SUPPLY", "field_47416", "TRIAL_CHAMBERS_SUPPLY_CHEST", "f_303341_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#TRIAL_CHAMBERS_CORRIDOR_CHEST
    [[maybe_unused]] static jobject get_field_TRIAL_CHAMBERS_CORRIDOR_CHEST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ab", "TRIAL_CHAMBERS_CORRIDOR", "field_47417", "TRIAL_CHAMBERS_CORRIDOR_CHEST", "f_302226_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#TRIAL_CHAMBERS_CORRIDOR_CHEST
    [[maybe_unused]] static void set_field_TRIAL_CHAMBERS_CORRIDOR_CHEST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ab", "TRIAL_CHAMBERS_CORRIDOR", "field_47417", "TRIAL_CHAMBERS_CORRIDOR_CHEST", "f_302226_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#TRIAL_CHAMBERS_INTERSECTION_CHEST
    [[maybe_unused]] static jobject get_field_TRIAL_CHAMBERS_INTERSECTION_CHEST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ac", "TRIAL_CHAMBERS_INTERSECTION", "field_47418", "TRIAL_CHAMBERS_INTERSECTION_CHEST", "f_302884_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#TRIAL_CHAMBERS_INTERSECTION_CHEST
    [[maybe_unused]] static void set_field_TRIAL_CHAMBERS_INTERSECTION_CHEST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ac", "TRIAL_CHAMBERS_INTERSECTION", "field_47418", "TRIAL_CHAMBERS_INTERSECTION_CHEST", "f_302884_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#TRIAL_CHAMBERS_INTERSECTION_BARREL_CHEST
    [[maybe_unused]] static jobject get_field_TRIAL_CHAMBERS_INTERSECTION_BARREL_CHEST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ad", "TRIAL_CHAMBERS_INTERSECTION_BARREL", "field_47419", "TRIAL_CHAMBERS_INTERSECTION_BARREL_CHEST", "f_302208_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#TRIAL_CHAMBERS_INTERSECTION_BARREL_CHEST
    [[maybe_unused]] static void set_field_TRIAL_CHAMBERS_INTERSECTION_BARREL_CHEST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ad", "TRIAL_CHAMBERS_INTERSECTION_BARREL", "field_47419", "TRIAL_CHAMBERS_INTERSECTION_BARREL_CHEST", "f_302208_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#TRIAL_CHAMBERS_ENTRANCE_CHEST
    [[maybe_unused]] static jobject get_field_TRIAL_CHAMBERS_ENTRANCE_CHEST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ae", "TRIAL_CHAMBERS_ENTRANCE", "field_47420", "TRIAL_CHAMBERS_ENTRANCE_CHEST", "f_303376_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#TRIAL_CHAMBERS_ENTRANCE_CHEST
    [[maybe_unused]] static void set_field_TRIAL_CHAMBERS_ENTRANCE_CHEST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ae", "TRIAL_CHAMBERS_ENTRANCE", "field_47420", "TRIAL_CHAMBERS_ENTRANCE_CHEST", "f_303376_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#TRIAL_CHAMBERS_CORRIDOR_DISPENSER
    [[maybe_unused]] static jobject get_field_TRIAL_CHAMBERS_CORRIDOR_DISPENSER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("af", "TRIAL_CHAMBERS_CORRIDOR_DISPENSER", "field_47421", "TRIAL_CHAMBERS_CORRIDOR_DISPENSER", "f_302850_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#TRIAL_CHAMBERS_CORRIDOR_DISPENSER
    [[maybe_unused]] static void set_field_TRIAL_CHAMBERS_CORRIDOR_DISPENSER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("af", "TRIAL_CHAMBERS_CORRIDOR_DISPENSER", "field_47421", "TRIAL_CHAMBERS_CORRIDOR_DISPENSER", "f_302850_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#TRIAL_CHAMBERS_CHAMBER_DISPENSER
    [[maybe_unused]] static jobject get_field_TRIAL_CHAMBERS_CHAMBER_DISPENSER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ag", "TRIAL_CHAMBERS_CHAMBER_DISPENSER", "field_47422", "TRIAL_CHAMBERS_CHAMBER_DISPENSER", "f_303584_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#TRIAL_CHAMBERS_CHAMBER_DISPENSER
    [[maybe_unused]] static void set_field_TRIAL_CHAMBERS_CHAMBER_DISPENSER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ag", "TRIAL_CHAMBERS_CHAMBER_DISPENSER", "field_47422", "TRIAL_CHAMBERS_CHAMBER_DISPENSER", "f_303584_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#TRIAL_CHAMBERS_WATER_DISPENSER
    [[maybe_unused]] static jobject get_field_TRIAL_CHAMBERS_WATER_DISPENSER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ah", "TRIAL_CHAMBERS_WATER_DISPENSER", "field_47425", "TRIAL_CHAMBERS_WATER_DISPENSER", "f_303173_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#TRIAL_CHAMBERS_WATER_DISPENSER
    [[maybe_unused]] static void set_field_TRIAL_CHAMBERS_WATER_DISPENSER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ah", "TRIAL_CHAMBERS_WATER_DISPENSER", "field_47425", "TRIAL_CHAMBERS_WATER_DISPENSER", "f_303173_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#TRIAL_CHAMBERS_CORRIDOR_POT
    [[maybe_unused]] static jobject get_field_TRIAL_CHAMBERS_CORRIDOR_POT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ai", "TRIAL_CHAMBERS_CORRIDOR_POT", "field_47426", "TRIAL_CHAMBERS_CORRIDOR_POT", "f_302648_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#TRIAL_CHAMBERS_CORRIDOR_POT
    [[maybe_unused]] static void set_field_TRIAL_CHAMBERS_CORRIDOR_POT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ai", "TRIAL_CHAMBERS_CORRIDOR_POT", "field_47426", "TRIAL_CHAMBERS_CORRIDOR_POT", "f_302648_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#TRIAL_CHAMBER_EQUIPMENT
    [[maybe_unused]] static jobject get_field_TRIAL_CHAMBER_EQUIPMENT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aj", "EQUIPMENT_TRIAL_CHAMBER", "field_50201", "TRIAL_CHAMBER_EQUIPMENT", "f_315649_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#TRIAL_CHAMBER_EQUIPMENT
    [[maybe_unused]] static void set_field_TRIAL_CHAMBER_EQUIPMENT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aj", "EQUIPMENT_TRIAL_CHAMBER", "field_50201", "TRIAL_CHAMBER_EQUIPMENT", "f_315649_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#TRIAL_CHAMBER_RANGED_EQUIPMENT
    [[maybe_unused]] static jobject get_field_TRIAL_CHAMBER_RANGED_EQUIPMENT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ak", "EQUIPMENT_TRIAL_CHAMBER_RANGED", "field_51414", "TRIAL_CHAMBER_RANGED_EQUIPMENT", "f_315117_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#TRIAL_CHAMBER_RANGED_EQUIPMENT
    [[maybe_unused]] static void set_field_TRIAL_CHAMBER_RANGED_EQUIPMENT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ak", "EQUIPMENT_TRIAL_CHAMBER_RANGED", "field_51414", "TRIAL_CHAMBER_RANGED_EQUIPMENT", "f_315117_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#TRIAL_CHAMBER_MELEE_EQUIPMENT
    [[maybe_unused]] static jobject get_field_TRIAL_CHAMBER_MELEE_EQUIPMENT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("al", "EQUIPMENT_TRIAL_CHAMBER_MELEE", "field_51415", "TRIAL_CHAMBER_MELEE_EQUIPMENT", "f_316828_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#TRIAL_CHAMBER_MELEE_EQUIPMENT
    [[maybe_unused]] static void set_field_TRIAL_CHAMBER_MELEE_EQUIPMENT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("al", "EQUIPMENT_TRIAL_CHAMBER_MELEE", "field_51415", "TRIAL_CHAMBER_MELEE_EQUIPMENT", "f_316828_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#WHITE_SHEEP_ENTITY
    [[maybe_unused]] static jobject get_field_WHITE_SHEEP_ENTITY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("am", "SHEEP_WHITE", "field_869", "WHITE_SHEEP_ENTITY", "f_78702_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#WHITE_SHEEP_ENTITY
    [[maybe_unused]] static void set_field_WHITE_SHEEP_ENTITY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("am", "SHEEP_WHITE", "field_869", "WHITE_SHEEP_ENTITY", "f_78702_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#ORANGE_SHEEP_ENTITY
    [[maybe_unused]] static jobject get_field_ORANGE_SHEEP_ENTITY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("an", "SHEEP_ORANGE", "field_814", "ORANGE_SHEEP_ENTITY", "f_78703_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#ORANGE_SHEEP_ENTITY
    [[maybe_unused]] static void set_field_ORANGE_SHEEP_ENTITY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("an", "SHEEP_ORANGE", "field_814", "ORANGE_SHEEP_ENTITY", "f_78703_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#MAGENTA_SHEEP_ENTITY
    [[maybe_unused]] static jobject get_field_MAGENTA_SHEEP_ENTITY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ao", "SHEEP_MAGENTA", "field_224", "MAGENTA_SHEEP_ENTITY", "f_78704_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#MAGENTA_SHEEP_ENTITY
    [[maybe_unused]] static void set_field_MAGENTA_SHEEP_ENTITY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ao", "SHEEP_MAGENTA", "field_224", "MAGENTA_SHEEP_ENTITY", "f_78704_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#LIGHT_BLUE_SHEEP_ENTITY
    [[maybe_unused]] static jobject get_field_LIGHT_BLUE_SHEEP_ENTITY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ap", "SHEEP_LIGHT_BLUE", "field_461", "LIGHT_BLUE_SHEEP_ENTITY", "f_78705_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#LIGHT_BLUE_SHEEP_ENTITY
    [[maybe_unused]] static void set_field_LIGHT_BLUE_SHEEP_ENTITY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ap", "SHEEP_LIGHT_BLUE", "field_461", "LIGHT_BLUE_SHEEP_ENTITY", "f_78705_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#YELLOW_SHEEP_ENTITY
    [[maybe_unused]] static jobject get_field_YELLOW_SHEEP_ENTITY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aq", "SHEEP_YELLOW", "field_385", "YELLOW_SHEEP_ENTITY", "f_78706_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#YELLOW_SHEEP_ENTITY
    [[maybe_unused]] static void set_field_YELLOW_SHEEP_ENTITY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aq", "SHEEP_YELLOW", "field_385", "YELLOW_SHEEP_ENTITY", "f_78706_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#LIME_SHEEP_ENTITY
    [[maybe_unused]] static jobject get_field_LIME_SHEEP_ENTITY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ar", "SHEEP_LIME", "field_702", "LIME_SHEEP_ENTITY", "f_78707_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#LIME_SHEEP_ENTITY
    [[maybe_unused]] static void set_field_LIME_SHEEP_ENTITY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ar", "SHEEP_LIME", "field_702", "LIME_SHEEP_ENTITY", "f_78707_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#PINK_SHEEP_ENTITY
    [[maybe_unused]] static jobject get_field_PINK_SHEEP_ENTITY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("as", "SHEEP_PINK", "field_629", "PINK_SHEEP_ENTITY", "f_78708_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#PINK_SHEEP_ENTITY
    [[maybe_unused]] static void set_field_PINK_SHEEP_ENTITY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("as", "SHEEP_PINK", "field_629", "PINK_SHEEP_ENTITY", "f_78708_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#GRAY_SHEEP_ENTITY
    [[maybe_unused]] static jobject get_field_GRAY_SHEEP_ENTITY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("at", "SHEEP_GRAY", "field_878", "GRAY_SHEEP_ENTITY", "f_78709_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#GRAY_SHEEP_ENTITY
    [[maybe_unused]] static void set_field_GRAY_SHEEP_ENTITY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("at", "SHEEP_GRAY", "field_878", "GRAY_SHEEP_ENTITY", "f_78709_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#LIGHT_GRAY_SHEEP_ENTITY
    [[maybe_unused]] static jobject get_field_LIGHT_GRAY_SHEEP_ENTITY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("au", "SHEEP_LIGHT_GRAY", "field_806", "LIGHT_GRAY_SHEEP_ENTITY", "f_78710_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#LIGHT_GRAY_SHEEP_ENTITY
    [[maybe_unused]] static void set_field_LIGHT_GRAY_SHEEP_ENTITY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("au", "SHEEP_LIGHT_GRAY", "field_806", "LIGHT_GRAY_SHEEP_ENTITY", "f_78710_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#CYAN_SHEEP_ENTITY
    [[maybe_unused]] static jobject get_field_CYAN_SHEEP_ENTITY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("av", "SHEEP_CYAN", "field_365", "CYAN_SHEEP_ENTITY", "f_78711_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#CYAN_SHEEP_ENTITY
    [[maybe_unused]] static void set_field_CYAN_SHEEP_ENTITY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("av", "SHEEP_CYAN", "field_365", "CYAN_SHEEP_ENTITY", "f_78711_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#PURPLE_SHEEP_ENTITY
    [[maybe_unused]] static jobject get_field_PURPLE_SHEEP_ENTITY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aw", "SHEEP_PURPLE", "field_285", "PURPLE_SHEEP_ENTITY", "f_78714_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#PURPLE_SHEEP_ENTITY
    [[maybe_unused]] static void set_field_PURPLE_SHEEP_ENTITY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aw", "SHEEP_PURPLE", "field_285", "PURPLE_SHEEP_ENTITY", "f_78714_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#BLUE_SHEEP_ENTITY
    [[maybe_unused]] static jobject get_field_BLUE_SHEEP_ENTITY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ax", "SHEEP_BLUE", "field_394", "BLUE_SHEEP_ENTITY", "f_78715_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#BLUE_SHEEP_ENTITY
    [[maybe_unused]] static void set_field_BLUE_SHEEP_ENTITY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ax", "SHEEP_BLUE", "field_394", "BLUE_SHEEP_ENTITY", "f_78715_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#BROWN_SHEEP_ENTITY
    [[maybe_unused]] static jobject get_field_BROWN_SHEEP_ENTITY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ay", "SHEEP_BROWN", "field_489", "BROWN_SHEEP_ENTITY", "f_78716_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#BROWN_SHEEP_ENTITY
    [[maybe_unused]] static void set_field_BROWN_SHEEP_ENTITY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ay", "SHEEP_BROWN", "field_489", "BROWN_SHEEP_ENTITY", "f_78716_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#GREEN_SHEEP_ENTITY
    [[maybe_unused]] static jobject get_field_GREEN_SHEEP_ENTITY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("az", "SHEEP_GREEN", "field_607", "GREEN_SHEEP_ENTITY", "f_78717_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#GREEN_SHEEP_ENTITY
    [[maybe_unused]] static void set_field_GREEN_SHEEP_ENTITY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("az", "SHEEP_GREEN", "field_607", "GREEN_SHEEP_ENTITY", "f_78717_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#RED_SHEEP_ENTITY
    [[maybe_unused]] static jobject get_field_RED_SHEEP_ENTITY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aA", "SHEEP_RED", "field_716", "RED_SHEEP_ENTITY", "f_78718_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#RED_SHEEP_ENTITY
    [[maybe_unused]] static void set_field_RED_SHEEP_ENTITY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aA", "SHEEP_RED", "field_716", "RED_SHEEP_ENTITY", "f_78718_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#BLACK_SHEEP_ENTITY
    [[maybe_unused]] static jobject get_field_BLACK_SHEEP_ENTITY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aB", "SHEEP_BLACK", "field_778", "BLACK_SHEEP_ENTITY", "f_78719_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#BLACK_SHEEP_ENTITY
    [[maybe_unused]] static void set_field_BLACK_SHEEP_ENTITY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aB", "SHEEP_BLACK", "field_778", "BLACK_SHEEP_ENTITY", "f_78719_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#FISHING_GAMEPLAY
    [[maybe_unused]] static jobject get_field_FISHING_GAMEPLAY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aC", "FISHING", "field_353", "FISHING_GAMEPLAY", "f_78720_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#FISHING_GAMEPLAY
    [[maybe_unused]] static void set_field_FISHING_GAMEPLAY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aC", "FISHING", "field_353", "FISHING_GAMEPLAY", "f_78720_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#FISHING_JUNK_GAMEPLAY
    [[maybe_unused]] static jobject get_field_FISHING_JUNK_GAMEPLAY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aD", "FISHING_JUNK", "field_266", "FISHING_JUNK_GAMEPLAY", "f_78721_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#FISHING_JUNK_GAMEPLAY
    [[maybe_unused]] static void set_field_FISHING_JUNK_GAMEPLAY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aD", "FISHING_JUNK", "field_266", "FISHING_JUNK_GAMEPLAY", "f_78721_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#FISHING_TREASURE_GAMEPLAY
    [[maybe_unused]] static jobject get_field_FISHING_TREASURE_GAMEPLAY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aE", "FISHING_TREASURE", "field_854", "FISHING_TREASURE_GAMEPLAY", "f_78722_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#FISHING_TREASURE_GAMEPLAY
    [[maybe_unused]] static void set_field_FISHING_TREASURE_GAMEPLAY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aE", "FISHING_TREASURE", "field_854", "FISHING_TREASURE_GAMEPLAY", "f_78722_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#FISHING_FISH_GAMEPLAY
    [[maybe_unused]] static jobject get_field_FISHING_FISH_GAMEPLAY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aF", "FISHING_FISH", "field_795", "FISHING_FISH_GAMEPLAY", "f_78723_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#FISHING_FISH_GAMEPLAY
    [[maybe_unused]] static void set_field_FISHING_FISH_GAMEPLAY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aF", "FISHING_FISH", "field_795", "FISHING_FISH_GAMEPLAY", "f_78723_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#CAT_MORNING_GIFT_GAMEPLAY
    [[maybe_unused]] static jobject get_field_CAT_MORNING_GIFT_GAMEPLAY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aG", "CAT_MORNING_GIFT", "field_16216", "CAT_MORNING_GIFT_GAMEPLAY", "f_78724_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#CAT_MORNING_GIFT_GAMEPLAY
    [[maybe_unused]] static void set_field_CAT_MORNING_GIFT_GAMEPLAY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aG", "CAT_MORNING_GIFT", "field_16216", "CAT_MORNING_GIFT_GAMEPLAY", "f_78724_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#HERO_OF_THE_VILLAGE_ARMORER_GIFT_GAMEPLAY
    [[maybe_unused]] static jobject get_field_HERO_OF_THE_VILLAGE_ARMORER_GIFT_GAMEPLAY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aH", "ARMORER_GIFT", "field_19062", "HERO_OF_THE_VILLAGE_ARMORER_GIFT_GAMEPLAY", "f_78725_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#HERO_OF_THE_VILLAGE_ARMORER_GIFT_GAMEPLAY
    [[maybe_unused]] static void set_field_HERO_OF_THE_VILLAGE_ARMORER_GIFT_GAMEPLAY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aH", "ARMORER_GIFT", "field_19062", "HERO_OF_THE_VILLAGE_ARMORER_GIFT_GAMEPLAY", "f_78725_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#HERO_OF_THE_VILLAGE_BUTCHER_GIFT_GAMEPLAY
    [[maybe_unused]] static jobject get_field_HERO_OF_THE_VILLAGE_BUTCHER_GIFT_GAMEPLAY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aI", "BUTCHER_GIFT", "field_19063", "HERO_OF_THE_VILLAGE_BUTCHER_GIFT_GAMEPLAY", "f_78726_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#HERO_OF_THE_VILLAGE_BUTCHER_GIFT_GAMEPLAY
    [[maybe_unused]] static void set_field_HERO_OF_THE_VILLAGE_BUTCHER_GIFT_GAMEPLAY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aI", "BUTCHER_GIFT", "field_19063", "HERO_OF_THE_VILLAGE_BUTCHER_GIFT_GAMEPLAY", "f_78726_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#HERO_OF_THE_VILLAGE_CARTOGRAPHER_GIFT_GAMEPLAY
    [[maybe_unused]] static jobject get_field_HERO_OF_THE_VILLAGE_CARTOGRAPHER_GIFT_GAMEPLAY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aJ", "CARTOGRAPHER_GIFT", "field_19064", "HERO_OF_THE_VILLAGE_CARTOGRAPHER_GIFT_GAMEPLAY", "f_78727_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#HERO_OF_THE_VILLAGE_CARTOGRAPHER_GIFT_GAMEPLAY
    [[maybe_unused]] static void set_field_HERO_OF_THE_VILLAGE_CARTOGRAPHER_GIFT_GAMEPLAY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aJ", "CARTOGRAPHER_GIFT", "field_19064", "HERO_OF_THE_VILLAGE_CARTOGRAPHER_GIFT_GAMEPLAY", "f_78727_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#HERO_OF_THE_VILLAGE_CLERIC_GIFT_GAMEPLAY
    [[maybe_unused]] static jobject get_field_HERO_OF_THE_VILLAGE_CLERIC_GIFT_GAMEPLAY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aK", "CLERIC_GIFT", "field_19065", "HERO_OF_THE_VILLAGE_CLERIC_GIFT_GAMEPLAY", "f_78728_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#HERO_OF_THE_VILLAGE_CLERIC_GIFT_GAMEPLAY
    [[maybe_unused]] static void set_field_HERO_OF_THE_VILLAGE_CLERIC_GIFT_GAMEPLAY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aK", "CLERIC_GIFT", "field_19065", "HERO_OF_THE_VILLAGE_CLERIC_GIFT_GAMEPLAY", "f_78728_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#HERO_OF_THE_VILLAGE_FARMER_GIFT_GAMEPLAY
    [[maybe_unused]] static jobject get_field_HERO_OF_THE_VILLAGE_FARMER_GIFT_GAMEPLAY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aL", "FARMER_GIFT", "field_19066", "HERO_OF_THE_VILLAGE_FARMER_GIFT_GAMEPLAY", "f_78729_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#HERO_OF_THE_VILLAGE_FARMER_GIFT_GAMEPLAY
    [[maybe_unused]] static void set_field_HERO_OF_THE_VILLAGE_FARMER_GIFT_GAMEPLAY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aL", "FARMER_GIFT", "field_19066", "HERO_OF_THE_VILLAGE_FARMER_GIFT_GAMEPLAY", "f_78729_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#HERO_OF_THE_VILLAGE_FISHERMAN_GIFT_GAMEPLAY
    [[maybe_unused]] static jobject get_field_HERO_OF_THE_VILLAGE_FISHERMAN_GIFT_GAMEPLAY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aM", "FISHERMAN_GIFT", "field_19067", "HERO_OF_THE_VILLAGE_FISHERMAN_GIFT_GAMEPLAY", "f_78730_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#HERO_OF_THE_VILLAGE_FISHERMAN_GIFT_GAMEPLAY
    [[maybe_unused]] static void set_field_HERO_OF_THE_VILLAGE_FISHERMAN_GIFT_GAMEPLAY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aM", "FISHERMAN_GIFT", "field_19067", "HERO_OF_THE_VILLAGE_FISHERMAN_GIFT_GAMEPLAY", "f_78730_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#HERO_OF_THE_VILLAGE_FLETCHER_GIFT_GAMEPLAY
    [[maybe_unused]] static jobject get_field_HERO_OF_THE_VILLAGE_FLETCHER_GIFT_GAMEPLAY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aN", "FLETCHER_GIFT", "field_19068", "HERO_OF_THE_VILLAGE_FLETCHER_GIFT_GAMEPLAY", "f_78731_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#HERO_OF_THE_VILLAGE_FLETCHER_GIFT_GAMEPLAY
    [[maybe_unused]] static void set_field_HERO_OF_THE_VILLAGE_FLETCHER_GIFT_GAMEPLAY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aN", "FLETCHER_GIFT", "field_19068", "HERO_OF_THE_VILLAGE_FLETCHER_GIFT_GAMEPLAY", "f_78731_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#HERO_OF_THE_VILLAGE_LEATHERWORKER_GIFT_GAMEPLAY
    [[maybe_unused]] static jobject get_field_HERO_OF_THE_VILLAGE_LEATHERWORKER_GIFT_GAMEPLAY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aO", "LEATHERWORKER_GIFT", "field_19069", "HERO_OF_THE_VILLAGE_LEATHERWORKER_GIFT_GAMEPLAY", "f_78732_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#HERO_OF_THE_VILLAGE_LEATHERWORKER_GIFT_GAMEPLAY
    [[maybe_unused]] static void set_field_HERO_OF_THE_VILLAGE_LEATHERWORKER_GIFT_GAMEPLAY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aO", "LEATHERWORKER_GIFT", "field_19069", "HERO_OF_THE_VILLAGE_LEATHERWORKER_GIFT_GAMEPLAY", "f_78732_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#HERO_OF_THE_VILLAGE_LIBRARIAN_GIFT_GAMEPLAY
    [[maybe_unused]] static jobject get_field_HERO_OF_THE_VILLAGE_LIBRARIAN_GIFT_GAMEPLAY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aP", "LIBRARIAN_GIFT", "field_19070", "HERO_OF_THE_VILLAGE_LIBRARIAN_GIFT_GAMEPLAY", "f_78733_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#HERO_OF_THE_VILLAGE_LIBRARIAN_GIFT_GAMEPLAY
    [[maybe_unused]] static void set_field_HERO_OF_THE_VILLAGE_LIBRARIAN_GIFT_GAMEPLAY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aP", "LIBRARIAN_GIFT", "field_19070", "HERO_OF_THE_VILLAGE_LIBRARIAN_GIFT_GAMEPLAY", "f_78733_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#HERO_OF_THE_VILLAGE_MASON_GIFT_GAMEPLAY
    [[maybe_unused]] static jobject get_field_HERO_OF_THE_VILLAGE_MASON_GIFT_GAMEPLAY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aQ", "MASON_GIFT", "field_19071", "HERO_OF_THE_VILLAGE_MASON_GIFT_GAMEPLAY", "f_78734_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#HERO_OF_THE_VILLAGE_MASON_GIFT_GAMEPLAY
    [[maybe_unused]] static void set_field_HERO_OF_THE_VILLAGE_MASON_GIFT_GAMEPLAY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aQ", "MASON_GIFT", "field_19071", "HERO_OF_THE_VILLAGE_MASON_GIFT_GAMEPLAY", "f_78734_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#HERO_OF_THE_VILLAGE_SHEPHERD_GIFT_GAMEPLAY
    [[maybe_unused]] static jobject get_field_HERO_OF_THE_VILLAGE_SHEPHERD_GIFT_GAMEPLAY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aR", "SHEPHERD_GIFT", "field_19072", "HERO_OF_THE_VILLAGE_SHEPHERD_GIFT_GAMEPLAY", "f_78735_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#HERO_OF_THE_VILLAGE_SHEPHERD_GIFT_GAMEPLAY
    [[maybe_unused]] static void set_field_HERO_OF_THE_VILLAGE_SHEPHERD_GIFT_GAMEPLAY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aR", "SHEPHERD_GIFT", "field_19072", "HERO_OF_THE_VILLAGE_SHEPHERD_GIFT_GAMEPLAY", "f_78735_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#HERO_OF_THE_VILLAGE_TOOLSMITH_GIFT_GAMEPLAY
    [[maybe_unused]] static jobject get_field_HERO_OF_THE_VILLAGE_TOOLSMITH_GIFT_GAMEPLAY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aS", "TOOLSMITH_GIFT", "field_19073", "HERO_OF_THE_VILLAGE_TOOLSMITH_GIFT_GAMEPLAY", "f_78736_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#HERO_OF_THE_VILLAGE_TOOLSMITH_GIFT_GAMEPLAY
    [[maybe_unused]] static void set_field_HERO_OF_THE_VILLAGE_TOOLSMITH_GIFT_GAMEPLAY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aS", "TOOLSMITH_GIFT", "field_19073", "HERO_OF_THE_VILLAGE_TOOLSMITH_GIFT_GAMEPLAY", "f_78736_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#HERO_OF_THE_VILLAGE_WEAPONSMITH_GIFT_GAMEPLAY
    [[maybe_unused]] static jobject get_field_HERO_OF_THE_VILLAGE_WEAPONSMITH_GIFT_GAMEPLAY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aT", "WEAPONSMITH_GIFT", "field_19074", "HERO_OF_THE_VILLAGE_WEAPONSMITH_GIFT_GAMEPLAY", "f_78737_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#HERO_OF_THE_VILLAGE_WEAPONSMITH_GIFT_GAMEPLAY
    [[maybe_unused]] static void set_field_HERO_OF_THE_VILLAGE_WEAPONSMITH_GIFT_GAMEPLAY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aT", "WEAPONSMITH_GIFT", "field_19074", "HERO_OF_THE_VILLAGE_WEAPONSMITH_GIFT_GAMEPLAY", "f_78737_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#SNIFFER_DIGGING_GAMEPLAY
    [[maybe_unused]] static jobject get_field_SNIFFER_DIGGING_GAMEPLAY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aU", "SNIFFER_DIGGING", "field_44748", "SNIFFER_DIGGING_GAMEPLAY", "f_283841_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#SNIFFER_DIGGING_GAMEPLAY
    [[maybe_unused]] static void set_field_SNIFFER_DIGGING_GAMEPLAY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aU", "SNIFFER_DIGGING", "field_44748", "SNIFFER_DIGGING_GAMEPLAY", "f_283841_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#PANDA_SNEEZE_GAMEPLAY
    [[maybe_unused]] static jobject get_field_PANDA_SNEEZE_GAMEPLAY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aV", "PANDA_SNEEZE", "field_49158", "PANDA_SNEEZE_GAMEPLAY", "f_315803_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#PANDA_SNEEZE_GAMEPLAY
    [[maybe_unused]] static void set_field_PANDA_SNEEZE_GAMEPLAY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aV", "PANDA_SNEEZE", "field_49158", "PANDA_SNEEZE_GAMEPLAY", "f_315803_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#PIGLIN_BARTERING_GAMEPLAY
    [[maybe_unused]] static jobject get_field_PIGLIN_BARTERING_GAMEPLAY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aW", "PIGLIN_BARTERING", "field_22402", "PIGLIN_BARTERING_GAMEPLAY", "f_78738_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#PIGLIN_BARTERING_GAMEPLAY
    [[maybe_unused]] static void set_field_PIGLIN_BARTERING_GAMEPLAY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aW", "PIGLIN_BARTERING", "field_22402", "PIGLIN_BARTERING_GAMEPLAY", "f_78738_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#TRIAL_CHAMBER_KEY_SPAWNER
    [[maybe_unused]] static jobject get_field_TRIAL_CHAMBER_KEY_SPAWNER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aX", "SPAWNER_TRIAL_CHAMBER_KEY", "field_47423", "TRIAL_CHAMBER_KEY_SPAWNER", "f_303815_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#TRIAL_CHAMBER_KEY_SPAWNER
    [[maybe_unused]] static void set_field_TRIAL_CHAMBER_KEY_SPAWNER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aX", "SPAWNER_TRIAL_CHAMBER_KEY", "field_47423", "TRIAL_CHAMBER_KEY_SPAWNER", "f_303815_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#TRIAL_CHAMBER_CONSUMABLES_SPAWNER
    [[maybe_unused]] static jobject get_field_TRIAL_CHAMBER_CONSUMABLES_SPAWNER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aY", "SPAWNER_TRIAL_CHAMBER_CONSUMABLES", "field_47424", "TRIAL_CHAMBER_CONSUMABLES_SPAWNER", "f_303325_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#TRIAL_CHAMBER_CONSUMABLES_SPAWNER
    [[maybe_unused]] static void set_field_TRIAL_CHAMBER_CONSUMABLES_SPAWNER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aY", "SPAWNER_TRIAL_CHAMBER_CONSUMABLES", "field_47424", "TRIAL_CHAMBER_CONSUMABLES_SPAWNER", "f_303325_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#OMINOUS_TRIAL_CHAMBER_KEY_SPAWNER
    [[maybe_unused]] static jobject get_field_OMINOUS_TRIAL_CHAMBER_KEY_SPAWNER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aZ", "SPAWNER_OMINOUS_TRIAL_CHAMBER_KEY", "field_50198", "OMINOUS_TRIAL_CHAMBER_KEY_SPAWNER", "f_316043_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#OMINOUS_TRIAL_CHAMBER_KEY_SPAWNER
    [[maybe_unused]] static void set_field_OMINOUS_TRIAL_CHAMBER_KEY_SPAWNER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aZ", "SPAWNER_OMINOUS_TRIAL_CHAMBER_KEY", "field_50198", "OMINOUS_TRIAL_CHAMBER_KEY_SPAWNER", "f_316043_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#OMINOUS_TRIAL_CHAMBER_CONSUMABLES_SPAWNER
    [[maybe_unused]] static jobject get_field_OMINOUS_TRIAL_CHAMBER_CONSUMABLES_SPAWNER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ba", "SPAWNER_OMINOUS_TRIAL_CHAMBER_CONSUMABLES", "field_50199", "OMINOUS_TRIAL_CHAMBER_CONSUMABLES_SPAWNER", "f_316831_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#OMINOUS_TRIAL_CHAMBER_CONSUMABLES_SPAWNER
    [[maybe_unused]] static void set_field_OMINOUS_TRIAL_CHAMBER_CONSUMABLES_SPAWNER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ba", "SPAWNER_OMINOUS_TRIAL_CHAMBER_CONSUMABLES", "field_50199", "OMINOUS_TRIAL_CHAMBER_CONSUMABLES_SPAWNER", "f_316831_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#TRIAL_CHAMBER_ITEMS_TO_DROP_WHEN_OMINOUS_SPAWNER
    [[maybe_unused]] static jobject get_field_TRIAL_CHAMBER_ITEMS_TO_DROP_WHEN_OMINOUS_SPAWNER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bb", "SPAWNER_TRIAL_ITEMS_TO_DROP_WHEN_OMINOUS", "field_50200", "TRIAL_CHAMBER_ITEMS_TO_DROP_WHEN_OMINOUS_SPAWNER", "f_315958_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#TRIAL_CHAMBER_ITEMS_TO_DROP_WHEN_OMINOUS_SPAWNER
    [[maybe_unused]] static void set_field_TRIAL_CHAMBER_ITEMS_TO_DROP_WHEN_OMINOUS_SPAWNER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bb", "SPAWNER_TRIAL_ITEMS_TO_DROP_WHEN_OMINOUS", "field_50200", "TRIAL_CHAMBER_ITEMS_TO_DROP_WHEN_OMINOUS_SPAWNER", "f_315958_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#BOGGED_SHEARING
    [[maybe_unused]] static jobject get_field_BOGGED_SHEARING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bc", "BOGGED_SHEAR", "field_49427", "BOGGED_SHEARING", "f_315144_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#BOGGED_SHEARING
    [[maybe_unused]] static void set_field_BOGGED_SHEARING(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bc", "BOGGED_SHEAR", "field_49427", "BOGGED_SHEARING", "f_315144_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#DESERT_WELL_ARCHAEOLOGY
    [[maybe_unused]] static jobject get_field_DESERT_WELL_ARCHAEOLOGY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bd", "DESERT_WELL_ARCHAEOLOGY", "field_43353", "DESERT_WELL_ARCHAEOLOGY", "f_276662_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#DESERT_WELL_ARCHAEOLOGY
    [[maybe_unused]] static void set_field_DESERT_WELL_ARCHAEOLOGY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bd", "DESERT_WELL_ARCHAEOLOGY", "field_43353", "DESERT_WELL_ARCHAEOLOGY", "f_276662_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#DESERT_PYRAMID_ARCHAEOLOGY
    [[maybe_unused]] static jobject get_field_DESERT_PYRAMID_ARCHAEOLOGY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("be", "DESERT_PYRAMID_ARCHAEOLOGY", "field_43354", "DESERT_PYRAMID_ARCHAEOLOGY", "f_276661_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#DESERT_PYRAMID_ARCHAEOLOGY
    [[maybe_unused]] static void set_field_DESERT_PYRAMID_ARCHAEOLOGY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("be", "DESERT_PYRAMID_ARCHAEOLOGY", "field_43354", "DESERT_PYRAMID_ARCHAEOLOGY", "f_276661_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#TRAIL_RUINS_COMMON_ARCHAEOLOGY
    [[maybe_unused]] static jobject get_field_TRAIL_RUINS_COMMON_ARCHAEOLOGY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bf", "TRAIL_RUINS_ARCHAEOLOGY_COMMON", "field_44648", "TRAIL_RUINS_COMMON_ARCHAEOLOGY", "f_279573_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#TRAIL_RUINS_COMMON_ARCHAEOLOGY
    [[maybe_unused]] static void set_field_TRAIL_RUINS_COMMON_ARCHAEOLOGY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bf", "TRAIL_RUINS_ARCHAEOLOGY_COMMON", "field_44648", "TRAIL_RUINS_COMMON_ARCHAEOLOGY", "f_279573_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#TRAIL_RUINS_RARE_ARCHAEOLOGY
    [[maybe_unused]] static jobject get_field_TRAIL_RUINS_RARE_ARCHAEOLOGY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bg", "TRAIL_RUINS_ARCHAEOLOGY_RARE", "field_44649", "TRAIL_RUINS_RARE_ARCHAEOLOGY", "f_279604_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#TRAIL_RUINS_RARE_ARCHAEOLOGY
    [[maybe_unused]] static void set_field_TRAIL_RUINS_RARE_ARCHAEOLOGY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bg", "TRAIL_RUINS_ARCHAEOLOGY_RARE", "field_44649", "TRAIL_RUINS_RARE_ARCHAEOLOGY", "f_279604_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#OCEAN_RUIN_WARM_ARCHAEOLOGY
    [[maybe_unused]] static jobject get_field_OCEAN_RUIN_WARM_ARCHAEOLOGY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bh", "OCEAN_RUIN_WARM_ARCHAEOLOGY", "field_43356", "OCEAN_RUIN_WARM_ARCHAEOLOGY", "f_276611_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#OCEAN_RUIN_WARM_ARCHAEOLOGY
    [[maybe_unused]] static void set_field_OCEAN_RUIN_WARM_ARCHAEOLOGY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bh", "OCEAN_RUIN_WARM_ARCHAEOLOGY", "field_43356", "OCEAN_RUIN_WARM_ARCHAEOLOGY", "f_276611_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTables#OCEAN_RUIN_COLD_ARCHAEOLOGY
    [[maybe_unused]] static jobject get_field_OCEAN_RUIN_COLD_ARCHAEOLOGY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bi", "OCEAN_RUIN_COLD_ARCHAEOLOGY", "field_43357", "OCEAN_RUIN_COLD_ARCHAEOLOGY", "f_276614_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTables#OCEAN_RUIN_COLD_ARCHAEOLOGY
    [[maybe_unused]] static void set_field_OCEAN_RUIN_COLD_ARCHAEOLOGY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bi", "OCEAN_RUIN_COLD_ARCHAEOLOGY", "field_43357", "OCEAN_RUIN_COLD_ARCHAEOLOGY", "f_276614_"), "Lakq;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_register() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "register", "method_269", "register", "m_78767_"), "(Ljava/lang/String;)Lakq;");
    }

    static jobject register(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_register();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_registerLootTable() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "register", "method_271", "registerLootTable", "m_78769_"), "(Lakq;)Lakq;");
    }

    static jobject registerLootTable(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_registerLootTable();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getAll() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "all", "method_270", "getAll", "m_78766_"), "()Ljava/util/Set;");
    }

    static jobject getAll() {
       const auto clazz = self();
       const auto methodID = methodID_getAll();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
};

#endif // NET_MINECRAFT_LOOT_LOOTTABLES_HPP