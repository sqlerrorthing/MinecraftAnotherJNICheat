// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_LOOT_PROVIDER_SCORE_LOOTSCOREPROVIDERTYPES_HPP
#define NET_MINECRAFT_LOOT_PROVIDER_SCORE_LOOTSCOREPROVIDERTYPES_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.loot.provider.score.LootScoreProviderTypes
 * Remapped: ewi
 */
namespace LootScoreProviderTypes {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("ewi", "net/minecraft/world/level/storage/loot/providers/score/ScoreboardNameProviders", "net/minecraft/class_5671", "net/minecraft/loot/provider/score/LootScoreProviderTypes", "net/minecraft/src/C_141515_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.loot.provider.score.LootScoreProviderTypes#BASE_CODEC
    [[maybe_unused]] static jobject get_field_BASE_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "TYPED_CODEC", "field_45896", "BASE_CODEC", "f_290405_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.loot.provider.score.LootScoreProviderTypes#BASE_CODEC
    [[maybe_unused]] static void set_field_BASE_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "TYPED_CODEC", "field_45896", "BASE_CODEC", "f_290405_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.provider.score.LootScoreProviderTypes#CODEC
    [[maybe_unused]] static jobject get_field_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CODEC", "field_45895", "CODEC", "f_291185_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.provider.score.LootScoreProviderTypes#CODEC
    [[maybe_unused]] static void set_field_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CODEC", "field_45895", "CODEC", "f_291185_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.provider.score.LootScoreProviderTypes#FIXED
    [[maybe_unused]] static jobject get_field_FIXED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "FIXED", "field_27932", "FIXED", "f_165868_"), "Lewg;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.provider.score.LootScoreProviderTypes#FIXED
    [[maybe_unused]] static void set_field_FIXED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "FIXED", "field_27932", "FIXED", "f_165868_"), "Lewg;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.provider.score.LootScoreProviderTypes#CONTEXT
    [[maybe_unused]] static jobject get_field_CONTEXT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "CONTEXT", "field_27933", "CONTEXT", "f_165869_"), "Lewg;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.provider.score.LootScoreProviderTypes#CONTEXT
    [[maybe_unused]] static void set_field_CONTEXT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "CONTEXT", "field_27933", "CONTEXT", "f_165869_"), "Lewg;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_register() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "register", "method_32479", "register", "m_165873_"), "(Ljava/lang/String;Lcom/mojang/serialization/MapCodec;)Lewg;");
    }

    static jobject register(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_register();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_LOOT_PROVIDER_SCORE_LOOTSCOREPROVIDERTYPES_HPP