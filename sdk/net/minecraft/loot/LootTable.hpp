// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_LOOT_LOOTTABLE_HPP
#define NET_MINECRAFT_LOOT_LOOTTABLE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.loot.LootTable
 * Remapped: erw
 */
namespace LootTable {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("erw", "net/minecraft/world/level/storage/loot/LootTable", "net/minecraft/class_52", "net/minecraft/loot/LootTable", "net/minecraft/src/C_2822_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.loot.LootTable#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "LOGGER", "field_946", "LOGGER", "f_79107_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.loot.LootTable#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "LOGGER", "field_946", "LOGGER", "f_79107_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTable#EMPTY
    [[maybe_unused]] static jobject get_field_EMPTY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "EMPTY", "field_948", "EMPTY", "f_79105_"), "Lerw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTable#EMPTY
    [[maybe_unused]] static void set_field_EMPTY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "EMPTY", "field_948", "EMPTY", "f_79105_"), "Lerw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTable#GENERIC
    [[maybe_unused]] static jobject get_field_GENERIC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "DEFAULT_PARAM_SET", "field_947", "GENERIC", "f_79106_"), "Leul;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTable#GENERIC
    [[maybe_unused]] static void set_field_GENERIC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "DEFAULT_PARAM_SET", "field_947", "GENERIC", "f_79106_"), "Leul;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTable#DEFAULT_SEED
    [[maybe_unused]] static jlong get_field_DEFAULT_SEED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "RANDOMIZE_SEED", "field_49428", "DEFAULT_SEED", "f_314361_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticLongField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTable#DEFAULT_SEED
    [[maybe_unused]] static void set_field_DEFAULT_SEED(const jlong &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "RANDOMIZE_SEED", "field_49428", "DEFAULT_SEED", "f_314361_"), "J");
        return MinecraftSDK::env->SetStaticLongField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTable#CODEC
    [[maybe_unused]] static jobject get_field_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "DIRECT_CODEC", "field_50021", "CODEC", "f_315527_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTable#CODEC
    [[maybe_unused]] static void set_field_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "DIRECT_CODEC", "field_50021", "CODEC", "f_315527_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.LootTable#ENTRY_CODEC
    [[maybe_unused]] static jobject get_field_ENTRY_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "CODEC", "field_45796", "ENTRY_CODEC", "f_290440_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.LootTable#ENTRY_CODEC
    [[maybe_unused]] static void set_field_ENTRY_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "CODEC", "field_45796", "ENTRY_CODEC", "f_290440_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.loot.LootTable#type
    static jobject get_field_type(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "paramSet", "field_942", "type", "f_79108_"), "Leul;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.loot.LootTable#type
    static void set_field_type(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "paramSet", "field_942", "type", "f_79108_"), "Leul;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.loot.LootTable#randomSequenceId
    static jobject get_field_randomSequenceId(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "randomSequence", "field_44892", "randomSequenceId", "f_286958_"), "Ljava/util/Optional;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.loot.LootTable#randomSequenceId
    static void set_field_randomSequenceId(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "randomSequence", "field_44892", "randomSequenceId", "f_286958_"), "Ljava/util/Optional;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.loot.LootTable#pools
    static jobject get_field_pools(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "pools", "field_943", "pools", "f_79109_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.loot.LootTable#pools
    static void set_field_pools(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "pools", "field_943", "pools", "f_79109_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.loot.LootTable#functions
    static jobject get_field_functions(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "functions", "field_944", "functions", "f_79110_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.loot.LootTable#functions
    static void set_field_functions(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "functions", "field_944", "functions", "f_79110_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.loot.LootTable#combinedFunction
    static jobject get_field_combinedFunction(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "compositeFunction", "field_945", "combinedFunction", "f_79111_"), "Ljava/util/function/BiFunction;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.loot.LootTable#combinedFunction
    static void set_field_combinedFunction(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "compositeFunction", "field_945", "combinedFunction", "f_79111_"), "Ljava/util/function/BiFunction;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_processStacks() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "createStackSplitter", "method_332", "processStacks", "m_246283_"), "(Laqu;Ljava/util/function/Consumer;)Ljava/util/function/Consumer;");
    }

    static jobject processStacks(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_processStacks();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_generateUnprocessedLoot() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getRandomItemsRaw", "method_51881", "generateUnprocessedLoot", "m_287190_"), "(Leru;Ljava/util/function/Consumer;)V");
    }

    static void generateUnprocessedLoot(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_generateUnprocessedLoot();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__generateUnprocessedLoot() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getRandomItemsRaw", "method_328", "generateUnprocessedLoot", "m_79131_"), "(Lerr;Ljava/util/function/Consumer;)V");
    }

    static void _generateUnprocessedLoot(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID__generateUnprocessedLoot();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_generateLoot() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getRandomItems", "method_51880", "generateLoot", "m_287276_"), "(Leru;JLjava/util/function/Consumer;)V");
    }

    static void generateLoot(const jobject& obj, const jobject& arg0, const jlong& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_generateLoot();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID__generateLoot() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getRandomItems", "method_51882", "generateLoot", "m_287228_"), "(Leru;Ljava/util/function/Consumer;)V");
    }

    static void _generateLoot(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID__generateLoot();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID___generateLoot() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getRandomItems", "method_320", "generateLoot", "m_79148_"), "(Lerr;Ljava/util/function/Consumer;)V");
    }

    static void __generateLoot(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID___generateLoot();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID____generateLoot() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getRandomItems", "method_60569", "generateLoot", "m_338621_"), "(Leru;Layw;)Lit/unimi/dsi/fastutil/objects/ObjectArrayList;");
    }

    static jobject ___generateLoot(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID____generateLoot();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_____generateLoot() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getRandomItems", "method_51879", "generateLoot", "m_287214_"), "(Leru;J)Lit/unimi/dsi/fastutil/objects/ObjectArrayList;");
    }

    static jobject ____generateLoot(const jobject& obj, const jobject& arg0, const jlong& arg1) {
                
       const auto methodID = methodID_____generateLoot();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID______generateLoot() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getRandomItems", "method_51878", "generateLoot", "m_287195_"), "(Leru;)Lit/unimi/dsi/fastutil/objects/ObjectArrayList;");
    }

    static jobject _____generateLoot(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID______generateLoot();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_______generateLoot() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getRandomItems", "method_319", "generateLoot", "m_230922_"), "(Lerr;)Lit/unimi/dsi/fastutil/objects/ObjectArrayList;");
    }

    static jobject ______generateLoot(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_______generateLoot();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getType() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getParamSet", "method_322", "getType", "m_79122_"), "()Leul;");
    }

    static jobject getType(const jobject& obj) {
                
       const auto methodID = methodID_getType();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_validate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "validate", "method_330", "validate", "m_79136_"), "(Lerx;)V");
    }

    static void validate(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_validate();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_supplyInventory() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "fill", "method_329", "supplyInventory", "m_287188_"), "(Lbqk;Leru;J)V");
    }

    static void supplyInventory(const jobject& obj, const jobject& arg0, const jobject& arg1, const jlong& arg2) {
                
       const auto methodID = methodID_supplyInventory();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_shuffle() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "shuffleAndSplitItems", "method_333", "shuffle", "m_230924_"), "(Lit/unimi/dsi/fastutil/objects/ObjectArrayList;ILayw;)V");
    }

    static void shuffle(const jobject& obj, const jobject& arg0, const jint& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_shuffle();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_getFreeSlots() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getAvailableSlots", "method_321", "getFreeSlots", "m_230919_"), "(Lbqk;Layw;)Ljava/util/List;");
    }

    static jobject getFreeSlots(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_getFreeSlots();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_builder() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "lootTable", "method_324", "builder", "m_79147_"), "()Lerw$a;");
    }

    static jobject builder() {
       const auto clazz = self();
       const auto methodID = methodID_builder();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
};

#endif // NET_MINECRAFT_LOOT_LOOTTABLE_HPP