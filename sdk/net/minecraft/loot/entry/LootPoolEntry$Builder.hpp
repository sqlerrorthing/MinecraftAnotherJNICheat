// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_LOOT_ENTRY_LOOTPOOLENTRY$BUILDER_HPP
#define NET_MINECRAFT_LOOT_ENTRY_LOOTPOOLENTRY$BUILDER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.loot.entry.LootPoolEntry$Builder
 * Remapped: esh$a
 */
namespace LootPoolEntry$Builder {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("esh$a", "net/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder", "net/minecraft/class_79$class_80", "net/minecraft/loot/entry/LootPoolEntry$Builder", "net/minecraft/src/C_2856_$C_2857_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.loot.entry.LootPoolEntry$Builder#conditions
    static jobject get_field_conditions(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "conditions", "field_990", "conditions", "f_79642_"), "Lcom/google/common/collect/ImmutableList$Builder;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.loot.entry.LootPoolEntry$Builder#conditions
    static void set_field_conditions(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "conditions", "field_990", "conditions", "f_79642_"), "Lcom/google/common/collect/ImmutableList$Builder;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_getThisBuilder() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aH_", "getThis", "method_418", "getThisBuilder", "m_6897_"), "()Lesh$a;");
    }

    static jobject getThisBuilder(const jobject& obj) {
                
       const auto methodID = methodID_getThisBuilder();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_conditionally() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "when", "method_421", "conditionally", "m_79080_"), "(Levc$a;)Lesh$a;");
    }

    static jobject conditionally(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_conditionally();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getThisConditionConsumingBuilder() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "unwrap", "method_416", "getThisConditionConsumingBuilder", "m_79073_"), "()Lesh$a;");
    }

    static jobject getThisConditionConsumingBuilder(const jobject& obj) {
                
       const auto methodID = methodID_getThisConditionConsumingBuilder();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getConditions() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "getConditions", "method_420", "getConditions", "m_79651_"), "()Ljava/util/List;");
    }

    static jobject getConditions(const jobject& obj) {
                
       const auto methodID = methodID_getConditions();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_alternatively() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "otherwise", "method_417", "alternatively", "m_7170_"), "(Lesh$a;)Lery$a;");
    }

    static jobject alternatively(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_alternatively();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_sequenceEntry() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "append", "method_35513", "sequenceEntry", "m_142719_"), "(Lesh$a;)Lesd$a;");
    }

    static jobject sequenceEntry(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_sequenceEntry();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_groupEntry() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "then", "method_35514", "groupEntry", "m_142639_"), "(Lesh$a;)Lesl$a;");
    }

    static jobject groupEntry(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_groupEntry();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_build() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "build", "method_419", "build", "m_7512_"), "()Lesh;");
    }

    static jobject build(const jobject& obj) {
                
       const auto methodID = methodID_build();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_LOOT_ENTRY_LOOTPOOLENTRY$BUILDER_HPP