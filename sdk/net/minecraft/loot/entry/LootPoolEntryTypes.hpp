// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_LOOT_ENTRY_LOOTPOOLENTRYTYPES_HPP
#define NET_MINECRAFT_LOOT_ENTRY_LOOTPOOLENTRYTYPES_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.loot.entry.LootPoolEntryTypes
 * Remapped: esf
 */
namespace LootPoolEntryTypes {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("esf", "net/minecraft/world/level/storage/loot/entries/LootPoolEntries", "net/minecraft/class_75", "net/minecraft/loot/entry/LootPoolEntryTypes", "net/minecraft/src/C_2854_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.loot.entry.LootPoolEntryTypes#CODEC
    [[maybe_unused]] static jobject get_field_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CODEC", "field_45802", "CODEC", "f_291877_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.entry.LootPoolEntryTypes#CODEC
    [[maybe_unused]] static void set_field_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CODEC", "field_45802", "CODEC", "f_291877_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.entry.LootPoolEntryTypes#EMPTY
    [[maybe_unused]] static jobject get_field_EMPTY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "EMPTY", "field_25206", "EMPTY", "f_79619_"), "Lesi;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.entry.LootPoolEntryTypes#EMPTY
    [[maybe_unused]] static void set_field_EMPTY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "EMPTY", "field_25206", "EMPTY", "f_79619_"), "Lesi;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.entry.LootPoolEntryTypes#ITEM
    [[maybe_unused]] static jobject get_field_ITEM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "ITEM", "field_25207", "ITEM", "f_79620_"), "Lesi;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.entry.LootPoolEntryTypes#ITEM
    [[maybe_unused]] static void set_field_ITEM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "ITEM", "field_25207", "ITEM", "f_79620_"), "Lesi;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.entry.LootPoolEntryTypes#LOOT_TABLE
    [[maybe_unused]] static jobject get_field_LOOT_TABLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "LOOT_TABLE", "field_25208", "LOOT_TABLE", "f_314057_"), "Lesi;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.entry.LootPoolEntryTypes#LOOT_TABLE
    [[maybe_unused]] static void set_field_LOOT_TABLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "LOOT_TABLE", "field_25208", "LOOT_TABLE", "f_314057_"), "Lesi;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.entry.LootPoolEntryTypes#DYNAMIC
    [[maybe_unused]] static jobject get_field_DYNAMIC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "DYNAMIC", "field_25209", "DYNAMIC", "f_79622_"), "Lesi;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.entry.LootPoolEntryTypes#DYNAMIC
    [[maybe_unused]] static void set_field_DYNAMIC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "DYNAMIC", "field_25209", "DYNAMIC", "f_79622_"), "Lesi;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.entry.LootPoolEntryTypes#TAG
    [[maybe_unused]] static jobject get_field_TAG() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "TAG", "field_25210", "TAG", "f_79623_"), "Lesi;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.entry.LootPoolEntryTypes#TAG
    [[maybe_unused]] static void set_field_TAG(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "TAG", "field_25210", "TAG", "f_79623_"), "Lesi;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.entry.LootPoolEntryTypes#ALTERNATIVES
    [[maybe_unused]] static jobject get_field_ALTERNATIVES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "ALTERNATIVES", "field_25211", "ALTERNATIVES", "f_79624_"), "Lesi;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.entry.LootPoolEntryTypes#ALTERNATIVES
    [[maybe_unused]] static void set_field_ALTERNATIVES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "ALTERNATIVES", "field_25211", "ALTERNATIVES", "f_79624_"), "Lesi;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.entry.LootPoolEntryTypes#SEQUENCE
    [[maybe_unused]] static jobject get_field_SEQUENCE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "SEQUENCE", "field_25212", "SEQUENCE", "f_79625_"), "Lesi;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.entry.LootPoolEntryTypes#SEQUENCE
    [[maybe_unused]] static void set_field_SEQUENCE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "SEQUENCE", "field_25212", "SEQUENCE", "f_79625_"), "Lesi;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.entry.LootPoolEntryTypes#GROUP
    [[maybe_unused]] static jobject get_field_GROUP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "GROUP", "field_25213", "GROUP", "f_79626_"), "Lesi;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.entry.LootPoolEntryTypes#GROUP
    [[maybe_unused]] static void set_field_GROUP(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "GROUP", "field_25213", "GROUP", "f_79626_"), "Lesi;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_register() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "register", "method_29317", "register", "m_79629_"), "(Ljava/lang/String;Lcom/mojang/serialization/MapCodec;)Lesi;");
    }

    static jobject register(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_register();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_LOOT_ENTRY_LOOTPOOLENTRYTYPES_HPP