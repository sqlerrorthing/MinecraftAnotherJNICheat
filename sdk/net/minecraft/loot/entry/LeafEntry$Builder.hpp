// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_LOOT_ENTRY_LEAFENTRY$BUILDER_HPP
#define NET_MINECRAFT_LOOT_ENTRY_LEAFENTRY$BUILDER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.loot.entry.LeafEntry$Builder
 * Remapped: esj$a
 */
namespace LeafEntry$Builder {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("esj$a", "net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Builder", "net/minecraft/class_85$class_86", "net/minecraft/loot/entry/LeafEntry$Builder", "net/minecraft/src/C_2860_$C_2862_"));
        }
        return cachedClass;
    };

    // getter for protected field net.minecraft.loot.entry.LeafEntry$Builder#weight
    static jint get_field_weight(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "weight", "field_1001", "weight", "f_79702_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.loot.entry.LeafEntry$Builder#weight
    static void set_field_weight(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "weight", "field_1001", "weight", "f_79702_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.loot.entry.LeafEntry$Builder#quality
    static jint get_field_quality(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "quality", "field_1000", "quality", "f_79703_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.loot.entry.LeafEntry$Builder#quality
    static void set_field_quality(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "quality", "field_1000", "quality", "f_79703_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.loot.entry.LeafEntry$Builder#functions
    static jobject get_field_functions(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "functions", "field_999", "functions", "f_79704_"), "Lcom/google/common/collect/ImmutableList$Builder;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.loot.entry.LeafEntry$Builder#functions
    static void set_field_functions(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "functions", "field_999", "functions", "f_79704_"), "Lcom/google/common/collect/ImmutableList$Builder;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_apply() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "apply", "method_438", "apply", "m_79078_"), "(Letf$a;)Lesj$a;");
    }

    static jobject apply(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_apply();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getFunctions() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getFunctions", "method_439", "getFunctions", "m_79706_"), "()Ljava/util/List;");
    }

    static jobject getFunctions(const jobject& obj) {
                
       const auto methodID = methodID_getFunctions();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__weight() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setWeight", "method_437", "weight", "m_79707_"), "(I)Lesj$a;");
    }

    static jobject _weight(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID__weight();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__quality() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "setQuality", "method_436", "quality", "m_79711_"), "(I)Lesj$a;");
    }

    static jobject _quality(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID__quality();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_LOOT_ENTRY_LEAFENTRY$BUILDER_HPP