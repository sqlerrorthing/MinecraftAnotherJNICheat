// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_LOOT_ENTRY_ENTRYCOMBINER_HPP
#define NET_MINECRAFT_LOOT_ENTRY_ENTRYCOMBINER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.loot.entry.EntryCombiner
 * Remapped: erz
 */
namespace EntryCombiner {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("erz", "net/minecraft/world/level/storage/loot/entries/ComposableEntryContainer", "net/minecraft/class_64", "net/minecraft/loot/entry/EntryCombiner", "net/minecraft/src/C_2840_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.loot.entry.EntryCombiner#ALWAYS_FALSE
    [[maybe_unused]] static jobject get_field_ALWAYS_FALSE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "ALWAYS_FALSE", "field_16883", "ALWAYS_FALSE", "f_79405_"), "Lerz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.entry.EntryCombiner#ALWAYS_FALSE
    [[maybe_unused]] static void set_field_ALWAYS_FALSE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "ALWAYS_FALSE", "field_16883", "ALWAYS_FALSE", "f_79405_"), "Lerz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.entry.EntryCombiner#ALWAYS_TRUE
    [[maybe_unused]] static jobject get_field_ALWAYS_TRUE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "ALWAYS_TRUE", "field_16884", "ALWAYS_TRUE", "f_79406_"), "Lerz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.entry.EntryCombiner#ALWAYS_TRUE
    [[maybe_unused]] static void set_field_ALWAYS_TRUE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "ALWAYS_TRUE", "field_16884", "ALWAYS_TRUE", "f_79406_"), "Lerz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_expand() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("expand", "expand", "expand", "expand", "m_6562_"), "(Lerr;Ljava/util/function/Consumer;)Z");
    }

    static jboolean expand(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_expand();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_and() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("and", "and", "method_16778", "and", "m_79411_"), "(Lerz;)Lerz;");
    }

    static jobject and(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_and();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_or() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("or", "or", "method_385", "or", "m_79420_"), "(Lerz;)Lerz;");
    }

    static jobject or(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_or();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_LOOT_ENTRY_ENTRYCOMBINER_HPP