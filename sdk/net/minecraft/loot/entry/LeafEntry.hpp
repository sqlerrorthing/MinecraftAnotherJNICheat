// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_LOOT_ENTRY_LEAFENTRY_HPP
#define NET_MINECRAFT_LOOT_ENTRY_LEAFENTRY_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.loot.entry.LeafEntry
 * Remapped: esj
 */
namespace LeafEntry {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("esj", "net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer", "net/minecraft/class_85", "net/minecraft/loot/entry/LeafEntry", "net/minecraft/src/C_2860_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.loot.entry.LeafEntry#DEFAULT_WEIGHT
    [[maybe_unused]] static jint get_field_DEFAULT_WEIGHT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "DEFAULT_WEIGHT", "field_31847", "DEFAULT_WEIGHT", "f_165150_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.entry.LeafEntry#DEFAULT_WEIGHT
    [[maybe_unused]] static void set_field_DEFAULT_WEIGHT(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "DEFAULT_WEIGHT", "field_31847", "DEFAULT_WEIGHT", "f_165150_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.entry.LeafEntry#DEFAULT_QUALITY
    [[maybe_unused]] static jint get_field_DEFAULT_QUALITY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "DEFAULT_QUALITY", "field_31848", "DEFAULT_QUALITY", "f_165151_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.entry.LeafEntry#DEFAULT_QUALITY
    [[maybe_unused]] static void set_field_DEFAULT_QUALITY(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "DEFAULT_QUALITY", "field_31848", "DEFAULT_QUALITY", "f_165151_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for protected field net.minecraft.loot.entry.LeafEntry#weight
    static jint get_field_weight(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "weight", "field_995", "weight", "f_79675_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.loot.entry.LeafEntry#weight
    static void set_field_weight(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "weight", "field_995", "weight", "f_79675_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.loot.entry.LeafEntry#quality
    static jint get_field_quality(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "quality", "field_994", "quality", "f_79676_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.loot.entry.LeafEntry#quality
    static void set_field_quality(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "quality", "field_994", "quality", "f_79676_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.loot.entry.LeafEntry#functions
    static jobject get_field_functions(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "functions", "field_996", "functions", "f_79677_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.loot.entry.LeafEntry#functions
    static void set_field_functions(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "functions", "field_996", "functions", "f_79677_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.loot.entry.LeafEntry#compiledFunctions
    static jobject get_field_compiledFunctions(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "compositeFunction", "field_997", "compiledFunctions", "f_79678_"), "Ljava/util/function/BiFunction;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.loot.entry.LeafEntry#compiledFunctions
    static void set_field_compiledFunctions(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "compositeFunction", "field_997", "compiledFunctions", "f_79678_"), "Ljava/util/function/BiFunction;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.loot.entry.LeafEntry#choice
    static jobject get_field_choice(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "entry", "field_998", "choice", "f_79679_"), "Lesg;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.loot.entry.LeafEntry#choice
    static void set_field_choice(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "entry", "field_998", "choice", "f_79679_"), "Lesg;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_addLeafFields() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "singletonFields", "method_53290", "addLeafFields", "m_294967_"), "(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P4;");
    }

    static jobject addLeafFields(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_addLeafFields();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_validate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "validate", "method_415", "validate", "m_6165_"), "(Lerx;)V");
    }

    static void validate(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_validate();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_generateLoot() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "createItemStack", "method_433", "generateLoot", "m_6948_"), "(Ljava/util/function/Consumer;Lerr;)V");
    }

    static void generateLoot(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_generateLoot();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_expand() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("expand", "expand", "expand", "expand", "m_6562_"), "(Lerr;Ljava/util/function/Consumer;)Z");
    }

    static jboolean expand(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_expand();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_builder() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "simpleBuilder", "method_434", "builder", "m_79687_"), "(Lesj$d;)Lesj$a;");
    }

    static jobject builder(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_builder();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_LOOT_ENTRY_LEAFENTRY_HPP