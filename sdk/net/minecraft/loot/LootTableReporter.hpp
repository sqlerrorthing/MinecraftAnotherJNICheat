// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_LOOT_LOOTTABLEREPORTER_HPP
#define NET_MINECRAFT_LOOT_LOOTTABLEREPORTER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.loot.LootTableReporter
 * Remapped: erx
 */
namespace LootTableReporter {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("erx", "net/minecraft/world/level/storage/loot/ValidationContext", "net/minecraft/class_58", "net/minecraft/loot/LootTableReporter", "net/minecraft/src/C_2837_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.loot.LootTableReporter#errorReporter
    static jobject get_field_errorReporter(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "reporter", "field_47427", "errorReporter", "f_302601_"), "Layu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.loot.LootTableReporter#errorReporter
    static void set_field_errorReporter(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "reporter", "field_47427", "errorReporter", "f_302601_"), "Layu;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.loot.LootTableReporter#contextType
    static jobject get_field_contextType(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "params", "field_20756", "contextType", "f_79334_"), "Leul;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.loot.LootTableReporter#contextType
    static void set_field_contextType(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "params", "field_20756", "contextType", "f_79334_"), "Leul;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.loot.LootTableReporter#dataLookup
    static jobject get_field_dataLookup(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "resolver", "field_44504", "dataLookup", "f_278480_"), "Ljava/util/Optional;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.loot.LootTableReporter#dataLookup
    static void set_field_dataLookup(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "resolver", "field_44504", "dataLookup", "f_278480_"), "Ljava/util/Optional;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.loot.LootTableReporter#referenceStack
    static jobject get_field_referenceStack(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "visitedElements", "field_44505", "referenceStack", "f_278483_"), "Ljava/util/Set;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.loot.LootTableReporter#referenceStack
    static void set_field_referenceStack(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "visitedElements", "field_44505", "referenceStack", "f_278483_"), "Ljava/util/Set;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_makeChild() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "forChild", "method_364", "makeChild", "m_79365_"), "(Ljava/lang/String;)Lerx;");
    }

    static jobject makeChild(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_makeChild();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__makeChild() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "enterElement", "method_51219", "makeChild", "m_278632_"), "(Ljava/lang/String;Lakq;)Lerx;");
    }

    static jobject _makeChild(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID__makeChild();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_isInStack() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "hasVisitedElement", "method_51218", "isInStack", "m_278820_"), "(Lakq;)Z");
    }

    static jboolean isInStack(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_isInStack();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_report() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "reportProblem", "method_360", "report", "m_79357_"), "(Ljava/lang/String;)V");
    }

    static void report(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_report();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_validateContext() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "validateUser", "method_22567", "validateContext", "m_79353_"), "(Lers;)V");
    }

    static void validateContext(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_validateContext();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getDataLookup() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "resolver", "method_51220", "getDataLookup", "m_278720_"), "()Ljn$a;");
    }

    static jobject getDataLookup(const jobject& obj) {
                
       const auto methodID = methodID_getDataLookup();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_canUseReferences() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "allowsReferences", "method_61030", "canUseReferences", "m_339912_"), "()Z");
    }

    static jboolean canUseReferences(const jobject& obj) {
                
       const auto methodID = methodID_canUseReferences();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_withContextType() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setParams", "method_22568", "withContextType", "m_79355_"), "(Leul;)Lerx;");
    }

    static jobject withContextType(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_withContextType();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getErrorReporter() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "reporter", "method_60288", "getErrorReporter", "m_338880_"), "()Layu;");
    }

    static jobject getErrorReporter(const jobject& obj) {
                
       const auto methodID = methodID_getErrorReporter();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_LOOT_LOOTTABLEREPORTER_HPP