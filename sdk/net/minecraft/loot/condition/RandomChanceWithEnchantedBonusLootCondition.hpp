// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_LOOT_CONDITION_RANDOMCHANCEWITHENCHANTEDBONUSLOOTCONDITION_HPP
#define NET_MINECRAFT_LOOT_CONDITION_RANDOMCHANCEWITHENCHANTEDBONUSLOOTCONDITION_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.loot.condition.RandomChanceWithEnchantedBonusLootCondition
 * Remapped: evi
 */
namespace RandomChanceWithEnchantedBonusLootCondition {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("evi", "net/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceWithEnchantedBonusCondition", "net/minecraft/class_225", "net/minecraft/loot/condition/RandomChanceWithEnchantedBonusLootCondition", "net/minecraft/src/C_336583_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.loot.condition.RandomChanceWithEnchantedBonusLootCondition#unenchantedChance
    static jfloat get_field_unenchantedChance(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "unenchantedChance", "comp_2865", "unenchantedChance", "f_336942_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.loot.condition.RandomChanceWithEnchantedBonusLootCondition#unenchantedChance
    static void set_field_unenchantedChance(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "unenchantedChance", "comp_2865", "unenchantedChance", "f_336942_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.loot.condition.RandomChanceWithEnchantedBonusLootCondition#enchantedChance
    static jobject get_field_enchantedChance(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "enchantedChance", "comp_2866", "enchantedChance", "f_336885_"), "Ldaj;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.loot.condition.RandomChanceWithEnchantedBonusLootCondition#enchantedChance
    static void set_field_enchantedChance(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "enchantedChance", "comp_2866", "enchantedChance", "f_336885_"), "Ldaj;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.loot.condition.RandomChanceWithEnchantedBonusLootCondition#enchantment
    static jobject get_field_enchantment(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "enchantment", "comp_2783", "enchantment", "f_337283_"), "Ljm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.loot.condition.RandomChanceWithEnchantedBonusLootCondition#enchantment
    static void set_field_enchantment(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "enchantment", "comp_2783", "enchantment", "f_337283_"), "Ljm;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.condition.RandomChanceWithEnchantedBonusLootCondition#CODEC
    [[maybe_unused]] static jobject get_field_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CODEC", "field_45874", "CODEC", "f_337576_"), "Lcom/mojang/serialization/MapCodec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.condition.RandomChanceWithEnchantedBonusLootCondition#CODEC
    [[maybe_unused]] static void set_field_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CODEC", "field_45874", "CODEC", "f_337576_"), "Lcom/mojang/serialization/MapCodec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_getType() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getType", "method_29325", "getType", "m_7940_"), "()Levd;");
    }

    static jobject getType(const jobject& obj) {
                
       const auto methodID = methodID_getType();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getRequiredParameters() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getReferencedContextParams", "method_293", "getRequiredParameters", "m_6231_"), "()Ljava/util/Set;");
    }

    static jobject getRequiredParameters(const jobject& obj) {
                
       const auto methodID = methodID_getRequiredParameters();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_test() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "test", "method_950", "test", "test"), "(Lerr;)Z");
    }

    static jboolean test(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_test();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_builder() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "randomChanceAndLootingBoost", "method_953", "builder", "m_338384_"), "(Ljo$a;FF)Levc$a;");
    }

    static jobject builder(const jobject& arg0, const jfloat& arg1, const jfloat& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_builder();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID__unenchantedChance() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "unenchantedChance", "comp_2865", "unenchantedChance", "f_336942_"), "()F");
    }

    static jfloat _unenchantedChance(const jobject& obj) {
                
       const auto methodID = methodID__unenchantedChance();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID__enchantedChance() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "enchantedChance", "comp_2866", "enchantedChance", "f_336885_"), "()Ldaj;");
    }

    static jobject _enchantedChance(const jobject& obj) {
                
       const auto methodID = methodID__enchantedChance();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__enchantment() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "enchantment", "comp_2783", "enchantment", "f_337283_"), "()Ljm;");
    }

    static jobject _enchantment(const jobject& obj) {
                
       const auto methodID = methodID__enchantment();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_LOOT_CONDITION_RANDOMCHANCEWITHENCHANTEDBONUSLOOTCONDITION_HPP