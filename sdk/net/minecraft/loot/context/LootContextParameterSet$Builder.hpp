// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_LOOT_CONTEXT_LOOTCONTEXTPARAMETERSET$BUILDER_HPP
#define NET_MINECRAFT_LOOT_CONTEXT_LOOTCONTEXTPARAMETERSET$BUILDER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.loot.context.LootContextParameterSet$Builder
 * Remapped: eru$a
 */
namespace LootContextParameterSet$Builder {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("eru$a", "net/minecraft/world/level/storage/loot/LootParams$Builder", "net/minecraft/class_8567$class_8568", "net/minecraft/loot/context/LootContextParameterSet$Builder", "net/minecraft/src/C_286926_$C_286924_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.loot.context.LootContextParameterSet$Builder#world
    static jobject get_field_world(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "level", "field_44887", "world", "f_286934_"), "Laqu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.loot.context.LootContextParameterSet$Builder#world
    static void set_field_world(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "level", "field_44887", "world", "f_286934_"), "Laqu;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.loot.context.LootContextParameterSet$Builder#parameters
    static jobject get_field_parameters(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "params", "field_44888", "parameters", "f_286945_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.loot.context.LootContextParameterSet$Builder#parameters
    static void set_field_parameters(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "params", "field_44888", "parameters", "f_286945_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.loot.context.LootContextParameterSet$Builder#dynamicDrops
    static jobject get_field_dynamicDrops(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "dynamicDrops", "field_44889", "dynamicDrops", "f_286986_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.loot.context.LootContextParameterSet$Builder#dynamicDrops
    static void set_field_dynamicDrops(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "dynamicDrops", "field_44889", "dynamicDrops", "f_286986_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.loot.context.LootContextParameterSet$Builder#luck
    static jfloat get_field_luck(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "luck", "field_44890", "luck", "f_287000_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.loot.context.LootContextParameterSet$Builder#luck
    static void set_field_luck(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "luck", "field_44890", "luck", "f_287000_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    static jmethodID methodID_getWorld() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getLevel", "method_51870", "getWorld", "m_287258_"), "()Laqu;");
    }

    static jobject getWorld(const jobject& obj) {
                
       const auto methodID = methodID_getWorld();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_add() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "withParameter", "method_51874", "add", "m_287286_"), "(Leuk;Ljava/lang/Object;)Leru$a;");
    }

    static jobject add(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_add();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_addOptional() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "withOptionalParameter", "method_51877", "addOptional", "m_287289_"), "(Leuk;Ljava/lang/Object;)Leru$a;");
    }

    static jobject addOptional(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_addOptional();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_get() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getParameter", "method_51873", "get", "m_287261_"), "(Leuk;)Ljava/lang/Object;");
    }

    static jobject get(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_get();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getOptional() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getOptionalParameter", "method_51876", "getOptional", "m_287159_"), "(Leuk;)Ljava/lang/Object;");
    }

    static jobject getOptional(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getOptional();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_addDynamicDrop() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "withDynamicDrop", "method_51872", "addDynamicDrop", "m_287145_"), "(Lakr;Leru$b;)Leru$a;");
    }

    static jobject addDynamicDrop(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_addDynamicDrop();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__luck() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "withLuck", "method_51871", "luck", "m_287239_"), "(F)Leru$a;");
    }

    static jobject _luck(const jobject& obj, const jfloat& arg0) {
                
       const auto methodID = methodID__luck();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_build() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "create", "method_51875", "build", "m_287235_"), "(Leul;)Leru;");
    }

    static jobject build(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_build();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_LOOT_CONTEXT_LOOTCONTEXTPARAMETERSET$BUILDER_HPP