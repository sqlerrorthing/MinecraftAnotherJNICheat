// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_LOOT_CONTEXT_LOOTCONTEXTTYPE_HPP
#define NET_MINECRAFT_LOOT_CONTEXT_LOOTCONTEXTTYPE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.loot.context.LootContextType
 * Remapped: eul
 */
namespace LootContextType {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("eul", "net/minecraft/world/level/storage/loot/parameters/LootContextParamSet", "net/minecraft/class_176", "net/minecraft/loot/context/LootContextType", "net/minecraft/src/C_2970_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.loot.context.LootContextType#required
    static jobject get_field_required(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "required", "field_1216", "required", "f_81385_"), "Ljava/util/Set;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.loot.context.LootContextType#required
    static void set_field_required(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "required", "field_1216", "required", "f_81385_"), "Ljava/util/Set;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.loot.context.LootContextType#allowed
    static jobject get_field_allowed(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "all", "field_1215", "allowed", "f_81386_"), "Ljava/util/Set;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.loot.context.LootContextType#allowed
    static void set_field_allowed(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "all", "field_1215", "allowed", "f_81386_"), "Ljava/util/Set;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_isAllowed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "isAllowed", "method_35553", "isAllowed", "m_165475_"), "(Leuk;)Z");
    }

    static jboolean isAllowed(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_isAllowed();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getRequired() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getRequired", "method_778", "getRequired", "m_81394_"), "()Ljava/util/Set;");
    }

    static jobject getRequired(const jobject& obj) {
                
       const auto methodID = methodID_getRequired();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getAllowed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getAllowed", "method_777", "getAllowed", "m_81398_"), "()Ljava/util/Set;");
    }

    static jobject getAllowed(const jobject& obj) {
                
       const auto methodID = methodID_getAllowed();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_validate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "validateUser", "method_60298", "validate", "m_81395_"), "(Lerx;Lers;)V");
    }

    static void validate(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_validate();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__validate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "validateUser", "method_776", "validate", "m_340304_"), "(Layu;Lers;)V");
    }

    static void _validate(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID__validate();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_create() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "builder", "method_35554", "create", "m_165477_"), "()Leul$a;");
    }

    static jobject create() {
       const auto clazz = self();
       const auto methodID = methodID_create();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
};

#endif // NET_MINECRAFT_LOOT_CONTEXT_LOOTCONTEXTTYPE_HPP