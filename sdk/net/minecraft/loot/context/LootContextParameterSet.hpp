// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_LOOT_CONTEXT_LOOTCONTEXTPARAMETERSET_HPP
#define NET_MINECRAFT_LOOT_CONTEXT_LOOTCONTEXTPARAMETERSET_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.loot.context.LootContextParameterSet
 * Remapped: eru
 */
namespace LootContextParameterSet {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("eru", "net/minecraft/world/level/storage/loot/LootParams", "net/minecraft/class_8567", "net/minecraft/loot/context/LootContextParameterSet", "net/minecraft/src/C_286926_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.loot.context.LootContextParameterSet#world
    static jobject get_field_world(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "level", "field_44883", "world", "f_286983_"), "Laqu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.loot.context.LootContextParameterSet#world
    static void set_field_world(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "level", "field_44883", "world", "f_286983_"), "Laqu;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.loot.context.LootContextParameterSet#parameters
    static jobject get_field_parameters(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "params", "field_44884", "parameters", "f_286977_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.loot.context.LootContextParameterSet#parameters
    static void set_field_parameters(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "params", "field_44884", "parameters", "f_286977_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.loot.context.LootContextParameterSet#dynamicDrops
    static jobject get_field_dynamicDrops(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "dynamicDrops", "field_44885", "dynamicDrops", "f_286955_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.loot.context.LootContextParameterSet#dynamicDrops
    static void set_field_dynamicDrops(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "dynamicDrops", "field_44885", "dynamicDrops", "f_286955_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.loot.context.LootContextParameterSet#luck
    static jfloat get_field_luck(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "luck", "field_44886", "luck", "f_286957_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.loot.context.LootContextParameterSet#luck
    static void set_field_luck(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "luck", "field_44886", "luck", "f_286957_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    static jmethodID methodID_getWorld() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getLevel", "method_51863", "getWorld", "m_287182_"), "()Laqu;");
    }

    static jobject getWorld(const jobject& obj) {
                
       const auto methodID = methodID_getWorld();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_contains() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "hasParam", "method_51865", "contains", "m_287166_"), "(Leuk;)Z");
    }

    static jboolean contains(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_contains();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_get() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getParameter", "method_51867", "get", "m_287156_"), "(Leuk;)Ljava/lang/Object;");
    }

    static jobject get(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_get();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_method_51868() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getOptionalParameter", "method_51868", "method_51868", "m_287251_"), "(Leuk;)Ljava/lang/Object;");
    }

    static jobject method_51868(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_method_51868();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getOptional() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getParamOrNull", "method_51869", "getOptional", "m_287267_"), "(Leuk;)Ljava/lang/Object;");
    }

    static jobject getOptional(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getOptional();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_addDynamicDrops() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "addDynamicDrops", "method_51864", "addDynamicDrops", "m_287256_"), "(Lakr;Ljava/util/function/Consumer;)V");
    }

    static void addDynamicDrops(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_addDynamicDrops();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getLuck() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getLuck", "method_51866", "getLuck", "m_287164_"), "()F");
    }

    static jfloat getLuck(const jobject& obj) {
                
       const auto methodID = methodID_getLuck();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_LOOT_CONTEXT_LOOTCONTEXTPARAMETERSET_HPP