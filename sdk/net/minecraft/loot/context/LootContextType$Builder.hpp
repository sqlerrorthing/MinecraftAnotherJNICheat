// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_LOOT_CONTEXT_LOOTCONTEXTTYPE$BUILDER_HPP
#define NET_MINECRAFT_LOOT_CONTEXT_LOOTCONTEXTTYPE$BUILDER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.loot.context.LootContextType$Builder
 * Remapped: eul$a
 */
namespace LootContextType$Builder {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("eul$a", "net/minecraft/world/level/storage/loot/parameters/LootContextParamSet$Builder", "net/minecraft/class_176$class_177", "net/minecraft/loot/context/LootContextType$Builder", "net/minecraft/src/C_2970_$C_2972_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.loot.context.LootContextType$Builder#required
    static jobject get_field_required(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "required", "field_1218", "required", "f_81402_"), "Ljava/util/Set;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.loot.context.LootContextType$Builder#required
    static void set_field_required(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "required", "field_1218", "required", "f_81402_"), "Ljava/util/Set;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.loot.context.LootContextType$Builder#allowed
    static jobject get_field_allowed(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "optional", "field_1217", "allowed", "f_81403_"), "Ljava/util/Set;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.loot.context.LootContextType$Builder#allowed
    static void set_field_allowed(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "optional", "field_1217", "allowed", "f_81403_"), "Ljava/util/Set;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_require() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "required", "method_781", "require", "m_81406_"), "(Leuk;)Leul$a;");
    }

    static jobject require(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_require();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_allow() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "optional", "method_780", "allow", "m_81408_"), "(Leuk;)Leul$a;");
    }

    static jobject allow(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_allow();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_build() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "build", "method_782", "build", "m_81405_"), "()Leul;");
    }

    static jobject build(const jobject& obj) {
                
       const auto methodID = methodID_build();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_LOOT_CONTEXT_LOOTCONTEXTTYPE$BUILDER_HPP