// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_LOOT_FUNCTION_APPLYBONUSLOOTFUNCTION$BINOMIALWITHBONUSCOUNT_HPP
#define NET_MINECRAFT_LOOT_FUNCTION_APPLYBONUSLOOTFUNCTION$BINOMIALWITHBONUSCOUNT_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.loot.function.ApplyBonusLootFunction$BinomialWithBonusCount
 * Remapped: eso$a
 */
namespace ApplyBonusLootFunction$BinomialWithBonusCount {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("eso$a", "net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$BinomialWithBonusCount", "net/minecraft/class_94$class_95", "net/minecraft/loot/function/ApplyBonusLootFunction$BinomialWithBonusCount", "net/minecraft/src/C_2874_$C_2876_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.loot.function.ApplyBonusLootFunction$BinomialWithBonusCount#extra
    static jint get_field_extra(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "extraRounds", "comp_1848", "extra", "f_79948_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.loot.function.ApplyBonusLootFunction$BinomialWithBonusCount#extra
    static void set_field_extra(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "extraRounds", "comp_1848", "extra", "f_79948_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.loot.function.ApplyBonusLootFunction$BinomialWithBonusCount#probability
    static jfloat get_field_probability(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "probability", "comp_1849", "probability", "f_79949_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.loot.function.ApplyBonusLootFunction$BinomialWithBonusCount#probability
    static void set_field_probability(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "probability", "comp_1849", "probability", "f_79949_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for static private field net.minecraft.loot.function.ApplyBonusLootFunction$BinomialWithBonusCount#CODEC
    [[maybe_unused]] static jobject get_field_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "CODEC", "field_45811", "CODEC", "f_290700_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.loot.function.ApplyBonusLootFunction$BinomialWithBonusCount#CODEC
    [[maybe_unused]] static void set_field_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "CODEC", "field_45811", "CODEC", "f_290700_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.function.ApplyBonusLootFunction$BinomialWithBonusCount#TYPE
    [[maybe_unused]] static jobject get_field_TYPE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "TYPE", "field_1013", "TYPE", "f_79947_"), "Leso$c;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.function.ApplyBonusLootFunction$BinomialWithBonusCount#TYPE
    [[maybe_unused]] static void set_field_TYPE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "TYPE", "field_1013", "TYPE", "f_79947_"), "Leso$c;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_getValue() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "calculateNewCount", "method_467", "getValue", "m_213779_"), "(Layw;II)I");
    }

    static jint getValue(const jobject& obj, const jobject& arg0, const jint& arg1, const jint& arg2) {
                
       const auto methodID = methodID_getValue();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_getType() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getType", "method_466", "getType", "m_5713_"), "()Leso$c;");
    }

    static jobject getType(const jobject& obj) {
                
       const auto methodID = methodID_getType();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__extra() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "extraRounds", "comp_1848", "extra", "f_79948_"), "()I");
    }

    static jint _extra(const jobject& obj) {
                
       const auto methodID = methodID__extra();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID__probability() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "probability", "comp_1849", "probability", "f_79949_"), "()F");
    }

    static jfloat _probability(const jobject& obj) {
                
       const auto methodID = methodID__probability();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_LOOT_FUNCTION_APPLYBONUSLOOTFUNCTION$BINOMIALWITHBONUSCOUNT_HPP