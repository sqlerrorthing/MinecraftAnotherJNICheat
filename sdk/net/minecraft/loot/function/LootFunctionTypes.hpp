// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_LOOT_FUNCTION_LOOTFUNCTIONTYPES_HPP
#define NET_MINECRAFT_LOOT_FUNCTION_LOOTFUNCTIONTYPES_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.loot.function.LootFunctionTypes
 * Remapped: eth
 */
namespace LootFunctionTypes {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("eth", "net/minecraft/world/level/storage/loot/functions/LootItemFunctions", "net/minecraft/class_131", "net/minecraft/loot/function/LootFunctionTypes", "net/minecraft/src/C_2931_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.loot.function.LootFunctionTypes#NOOP
    [[maybe_unused]] static jobject get_field_NOOP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "IDENTITY", "field_1102", "NOOP", "f_80735_"), "Ljava/util/function/BiFunction;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.function.LootFunctionTypes#NOOP
    [[maybe_unused]] static void set_field_NOOP(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "IDENTITY", "field_1102", "NOOP", "f_80735_"), "Ljava/util/function/BiFunction;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.function.LootFunctionTypes#BASE_CODEC
    [[maybe_unused]] static jobject get_field_BASE_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "TYPED_CODEC", "field_45831", "BASE_CODEC", "f_291775_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.function.LootFunctionTypes#BASE_CODEC
    [[maybe_unused]] static void set_field_BASE_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "TYPED_CODEC", "field_45831", "BASE_CODEC", "f_291775_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.function.LootFunctionTypes#CODEC
    [[maybe_unused]] static jobject get_field_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "ROOT_CODEC", "field_50023", "CODEC", "f_314213_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.function.LootFunctionTypes#CODEC
    [[maybe_unused]] static void set_field_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "ROOT_CODEC", "field_50023", "CODEC", "f_314213_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.function.LootFunctionTypes#ENTRY_CODEC
    [[maybe_unused]] static jobject get_field_ENTRY_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "CODEC", "field_45832", "ENTRY_CODEC", "f_291699_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.function.LootFunctionTypes#ENTRY_CODEC
    [[maybe_unused]] static void set_field_ENTRY_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "CODEC", "field_45832", "ENTRY_CODEC", "f_291699_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.function.LootFunctionTypes#SET_COUNT
    [[maybe_unused]] static jobject get_field_SET_COUNT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "SET_COUNT", "field_25214", "SET_COUNT", "f_80736_"), "Letg;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.function.LootFunctionTypes#SET_COUNT
    [[maybe_unused]] static void set_field_SET_COUNT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "SET_COUNT", "field_25214", "SET_COUNT", "f_80736_"), "Letg;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.function.LootFunctionTypes#SET_ITEM
    [[maybe_unused]] static jobject get_field_SET_ITEM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "SET_ITEM", "field_51426", "SET_ITEM", "f_314595_"), "Letg;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.function.LootFunctionTypes#SET_ITEM
    [[maybe_unused]] static void set_field_SET_ITEM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "SET_ITEM", "field_51426", "SET_ITEM", "f_314595_"), "Letg;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.function.LootFunctionTypes#ENCHANT_WITH_LEVELS
    [[maybe_unused]] static jobject get_field_ENCHANT_WITH_LEVELS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "ENCHANT_WITH_LEVELS", "field_25215", "ENCHANT_WITH_LEVELS", "f_80737_"), "Letg;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.function.LootFunctionTypes#ENCHANT_WITH_LEVELS
    [[maybe_unused]] static void set_field_ENCHANT_WITH_LEVELS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "ENCHANT_WITH_LEVELS", "field_25215", "ENCHANT_WITH_LEVELS", "f_80737_"), "Letg;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.function.LootFunctionTypes#ENCHANT_RANDOMLY
    [[maybe_unused]] static jobject get_field_ENCHANT_RANDOMLY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "ENCHANT_RANDOMLY", "field_25216", "ENCHANT_RANDOMLY", "f_80738_"), "Letg;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.function.LootFunctionTypes#ENCHANT_RANDOMLY
    [[maybe_unused]] static void set_field_ENCHANT_RANDOMLY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "ENCHANT_RANDOMLY", "field_25216", "ENCHANT_RANDOMLY", "f_80738_"), "Letg;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.function.LootFunctionTypes#SET_ENCHANTMENTS
    [[maybe_unused]] static jobject get_field_SET_ENCHANTMENTS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "SET_ENCHANTMENTS", "field_27906", "SET_ENCHANTMENTS", "f_165221_"), "Letg;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.function.LootFunctionTypes#SET_ENCHANTMENTS
    [[maybe_unused]] static void set_field_SET_ENCHANTMENTS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "SET_ENCHANTMENTS", "field_27906", "SET_ENCHANTMENTS", "f_165221_"), "Letg;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.function.LootFunctionTypes#SET_CUSTOM_DATA
    [[maybe_unused]] static jobject get_field_SET_CUSTOM_DATA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "SET_CUSTOM_DATA", "field_49441", "SET_CUSTOM_DATA", "f_316637_"), "Letg;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.function.LootFunctionTypes#SET_CUSTOM_DATA
    [[maybe_unused]] static void set_field_SET_CUSTOM_DATA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "SET_CUSTOM_DATA", "field_49441", "SET_CUSTOM_DATA", "f_316637_"), "Letg;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.function.LootFunctionTypes#SET_COMPONENTS
    [[maybe_unused]] static jobject get_field_SET_COMPONENTS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "SET_COMPONENTS", "field_49442", "SET_COMPONENTS", "f_316980_"), "Letg;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.function.LootFunctionTypes#SET_COMPONENTS
    [[maybe_unused]] static void set_field_SET_COMPONENTS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "SET_COMPONENTS", "field_49442", "SET_COMPONENTS", "f_316980_"), "Letg;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.function.LootFunctionTypes#FURNACE_SMELT
    [[maybe_unused]] static jobject get_field_FURNACE_SMELT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "FURNACE_SMELT", "field_25218", "FURNACE_SMELT", "f_80740_"), "Letg;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.function.LootFunctionTypes#FURNACE_SMELT
    [[maybe_unused]] static void set_field_FURNACE_SMELT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "FURNACE_SMELT", "field_25218", "FURNACE_SMELT", "f_80740_"), "Letg;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.function.LootFunctionTypes#ENCHANTED_COUNT_INCREASE
    [[maybe_unused]] static jobject get_field_ENCHANTED_COUNT_INCREASE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "ENCHANTED_COUNT_INCREASE", "field_51800", "ENCHANTED_COUNT_INCREASE", "f_337006_"), "Letg;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.function.LootFunctionTypes#ENCHANTED_COUNT_INCREASE
    [[maybe_unused]] static void set_field_ENCHANTED_COUNT_INCREASE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "ENCHANTED_COUNT_INCREASE", "field_51800", "ENCHANTED_COUNT_INCREASE", "f_337006_"), "Letg;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.function.LootFunctionTypes#SET_DAMAGE
    [[maybe_unused]] static jobject get_field_SET_DAMAGE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "SET_DAMAGE", "field_25220", "SET_DAMAGE", "f_80742_"), "Letg;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.function.LootFunctionTypes#SET_DAMAGE
    [[maybe_unused]] static void set_field_SET_DAMAGE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "SET_DAMAGE", "field_25220", "SET_DAMAGE", "f_80742_"), "Letg;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.function.LootFunctionTypes#SET_ATTRIBUTES
    [[maybe_unused]] static jobject get_field_SET_ATTRIBUTES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "SET_ATTRIBUTES", "field_25221", "SET_ATTRIBUTES", "f_80743_"), "Letg;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.function.LootFunctionTypes#SET_ATTRIBUTES
    [[maybe_unused]] static void set_field_SET_ATTRIBUTES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "SET_ATTRIBUTES", "field_25221", "SET_ATTRIBUTES", "f_80743_"), "Letg;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.function.LootFunctionTypes#SET_NAME
    [[maybe_unused]] static jobject get_field_SET_NAME() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "SET_NAME", "field_25222", "SET_NAME", "f_80744_"), "Letg;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.function.LootFunctionTypes#SET_NAME
    [[maybe_unused]] static void set_field_SET_NAME(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "SET_NAME", "field_25222", "SET_NAME", "f_80744_"), "Letg;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.function.LootFunctionTypes#EXPLORATION_MAP
    [[maybe_unused]] static jobject get_field_EXPLORATION_MAP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "EXPLORATION_MAP", "field_25223", "EXPLORATION_MAP", "f_80745_"), "Letg;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.function.LootFunctionTypes#EXPLORATION_MAP
    [[maybe_unused]] static void set_field_EXPLORATION_MAP(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "EXPLORATION_MAP", "field_25223", "EXPLORATION_MAP", "f_80745_"), "Letg;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.function.LootFunctionTypes#SET_STEW_EFFECT
    [[maybe_unused]] static jobject get_field_SET_STEW_EFFECT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "SET_STEW_EFFECT", "field_25224", "SET_STEW_EFFECT", "f_80746_"), "Letg;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.function.LootFunctionTypes#SET_STEW_EFFECT
    [[maybe_unused]] static void set_field_SET_STEW_EFFECT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "SET_STEW_EFFECT", "field_25224", "SET_STEW_EFFECT", "f_80746_"), "Letg;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.function.LootFunctionTypes#COPY_NAME
    [[maybe_unused]] static jobject get_field_COPY_NAME() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "COPY_NAME", "field_25225", "COPY_NAME", "f_80747_"), "Letg;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.function.LootFunctionTypes#COPY_NAME
    [[maybe_unused]] static void set_field_COPY_NAME(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "COPY_NAME", "field_25225", "COPY_NAME", "f_80747_"), "Letg;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.function.LootFunctionTypes#SET_CONTENTS
    [[maybe_unused]] static jobject get_field_SET_CONTENTS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "SET_CONTENTS", "field_25226", "SET_CONTENTS", "f_80748_"), "Letg;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.function.LootFunctionTypes#SET_CONTENTS
    [[maybe_unused]] static void set_field_SET_CONTENTS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "SET_CONTENTS", "field_25226", "SET_CONTENTS", "f_80748_"), "Letg;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.function.LootFunctionTypes#MODIFY_CONTENTS
    [[maybe_unused]] static jobject get_field_MODIFY_CONTENTS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "MODIFY_CONTENTS", "field_51427", "MODIFY_CONTENTS", "f_314745_"), "Letg;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.function.LootFunctionTypes#MODIFY_CONTENTS
    [[maybe_unused]] static void set_field_MODIFY_CONTENTS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "MODIFY_CONTENTS", "field_51427", "MODIFY_CONTENTS", "f_314745_"), "Letg;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.function.LootFunctionTypes#FILTERED
    [[maybe_unused]] static jobject get_field_FILTERED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "FILTERED", "field_51428", "FILTERED", "f_316507_"), "Letg;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.function.LootFunctionTypes#FILTERED
    [[maybe_unused]] static void set_field_FILTERED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "FILTERED", "field_51428", "FILTERED", "f_316507_"), "Letg;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.function.LootFunctionTypes#LIMIT_COUNT
    [[maybe_unused]] static jobject get_field_LIMIT_COUNT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "LIMIT_COUNT", "field_25227", "LIMIT_COUNT", "f_80749_"), "Letg;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.function.LootFunctionTypes#LIMIT_COUNT
    [[maybe_unused]] static void set_field_LIMIT_COUNT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "LIMIT_COUNT", "field_25227", "LIMIT_COUNT", "f_80749_"), "Letg;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.function.LootFunctionTypes#APPLY_BONUS
    [[maybe_unused]] static jobject get_field_APPLY_BONUS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "APPLY_BONUS", "field_25228", "APPLY_BONUS", "f_80750_"), "Letg;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.function.LootFunctionTypes#APPLY_BONUS
    [[maybe_unused]] static void set_field_APPLY_BONUS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "APPLY_BONUS", "field_25228", "APPLY_BONUS", "f_80750_"), "Letg;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.function.LootFunctionTypes#SET_LOOT_TABLE
    [[maybe_unused]] static jobject get_field_SET_LOOT_TABLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("y", "SET_LOOT_TABLE", "field_25229", "SET_LOOT_TABLE", "f_80751_"), "Letg;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.function.LootFunctionTypes#SET_LOOT_TABLE
    [[maybe_unused]] static void set_field_SET_LOOT_TABLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("y", "SET_LOOT_TABLE", "field_25229", "SET_LOOT_TABLE", "f_80751_"), "Letg;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.function.LootFunctionTypes#EXPLOSION_DECAY
    [[maybe_unused]] static jobject get_field_EXPLOSION_DECAY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("z", "EXPLOSION_DECAY", "field_25230", "EXPLOSION_DECAY", "f_80752_"), "Letg;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.function.LootFunctionTypes#EXPLOSION_DECAY
    [[maybe_unused]] static void set_field_EXPLOSION_DECAY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("z", "EXPLOSION_DECAY", "field_25230", "EXPLOSION_DECAY", "f_80752_"), "Letg;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.function.LootFunctionTypes#SET_LORE
    [[maybe_unused]] static jobject get_field_SET_LORE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("A", "SET_LORE", "field_25231", "SET_LORE", "f_80753_"), "Letg;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.function.LootFunctionTypes#SET_LORE
    [[maybe_unused]] static void set_field_SET_LORE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("A", "SET_LORE", "field_25231", "SET_LORE", "f_80753_"), "Letg;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.function.LootFunctionTypes#FILL_PLAYER_HEAD
    [[maybe_unused]] static jobject get_field_FILL_PLAYER_HEAD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("B", "FILL_PLAYER_HEAD", "field_25232", "FILL_PLAYER_HEAD", "f_80754_"), "Letg;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.function.LootFunctionTypes#FILL_PLAYER_HEAD
    [[maybe_unused]] static void set_field_FILL_PLAYER_HEAD(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("B", "FILL_PLAYER_HEAD", "field_25232", "FILL_PLAYER_HEAD", "f_80754_"), "Letg;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.function.LootFunctionTypes#COPY_CUSTOM_DATA
    [[maybe_unused]] static jobject get_field_COPY_CUSTOM_DATA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("C", "COPY_CUSTOM_DATA", "field_49443", "COPY_CUSTOM_DATA", "f_315380_"), "Letg;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.function.LootFunctionTypes#COPY_CUSTOM_DATA
    [[maybe_unused]] static void set_field_COPY_CUSTOM_DATA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("C", "COPY_CUSTOM_DATA", "field_49443", "COPY_CUSTOM_DATA", "f_315380_"), "Letg;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.function.LootFunctionTypes#COPY_STATE
    [[maybe_unused]] static jobject get_field_COPY_STATE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("D", "COPY_STATE", "field_25234", "COPY_STATE", "f_80756_"), "Letg;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.function.LootFunctionTypes#COPY_STATE
    [[maybe_unused]] static void set_field_COPY_STATE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("D", "COPY_STATE", "field_25234", "COPY_STATE", "f_80756_"), "Letg;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.function.LootFunctionTypes#SET_BANNER_PATTERN
    [[maybe_unused]] static jobject get_field_SET_BANNER_PATTERN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("E", "SET_BANNER_PATTERN", "field_27342", "SET_BANNER_PATTERN", "f_165222_"), "Letg;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.function.LootFunctionTypes#SET_BANNER_PATTERN
    [[maybe_unused]] static void set_field_SET_BANNER_PATTERN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("E", "SET_BANNER_PATTERN", "field_27342", "SET_BANNER_PATTERN", "f_165222_"), "Letg;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.function.LootFunctionTypes#SET_POTION
    [[maybe_unused]] static jobject get_field_SET_POTION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("F", "SET_POTION", "field_35079", "SET_POTION", "f_193030_"), "Letg;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.function.LootFunctionTypes#SET_POTION
    [[maybe_unused]] static void set_field_SET_POTION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("F", "SET_POTION", "field_35079", "SET_POTION", "f_193030_"), "Letg;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.function.LootFunctionTypes#SET_INSTRUMENT
    [[maybe_unused]] static jobject get_field_SET_INSTRUMENT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("G", "SET_INSTRUMENT", "field_39060", "SET_INSTRUMENT", "f_230994_"), "Letg;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.function.LootFunctionTypes#SET_INSTRUMENT
    [[maybe_unused]] static void set_field_SET_INSTRUMENT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("G", "SET_INSTRUMENT", "field_39060", "SET_INSTRUMENT", "f_230994_"), "Letg;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.function.LootFunctionTypes#REFERENCE
    [[maybe_unused]] static jobject get_field_REFERENCE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("H", "REFERENCE", "field_44508", "REFERENCE", "f_278442_"), "Letg;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.function.LootFunctionTypes#REFERENCE
    [[maybe_unused]] static void set_field_REFERENCE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("H", "REFERENCE", "field_44508", "REFERENCE", "f_278442_"), "Letg;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.function.LootFunctionTypes#SEQUENCE
    [[maybe_unused]] static jobject get_field_SEQUENCE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("I", "SEQUENCE", "field_45830", "SEQUENCE", "f_290647_"), "Letg;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.function.LootFunctionTypes#SEQUENCE
    [[maybe_unused]] static void set_field_SEQUENCE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("I", "SEQUENCE", "field_45830", "SEQUENCE", "f_290647_"), "Letg;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.function.LootFunctionTypes#COPY_COMPONENTS
    [[maybe_unused]] static jobject get_field_COPY_COMPONENTS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("J", "COPY_COMPONENTS", "field_49440", "COPY_COMPONENTS", "f_315087_"), "Letg;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.function.LootFunctionTypes#COPY_COMPONENTS
    [[maybe_unused]] static void set_field_COPY_COMPONENTS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("J", "COPY_COMPONENTS", "field_49440", "COPY_COMPONENTS", "f_315087_"), "Letg;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.function.LootFunctionTypes#SET_FIREWORKS
    [[maybe_unused]] static jobject get_field_SET_FIREWORKS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("K", "SET_FIREWORKS", "field_49865", "SET_FIREWORKS", "f_315674_"), "Letg;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.function.LootFunctionTypes#SET_FIREWORKS
    [[maybe_unused]] static void set_field_SET_FIREWORKS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("K", "SET_FIREWORKS", "field_49865", "SET_FIREWORKS", "f_315674_"), "Letg;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.function.LootFunctionTypes#SET_FIREWORK_EXPLOSION
    [[maybe_unused]] static jobject get_field_SET_FIREWORK_EXPLOSION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("L", "SET_FIREWORK_EXPLOSION", "field_49866", "SET_FIREWORK_EXPLOSION", "f_314869_"), "Letg;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.function.LootFunctionTypes#SET_FIREWORK_EXPLOSION
    [[maybe_unused]] static void set_field_SET_FIREWORK_EXPLOSION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("L", "SET_FIREWORK_EXPLOSION", "field_49866", "SET_FIREWORK_EXPLOSION", "f_314869_"), "Letg;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.function.LootFunctionTypes#SET_BOOK_COVER
    [[maybe_unused]] static jobject get_field_SET_BOOK_COVER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("M", "SET_BOOK_COVER", "field_49867", "SET_BOOK_COVER", "f_315027_"), "Letg;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.function.LootFunctionTypes#SET_BOOK_COVER
    [[maybe_unused]] static void set_field_SET_BOOK_COVER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("M", "SET_BOOK_COVER", "field_49867", "SET_BOOK_COVER", "f_315027_"), "Letg;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.function.LootFunctionTypes#SET_WRITTEN_BOOK_PAGES
    [[maybe_unused]] static jobject get_field_SET_WRITTEN_BOOK_PAGES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("N", "SET_WRITTEN_BOOK_PAGES", "field_49868", "SET_WRITTEN_BOOK_PAGES", "f_316039_"), "Letg;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.function.LootFunctionTypes#SET_WRITTEN_BOOK_PAGES
    [[maybe_unused]] static void set_field_SET_WRITTEN_BOOK_PAGES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("N", "SET_WRITTEN_BOOK_PAGES", "field_49868", "SET_WRITTEN_BOOK_PAGES", "f_316039_"), "Letg;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.function.LootFunctionTypes#SET_WRITABLE_BOOK_PAGES
    [[maybe_unused]] static jobject get_field_SET_WRITABLE_BOOK_PAGES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("O", "SET_WRITABLE_BOOK_PAGES", "field_49869", "SET_WRITABLE_BOOK_PAGES", "f_315246_"), "Letg;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.function.LootFunctionTypes#SET_WRITABLE_BOOK_PAGES
    [[maybe_unused]] static void set_field_SET_WRITABLE_BOOK_PAGES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("O", "SET_WRITABLE_BOOK_PAGES", "field_49869", "SET_WRITABLE_BOOK_PAGES", "f_315246_"), "Letg;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.function.LootFunctionTypes#TOGGLE_TOOLTIPS
    [[maybe_unused]] static jobject get_field_TOGGLE_TOOLTIPS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("P", "TOGGLE_TOOLTIPS", "field_50022", "TOGGLE_TOOLTIPS", "f_316954_"), "Letg;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.function.LootFunctionTypes#TOGGLE_TOOLTIPS
    [[maybe_unused]] static void set_field_TOGGLE_TOOLTIPS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("P", "TOGGLE_TOOLTIPS", "field_50022", "TOGGLE_TOOLTIPS", "f_316954_"), "Letg;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.function.LootFunctionTypes#SET_OMINOUS_BOTTLE_AMPLIFIER
    [[maybe_unused]] static jobject get_field_SET_OMINOUS_BOTTLE_AMPLIFIER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Q", "SET_OMINOUS_BOTTLE_AMPLIFIER", "field_50207", "SET_OMINOUS_BOTTLE_AMPLIFIER", "f_316756_"), "Letg;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.function.LootFunctionTypes#SET_OMINOUS_BOTTLE_AMPLIFIER
    [[maybe_unused]] static void set_field_SET_OMINOUS_BOTTLE_AMPLIFIER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Q", "SET_OMINOUS_BOTTLE_AMPLIFIER", "field_50207", "SET_OMINOUS_BOTTLE_AMPLIFIER", "f_316756_"), "Letg;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.function.LootFunctionTypes#SET_CUSTOM_MODEL_DATA
    [[maybe_unused]] static jobject get_field_SET_CUSTOM_MODEL_DATA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("R", "SET_CUSTOM_MODEL_DATA", "field_51425", "SET_CUSTOM_MODEL_DATA", "f_316565_"), "Letg;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.function.LootFunctionTypes#SET_CUSTOM_MODEL_DATA
    [[maybe_unused]] static void set_field_SET_CUSTOM_MODEL_DATA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("R", "SET_CUSTOM_MODEL_DATA", "field_51425", "SET_CUSTOM_MODEL_DATA", "f_316565_"), "Letg;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_register() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "register", "method_29323", "register", "m_80762_"), "(Ljava/lang/String;Lcom/mojang/serialization/MapCodec;)Letg;");
    }

    static jobject register(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_register();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_join() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "compose", "method_594", "join", "m_80770_"), "(Ljava/util/List;)Ljava/util/function/BiFunction;");
    }

    static jobject join(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_join();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_LOOT_FUNCTION_LOOTFUNCTIONTYPES_HPP