// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_LOOT_FUNCTION_EXPLORATIONMAPLOOTFUNCTION_HPP
#define NET_MINECRAFT_LOOT_FUNCTION_EXPLORATIONMAPLOOTFUNCTION_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.loot.function.ExplorationMapLootFunction
 * Remapped: esx
 */
namespace ExplorationMapLootFunction {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("esx", "net/minecraft/world/level/storage/loot/functions/ExplorationMapFunction", "net/minecraft/class_111", "net/minecraft/loot/function/ExplorationMapLootFunction", "net/minecraft/src/C_2914_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.loot.function.ExplorationMapLootFunction#DEFAULT_DESTINATION
    [[maybe_unused]] static jobject get_field_DEFAULT_DESTINATION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "DEFAULT_DESTINATION", "field_25032", "DEFAULT_DESTINATION", "f_230983_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.function.ExplorationMapLootFunction#DEFAULT_DESTINATION
    [[maybe_unused]] static void set_field_DEFAULT_DESTINATION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "DEFAULT_DESTINATION", "field_25032", "DEFAULT_DESTINATION", "f_230983_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.function.ExplorationMapLootFunction#DEFAULT_DECORATION
    [[maybe_unused]] static jobject get_field_DEFAULT_DECORATION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "DEFAULT_DECORATION", "field_1034", "DEFAULT_DECORATION", "f_80522_"), "Ljm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.function.ExplorationMapLootFunction#DEFAULT_DECORATION
    [[maybe_unused]] static void set_field_DEFAULT_DECORATION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "DEFAULT_DECORATION", "field_1034", "DEFAULT_DECORATION", "f_80522_"), "Ljm;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.function.ExplorationMapLootFunction#DEFAULT_ZOOM
    [[maybe_unused]] static jbyte get_field_DEFAULT_ZOOM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "DEFAULT_ZOOM", "field_31851", "DEFAULT_ZOOM", "f_165202_"), "B");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticByteField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.function.ExplorationMapLootFunction#DEFAULT_ZOOM
    [[maybe_unused]] static void set_field_DEFAULT_ZOOM(const jbyte &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "DEFAULT_ZOOM", "field_31851", "DEFAULT_ZOOM", "f_165202_"), "B");
        return MinecraftSDK::env->SetStaticByteField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.function.ExplorationMapLootFunction#DEFAULT_SEARCH_RADIUS
    [[maybe_unused]] static jint get_field_DEFAULT_SEARCH_RADIUS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "DEFAULT_SEARCH_RADIUS", "field_31852", "DEFAULT_SEARCH_RADIUS", "f_165203_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.function.ExplorationMapLootFunction#DEFAULT_SEARCH_RADIUS
    [[maybe_unused]] static void set_field_DEFAULT_SEARCH_RADIUS(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "DEFAULT_SEARCH_RADIUS", "field_31852", "DEFAULT_SEARCH_RADIUS", "f_165203_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.function.ExplorationMapLootFunction#DEFAULT_SKIP_EXISTING_CHUNKS
    [[maybe_unused]] static jboolean get_field_DEFAULT_SKIP_EXISTING_CHUNKS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "DEFAULT_SKIP_EXISTING", "field_31853", "DEFAULT_SKIP_EXISTING_CHUNKS", "f_165204_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.function.ExplorationMapLootFunction#DEFAULT_SKIP_EXISTING_CHUNKS
    [[maybe_unused]] static void set_field_DEFAULT_SKIP_EXISTING_CHUNKS(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "DEFAULT_SKIP_EXISTING", "field_31853", "DEFAULT_SKIP_EXISTING_CHUNKS", "f_165204_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.loot.function.ExplorationMapLootFunction#CODEC
    [[maybe_unused]] static jobject get_field_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "CODEC", "field_45826", "CODEC", "f_291406_"), "Lcom/mojang/serialization/MapCodec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.loot.function.ExplorationMapLootFunction#CODEC
    [[maybe_unused]] static void set_field_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "CODEC", "field_45826", "CODEC", "f_291406_"), "Lcom/mojang/serialization/MapCodec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.loot.function.ExplorationMapLootFunction#destination
    static jobject get_field_destination(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "destination", "field_1035", "destination", "f_80524_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.loot.function.ExplorationMapLootFunction#destination
    static void set_field_destination(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "destination", "field_1035", "destination", "f_80524_"), "Lawu;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.loot.function.ExplorationMapLootFunction#decoration
    static jobject get_field_decoration(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "mapDecoration", "field_1036", "decoration", "f_80525_"), "Ljm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.loot.function.ExplorationMapLootFunction#decoration
    static void set_field_decoration(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "mapDecoration", "field_1036", "decoration", "f_80525_"), "Ljm;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.loot.function.ExplorationMapLootFunction#zoom
    static jbyte get_field_zoom(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "zoom", "field_1037", "zoom", "f_80526_"), "B");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetByteField(obj, fieldID);
    };

    // setter for static private field net.minecraft.loot.function.ExplorationMapLootFunction#zoom
    static void set_field_zoom(const jobject &obj, const jbyte &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "zoom", "field_1037", "zoom", "f_80526_"), "B");
        return MinecraftSDK::env->SetByteField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.loot.function.ExplorationMapLootFunction#searchRadius
    static jint get_field_searchRadius(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "searchRadius", "field_1032", "searchRadius", "f_80527_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.loot.function.ExplorationMapLootFunction#searchRadius
    static void set_field_searchRadius(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "searchRadius", "field_1032", "searchRadius", "f_80527_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.loot.function.ExplorationMapLootFunction#skipExistingChunks
    static jboolean get_field_skipExistingChunks(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "skipKnownStructures", "field_1033", "skipExistingChunks", "f_80528_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.loot.function.ExplorationMapLootFunction#skipExistingChunks
    static void set_field_skipExistingChunks(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "skipKnownStructures", "field_1033", "skipExistingChunks", "f_80528_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    static jmethodID methodID_getType() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getType", "method_29321", "getType", "m_7162_"), "()Letg;");
    }

    static jobject getType(const jobject& obj) {
                
       const auto methodID = methodID_getType();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getRequiredParameters() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getReferencedContextParams", "method_293", "getRequiredParameters", "m_6231_"), "()Ljava/util/Set;");
    }

    static jobject getRequiredParameters(const jobject& obj) {
                
       const auto methodID = methodID_getRequiredParameters();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_process() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "run", "method_522", "process", "m_7372_"), "(Lcuq;Lerr;)Lcuq;");
    }

    static jobject process(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_process();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_builder() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "makeExplorationMap", "method_492", "builder", "m_80554_"), "()Lesx$a;");
    }

    static jobject builder() {
       const auto clazz = self();
       const auto methodID = methodID_builder();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
};

#endif // NET_MINECRAFT_LOOT_FUNCTION_EXPLORATIONMAPLOOTFUNCTION_HPP