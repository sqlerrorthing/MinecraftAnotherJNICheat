// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_LOOT_FUNCTION_ENCHANTEDCOUNTINCREASELOOTFUNCTION$BUILDER_HPP
#define NET_MINECRAFT_LOOT_FUNCTION_ENCHANTEDCOUNTINCREASELOOTFUNCTION$BUILDER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.loot.function.EnchantedCountIncreaseLootFunction$Builder
 * Remapped: esw$a
 */
namespace EnchantedCountIncreaseLootFunction$Builder {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("esw$a", "net/minecraft/world/level/storage/loot/functions/EnchantedCountIncreaseFunction$Builder", "net/minecraft/class_125$class_126", "net/minecraft/loot/function/EnchantedCountIncreaseLootFunction$Builder", "net/minecraft/src/C_336510_$C_336513_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.loot.function.EnchantedCountIncreaseLootFunction$Builder#enchantment
    static jobject get_field_enchantment(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "enchantment", "field_51799", "enchantment", "f_337214_"), "Ljm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.loot.function.EnchantedCountIncreaseLootFunction$Builder#enchantment
    static void set_field_enchantment(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "enchantment", "field_51799", "enchantment", "f_337214_"), "Ljm;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.loot.function.EnchantedCountIncreaseLootFunction$Builder#count
    static jobject get_field_count(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "count", "field_1084", "count", "f_337278_"), "Levy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.loot.function.EnchantedCountIncreaseLootFunction$Builder#count
    static void set_field_count(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "count", "field_1084", "count", "f_337278_"), "Levy;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.loot.function.EnchantedCountIncreaseLootFunction$Builder#limit
    static jint get_field_limit(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "limit", "field_1085", "limit", "f_337494_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.loot.function.EnchantedCountIncreaseLootFunction$Builder#limit
    static void set_field_limit(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "limit", "field_1085", "limit", "f_337494_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    static jmethodID methodID_getThisBuilder() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getThis", "method_552", "getThisBuilder", "m_6477_"), "()Lesw$a;");
    }

    static jobject getThisBuilder(const jobject& obj) {
                
       const auto methodID = methodID_getThisBuilder();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_withLimit() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setLimit", "method_551", "withLimit", "m_340307_"), "(I)Lesw$a;");
    }

    static jobject withLimit(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_withLimit();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_build() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "build", "method_515", "build", "m_7453_"), "()Letf;");
    }

    static jobject build(const jobject& obj) {
                
       const auto methodID = methodID_build();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_LOOT_FUNCTION_ENCHANTEDCOUNTINCREASELOOTFUNCTION$BUILDER_HPP