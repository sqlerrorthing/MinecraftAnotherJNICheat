// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ENTITY_DATA_DATATRACKER$ENTRY_HPP
#define NET_MINECRAFT_ENTITY_DATA_DATATRACKER$ENTRY_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.entity.data.DataTracker$Entry
 * Remapped: aka$b
 */
namespace DataTracker$Entry {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("aka$b", "net/minecraft/network/syncher/SynchedEntityData$DataItem", "net/minecraft/class_2945$class_2946", "net/minecraft/entity/data/DataTracker$Entry", "net/minecraft/src/C_5247_$C_5248_"));
        }
        return cachedClass;
    };

    // getter for default field net.minecraft.entity.data.DataTracker$Entry#data
    static jobject get_field_data(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "accessor", "field_13337", "data", "f_135390_"), "Lajw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.entity.data.DataTracker$Entry#data
    static void set_field_data(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "accessor", "field_13337", "data", "f_135390_"), "Lajw;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.entity.data.DataTracker$Entry#value
    static jobject get_field_value(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "value", "field_13338", "value", "f_135391_"), "Ljava/lang/Object;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.entity.data.DataTracker$Entry#value
    static void set_field_value(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "value", "field_13338", "value", "f_135391_"), "Ljava/lang/Object;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.data.DataTracker$Entry#initialValue
    static jobject get_field_initialValue(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "initialValue", "field_40719", "initialValue", "f_252454_"), "Ljava/lang/Object;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.data.DataTracker$Entry#initialValue
    static void set_field_initialValue(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "initialValue", "field_40719", "initialValue", "f_252454_"), "Ljava/lang/Object;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.data.DataTracker$Entry#dirty
    static jboolean get_field_dirty(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "dirty", "field_13336", "dirty", "f_135392_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.data.DataTracker$Entry#dirty
    static void set_field_dirty(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "dirty", "field_13336", "dirty", "f_135392_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    static jmethodID methodID_getData() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getAccessor", "method_12797", "getData", "m_135396_"), "()Lajw;");
    }

    static jobject getData(const jobject& obj) {
                
       const auto methodID = methodID_getData();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_set() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setValue", "method_12799", "set", "m_135397_"), "(Ljava/lang/Object;)V");
    }

    static void set(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_set();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_get() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getValue", "method_12794", "get", "m_135403_"), "()Ljava/lang/Object;");
    }

    static jobject get(const jobject& obj) {
                
       const auto methodID = methodID_get();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_isDirty() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "isDirty", "method_12796", "isDirty", "m_135406_"), "()Z");
    }

    static jboolean isDirty(const jobject& obj) {
                
       const auto methodID = methodID_isDirty();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_setDirty() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setDirty", "method_12795", "setDirty", "m_135401_"), "(Z)V");
    }

    static void setDirty(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setDirty();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isUnchanged() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "isSetToDefault", "method_46358", "isUnchanged", "m_252838_"), "()Z");
    }

    static jboolean isUnchanged(const jobject& obj) {
                
       const auto methodID = methodID_isUnchanged();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_toSerialized() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "value", "method_46359", "toSerialized", "m_253123_"), "()Laka$c;");
    }

    static jobject toSerialized(const jobject& obj) {
                
       const auto methodID = methodID_toSerialized();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_ENTITY_DATA_DATATRACKER$ENTRY_HPP