// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ENTITY_DATA_TRACKEDDATAHANDLERREGISTRY_HPP
#define NET_MINECRAFT_ENTITY_DATA_TRACKEDDATAHANDLERREGISTRY_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.entity.data.TrackedDataHandlerRegistry
 * Remapped: ajy
 */
namespace TrackedDataHandlerRegistry {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("ajy", "net/minecraft/network/syncher/EntityDataSerializers", "net/minecraft/class_2943", "net/minecraft/entity/data/TrackedDataHandlerRegistry", "net/minecraft/src/C_5227_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.entity.data.TrackedDataHandlerRegistry#DATA_HANDLERS
    [[maybe_unused]] static jobject get_field_DATA_HANDLERS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("F", "SERIALIZERS", "field_13328", "DATA_HANDLERS", "f_135046_"), "Laxk;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.data.TrackedDataHandlerRegistry#DATA_HANDLERS
    [[maybe_unused]] static void set_field_DATA_HANDLERS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("F", "SERIALIZERS", "field_13328", "DATA_HANDLERS", "f_135046_"), "Laxk;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.data.TrackedDataHandlerRegistry#BYTE
    [[maybe_unused]] static jobject get_field_BYTE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "BYTE", "field_13319", "BYTE", "f_135027_"), "Lajx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.data.TrackedDataHandlerRegistry#BYTE
    [[maybe_unused]] static void set_field_BYTE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "BYTE", "field_13319", "BYTE", "f_135027_"), "Lajx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.data.TrackedDataHandlerRegistry#INTEGER
    [[maybe_unused]] static jobject get_field_INTEGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "INT", "field_13327", "INTEGER", "f_135028_"), "Lajx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.data.TrackedDataHandlerRegistry#INTEGER
    [[maybe_unused]] static void set_field_INTEGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "INT", "field_13327", "INTEGER", "f_135028_"), "Lajx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.data.TrackedDataHandlerRegistry#LONG
    [[maybe_unused]] static jobject get_field_LONG() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "LONG", "field_39965", "LONG", "f_244073_"), "Lajx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.data.TrackedDataHandlerRegistry#LONG
    [[maybe_unused]] static void set_field_LONG(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "LONG", "field_39965", "LONG", "f_244073_"), "Lajx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.data.TrackedDataHandlerRegistry#FLOAT
    [[maybe_unused]] static jobject get_field_FLOAT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "FLOAT", "field_13320", "FLOAT", "f_135029_"), "Lajx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.data.TrackedDataHandlerRegistry#FLOAT
    [[maybe_unused]] static void set_field_FLOAT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "FLOAT", "field_13320", "FLOAT", "f_135029_"), "Lajx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.data.TrackedDataHandlerRegistry#STRING
    [[maybe_unused]] static jobject get_field_STRING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "STRING", "field_13326", "STRING", "f_135030_"), "Lajx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.data.TrackedDataHandlerRegistry#STRING
    [[maybe_unused]] static void set_field_STRING(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "STRING", "field_13326", "STRING", "f_135030_"), "Lajx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.data.TrackedDataHandlerRegistry#TEXT_COMPONENT
    [[maybe_unused]] static jobject get_field_TEXT_COMPONENT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "COMPONENT", "field_13317", "TEXT_COMPONENT", "f_135031_"), "Lajx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.data.TrackedDataHandlerRegistry#TEXT_COMPONENT
    [[maybe_unused]] static void set_field_TEXT_COMPONENT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "COMPONENT", "field_13317", "TEXT_COMPONENT", "f_135031_"), "Lajx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.data.TrackedDataHandlerRegistry#OPTIONAL_TEXT_COMPONENT
    [[maybe_unused]] static jobject get_field_OPTIONAL_TEXT_COMPONENT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "OPTIONAL_COMPONENT", "field_13325", "OPTIONAL_TEXT_COMPONENT", "f_135032_"), "Lajx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.data.TrackedDataHandlerRegistry#OPTIONAL_TEXT_COMPONENT
    [[maybe_unused]] static void set_field_OPTIONAL_TEXT_COMPONENT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "OPTIONAL_COMPONENT", "field_13325", "OPTIONAL_TEXT_COMPONENT", "f_135032_"), "Lajx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.data.TrackedDataHandlerRegistry#ITEM_STACK
    [[maybe_unused]] static jobject get_field_ITEM_STACK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "ITEM_STACK", "field_13322", "ITEM_STACK", "f_135033_"), "Lajx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.data.TrackedDataHandlerRegistry#ITEM_STACK
    [[maybe_unused]] static void set_field_ITEM_STACK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "ITEM_STACK", "field_13322", "ITEM_STACK", "f_135033_"), "Lajx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.data.TrackedDataHandlerRegistry#BLOCK_STATE
    [[maybe_unused]] static jobject get_field_BLOCK_STATE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "BLOCK_STATE", "field_13312", "BLOCK_STATE", "f_135034_"), "Lajx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.data.TrackedDataHandlerRegistry#BLOCK_STATE
    [[maybe_unused]] static void set_field_BLOCK_STATE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "BLOCK_STATE", "field_13312", "BLOCK_STATE", "f_135034_"), "Lajx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.data.TrackedDataHandlerRegistry#OPTIONAL_BLOCK_STATE_CODEC
    [[maybe_unused]] static jobject get_field_OPTIONAL_BLOCK_STATE_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("G", "OPTIONAL_BLOCK_STATE_CODEC", "field_48265", "OPTIONAL_BLOCK_STATE_CODEC", "f_316598_"), "Lyx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.data.TrackedDataHandlerRegistry#OPTIONAL_BLOCK_STATE_CODEC
    [[maybe_unused]] static void set_field_OPTIONAL_BLOCK_STATE_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("G", "OPTIONAL_BLOCK_STATE_CODEC", "field_48265", "OPTIONAL_BLOCK_STATE_CODEC", "f_316598_"), "Lyx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.data.TrackedDataHandlerRegistry#OPTIONAL_BLOCK_STATE
    [[maybe_unused]] static jobject get_field_OPTIONAL_BLOCK_STATE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "OPTIONAL_BLOCK_STATE", "field_42236", "OPTIONAL_BLOCK_STATE", "f_268618_"), "Lajx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.data.TrackedDataHandlerRegistry#OPTIONAL_BLOCK_STATE
    [[maybe_unused]] static void set_field_OPTIONAL_BLOCK_STATE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "OPTIONAL_BLOCK_STATE", "field_42236", "OPTIONAL_BLOCK_STATE", "f_268618_"), "Lajx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.data.TrackedDataHandlerRegistry#BOOLEAN
    [[maybe_unused]] static jobject get_field_BOOLEAN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "BOOLEAN", "field_13323", "BOOLEAN", "f_135035_"), "Lajx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.data.TrackedDataHandlerRegistry#BOOLEAN
    [[maybe_unused]] static void set_field_BOOLEAN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "BOOLEAN", "field_13323", "BOOLEAN", "f_135035_"), "Lajx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.data.TrackedDataHandlerRegistry#PARTICLE
    [[maybe_unused]] static jobject get_field_PARTICLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "PARTICLE", "field_13314", "PARTICLE", "f_135036_"), "Lajx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.data.TrackedDataHandlerRegistry#PARTICLE
    [[maybe_unused]] static void set_field_PARTICLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "PARTICLE", "field_13314", "PARTICLE", "f_135036_"), "Lajx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.data.TrackedDataHandlerRegistry#PARTICLE_LIST
    [[maybe_unused]] static jobject get_field_PARTICLE_LIST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "PARTICLES", "field_49774", "PARTICLE_LIST", "f_315472_"), "Lajx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.data.TrackedDataHandlerRegistry#PARTICLE_LIST
    [[maybe_unused]] static void set_field_PARTICLE_LIST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "PARTICLES", "field_49774", "PARTICLE_LIST", "f_315472_"), "Lajx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.data.TrackedDataHandlerRegistry#ROTATION
    [[maybe_unused]] static jobject get_field_ROTATION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "ROTATIONS", "field_13316", "ROTATION", "f_135037_"), "Lajx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.data.TrackedDataHandlerRegistry#ROTATION
    [[maybe_unused]] static void set_field_ROTATION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "ROTATIONS", "field_13316", "ROTATION", "f_135037_"), "Lajx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.data.TrackedDataHandlerRegistry#BLOCK_POS
    [[maybe_unused]] static jobject get_field_BLOCK_POS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "BLOCK_POS", "field_13324", "BLOCK_POS", "f_135038_"), "Lajx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.data.TrackedDataHandlerRegistry#BLOCK_POS
    [[maybe_unused]] static void set_field_BLOCK_POS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "BLOCK_POS", "field_13324", "BLOCK_POS", "f_135038_"), "Lajx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.data.TrackedDataHandlerRegistry#OPTIONAL_BLOCK_POS
    [[maybe_unused]] static jobject get_field_OPTIONAL_BLOCK_POS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "OPTIONAL_BLOCK_POS", "field_13315", "OPTIONAL_BLOCK_POS", "f_135039_"), "Lajx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.data.TrackedDataHandlerRegistry#OPTIONAL_BLOCK_POS
    [[maybe_unused]] static void set_field_OPTIONAL_BLOCK_POS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "OPTIONAL_BLOCK_POS", "field_13315", "OPTIONAL_BLOCK_POS", "f_135039_"), "Lajx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.data.TrackedDataHandlerRegistry#FACING
    [[maybe_unused]] static jobject get_field_FACING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "DIRECTION", "field_13321", "FACING", "f_135040_"), "Lajx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.data.TrackedDataHandlerRegistry#FACING
    [[maybe_unused]] static void set_field_FACING(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "DIRECTION", "field_13321", "FACING", "f_135040_"), "Lajx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.data.TrackedDataHandlerRegistry#OPTIONAL_UUID
    [[maybe_unused]] static jobject get_field_OPTIONAL_UUID() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "OPTIONAL_UUID", "field_13313", "OPTIONAL_UUID", "f_135041_"), "Lajx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.data.TrackedDataHandlerRegistry#OPTIONAL_UUID
    [[maybe_unused]] static void set_field_OPTIONAL_UUID(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "OPTIONAL_UUID", "field_13313", "OPTIONAL_UUID", "f_135041_"), "Lajx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.data.TrackedDataHandlerRegistry#OPTIONAL_GLOBAL_POS
    [[maybe_unused]] static jobject get_field_OPTIONAL_GLOBAL_POS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "OPTIONAL_GLOBAL_POS", "field_38825", "OPTIONAL_GLOBAL_POS", "f_238113_"), "Lajx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.data.TrackedDataHandlerRegistry#OPTIONAL_GLOBAL_POS
    [[maybe_unused]] static void set_field_OPTIONAL_GLOBAL_POS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "OPTIONAL_GLOBAL_POS", "field_38825", "OPTIONAL_GLOBAL_POS", "f_238113_"), "Lajx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.data.TrackedDataHandlerRegistry#NBT_COMPOUND
    [[maybe_unused]] static jobject get_field_NBT_COMPOUND() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "COMPOUND_TAG", "field_13318", "NBT_COMPOUND", "f_135042_"), "Lajx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.data.TrackedDataHandlerRegistry#NBT_COMPOUND
    [[maybe_unused]] static void set_field_NBT_COMPOUND(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "COMPOUND_TAG", "field_13318", "NBT_COMPOUND", "f_135042_"), "Lajx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.data.TrackedDataHandlerRegistry#VILLAGER_DATA
    [[maybe_unused]] static jobject get_field_VILLAGER_DATA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "VILLAGER_DATA", "field_17207", "VILLAGER_DATA", "f_135043_"), "Lajx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.data.TrackedDataHandlerRegistry#VILLAGER_DATA
    [[maybe_unused]] static void set_field_VILLAGER_DATA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "VILLAGER_DATA", "field_17207", "VILLAGER_DATA", "f_135043_"), "Lajx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.data.TrackedDataHandlerRegistry#OPTIONAL_INT_CODEC
    [[maybe_unused]] static jobject get_field_OPTIONAL_INT_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("H", "OPTIONAL_UNSIGNED_INT_CODEC", "field_48266", "OPTIONAL_INT_CODEC", "f_316634_"), "Lyx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.data.TrackedDataHandlerRegistry#OPTIONAL_INT_CODEC
    [[maybe_unused]] static void set_field_OPTIONAL_INT_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("H", "OPTIONAL_UNSIGNED_INT_CODEC", "field_48266", "OPTIONAL_INT_CODEC", "f_316634_"), "Lyx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.data.TrackedDataHandlerRegistry#OPTIONAL_INT
    [[maybe_unused]] static jobject get_field_OPTIONAL_INT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "OPTIONAL_UNSIGNED_INT", "field_17910", "OPTIONAL_INT", "f_135044_"), "Lajx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.data.TrackedDataHandlerRegistry#OPTIONAL_INT
    [[maybe_unused]] static void set_field_OPTIONAL_INT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "OPTIONAL_UNSIGNED_INT", "field_17910", "OPTIONAL_INT", "f_135044_"), "Lajx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.data.TrackedDataHandlerRegistry#ENTITY_POSE
    [[maybe_unused]] static jobject get_field_ENTITY_POSE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "POSE", "field_18238", "ENTITY_POSE", "f_135045_"), "Lajx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.data.TrackedDataHandlerRegistry#ENTITY_POSE
    [[maybe_unused]] static void set_field_ENTITY_POSE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "POSE", "field_18238", "ENTITY_POSE", "f_135045_"), "Lajx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.data.TrackedDataHandlerRegistry#CAT_VARIANT
    [[maybe_unused]] static jobject get_field_CAT_VARIANT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "CAT_VARIANT", "field_38826", "CAT_VARIANT", "f_238114_"), "Lajx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.data.TrackedDataHandlerRegistry#CAT_VARIANT
    [[maybe_unused]] static void set_field_CAT_VARIANT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "CAT_VARIANT", "field_38826", "CAT_VARIANT", "f_238114_"), "Lajx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.data.TrackedDataHandlerRegistry#WOLF_VARIANT
    [[maybe_unused]] static jobject get_field_WOLF_VARIANT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("y", "WOLF_VARIANT", "field_49713", "WOLF_VARIANT", "f_314299_"), "Lajx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.data.TrackedDataHandlerRegistry#WOLF_VARIANT
    [[maybe_unused]] static void set_field_WOLF_VARIANT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("y", "WOLF_VARIANT", "field_49713", "WOLF_VARIANT", "f_314299_"), "Lajx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.data.TrackedDataHandlerRegistry#FROG_VARIANT
    [[maybe_unused]] static jobject get_field_FROG_VARIANT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("z", "FROG_VARIANT", "field_38827", "FROG_VARIANT", "f_238115_"), "Lajx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.data.TrackedDataHandlerRegistry#FROG_VARIANT
    [[maybe_unused]] static void set_field_FROG_VARIANT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("z", "FROG_VARIANT", "field_38827", "FROG_VARIANT", "f_238115_"), "Lajx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.data.TrackedDataHandlerRegistry#PAINTING_VARIANT
    [[maybe_unused]] static jobject get_field_PAINTING_VARIANT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("A", "PAINTING_VARIANT", "field_39017", "PAINTING_VARIANT", "f_238116_"), "Lajx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.data.TrackedDataHandlerRegistry#PAINTING_VARIANT
    [[maybe_unused]] static void set_field_PAINTING_VARIANT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("A", "PAINTING_VARIANT", "field_39017", "PAINTING_VARIANT", "f_238116_"), "Lajx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.data.TrackedDataHandlerRegistry#ARMADILLO_STATE
    [[maybe_unused]] static jobject get_field_ARMADILLO_STATE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("B", "ARMADILLO_STATE", "field_47707", "ARMADILLO_STATE", "f_315197_"), "Lajx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.data.TrackedDataHandlerRegistry#ARMADILLO_STATE
    [[maybe_unused]] static void set_field_ARMADILLO_STATE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("B", "ARMADILLO_STATE", "field_47707", "ARMADILLO_STATE", "f_315197_"), "Lajx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.data.TrackedDataHandlerRegistry#SNIFFER_STATE
    [[maybe_unused]] static jobject get_field_SNIFFER_STATE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("C", "SNIFFER_STATE", "field_42543", "SNIFFER_STATE", "f_271344_"), "Lajx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.data.TrackedDataHandlerRegistry#SNIFFER_STATE
    [[maybe_unused]] static void set_field_SNIFFER_STATE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("C", "SNIFFER_STATE", "field_42543", "SNIFFER_STATE", "f_271344_"), "Lajx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.data.TrackedDataHandlerRegistry#VECTOR3F
    [[maybe_unused]] static jobject get_field_VECTOR3F() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("D", "VECTOR3", "field_42237", "VECTOR3F", "f_268676_"), "Lajx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.data.TrackedDataHandlerRegistry#VECTOR3F
    [[maybe_unused]] static void set_field_VECTOR3F(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("D", "VECTOR3", "field_42237", "VECTOR3F", "f_268676_"), "Lajx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.data.TrackedDataHandlerRegistry#QUATERNIONF
    [[maybe_unused]] static jobject get_field_QUATERNIONF() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("E", "QUATERNION", "field_42235", "QUATERNIONF", "f_268624_"), "Lajx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.data.TrackedDataHandlerRegistry#QUATERNIONF
    [[maybe_unused]] static void set_field_QUATERNIONF(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("E", "QUATERNION", "field_42235", "QUATERNIONF", "f_268624_"), "Lajx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_register() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "registerSerializer", "method_12720", "register", "m_135050_"), "(Lajx;)V");
    }

    static void register(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_register();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_get() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getSerializer", "method_12721", "get", "m_135048_"), "(I)Lajx;");
    }

    static jobject get(const jint& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_get();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getId() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "getSerializedId", "method_12719", "getId", "m_135052_"), "(Lajx;)I");
    }

    static jint getId(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getId();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_ENTITY_DATA_TRACKEDDATAHANDLERREGISTRY_HPP