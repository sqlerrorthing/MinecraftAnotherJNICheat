// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ENTITY_VEHICLE_COMMANDBLOCKMINECARTENTITY_HPP
#define NET_MINECRAFT_ENTITY_VEHICLE_COMMANDBLOCKMINECARTENTITY_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.entity.vehicle.CommandBlockMinecartEntity
 * Remapped: cpb
 */
namespace CommandBlockMinecartEntity {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("cpb", "net/minecraft/world/entity/vehicle/MinecartCommandBlock", "net/minecraft/class_1697", "net/minecraft/entity/vehicle/CommandBlockMinecartEntity", "net/minecraft/src/C_1212_"));
        }
        return cachedClass;
    };

    // getter for static default field net.minecraft.entity.vehicle.CommandBlockMinecartEntity#COMMAND
    [[maybe_unused]] static jobject get_field_COMMAND() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "DATA_ID_COMMAND_NAME", "field_7743", "COMMAND", "f_38503_"), "Lajw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static default field net.minecraft.entity.vehicle.CommandBlockMinecartEntity#COMMAND
    [[maybe_unused]] static void set_field_COMMAND(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "DATA_ID_COMMAND_NAME", "field_7743", "COMMAND", "f_38503_"), "Lajw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static default field net.minecraft.entity.vehicle.CommandBlockMinecartEntity#LAST_OUTPUT
    [[maybe_unused]] static jobject get_field_LAST_OUTPUT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "DATA_ID_LAST_OUTPUT", "field_7741", "LAST_OUTPUT", "f_38504_"), "Lajw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static default field net.minecraft.entity.vehicle.CommandBlockMinecartEntity#LAST_OUTPUT
    [[maybe_unused]] static void set_field_LAST_OUTPUT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "DATA_ID_LAST_OUTPUT", "field_7741", "LAST_OUTPUT", "f_38504_"), "Lajw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.entity.vehicle.CommandBlockMinecartEntity#commandExecutor
    static jobject get_field_commandExecutor(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "commandBlock", "field_7744", "commandExecutor", "f_38505_"), "Ldbx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.vehicle.CommandBlockMinecartEntity#commandExecutor
    static void set_field_commandExecutor(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "commandBlock", "field_7744", "commandExecutor", "f_38505_"), "Ldbx;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.vehicle.CommandBlockMinecartEntity#EXECUTE_TICK_COOLDOWN
    [[maybe_unused]] static jint get_field_EXECUTE_TICK_COOLDOWN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "ACTIVATION_DELAY", "field_30701", "EXECUTE_TICK_COOLDOWN", "f_150284_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.vehicle.CommandBlockMinecartEntity#EXECUTE_TICK_COOLDOWN
    [[maybe_unused]] static void set_field_EXECUTE_TICK_COOLDOWN(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "ACTIVATION_DELAY", "field_30701", "EXECUTE_TICK_COOLDOWN", "f_150284_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.entity.vehicle.CommandBlockMinecartEntity#lastExecuted
    static jint get_field_lastExecuted(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "lastActivated", "field_7742", "lastExecuted", "f_38506_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.vehicle.CommandBlockMinecartEntity#lastExecuted
    static void set_field_lastExecuted(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "lastActivated", "field_7742", "lastExecuted", "f_38506_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    static jmethodID methodID_asItem() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ak_", "getDropItem", "method_7557", "asItem", "m_38369_"), "()Lcul;");
    }

    static jobject asItem(const jobject& obj) {
                
       const auto methodID = methodID_asItem();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_initDataTracker() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "defineSynchedData", "method_5693", "initDataTracker", "m_8097_"), "(Laka$a;)V");
    }

    static void initDataTracker(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_initDataTracker();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_readCustomDataFromNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "readAdditionalSaveData", "method_5749", "readCustomDataFromNbt", "m_7378_"), "(Lub;)V");
    }

    static void readCustomDataFromNbt(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_readCustomDataFromNbt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_writeCustomDataToNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "addAdditionalSaveData", "method_5652", "writeCustomDataToNbt", "m_7380_"), "(Lub;)V");
    }

    static void writeCustomDataToNbt(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_writeCustomDataToNbt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getMinecartType() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("v", "getMinecartType", "method_7518", "getMinecartType", "m_6064_"), "()Lcot$a;");
    }

    static jobject getMinecartType(const jobject& obj) {
                
       const auto methodID = methodID_getMinecartType();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getDefaultContainedBlock() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("x", "getDefaultDisplayBlockState", "method_7517", "getDefaultContainedBlock", "m_6390_"), "()Ldtc;");
    }

    static jobject getDefaultContainedBlock(const jobject& obj) {
                
       const auto methodID = methodID_getDefaultContainedBlock();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getCommandExecutor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("B", "getCommandBlock", "method_7567", "getCommandExecutor", "m_38534_"), "()Ldbx;");
    }

    static jobject getCommandExecutor(const jobject& obj) {
                
       const auto methodID = methodID_getCommandExecutor();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_onActivatorRail() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "activateMinecart", "method_7506", "onActivatorRail", "m_6025_"), "(IIIZ)V");
    }

    static void onActivatorRail(const jobject& obj, const jint& arg0, const jint& arg1, const jint& arg2, const jboolean& arg3) {
                
       const auto methodID = methodID_onActivatorRail();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_interact() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "interact", "method_5688", "interact", "m_6096_"), "(Lcmx;Lbqq;)Lbqr;");
    }

    static jobject interact(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_interact();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_onTrackedDataSet() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "onSyncedDataUpdated", "method_5674", "onTrackedDataSet", "m_7350_"), "(Lajw;)V");
    }

    static void onTrackedDataSet(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onTrackedDataSet();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_entityDataRequiresOperator() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("cP", "onlyOpCanSetNbt", "method_5833", "entityDataRequiresOperator", "m_6127_"), "()Z");
    }

    static jboolean entityDataRequiresOperator(const jobject& obj) {
                
       const auto methodID = methodID_entityDataRequiresOperator();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_ENTITY_VEHICLE_COMMANDBLOCKMINECARTENTITY_HPP