// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ENTITY_VEHICLE_ABSTRACTMINECARTENTITY_HPP
#define NET_MINECRAFT_ENTITY_VEHICLE_ABSTRACTMINECARTENTITY_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.entity.vehicle.AbstractMinecartEntity
 * Remapped: cot
 */
namespace AbstractMinecartEntity {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("cot", "net/minecraft/world/entity/vehicle/AbstractMinecart", "net/minecraft/class_1688", "net/minecraft/entity/vehicle/AbstractMinecartEntity", "net/minecraft/src/C_1201_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.entity.vehicle.AbstractMinecartEntity#VILLAGER_PASSENGER_ATTACHMENT_POS
    [[maybe_unused]] static jobject get_field_VILLAGER_PASSENGER_ATTACHMENT_POS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "LOWERED_PASSENGER_ATTACHMENT", "field_47822", "VILLAGER_PASSENGER_ATTACHMENT_POS", "f_315476_"), "Lexc;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.vehicle.AbstractMinecartEntity#VILLAGER_PASSENGER_ATTACHMENT_POS
    [[maybe_unused]] static void set_field_VILLAGER_PASSENGER_ATTACHMENT_POS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "LOWERED_PASSENGER_ATTACHMENT", "field_47822", "VILLAGER_PASSENGER_ATTACHMENT_POS", "f_315476_"), "Lexc;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.vehicle.AbstractMinecartEntity#CUSTOM_BLOCK_ID
    [[maybe_unused]] static jobject get_field_CUSTOM_BLOCK_ID() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "DATA_ID_DISPLAY_BLOCK", "field_7671", "CUSTOM_BLOCK_ID", "f_38082_"), "Lajw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.vehicle.AbstractMinecartEntity#CUSTOM_BLOCK_ID
    [[maybe_unused]] static void set_field_CUSTOM_BLOCK_ID(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "DATA_ID_DISPLAY_BLOCK", "field_7671", "CUSTOM_BLOCK_ID", "f_38082_"), "Lajw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.vehicle.AbstractMinecartEntity#CUSTOM_BLOCK_OFFSET
    [[maybe_unused]] static jobject get_field_CUSTOM_BLOCK_OFFSET() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "DATA_ID_DISPLAY_OFFSET", "field_7661", "CUSTOM_BLOCK_OFFSET", "f_38083_"), "Lajw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.vehicle.AbstractMinecartEntity#CUSTOM_BLOCK_OFFSET
    [[maybe_unused]] static void set_field_CUSTOM_BLOCK_OFFSET(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "DATA_ID_DISPLAY_OFFSET", "field_7661", "CUSTOM_BLOCK_OFFSET", "f_38083_"), "Lajw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.vehicle.AbstractMinecartEntity#CUSTOM_BLOCK_PRESENT
    [[maybe_unused]] static jobject get_field_CUSTOM_BLOCK_PRESENT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "DATA_ID_CUSTOM_DISPLAY", "field_7670", "CUSTOM_BLOCK_PRESENT", "f_38084_"), "Lajw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.vehicle.AbstractMinecartEntity#CUSTOM_BLOCK_PRESENT
    [[maybe_unused]] static void set_field_CUSTOM_BLOCK_PRESENT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "DATA_ID_CUSTOM_DISPLAY", "field_7670", "CUSTOM_BLOCK_PRESENT", "f_38084_"), "Lajw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.vehicle.AbstractMinecartEntity#DISMOUNT_FREE_Y_SPACES_NEEDED
    [[maybe_unused]] static jobject get_field_DISMOUNT_FREE_Y_SPACES_NEEDED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "POSE_DISMOUNT_HEIGHTS", "field_24464", "DISMOUNT_FREE_Y_SPACES_NEEDED", "f_38067_"), "Lcom/google/common/collect/ImmutableMap;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.vehicle.AbstractMinecartEntity#DISMOUNT_FREE_Y_SPACES_NEEDED
    [[maybe_unused]] static void set_field_DISMOUNT_FREE_Y_SPACES_NEEDED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "POSE_DISMOUNT_HEIGHTS", "field_24464", "DISMOUNT_FREE_Y_SPACES_NEEDED", "f_38067_"), "Lcom/google/common/collect/ImmutableMap;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static protected field net.minecraft.entity.vehicle.AbstractMinecartEntity#VELOCITY_SLOWDOWN_MULTIPLIER
    [[maybe_unused]] static jfloat get_field_VELOCITY_SLOWDOWN_MULTIPLIER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "WATER_SLOWDOWN_FACTOR", "field_30694", "VELOCITY_SLOWDOWN_MULTIPLIER", "f_150249_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static protected field net.minecraft.entity.vehicle.AbstractMinecartEntity#VELOCITY_SLOWDOWN_MULTIPLIER
    [[maybe_unused]] static void set_field_VELOCITY_SLOWDOWN_MULTIPLIER(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "WATER_SLOWDOWN_FACTOR", "field_30694", "VELOCITY_SLOWDOWN_MULTIPLIER", "f_150249_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.entity.vehicle.AbstractMinecartEntity#yawFlipped
    static jboolean get_field_yawFlipped(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "flipped", "field_7660", "yawFlipped", "f_38068_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.vehicle.AbstractMinecartEntity#yawFlipped
    static void set_field_yawFlipped(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "flipped", "field_7660", "yawFlipped", "f_38068_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.vehicle.AbstractMinecartEntity#onRail
    static jboolean get_field_onRail(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "onRails", "field_44917", "onRail", "f_287786_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.vehicle.AbstractMinecartEntity#onRail
    static void set_field_onRail(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "onRails", "field_44917", "onRail", "f_287786_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.vehicle.AbstractMinecartEntity#clientInterpolationSteps
    static jint get_field_clientInterpolationSteps(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "lerpSteps", "field_45135", "clientInterpolationSteps", "f_291139_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.vehicle.AbstractMinecartEntity#clientInterpolationSteps
    static void set_field_clientInterpolationSteps(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "lerpSteps", "field_45135", "clientInterpolationSteps", "f_291139_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.vehicle.AbstractMinecartEntity#clientX
    static jdouble get_field_clientX(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "lerpX", "field_45136", "clientX", "f_291843_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetDoubleField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.vehicle.AbstractMinecartEntity#clientX
    static void set_field_clientX(const jobject &obj, const jdouble &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "lerpX", "field_45136", "clientX", "f_291843_"), "D");
        return MinecraftSDK::env->SetDoubleField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.vehicle.AbstractMinecartEntity#clientY
    static jdouble get_field_clientY(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("o", "lerpY", "field_45137", "clientY", "f_291771_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetDoubleField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.vehicle.AbstractMinecartEntity#clientY
    static void set_field_clientY(const jobject &obj, const jdouble &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("o", "lerpY", "field_45137", "clientY", "f_291771_"), "D");
        return MinecraftSDK::env->SetDoubleField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.vehicle.AbstractMinecartEntity#clientZ
    static jdouble get_field_clientZ(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("p", "lerpZ", "field_45138", "clientZ", "f_290379_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetDoubleField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.vehicle.AbstractMinecartEntity#clientZ
    static void set_field_clientZ(const jobject &obj, const jdouble &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("p", "lerpZ", "field_45138", "clientZ", "f_290379_"), "D");
        return MinecraftSDK::env->SetDoubleField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.vehicle.AbstractMinecartEntity#clientYaw
    static jdouble get_field_clientYaw(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("q", "lerpYRot", "field_45139", "clientYaw", "f_291345_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetDoubleField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.vehicle.AbstractMinecartEntity#clientYaw
    static void set_field_clientYaw(const jobject &obj, const jdouble &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("q", "lerpYRot", "field_45139", "clientYaw", "f_291345_"), "D");
        return MinecraftSDK::env->SetDoubleField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.vehicle.AbstractMinecartEntity#clientPitch
    static jdouble get_field_clientPitch(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("r", "lerpXRot", "field_45140", "clientPitch", "f_290838_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetDoubleField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.vehicle.AbstractMinecartEntity#clientPitch
    static void set_field_clientPitch(const jobject &obj, const jdouble &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("r", "lerpXRot", "field_45140", "clientPitch", "f_290838_"), "D");
        return MinecraftSDK::env->SetDoubleField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.vehicle.AbstractMinecartEntity#clientVelocity
    static jobject get_field_clientVelocity(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("s", "targetDeltaMovement", "field_45141", "clientVelocity", "f_290580_"), "Lexc;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.vehicle.AbstractMinecartEntity#clientVelocity
    static void set_field_clientVelocity(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("s", "targetDeltaMovement", "field_45141", "clientVelocity", "f_290580_"), "Lexc;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.vehicle.AbstractMinecartEntity#ADJACENT_RAIL_POSITIONS_BY_SHAPE
    [[maybe_unused]] static jobject get_field_ADJACENT_RAIL_POSITIONS_BY_SHAPE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "EXITS", "field_7664", "ADJACENT_RAIL_POSITIONS_BY_SHAPE", "f_38069_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.vehicle.AbstractMinecartEntity#ADJACENT_RAIL_POSITIONS_BY_SHAPE
    [[maybe_unused]] static void set_field_ADJACENT_RAIL_POSITIONS_BY_SHAPE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "EXITS", "field_7664", "ADJACENT_RAIL_POSITIONS_BY_SHAPE", "f_38069_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_create() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "createMinecart", "method_7523", "create", "m_38119_"), "(Laqu;DDDLcot$a;Lcuq;Lcmx;)Lcot;");
    }

    static jobject create(const jobject& arg0, const jdouble& arg1, const jdouble& arg2, const jdouble& arg3, const jobject& arg4, const jobject& arg5, const jobject& arg6) {
       const auto clazz = self();
       const auto methodID = methodID_create();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6);
    };
    
    static jmethodID methodID_getMoveEffect() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("bc", "getMovementEmission", "method_33570", "getMoveEffect", "m_142319_"), "()Lbsr$b;");
    }

    static jobject getMoveEffect(const jobject& obj) {
                
       const auto methodID = methodID_getMoveEffect();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_initDataTracker() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "defineSynchedData", "method_5693", "initDataTracker", "m_8097_"), "(Laka$a;)V");
    }

    static void initDataTracker(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_initDataTracker();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_collidesWith() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("i", "canCollideWith", "method_30949", "collidesWith", "m_7337_"), "(Lbsr;)Z");
    }

    static jboolean collidesWith(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_collidesWith();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isPushable() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("bB", "isPushable", "method_5810", "isPushable", "m_6094_"), "()Z");
    }

    static jboolean isPushable(const jobject& obj) {
                
       const auto methodID = methodID_isPushable();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_positionInPortal() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getRelativePortalPosition", "method_30633", "positionInPortal", "m_7643_"), "(Lji$a;Ll$a;)Lexc;");
    }

    static jobject positionInPortal(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_positionInPortal();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getPassengerAttachmentPos() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getPassengerAttachmentPoint", "method_52533", "getPassengerAttachmentPos", "m_293035_"), "(Lbsr;Lbsu;F)Lexc;");
    }

    static jobject getPassengerAttachmentPos(const jobject& obj, const jobject& arg0, const jobject& arg1, const jfloat& arg2) {
                
       const auto methodID = methodID_getPassengerAttachmentPos();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_updatePassengerForDismount() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getDismountLocationForPassenger", "method_24829", "updatePassengerForDismount", "m_7688_"), "(Lbtn;)Lexc;");
    }

    static jobject updatePassengerForDismount(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_updatePassengerForDismount();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getVelocityMultiplier() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aO", "getBlockSpeedFactor", "method_23326", "getVelocityMultiplier", "m_6041_"), "()F");
    }

    static jfloat getVelocityMultiplier(const jobject& obj) {
                
       const auto methodID = methodID_getVelocityMultiplier();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID_animateDamage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("n", "animateHurt", "method_5879", "animateDamage", "m_6053_"), "(F)V");
    }

    static void animateDamage(const jobject& obj, const jfloat& arg0) {
                
       const auto methodID = methodID_animateDamage();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_canHit() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("bA", "isPickable", "method_5863", "canHit", "m_6087_"), "()Z");
    }

    static jboolean canHit(const jobject& obj) {
                
       const auto methodID = methodID_canHit();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getAdjacentRailPositionsByShape() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "exits", "method_22864", "getAdjacentRailPositionsByShape", "m_38125_"), "(Ldug;)Lcom/mojang/datafixers/util/Pair;");
    }

    static jobject getAdjacentRailPositionsByShape(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getAdjacentRailPositionsByShape();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getMovementDirection() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("cI", "getMotionDirection", "method_5755", "getMovementDirection", "m_6374_"), "()Lji;");
    }

    static jobject getMovementDirection(const jobject& obj) {
                
       const auto methodID = methodID_getMovementDirection();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getGravity() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aZ", "getDefaultGravity", "method_7490", "getGravity", "m_319564_"), "()D");
    }

    static jdouble getGravity(const jobject& obj) {
                
       const auto methodID = methodID_getGravity();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID);
    };
    
    static jmethodID methodID_tick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("l", "tick", "method_5773", "tick", "m_8119_"), "()V");
    }

    static void tick(const jobject& obj) {
                
       const auto methodID = methodID_tick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getMaxSpeed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("p", "getMaxSpeed", "method_7504", "getMaxSpeed", "m_7097_"), "()D");
    }

    static jdouble getMaxSpeed(const jobject& obj) {
                
       const auto methodID = methodID_getMaxSpeed();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID);
    };
    
    static jmethodID methodID_onActivatorRail() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "activateMinecart", "method_7506", "onActivatorRail", "m_6025_"), "(IIIZ)V");
    }

    static void onActivatorRail(const jobject& obj, const jint& arg0, const jint& arg1, const jint& arg2, const jboolean& arg3) {
                
       const auto methodID = methodID_onActivatorRail();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_moveOffRail() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("s", "comeOffTrack", "method_7512", "moveOffRail", "m_38163_"), "()V");
    }

    static void moveOffRail(const jobject& obj) {
                
       const auto methodID = methodID_moveOffRail();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_moveOnRail() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "moveAlongTrack", "method_7513", "moveOnRail", "m_6401_"), "(Ljd;Ldtc;)V");
    }

    static void moveOnRail(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_moveOnRail();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_isOnRail() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("cj", "isOnRails", "method_52172", "isOnRail", "m_288188_"), "()Z");
    }

    static jboolean isOnRail(const jobject& obj) {
                
       const auto methodID = methodID_isOnRail();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_willHitBlockAt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "isRedstoneConductor", "method_18803", "willHitBlockAt", "m_38129_"), "(Ljd;)Z");
    }

    static jboolean willHitBlockAt(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_willHitBlockAt();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_applySlowdown() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("t", "applyNaturalSlowdown", "method_7525", "applySlowdown", "m_7114_"), "()V");
    }

    static void applySlowdown(const jobject& obj) {
                
       const auto methodID = methodID_applySlowdown();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_snapPositionToRailWithOffset() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getPosOffs", "method_7505", "snapPositionToRailWithOffset", "m_38096_"), "(DDDD)Lexc;");
    }

    static jobject snapPositionToRailWithOffset(const jobject& obj, const jdouble& arg0, const jdouble& arg1, const jdouble& arg2, const jdouble& arg3) {
                
       const auto methodID = methodID_snapPositionToRailWithOffset();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_snapPositionToRail() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("p", "getPos", "method_7508", "snapPositionToRail", "m_38179_"), "(DDD)Lexc;");
    }

    static jobject snapPositionToRail(const jobject& obj, const jdouble& arg0, const jdouble& arg1, const jdouble& arg2) {
                
       const auto methodID = methodID_snapPositionToRail();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_getVisibilityBoundingBox() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h_", "getBoundingBoxForCulling", "method_5830", "getVisibilityBoundingBox", "m_6921_"), "()Lewx;");
    }

    static jobject getVisibilityBoundingBox(const jobject& obj) {
                
       const auto methodID = methodID_getVisibilityBoundingBox();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_readCustomDataFromNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "readAdditionalSaveData", "method_5749", "readCustomDataFromNbt", "m_7378_"), "(Lub;)V");
    }

    static void readCustomDataFromNbt(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_readCustomDataFromNbt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_writeCustomDataToNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "addAdditionalSaveData", "method_5652", "writeCustomDataToNbt", "m_7380_"), "(Lub;)V");
    }

    static void writeCustomDataToNbt(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_writeCustomDataToNbt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_pushAwayFrom() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "push", "method_5697", "pushAwayFrom", "m_7334_"), "(Lbsr;)V");
    }

    static void pushAwayFrom(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_pushAwayFrom();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_updateTrackedPositionAndAngles() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "lerpTo", "method_5759", "updateTrackedPositionAndAngles", "m_6453_"), "(DDDFFI)V");
    }

    static void updateTrackedPositionAndAngles(const jobject& obj, const jdouble& arg0, const jdouble& arg1, const jdouble& arg2, const jfloat& arg3, const jfloat& arg4, const jint& arg5) {
                
       const auto methodID = methodID_updateTrackedPositionAndAngles();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5);
    };
    
    static jmethodID methodID_getLerpTargetX() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c_", "lerpTargetX", "method_53830", "getLerpTargetX", "m_293268_"), "()D");
    }

    static jdouble getLerpTargetX(const jobject& obj) {
                
       const auto methodID = methodID_getLerpTargetX();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID);
    };
    
    static jmethodID methodID_getLerpTargetY() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d_", "lerpTargetY", "method_53827", "getLerpTargetY", "m_293950_"), "()D");
    }

    static jdouble getLerpTargetY(const jobject& obj) {
                
       const auto methodID = methodID_getLerpTargetY();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID);
    };
    
    static jmethodID methodID_getLerpTargetZ() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("P_", "lerpTargetZ", "method_53828", "getLerpTargetZ", "m_292720_"), "()D");
    }

    static jdouble getLerpTargetZ(const jobject& obj) {
                
       const auto methodID = methodID_getLerpTargetZ();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID);
    };
    
    static jmethodID methodID_getLerpTargetPitch() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("Q_", "lerpTargetXRot", "method_53829", "getLerpTargetPitch", "m_293123_"), "()F");
    }

    static jfloat getLerpTargetPitch(const jobject& obj) {
                
       const auto methodID = methodID_getLerpTargetPitch();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID_getLerpTargetYaw() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e_", "lerpTargetYRot", "method_53831", "getLerpTargetYaw", "m_293582_"), "()F");
    }

    static jfloat getLerpTargetYaw(const jobject& obj) {
                
       const auto methodID = methodID_getLerpTargetYaw();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID_setVelocityClient() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("l", "lerpMotion", "method_5750", "setVelocityClient", "m_6001_"), "(DDD)V");
    }

    static void setVelocityClient(const jobject& obj, const jdouble& arg0, const jdouble& arg1, const jdouble& arg2) {
                
       const auto methodID = methodID_setVelocityClient();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_getMinecartType() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("v", "getMinecartType", "method_7518", "getMinecartType", "m_6064_"), "()Lcot$a;");
    }

    static jobject getMinecartType(const jobject& obj) {
                
       const auto methodID = methodID_getMinecartType();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getContainedBlock() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("w", "getDisplayBlockState", "method_7519", "getContainedBlock", "m_38178_"), "()Ldtc;");
    }

    static jobject getContainedBlock(const jobject& obj) {
                
       const auto methodID = methodID_getContainedBlock();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getDefaultContainedBlock() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("x", "getDefaultDisplayBlockState", "method_7517", "getDefaultContainedBlock", "m_6390_"), "()Ldtc;");
    }

    static jobject getDefaultContainedBlock(const jobject& obj) {
                
       const auto methodID = methodID_getDefaultContainedBlock();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getBlockOffset() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("y", "getDisplayOffset", "method_7514", "getBlockOffset", "m_38183_"), "()I");
    }

    static jint getBlockOffset(const jobject& obj) {
                
       const auto methodID = methodID_getBlockOffset();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getDefaultBlockOffset() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("z", "getDefaultDisplayOffset", "method_7526", "getDefaultBlockOffset", "m_7144_"), "()I");
    }

    static jint getDefaultBlockOffset(const jobject& obj) {
                
       const auto methodID = methodID_getDefaultBlockOffset();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_setCustomBlock() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "setDisplayBlockState", "method_7527", "setCustomBlock", "m_38146_"), "(Ldtc;)V");
    }

    static void setCustomBlock(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setCustomBlock();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setCustomBlockOffset() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "setDisplayOffset", "method_7515", "setCustomBlockOffset", "m_38174_"), "(I)V");
    }

    static void setCustomBlockOffset(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_setCustomBlockOffset();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_hasCustomBlock() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("A", "hasCustomDisplay", "method_7510", "hasCustomBlock", "m_38184_"), "()Z");
    }

    static jboolean hasCustomBlock(const jobject& obj) {
                
       const auto methodID = methodID_hasCustomBlock();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_setCustomBlockPresent() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setCustomDisplay", "method_7511", "setCustomBlockPresent", "m_38138_"), "(Z)V");
    }

    static void setCustomBlockPresent(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setCustomBlockPresent();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getPickBlockStack() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("dB", "getPickResult", "method_31480", "getPickBlockStack", "m_142340_"), "()Lcuq;");
    }

    static jobject getPickBlockStack(const jobject& obj) {
                
       const auto methodID = methodID_getPickBlockStack();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_ENTITY_VEHICLE_ABSTRACTMINECARTENTITY_HPP