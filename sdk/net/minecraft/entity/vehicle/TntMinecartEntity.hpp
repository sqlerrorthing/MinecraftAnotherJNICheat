// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ENTITY_VEHICLE_TNTMINECARTENTITY_HPP
#define NET_MINECRAFT_ENTITY_VEHICLE_TNTMINECARTENTITY_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.entity.vehicle.TntMinecartEntity
 * Remapped: cpf
 */
namespace TntMinecartEntity {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("cpf", "net/minecraft/world/entity/vehicle/MinecartTNT", "net/minecraft/class_1701", "net/minecraft/entity/vehicle/TntMinecartEntity", "net/minecraft/src/C_1218_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.entity.vehicle.TntMinecartEntity#PRIME_TNT_STATUS
    [[maybe_unused]] static jbyte get_field_PRIME_TNT_STATUS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "EVENT_PRIME", "field_30703", "PRIME_TNT_STATUS", "f_150345_"), "B");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticByteField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.vehicle.TntMinecartEntity#PRIME_TNT_STATUS
    [[maybe_unused]] static void set_field_PRIME_TNT_STATUS(const jbyte &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "EVENT_PRIME", "field_30703", "PRIME_TNT_STATUS", "f_150345_"), "B");
        return MinecraftSDK::env->SetStaticByteField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.entity.vehicle.TntMinecartEntity#fuseTicks
    static jint get_field_fuseTicks(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "fuse", "field_7751", "fuseTicks", "f_38647_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.vehicle.TntMinecartEntity#fuseTicks
    static void set_field_fuseTicks(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "fuse", "field_7751", "fuseTicks", "f_38647_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    static jmethodID methodID_getMinecartType() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("v", "getMinecartType", "method_7518", "getMinecartType", "m_6064_"), "()Lcot$a;");
    }

    static jobject getMinecartType(const jobject& obj) {
                
       const auto methodID = methodID_getMinecartType();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getDefaultContainedBlock() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("x", "getDefaultDisplayBlockState", "method_7517", "getDefaultContainedBlock", "m_6390_"), "()Ldtc;");
    }

    static jobject getDefaultContainedBlock(const jobject& obj) {
                
       const auto methodID = methodID_getDefaultContainedBlock();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_tick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("l", "tick", "method_5773", "tick", "m_8119_"), "()V");
    }

    static void tick(const jobject& obj) {
                
       const auto methodID = methodID_tick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_damage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "hurt", "method_5643", "damage", "m_6469_"), "(Lbrk;F)Z");
    }

    static jboolean damage(const jobject& obj, const jobject& arg0, const jfloat& arg1) {
                
       const auto methodID = methodID_damage();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_killAndDropSelf() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "destroy", "method_7516", "killAndDropSelf", "m_38227_"), "(Lbrk;)V");
    }

    static void killAndDropSelf(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_killAndDropSelf();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_asItem() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ak_", "getDropItem", "method_7557", "asItem", "m_38369_"), "()Lcul;");
    }

    static jobject asItem(const jobject& obj) {
                
       const auto methodID = methodID_asItem();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_explode() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "explode", "method_47305", "explode", "m_38688_"), "(D)V");
    }

    static void explode(const jobject& obj, const jdouble& arg0) {
                
       const auto methodID = methodID_explode();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__explode() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "explode", "method_7576", "explode", "m_257440_"), "(Lbrk;D)V");
    }

    static void _explode(const jobject& obj, const jobject& arg0, const jdouble& arg1) {
                
       const auto methodID = methodID__explode();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_handleFallDamage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "causeFallDamage", "method_5747", "handleFallDamage", "m_142535_"), "(FFLbrk;)Z");
    }

    static jboolean handleFallDamage(const jobject& obj, const jfloat& arg0, const jfloat& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_handleFallDamage();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_onActivatorRail() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "activateMinecart", "method_7506", "onActivatorRail", "m_6025_"), "(IIIZ)V");
    }

    static void onActivatorRail(const jobject& obj, const jint& arg0, const jint& arg1, const jint& arg2, const jboolean& arg3) {
                
       const auto methodID = methodID_onActivatorRail();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_handleStatus() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "handleEntityEvent", "method_5711", "handleStatus", "m_7822_"), "(B)V");
    }

    static void handleStatus(const jobject& obj, const jbyte& arg0) {
                
       const auto methodID = methodID_handleStatus();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_prime() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("B", "primeFuse", "method_7575", "prime", "m_38693_"), "()V");
    }

    static void prime(const jobject& obj) {
                
       const auto methodID = methodID_prime();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getFuseTicks() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("C", "getFuse", "method_7577", "getFuseTicks", "m_38694_"), "()I");
    }

    static jint getFuseTicks(const jobject& obj) {
                
       const auto methodID = methodID_getFuseTicks();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_isPrimed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("D", "isPrimed", "method_7578", "isPrimed", "m_38695_"), "()Z");
    }

    static jboolean isPrimed(const jobject& obj) {
                
       const auto methodID = methodID_isPrimed();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getEffectiveExplosionResistance() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getBlockExplosionResistance", "method_5774", "getEffectiveExplosionResistance", "m_7077_"), "(Ldco;Ldcc;Ljd;Ldtc;Lepe;F)F");
    }

    static jfloat getEffectiveExplosionResistance(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jobject& arg4, const jfloat& arg5) {
                
       const auto methodID = methodID_getEffectiveExplosionResistance();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5);
    };
    
    static jmethodID methodID_canExplosionDestroyBlock() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "shouldBlockExplode", "method_5853", "canExplosionDestroyBlock", "m_7349_"), "(Ldco;Ldcc;Ljd;Ldtc;F)Z");
    }

    static jboolean canExplosionDestroyBlock(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jfloat& arg4) {
                
       const auto methodID = methodID_canExplosionDestroyBlock();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_readCustomDataFromNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "readAdditionalSaveData", "method_5749", "readCustomDataFromNbt", "m_7378_"), "(Lub;)V");
    }

    static void readCustomDataFromNbt(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_readCustomDataFromNbt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_writeCustomDataToNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "addAdditionalSaveData", "method_5652", "writeCustomDataToNbt", "m_7380_"), "(Lub;)V");
    }

    static void writeCustomDataToNbt(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_writeCustomDataToNbt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_shouldAlwaysKill() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "shouldSourceDestroy", "method_55056", "shouldAlwaysKill", "m_304763_"), "(Lbrk;)Z");
    }

    static jboolean shouldAlwaysKill(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_shouldAlwaysKill();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_shouldDetonate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("e", "damageSourceIgnitesTnt", "method_55057", "shouldDetonate", "m_307426_"), "(Lbrk;)Z");
    }

    static jboolean shouldDetonate(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_shouldDetonate();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_ENTITY_VEHICLE_TNTMINECARTENTITY_HPP