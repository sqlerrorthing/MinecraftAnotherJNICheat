// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ENTITY_VEHICLE_HOPPERMINECARTENTITY_HPP
#define NET_MINECRAFT_ENTITY_VEHICLE_HOPPERMINECARTENTITY_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.entity.vehicle.HopperMinecartEntity
 * Remapped: cpd
 */
namespace HopperMinecartEntity {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("cpd", "net/minecraft/world/entity/vehicle/MinecartHopper", "net/minecraft/class_1700", "net/minecraft/entity/vehicle/HopperMinecartEntity", "net/minecraft/src/C_1215_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.entity.vehicle.HopperMinecartEntity#enabled
    static jboolean get_field_enabled(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "enabled", "field_7749", "enabled", "f_38580_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.vehicle.HopperMinecartEntity#enabled
    static void set_field_enabled(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "enabled", "field_7749", "enabled", "f_38580_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    static jmethodID methodID_getMinecartType() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("v", "getMinecartType", "method_7518", "getMinecartType", "m_6064_"), "()Lcot$a;");
    }

    static jobject getMinecartType(const jobject& obj) {
                
       const auto methodID = methodID_getMinecartType();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getDefaultContainedBlock() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("x", "getDefaultDisplayBlockState", "method_7517", "getDefaultContainedBlock", "m_6390_"), "()Ldtc;");
    }

    static jobject getDefaultContainedBlock(const jobject& obj) {
                
       const auto methodID = methodID_getDefaultContainedBlock();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getDefaultBlockOffset() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("z", "getDefaultDisplayOffset", "method_7526", "getDefaultBlockOffset", "m_7144_"), "()I");
    }

    static jint getDefaultBlockOffset(const jobject& obj) {
                
       const auto methodID = methodID_getDefaultBlockOffset();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_size() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getContainerSize", "method_5439", "size", "m_6643_"), "()I");
    }

    static jint size(const jobject& obj) {
                
       const auto methodID = methodID_size();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_onActivatorRail() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "activateMinecart", "method_7506", "onActivatorRail", "m_6025_"), "(IIIZ)V");
    }

    static void onActivatorRail(const jobject& obj, const jint& arg0, const jint& arg1, const jint& arg2, const jboolean& arg3) {
                
       const auto methodID = methodID_onActivatorRail();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_isEnabled() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("F", "isEnabled", "method_7572", "isEnabled", "m_38617_"), "()Z");
    }

    static jboolean isEnabled(const jobject& obj) {
                
       const auto methodID = methodID_isEnabled();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_setEnabled() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "setEnabled", "method_7570", "setEnabled", "m_38613_"), "(Z)V");
    }

    static void setEnabled(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setEnabled();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getHopperX() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("H", "getLevelX", "method_11266", "getHopperX", "m_6343_"), "()D");
    }

    static jdouble getHopperX(const jobject& obj) {
                
       const auto methodID = methodID_getHopperX();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID);
    };
    
    static jmethodID methodID_getHopperY() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("I", "getLevelY", "method_11264", "getHopperY", "m_6358_"), "()D");
    }

    static jdouble getHopperY(const jobject& obj) {
                
       const auto methodID = methodID_getHopperY();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID);
    };
    
    static jmethodID methodID_getHopperZ() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("J", "getLevelZ", "method_11265", "getHopperZ", "m_6446_"), "()D");
    }

    static jdouble getHopperZ(const jobject& obj) {
                
       const auto methodID = methodID_getHopperZ();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID);
    };
    
    static jmethodID methodID_canBlockFromAbove() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("K", "isGridAligned", "method_57081", "canBlockFromAbove", "m_320496_"), "()Z");
    }

    static jboolean canBlockFromAbove(const jobject& obj) {
                
       const auto methodID = methodID_canBlockFromAbove();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_tick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("l", "tick", "method_5773", "tick", "m_8119_"), "()V");
    }

    static void tick(const jobject& obj) {
                
       const auto methodID = methodID_tick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_canOperate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("L", "suckInItems", "method_7574", "canOperate", "m_38592_"), "()Z");
    }

    static jboolean canOperate(const jobject& obj) {
                
       const auto methodID = methodID_canOperate();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_asItem() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ak_", "getDropItem", "method_7557", "asItem", "m_38369_"), "()Lcul;");
    }

    static jobject asItem(const jobject& obj) {
                
       const auto methodID = methodID_asItem();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_writeCustomDataToNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "addAdditionalSaveData", "method_5652", "writeCustomDataToNbt", "m_7380_"), "(Lub;)V");
    }

    static void writeCustomDataToNbt(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_writeCustomDataToNbt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_readCustomDataFromNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "readAdditionalSaveData", "method_5749", "readCustomDataFromNbt", "m_7378_"), "(Lub;)V");
    }

    static void readCustomDataFromNbt(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_readCustomDataFromNbt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getScreenHandler() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "createMenu", "method_17357", "getScreenHandler", "m_7402_"), "(ILcmw;)Lcpu;");
    }

    static jobject getScreenHandler(const jobject& obj, const jint& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_getScreenHandler();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_ENTITY_VEHICLE_HOPPERMINECARTENTITY_HPP