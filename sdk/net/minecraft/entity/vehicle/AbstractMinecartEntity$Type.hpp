// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ENTITY_VEHICLE_ABSTRACTMINECARTENTITY$TYPE_HPP
#define NET_MINECRAFT_ENTITY_VEHICLE_ABSTRACTMINECARTENTITY$TYPE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.entity.vehicle.AbstractMinecartEntity$Type
 * Remapped: cot$a
 */
namespace AbstractMinecartEntity$Type {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("cot$a", "net/minecraft/world/entity/vehicle/AbstractMinecart$Type", "net/minecraft/class_1688$class_1689", "net/minecraft/entity/vehicle/AbstractMinecartEntity$Type", "net/minecraft/src/C_1201_$C_1203_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.entity.vehicle.AbstractMinecartEntity$Type#RIDEABLE
    [[maybe_unused]] static jobject get_field_RIDEABLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "RIDEABLE", "field_7674", "RIDEABLE", "RIDEABLE"), "Lcot$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.vehicle.AbstractMinecartEntity$Type#RIDEABLE
    [[maybe_unused]] static void set_field_RIDEABLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "RIDEABLE", "field_7674", "RIDEABLE", "RIDEABLE"), "Lcot$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.vehicle.AbstractMinecartEntity$Type#CHEST
    [[maybe_unused]] static jobject get_field_CHEST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "CHEST", "field_7678", "CHEST", "CHEST"), "Lcot$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.vehicle.AbstractMinecartEntity$Type#CHEST
    [[maybe_unused]] static void set_field_CHEST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "CHEST", "field_7678", "CHEST", "CHEST"), "Lcot$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.vehicle.AbstractMinecartEntity$Type#FURNACE
    [[maybe_unused]] static jobject get_field_FURNACE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "FURNACE", "field_7679", "FURNACE", "FURNACE"), "Lcot$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.vehicle.AbstractMinecartEntity$Type#FURNACE
    [[maybe_unused]] static void set_field_FURNACE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "FURNACE", "field_7679", "FURNACE", "FURNACE"), "Lcot$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.vehicle.AbstractMinecartEntity$Type#TNT
    [[maybe_unused]] static jobject get_field_TNT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "TNT", "field_7675", "TNT", "TNT"), "Lcot$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.vehicle.AbstractMinecartEntity$Type#TNT
    [[maybe_unused]] static void set_field_TNT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "TNT", "field_7675", "TNT", "TNT"), "Lcot$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.vehicle.AbstractMinecartEntity$Type#SPAWNER
    [[maybe_unused]] static jobject get_field_SPAWNER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "SPAWNER", "field_7680", "SPAWNER", "SPAWNER"), "Lcot$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.vehicle.AbstractMinecartEntity$Type#SPAWNER
    [[maybe_unused]] static void set_field_SPAWNER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "SPAWNER", "field_7680", "SPAWNER", "SPAWNER"), "Lcot$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.vehicle.AbstractMinecartEntity$Type#HOPPER
    [[maybe_unused]] static jobject get_field_HOPPER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "HOPPER", "field_7677", "HOPPER", "HOPPER"), "Lcot$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.vehicle.AbstractMinecartEntity$Type#HOPPER
    [[maybe_unused]] static void set_field_HOPPER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "HOPPER", "field_7677", "HOPPER", "HOPPER"), "Lcot$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.vehicle.AbstractMinecartEntity$Type#COMMAND_BLOCK
    [[maybe_unused]] static jobject get_field_COMMAND_BLOCK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "COMMAND_BLOCK", "field_7681", "COMMAND_BLOCK", "COMMAND_BLOCK"), "Lcot$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.vehicle.AbstractMinecartEntity$Type#COMMAND_BLOCK
    [[maybe_unused]] static void set_field_COMMAND_BLOCK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "COMMAND_BLOCK", "field_7681", "COMMAND_BLOCK", "COMMAND_BLOCK"), "Lcot$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_values() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("values", "values", "values", "values", "values"), "()[Lcot$a;");
    }

    static jobject values() {
       const auto clazz = self();
       const auto methodID = methodID_values();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_valueOf() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("valueOf", "valueOf", "valueOf", "valueOf", "valueOf"), "(Ljava/lang/String;)Lcot$a;");
    }

    static jobject valueOf(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_valueOf();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_ENTITY_VEHICLE_ABSTRACTMINECARTENTITY$TYPE_HPP