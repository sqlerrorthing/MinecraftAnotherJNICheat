// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ENTITY_INVENTORYOWNER_HPP
#define NET_MINECRAFT_ENTITY_INVENTORYOWNER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.entity.InventoryOwner
 * Remapped: cmi
 */
namespace InventoryOwner {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("cmi", "net/minecraft/world/entity/npc/InventoryCarrier", "net/minecraft/class_6067", "net/minecraft/entity/InventoryOwner", "net/minecraft/src/C_141150_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.entity.InventoryOwner#INVENTORY_KEY
    [[maybe_unused]] static jobject get_field_INVENTORY_KEY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e_", "TAG_INVENTORY", "field_40736", "INVENTORY_KEY", "f_252389_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.InventoryOwner#INVENTORY_KEY
    [[maybe_unused]] static void set_field_INVENTORY_KEY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e_", "TAG_INVENTORY", "field_40736", "INVENTORY_KEY", "f_252389_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_getInventory() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("x", "getInventory", "method_35199", "getInventory", "m_35311_"), "()Lbra;");
    }

    static jobject getInventory(const jobject& obj) {
                
       const auto methodID = methodID_getInventory();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_pickUpItem() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "pickUpItem", "method_43544", "pickUpItem", "m_219611_"), "(Lbtp;Lcmi;Lcjh;)V");
    }

    static void pickUpItem(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_pickUpItem();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_readInventory() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "readInventoryFromTag", "method_46400", "readInventory", "m_253224_"), "(Lub;Ljo$a;)V");
    }

    static void readInventory(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_readInventory();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_writeInventory() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "writeInventoryToTag", "method_46399", "writeInventory", "m_252802_"), "(Lub;Ljo$a;)V");
    }

    static void writeInventory(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_writeInventory();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_ENTITY_INVENTORYOWNER_HPP