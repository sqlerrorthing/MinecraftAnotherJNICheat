// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ENTITY_PROJECTILE_THROWN_POTIONENTITY_HPP
#define NET_MINECRAFT_ENTITY_PROJECTILE_THROWN_POTIONENTITY_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.entity.projectile.thrown.PotionEntity
 * Remapped: cob
 */
namespace PotionEntity {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("cob", "net/minecraft/world/entity/projectile/ThrownPotion", "net/minecraft/class_1686", "net/minecraft/entity/projectile/thrown/PotionEntity", "net/minecraft/src/C_1178_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.entity.projectile.thrown.PotionEntity#field_30667
    [[maybe_unused]] static jdouble get_field_field_30667() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "SPLASH_RANGE", "field_30667", "field_30667", "f_150190_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticDoubleField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.projectile.thrown.PotionEntity#field_30667
    [[maybe_unused]] static void set_field_field_30667(const jdouble &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "SPLASH_RANGE", "field_30667", "field_30667", "f_150190_"), "D");
        return MinecraftSDK::env->SetStaticDoubleField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.projectile.thrown.PotionEntity#field_30668
    [[maybe_unused]] static jdouble get_field_field_30668() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "SPLASH_RANGE_SQ", "field_30668", "field_30668", "f_150191_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticDoubleField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.projectile.thrown.PotionEntity#field_30668
    [[maybe_unused]] static void set_field_field_30668(const jdouble &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "SPLASH_RANGE_SQ", "field_30668", "field_30668", "f_150191_"), "D");
        return MinecraftSDK::env->SetStaticDoubleField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.projectile.thrown.PotionEntity#AFFECTED_BY_WATER
    [[maybe_unused]] static jobject get_field_AFFECTED_BY_WATER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "WATER_SENSITIVE_OR_ON_FIRE", "field_40737", "AFFECTED_BY_WATER", "f_252520_"), "Ljava/util/function/Predicate;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.projectile.thrown.PotionEntity#AFFECTED_BY_WATER
    [[maybe_unused]] static void set_field_AFFECTED_BY_WATER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "WATER_SENSITIVE_OR_ON_FIRE", "field_40737", "AFFECTED_BY_WATER", "f_252520_"), "Ljava/util/function/Predicate;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_getDefaultItem() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("t", "getDefaultItem", "method_16942", "getDefaultItem", "m_7881_"), "()Lcul;");
    }

    static jobject getDefaultItem(const jobject& obj) {
                
       const auto methodID = methodID_getDefaultItem();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getGravity() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aZ", "getDefaultGravity", "method_7490", "getGravity", "m_319564_"), "()D");
    }

    static jdouble getGravity(const jobject& obj) {
                
       const auto methodID = methodID_getGravity();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID);
    };
    
    static jmethodID methodID_onBlockHit() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "onHitBlock", "method_24920", "onBlockHit", "m_8060_"), "(Lewy;)V");
    }

    static void onBlockHit(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onBlockHit();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_onCollision() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "onHit", "method_7488", "onCollision", "m_6532_"), "(Lexa;)V");
    }

    static void onCollision(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onCollision();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_applyWater() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("v", "applyWater", "method_7500", "applyWater", "m_37552_"), "()V");
    }

    static void applyWater(const jobject& obj) {
                
       const auto methodID = methodID_applyWater();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_applySplashPotion() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "applySplash", "method_7498", "applySplashPotion", "m_37547_"), "(Ljava/lang/Iterable;Lbsr;)V");
    }

    static void applySplashPotion(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_applySplashPotion();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_applyLingeringPotion() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "makeAreaOfEffectCloud", "method_7497", "applyLingeringPotion", "m_37537_"), "(Lcwu;)V");
    }

    static void applyLingeringPotion(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_applyLingeringPotion();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isLingering() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("w", "isLingering", "method_7501", "isLingering", "m_37553_"), "()Z");
    }

    static jboolean isLingering(const jobject& obj) {
                
       const auto methodID = methodID_isLingering();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_extinguishFire() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "dowseFire", "method_7499", "extinguishFire", "m_150192_"), "(Ljd;)V");
    }

    static void extinguishFire(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_extinguishFire();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getKnockback() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a_", "calculateHorizontalHurtKnockbackDirection", "method_59959", "getKnockback", "m_339151_"), "(Lbtn;Lbrk;)Lit/unimi/dsi/fastutil/doubles/DoubleDoubleImmutablePair;");
    }

    static jobject getKnockback(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_getKnockback();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_ENTITY_PROJECTILE_THROWN_POTIONENTITY_HPP