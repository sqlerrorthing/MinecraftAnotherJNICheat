// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ENTITY_PROJECTILE_ARROWENTITY_HPP
#define NET_MINECRAFT_ENTITY_PROJECTILE_ARROWENTITY_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.entity.projectile.ArrowEntity
 * Remapped: cnf
 */
namespace ArrowEntity {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("cnf", "net/minecraft/world/entity/projectile/Arrow", "net/minecraft/class_1667", "net/minecraft/entity/projectile/ArrowEntity", "net/minecraft/src/C_1154_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.entity.projectile.ArrowEntity#MAX_POTION_DURATION_TICKS
    [[maybe_unused]] static jint get_field_MAX_POTION_DURATION_TICKS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "EXPOSED_POTION_DECAY_TIME", "field_30660", "MAX_POTION_DURATION_TICKS", "f_150131_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.projectile.ArrowEntity#MAX_POTION_DURATION_TICKS
    [[maybe_unused]] static void set_field_MAX_POTION_DURATION_TICKS(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "EXPOSED_POTION_DECAY_TIME", "field_30660", "MAX_POTION_DURATION_TICKS", "f_150131_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.projectile.ArrowEntity#NO_POTION_COLOR
    [[maybe_unused]] static jint get_field_NO_POTION_COLOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "NO_EFFECT_COLOR", "field_30658", "NO_POTION_COLOR", "f_150129_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.projectile.ArrowEntity#NO_POTION_COLOR
    [[maybe_unused]] static void set_field_NO_POTION_COLOR(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "NO_EFFECT_COLOR", "field_30658", "NO_POTION_COLOR", "f_150129_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.projectile.ArrowEntity#COLOR
    [[maybe_unused]] static jobject get_field_COLOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "ID_EFFECT_COLOR", "field_7595", "COLOR", "f_36854_"), "Lajw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.projectile.ArrowEntity#COLOR
    [[maybe_unused]] static void set_field_COLOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "ID_EFFECT_COLOR", "field_7595", "COLOR", "f_36854_"), "Lajw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.projectile.ArrowEntity#PARTICLE_EFFECT_STATUS
    [[maybe_unused]] static jbyte get_field_PARTICLE_EFFECT_STATUS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "EVENT_POTION_PUFF", "field_30659", "PARTICLE_EFFECT_STATUS", "f_150130_"), "B");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticByteField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.projectile.ArrowEntity#PARTICLE_EFFECT_STATUS
    [[maybe_unused]] static void set_field_PARTICLE_EFFECT_STATUS(const jbyte &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "EVENT_POTION_PUFF", "field_30659", "PARTICLE_EFFECT_STATUS", "f_150130_"), "B");
        return MinecraftSDK::env->SetStaticByteField(clazz, fieldID, value);
    };

    static jmethodID methodID_getPotionContents() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("J", "getPotionContents", "method_57315", "getPotionContents", "m_324886_"), "()Lcwu;");
    }

    static jobject getPotionContents(const jobject& obj) {
                
       const auto methodID = methodID_getPotionContents();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_setPotionContents() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setPotionContents", "method_57316", "setPotionContents", "m_324373_"), "(Lcwu;)V");
    }

    static void setPotionContents(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setPotionContents();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setStack() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setPickupItemStack", "method_57313", "setStack", "m_320726_"), "(Lcuq;)V");
    }

    static void setStack(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setStack();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_initColor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("K", "updateColor", "method_7462", "initColor", "m_36890_"), "()V");
    }

    static void initColor(const jobject& obj) {
                
       const auto methodID = methodID_initColor();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_addEffect() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "addEffect", "method_7463", "addEffect", "m_36870_"), "(Lbrz;)V");
    }

    static void addEffect(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_addEffect();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_initDataTracker() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "defineSynchedData", "method_5693", "initDataTracker", "m_8097_"), "(Laka$a;)V");
    }

    static void initDataTracker(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_initDataTracker();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_tick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("l", "tick", "method_5773", "tick", "m_8119_"), "()V");
    }

    static void tick(const jobject& obj) {
                
       const auto methodID = methodID_tick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_spawnParticles() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "makeParticle", "method_7461", "spawnParticles", "m_36876_"), "(I)V");
    }

    static void spawnParticles(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_spawnParticles();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getColor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("F", "getColor", "method_7460", "getColor", "m_36889_"), "()I");
    }

    static jint getColor(const jobject& obj) {
                
       const auto methodID = methodID_getColor();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_onHit() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "doPostHurtEffects", "method_7450", "onHit", "m_7761_"), "(Lbtn;)V");
    }

    static void onHit(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onHit();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getDefaultItemStack() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("x", "getDefaultPickupItem", "method_57314", "getDefaultItemStack", "m_321416_"), "()Lcuq;");
    }

    static jobject getDefaultItemStack(const jobject& obj) {
                
       const auto methodID = methodID_getDefaultItemStack();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_handleStatus() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "handleEntityEvent", "method_5711", "handleStatus", "m_7822_"), "(B)V");
    }

    static void handleStatus(const jobject& obj, const jbyte& arg0) {
                
       const auto methodID = methodID_handleStatus();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_ENTITY_PROJECTILE_ARROWENTITY_HPP