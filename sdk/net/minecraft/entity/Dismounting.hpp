// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ENTITY_DISMOUNTING_HPP
#define NET_MINECRAFT_ENTITY_DISMOUNTING_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.entity.Dismounting
 * Remapped: coy
 */
namespace Dismounting {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("coy", "net/minecraft/world/entity/vehicle/DismountHelper", "net/minecraft/class_5275", "net/minecraft/entity/Dismounting", "net/minecraft/src/C_1209_"));
        }
        return cachedClass;
    };

    static jmethodID methodID_getDismountOffsets() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "offsetsForDirection", "method_27934", "getDismountOffsets", "m_38467_"), "(Lji;)[[I");
    }

    static jint getDismountOffsets(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getDismountOffsets();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_canDismountInBlock() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "isBlockFloorValid", "method_27932", "canDismountInBlock", "m_38439_"), "(D)Z");
    }

    static jboolean canDismountInBlock(const jdouble& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_canDismountInBlock();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_canPlaceEntityAt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "canDismountTo", "method_27933", "canPlaceEntityAt", "m_38456_"), "(Ldcg;Lbtn;Lewx;)Z");
    }

    static jboolean canPlaceEntityAt(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_canPlaceEntityAt();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID__canPlaceEntityAt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "canDismountTo", "method_33353", "canPlaceEntityAt", "m_150279_"), "(Ldcg;Lexc;Lbtn;Lbua;)Z");
    }

    static jboolean _canPlaceEntityAt(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
       const auto clazz = self();
       const auto methodID = methodID__canPlaceEntityAt();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_getCollisionShape() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "nonClimbableShape", "method_30341", "getCollisionShape", "m_38446_"), "(Ldcc;Ljd;)Lexv;");
    }

    static jobject getCollisionShape(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_getCollisionShape();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getCeilingHeight() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "findCeilingFrom", "method_30343", "getCeilingHeight", "m_38463_"), "(Ljd;ILjava/util/function/Function;)D");
    }

    static jdouble getCeilingHeight(const jobject& arg0, const jint& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_getCeilingHeight();
       return MinecraftSDK::env->CallStaticDoubleMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_findRespawnPos() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "findSafeDismountLocation", "method_30769", "findRespawnPos", "m_38441_"), "(Lbsx;Ldcg;Ljd;Z)Lexc;");
    }

    static jobject findRespawnPos(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jboolean& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_findRespawnPos();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
};

#endif // NET_MINECRAFT_ENTITY_DISMOUNTING_HPP