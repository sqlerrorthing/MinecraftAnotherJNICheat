// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ENTITY_DECORATION_LEASHKNOTENTITY_HPP
#define NET_MINECRAFT_ENTITY_DECORATION_LEASHKNOTENTITY_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.entity.decoration.LeashKnotEntity
 * Remapped: cjb
 */
namespace LeashKnotEntity {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("cjb", "net/minecraft/world/entity/decoration/LeashFenceKnotEntity", "net/minecraft/class_1532", "net/minecraft/entity/decoration/LeashKnotEntity", "net/minecraft/src/C_972_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.entity.decoration.LeashKnotEntity#field_30455
    [[maybe_unused]] static jdouble get_field_field_30455() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "OFFSET_Y", "field_30455", "field_30455", "f_149638_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticDoubleField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.decoration.LeashKnotEntity#field_30455
    [[maybe_unused]] static void set_field_field_30455(const jdouble &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "OFFSET_Y", "field_30455", "field_30455", "f_149638_"), "D");
        return MinecraftSDK::env->SetStaticDoubleField(clazz, fieldID, value);
    };

    static jmethodID methodID_initDataTracker() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "defineSynchedData", "method_5693", "initDataTracker", "m_8097_"), "(Laka$a;)V");
    }

    static void initDataTracker(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_initDataTracker();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_updateAttachmentPosition() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("p", "recalculateBoundingBox", "method_6895", "updateAttachmentPosition", "m_7087_"), "()V");
    }

    static void updateAttachmentPosition(const jobject& obj) {
                
       const auto methodID = methodID_updateAttachmentPosition();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_shouldRender() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "shouldRenderAtSqrDistance", "method_5640", "shouldRender", "m_6783_"), "(D)Z");
    }

    static jboolean shouldRender(const jobject& obj, const jdouble& arg0) {
                
       const auto methodID = methodID_shouldRender();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_onBreak() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "dropItem", "method_6889", "onBreak", "m_31778_"), "(Lbsr;)V");
    }

    static void onBreak(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onBreak();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_writeCustomDataToNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "addAdditionalSaveData", "method_5652", "writeCustomDataToNbt", "m_7380_"), "(Lub;)V");
    }

    static void writeCustomDataToNbt(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_writeCustomDataToNbt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_readCustomDataFromNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "readAdditionalSaveData", "method_5749", "readCustomDataFromNbt", "m_7378_"), "(Lub;)V");
    }

    static void readCustomDataFromNbt(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_readCustomDataFromNbt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_interact() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "interact", "method_5688", "interact", "m_6096_"), "(Lcmx;Lbqq;)Lbqr;");
    }

    static jobject interact(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_interact();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_canStayAttached() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("s", "survives", "method_6888", "canStayAttached", "m_7088_"), "()Z");
    }

    static jboolean canStayAttached(const jobject& obj) {
                
       const auto methodID = methodID_canStayAttached();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getOrCreate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "getOrCreateKnot", "method_6932", "getOrCreate", "m_31844_"), "(Ldcw;Ljd;)Lcjb;");
    }

    static jobject getOrCreate(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_getOrCreate();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_onPlace() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("v", "playPlacementSound", "method_59944", "onPlace", "m_31861_"), "()V");
    }

    static void onPlace(const jobject& obj) {
                
       const auto methodID = methodID_onPlace();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_createSpawnPacket() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getAddEntityPacket", "method_18002", "createSpawnPacket", "m_5654_"), "(Laqt;)Lzg;");
    }

    static jobject createSpawnPacket(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_createSpawnPacket();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getLeashPos() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("s", "getRopeHoldPosition", "method_30951", "getLeashPos", "m_7398_"), "(F)Lexc;");
    }

    static jobject getLeashPos(const jobject& obj, const jfloat& arg0) {
                
       const auto methodID = methodID_getLeashPos();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getPickBlockStack() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("dB", "getPickResult", "method_31480", "getPickBlockStack", "m_142340_"), "()Lcuq;");
    }

    static jobject getPickBlockStack(const jobject& obj) {
                
       const auto methodID = methodID_getPickBlockStack();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_ENTITY_DECORATION_LEASHKNOTENTITY_HPP