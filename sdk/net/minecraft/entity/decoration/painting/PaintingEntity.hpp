// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ENTITY_DECORATION_PAINTING_PAINTINGENTITY_HPP
#define NET_MINECRAFT_ENTITY_DECORATION_PAINTING_PAINTINGENTITY_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.entity.decoration.painting.PaintingEntity
 * Remapped: cjc
 */
namespace PaintingEntity {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("cjc", "net/minecraft/world/entity/decoration/Painting", "net/minecraft/class_1534", "net/minecraft/entity/decoration/painting/PaintingEntity", "net/minecraft/src/C_974_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.entity.decoration.painting.PaintingEntity#VARIANT
    [[maybe_unused]] static jobject get_field_VARIANT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "DATA_PAINTING_VARIANT_ID", "field_38941", "VARIANT", "f_218870_"), "Lajw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.decoration.painting.PaintingEntity#VARIANT
    [[maybe_unused]] static void set_field_VARIANT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "DATA_PAINTING_VARIANT_ID", "field_38941", "VARIANT", "f_218870_"), "Lajw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.decoration.painting.PaintingEntity#VARIANT_MAP_CODEC
    [[maybe_unused]] static jobject get_field_VARIANT_MAP_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "VARIANT_MAP_CODEC", "field_49238", "VARIANT_MAP_CODEC", "f_314801_"), "Lcom/mojang/serialization/MapCodec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.decoration.painting.PaintingEntity#VARIANT_MAP_CODEC
    [[maybe_unused]] static void set_field_VARIANT_MAP_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "VARIANT_MAP_CODEC", "field_49238", "VARIANT_MAP_CODEC", "f_314801_"), "Lcom/mojang/serialization/MapCodec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.decoration.painting.PaintingEntity#VARIANT_ENTRY_CODEC
    [[maybe_unused]] static jobject get_field_VARIANT_ENTRY_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "VARIANT_CODEC", "field_49239", "VARIANT_ENTRY_CODEC", "f_316802_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.decoration.painting.PaintingEntity#VARIANT_ENTRY_CODEC
    [[maybe_unused]] static void set_field_VARIANT_ENTRY_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "VARIANT_CODEC", "field_49239", "VARIANT_ENTRY_CODEC", "f_316802_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.decoration.painting.PaintingEntity#field_51595
    [[maybe_unused]] static jfloat get_field_field_51595() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "DEPTH", "field_51595", "field_51595", "f_336916_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.decoration.painting.PaintingEntity#field_51595
    [[maybe_unused]] static void set_field_field_51595(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "DEPTH", "field_51595", "field_51595", "f_336916_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    static jmethodID methodID_initDataTracker() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "defineSynchedData", "method_5693", "initDataTracker", "m_8097_"), "(Laka$a;)V");
    }

    static void initDataTracker(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_initDataTracker();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_onTrackedDataSet() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "onSyncedDataUpdated", "method_5674", "onTrackedDataSet", "m_7350_"), "(Lajw;)V");
    }

    static void onTrackedDataSet(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onTrackedDataSet();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setVariant() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "setVariant", "method_43402", "setVariant", "m_28464_"), "(Ljm;)V");
    }

    static void setVariant(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setVariant();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getVariant() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("v", "getVariant", "method_43404", "getVariant", "m_28554_"), "()Ljm;");
    }

    static jobject getVariant(const jobject& obj) {
                
       const auto methodID = methodID_getVariant();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_placePainting() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "create", "method_43401", "placePainting", "m_218887_"), "(Ldcw;Ljd;Lji;)Ljava/util/Optional;");
    }

    static jobject placePainting(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_placePainting();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_getSize() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "variantArea", "method_43403", "getSize", "m_218898_"), "(Ljm;)I");
    }

    static jint getSize(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getSize();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_writeCustomDataToNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "addAdditionalSaveData", "method_5652", "writeCustomDataToNbt", "m_7380_"), "(Lub;)V");
    }

    static void writeCustomDataToNbt(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_writeCustomDataToNbt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_readCustomDataFromNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "readAdditionalSaveData", "method_5749", "readCustomDataFromNbt", "m_7378_"), "(Lub;)V");
    }

    static void readCustomDataFromNbt(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_readCustomDataFromNbt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_calculateBoundingBox() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "calculateBoundingBox", "method_59943", "calculateBoundingBox", "m_338754_"), "(Ljd;Lji;)Lewx;");
    }

    static jobject calculateBoundingBox(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_calculateBoundingBox();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getOffset() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "offsetForPaintingSize", "method_59946", "getOffset", "m_339800_"), "(I)D");
    }

    static jdouble getOffset(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_getOffset();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_onBreak() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "dropItem", "method_6889", "onBreak", "m_31778_"), "(Lbsr;)V");
    }

    static void onBreak(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onBreak();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_onPlace() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("C", "playPlacementSound", "method_6894", "onPlace", "m_7084_"), "()V");
    }

    static void onPlace(const jobject& obj) {
                
       const auto methodID = methodID_onPlace();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_refreshPositionAndAngles() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "moveTo", "method_5808", "refreshPositionAndAngles", "m_7678_"), "(DDDFF)V");
    }

    static void refreshPositionAndAngles(const jobject& obj, const jdouble& arg0, const jdouble& arg1, const jdouble& arg2, const jfloat& arg3, const jfloat& arg4) {
                
       const auto methodID = methodID_refreshPositionAndAngles();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_updateTrackedPositionAndAngles() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "lerpTo", "method_5759", "updateTrackedPositionAndAngles", "m_6453_"), "(DDDFFI)V");
    }

    static void updateTrackedPositionAndAngles(const jobject& obj, const jdouble& arg0, const jdouble& arg1, const jdouble& arg2, const jfloat& arg3, const jfloat& arg4, const jint& arg5) {
                
       const auto methodID = methodID_updateTrackedPositionAndAngles();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5);
    };
    
    static jmethodID methodID_getSyncedPos() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("dn", "trackingPosition", "method_43390", "getSyncedPos", "m_213870_"), "()Lexc;");
    }

    static jobject getSyncedPos(const jobject& obj) {
                
       const auto methodID = methodID_getSyncedPos();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_createSpawnPacket() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getAddEntityPacket", "method_18002", "createSpawnPacket", "m_5654_"), "(Laqt;)Lzg;");
    }

    static jobject createSpawnPacket(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_createSpawnPacket();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_onSpawnPacket() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "recreateFromPacket", "method_31471", "onSpawnPacket", "m_141965_"), "(Labv;)V");
    }

    static void onSpawnPacket(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onSpawnPacket();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getPickBlockStack() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("dB", "getPickResult", "method_31480", "getPickBlockStack", "m_142340_"), "()Lcuq;");
    }

    static jobject getPickBlockStack(const jobject& obj) {
                
       const auto methodID = methodID_getPickBlockStack();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_ENTITY_DECORATION_PAINTING_PAINTINGENTITY_HPP