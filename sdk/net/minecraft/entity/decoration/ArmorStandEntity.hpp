// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ENTITY_DECORATION_ARMORSTANDENTITY_HPP
#define NET_MINECRAFT_ENTITY_DECORATION_ARMORSTANDENTITY_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.entity.decoration.ArmorStandEntity
 * Remapped: ciw
 */
namespace ArmorStandEntity {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("ciw", "net/minecraft/world/entity/decoration/ArmorStand", "net/minecraft/class_1531", "net/minecraft/entity/decoration/ArmorStandEntity", "net/minecraft/src/C_966_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.entity.decoration.ArmorStandEntity#field_30443
    [[maybe_unused]] static jint get_field_field_30443() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "WOBBLE_TIME", "field_30443", "field_30443", "f_149592_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.decoration.ArmorStandEntity#field_30443
    [[maybe_unused]] static void set_field_field_30443(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "WOBBLE_TIME", "field_30443", "field_30443", "f_149592_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.decoration.ArmorStandEntity#field_30445
    [[maybe_unused]] static jboolean get_field_field_30445() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bP", "ENABLE_ARMS", "field_30445", "field_30445", "f_149595_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.decoration.ArmorStandEntity#field_30445
    [[maybe_unused]] static void set_field_field_30445(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bP", "ENABLE_ARMS", "field_30445", "field_30445", "f_149595_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.decoration.ArmorStandEntity#DEFAULT_HEAD_ROTATION
    [[maybe_unused]] static jobject get_field_DEFAULT_HEAD_ROTATION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bQ", "DEFAULT_HEAD_POSE", "field_7113", "DEFAULT_HEAD_ROTATION", "f_31529_"), "Lke;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.decoration.ArmorStandEntity#DEFAULT_HEAD_ROTATION
    [[maybe_unused]] static void set_field_DEFAULT_HEAD_ROTATION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bQ", "DEFAULT_HEAD_POSE", "field_7113", "DEFAULT_HEAD_ROTATION", "f_31529_"), "Lke;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.decoration.ArmorStandEntity#DEFAULT_BODY_ROTATION
    [[maybe_unused]] static jobject get_field_DEFAULT_BODY_ROTATION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bR", "DEFAULT_BODY_POSE", "field_7119", "DEFAULT_BODY_ROTATION", "f_31530_"), "Lke;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.decoration.ArmorStandEntity#DEFAULT_BODY_ROTATION
    [[maybe_unused]] static void set_field_DEFAULT_BODY_ROTATION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bR", "DEFAULT_BODY_POSE", "field_7119", "DEFAULT_BODY_ROTATION", "f_31530_"), "Lke;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.decoration.ArmorStandEntity#DEFAULT_LEFT_ARM_ROTATION
    [[maybe_unused]] static jobject get_field_DEFAULT_LEFT_ARM_ROTATION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bS", "DEFAULT_LEFT_ARM_POSE", "field_7124", "DEFAULT_LEFT_ARM_ROTATION", "f_31531_"), "Lke;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.decoration.ArmorStandEntity#DEFAULT_LEFT_ARM_ROTATION
    [[maybe_unused]] static void set_field_DEFAULT_LEFT_ARM_ROTATION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bS", "DEFAULT_LEFT_ARM_POSE", "field_7124", "DEFAULT_LEFT_ARM_ROTATION", "f_31531_"), "Lke;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.decoration.ArmorStandEntity#DEFAULT_RIGHT_ARM_ROTATION
    [[maybe_unused]] static jobject get_field_DEFAULT_RIGHT_ARM_ROTATION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bT", "DEFAULT_RIGHT_ARM_POSE", "field_7115", "DEFAULT_RIGHT_ARM_ROTATION", "f_31532_"), "Lke;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.decoration.ArmorStandEntity#DEFAULT_RIGHT_ARM_ROTATION
    [[maybe_unused]] static void set_field_DEFAULT_RIGHT_ARM_ROTATION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bT", "DEFAULT_RIGHT_ARM_POSE", "field_7115", "DEFAULT_RIGHT_ARM_ROTATION", "f_31532_"), "Lke;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.decoration.ArmorStandEntity#DEFAULT_LEFT_LEG_ROTATION
    [[maybe_unused]] static jobject get_field_DEFAULT_LEFT_LEG_ROTATION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bU", "DEFAULT_LEFT_LEG_POSE", "field_7121", "DEFAULT_LEFT_LEG_ROTATION", "f_31533_"), "Lke;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.decoration.ArmorStandEntity#DEFAULT_LEFT_LEG_ROTATION
    [[maybe_unused]] static void set_field_DEFAULT_LEFT_LEG_ROTATION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bU", "DEFAULT_LEFT_LEG_POSE", "field_7121", "DEFAULT_LEFT_LEG_ROTATION", "f_31533_"), "Lke;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.decoration.ArmorStandEntity#DEFAULT_RIGHT_LEG_ROTATION
    [[maybe_unused]] static jobject get_field_DEFAULT_RIGHT_LEG_ROTATION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bV", "DEFAULT_RIGHT_LEG_POSE", "field_7117", "DEFAULT_RIGHT_LEG_ROTATION", "f_31534_"), "Lke;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.decoration.ArmorStandEntity#DEFAULT_RIGHT_LEG_ROTATION
    [[maybe_unused]] static void set_field_DEFAULT_RIGHT_LEG_ROTATION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bV", "DEFAULT_RIGHT_LEG_POSE", "field_7117", "DEFAULT_RIGHT_LEG_ROTATION", "f_31534_"), "Lke;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.decoration.ArmorStandEntity#MARKER_DIMENSIONS
    [[maybe_unused]] static jobject get_field_MARKER_DIMENSIONS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bW", "MARKER_DIMENSIONS", "field_26745", "MARKER_DIMENSIONS", "f_31535_"), "Lbsu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.decoration.ArmorStandEntity#MARKER_DIMENSIONS
    [[maybe_unused]] static void set_field_MARKER_DIMENSIONS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bW", "MARKER_DIMENSIONS", "field_26745", "MARKER_DIMENSIONS", "f_31535_"), "Lbsu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.decoration.ArmorStandEntity#SMALL_DIMENSIONS
    [[maybe_unused]] static jobject get_field_SMALL_DIMENSIONS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bX", "BABY_DIMENSIONS", "field_26746", "SMALL_DIMENSIONS", "f_31536_"), "Lbsu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.decoration.ArmorStandEntity#SMALL_DIMENSIONS
    [[maybe_unused]] static void set_field_SMALL_DIMENSIONS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bX", "BABY_DIMENSIONS", "field_26746", "SMALL_DIMENSIONS", "f_31536_"), "Lbsu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.decoration.ArmorStandEntity#field_30447
    [[maybe_unused]] static jdouble get_field_field_30447() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bY", "FEET_OFFSET", "field_30447", "field_30447", "f_149596_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticDoubleField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.decoration.ArmorStandEntity#field_30447
    [[maybe_unused]] static void set_field_field_30447(const jdouble &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bY", "FEET_OFFSET", "field_30447", "field_30447", "f_149596_"), "D");
        return MinecraftSDK::env->SetStaticDoubleField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.decoration.ArmorStandEntity#field_30448
    [[maybe_unused]] static jdouble get_field_field_30448() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bZ", "CHEST_OFFSET", "field_30448", "field_30448", "f_149597_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticDoubleField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.decoration.ArmorStandEntity#field_30448
    [[maybe_unused]] static void set_field_field_30448(const jdouble &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bZ", "CHEST_OFFSET", "field_30448", "field_30448", "f_149597_"), "D");
        return MinecraftSDK::env->SetStaticDoubleField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.decoration.ArmorStandEntity#field_30449
    [[maybe_unused]] static jdouble get_field_field_30449() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ca", "LEGS_OFFSET", "field_30449", "field_30449", "f_149598_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticDoubleField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.decoration.ArmorStandEntity#field_30449
    [[maybe_unused]] static void set_field_field_30449(const jdouble &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ca", "LEGS_OFFSET", "field_30449", "field_30449", "f_149598_"), "D");
        return MinecraftSDK::env->SetStaticDoubleField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.decoration.ArmorStandEntity#field_30450
    [[maybe_unused]] static jdouble get_field_field_30450() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cb", "HEAD_OFFSET", "field_30450", "field_30450", "f_149600_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticDoubleField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.decoration.ArmorStandEntity#field_30450
    [[maybe_unused]] static void set_field_field_30450(const jdouble &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cb", "HEAD_OFFSET", "field_30450", "field_30450", "f_149600_"), "D");
        return MinecraftSDK::env->SetStaticDoubleField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.decoration.ArmorStandEntity#field_30446
    [[maybe_unused]] static jint get_field_field_30446() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "DISABLE_TAKING_OFFSET", "field_30446", "field_30446", "f_149599_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.decoration.ArmorStandEntity#field_30446
    [[maybe_unused]] static void set_field_field_30446(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "DISABLE_TAKING_OFFSET", "field_30446", "field_30446", "f_149599_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.decoration.ArmorStandEntity#field_30451
    [[maybe_unused]] static jint get_field_field_30451() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "DISABLE_PUTTING_OFFSET", "field_30451", "field_30451", "f_149601_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.decoration.ArmorStandEntity#field_30451
    [[maybe_unused]] static void set_field_field_30451(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "DISABLE_PUTTING_OFFSET", "field_30451", "field_30451", "f_149601_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.decoration.ArmorStandEntity#SMALL_FLAG
    [[maybe_unused]] static jint get_field_SMALL_FLAG() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "CLIENT_FLAG_SMALL", "field_30452", "SMALL_FLAG", "f_149602_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.decoration.ArmorStandEntity#SMALL_FLAG
    [[maybe_unused]] static void set_field_SMALL_FLAG(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "CLIENT_FLAG_SMALL", "field_30452", "SMALL_FLAG", "f_149602_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.decoration.ArmorStandEntity#SHOW_ARMS_FLAG
    [[maybe_unused]] static jint get_field_SHOW_ARMS_FLAG() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "CLIENT_FLAG_SHOW_ARMS", "field_30453", "SHOW_ARMS_FLAG", "f_149603_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.decoration.ArmorStandEntity#SHOW_ARMS_FLAG
    [[maybe_unused]] static void set_field_SHOW_ARMS_FLAG(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "CLIENT_FLAG_SHOW_ARMS", "field_30453", "SHOW_ARMS_FLAG", "f_149603_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.decoration.ArmorStandEntity#HIDE_BASE_PLATE_FLAG
    [[maybe_unused]] static jint get_field_HIDE_BASE_PLATE_FLAG() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "CLIENT_FLAG_NO_BASEPLATE", "field_30442", "HIDE_BASE_PLATE_FLAG", "f_149593_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.decoration.ArmorStandEntity#HIDE_BASE_PLATE_FLAG
    [[maybe_unused]] static void set_field_HIDE_BASE_PLATE_FLAG(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "CLIENT_FLAG_NO_BASEPLATE", "field_30442", "HIDE_BASE_PLATE_FLAG", "f_149593_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.decoration.ArmorStandEntity#MARKER_FLAG
    [[maybe_unused]] static jint get_field_MARKER_FLAG() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "CLIENT_FLAG_MARKER", "field_30444", "MARKER_FLAG", "f_149594_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.decoration.ArmorStandEntity#MARKER_FLAG
    [[maybe_unused]] static void set_field_MARKER_FLAG(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "CLIENT_FLAG_MARKER", "field_30444", "MARKER_FLAG", "f_149594_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.decoration.ArmorStandEntity#ARMOR_STAND_FLAGS
    [[maybe_unused]] static jobject get_field_ARMOR_STAND_FLAGS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bH", "DATA_CLIENT_FLAGS", "field_7107", "ARMOR_STAND_FLAGS", "f_31524_"), "Lajw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.decoration.ArmorStandEntity#ARMOR_STAND_FLAGS
    [[maybe_unused]] static void set_field_ARMOR_STAND_FLAGS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bH", "DATA_CLIENT_FLAGS", "field_7107", "ARMOR_STAND_FLAGS", "f_31524_"), "Lajw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.decoration.ArmorStandEntity#TRACKER_HEAD_ROTATION
    [[maybe_unused]] static jobject get_field_TRACKER_HEAD_ROTATION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bI", "DATA_HEAD_POSE", "field_7123", "TRACKER_HEAD_ROTATION", "f_31546_"), "Lajw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.decoration.ArmorStandEntity#TRACKER_HEAD_ROTATION
    [[maybe_unused]] static void set_field_TRACKER_HEAD_ROTATION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bI", "DATA_HEAD_POSE", "field_7123", "TRACKER_HEAD_ROTATION", "f_31546_"), "Lajw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.decoration.ArmorStandEntity#TRACKER_BODY_ROTATION
    [[maybe_unused]] static jobject get_field_TRACKER_BODY_ROTATION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bJ", "DATA_BODY_POSE", "field_7122", "TRACKER_BODY_ROTATION", "f_31547_"), "Lajw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.decoration.ArmorStandEntity#TRACKER_BODY_ROTATION
    [[maybe_unused]] static void set_field_TRACKER_BODY_ROTATION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bJ", "DATA_BODY_POSE", "field_7122", "TRACKER_BODY_ROTATION", "f_31547_"), "Lajw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.decoration.ArmorStandEntity#TRACKER_LEFT_ARM_ROTATION
    [[maybe_unused]] static jobject get_field_TRACKER_LEFT_ARM_ROTATION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bK", "DATA_LEFT_ARM_POSE", "field_7116", "TRACKER_LEFT_ARM_ROTATION", "f_31548_"), "Lajw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.decoration.ArmorStandEntity#TRACKER_LEFT_ARM_ROTATION
    [[maybe_unused]] static void set_field_TRACKER_LEFT_ARM_ROTATION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bK", "DATA_LEFT_ARM_POSE", "field_7116", "TRACKER_LEFT_ARM_ROTATION", "f_31548_"), "Lajw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.decoration.ArmorStandEntity#TRACKER_RIGHT_ARM_ROTATION
    [[maybe_unused]] static jobject get_field_TRACKER_RIGHT_ARM_ROTATION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bL", "DATA_RIGHT_ARM_POSE", "field_7105", "TRACKER_RIGHT_ARM_ROTATION", "f_31549_"), "Lajw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.decoration.ArmorStandEntity#TRACKER_RIGHT_ARM_ROTATION
    [[maybe_unused]] static void set_field_TRACKER_RIGHT_ARM_ROTATION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bL", "DATA_RIGHT_ARM_POSE", "field_7105", "TRACKER_RIGHT_ARM_ROTATION", "f_31549_"), "Lajw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.decoration.ArmorStandEntity#TRACKER_LEFT_LEG_ROTATION
    [[maybe_unused]] static jobject get_field_TRACKER_LEFT_LEG_ROTATION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bM", "DATA_LEFT_LEG_POSE", "field_7127", "TRACKER_LEFT_LEG_ROTATION", "f_31550_"), "Lajw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.decoration.ArmorStandEntity#TRACKER_LEFT_LEG_ROTATION
    [[maybe_unused]] static void set_field_TRACKER_LEFT_LEG_ROTATION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bM", "DATA_LEFT_LEG_POSE", "field_7127", "TRACKER_LEFT_LEG_ROTATION", "f_31550_"), "Lajw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.decoration.ArmorStandEntity#TRACKER_RIGHT_LEG_ROTATION
    [[maybe_unused]] static jobject get_field_TRACKER_RIGHT_LEG_ROTATION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bN", "DATA_RIGHT_LEG_POSE", "field_7125", "TRACKER_RIGHT_LEG_ROTATION", "f_31527_"), "Lajw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.decoration.ArmorStandEntity#TRACKER_RIGHT_LEG_ROTATION
    [[maybe_unused]] static void set_field_TRACKER_RIGHT_LEG_ROTATION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bN", "DATA_RIGHT_LEG_POSE", "field_7125", "TRACKER_RIGHT_LEG_ROTATION", "f_31527_"), "Lajw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.decoration.ArmorStandEntity#RIDEABLE_MINECART_PREDICATE
    [[maybe_unused]] static jobject get_field_RIDEABLE_MINECART_PREDICATE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cc", "RIDABLE_MINECARTS", "field_7102", "RIDEABLE_MINECART_PREDICATE", "f_31537_"), "Ljava/util/function/Predicate;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.decoration.ArmorStandEntity#RIDEABLE_MINECART_PREDICATE
    [[maybe_unused]] static void set_field_RIDEABLE_MINECART_PREDICATE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cc", "RIDABLE_MINECARTS", "field_7102", "RIDEABLE_MINECART_PREDICATE", "f_31537_"), "Ljava/util/function/Predicate;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.entity.decoration.ArmorStandEntity#heldItems
    static jobject get_field_heldItems(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cd", "handItems", "field_7114", "heldItems", "f_31538_"), "Ljv;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.decoration.ArmorStandEntity#heldItems
    static void set_field_heldItems(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cd", "handItems", "field_7114", "heldItems", "f_31538_"), "Ljv;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.decoration.ArmorStandEntity#armorItems
    static jobject get_field_armorItems(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ce", "armorItems", "field_7108", "armorItems", "f_31539_"), "Ljv;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.decoration.ArmorStandEntity#armorItems
    static void set_field_armorItems(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ce", "armorItems", "field_7108", "armorItems", "f_31539_"), "Ljv;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.decoration.ArmorStandEntity#invisible
    static jboolean get_field_invisible(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cf", "invisible", "field_7111", "invisible", "f_31540_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.decoration.ArmorStandEntity#invisible
    static void set_field_invisible(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cf", "invisible", "field_7111", "invisible", "f_31540_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.entity.decoration.ArmorStandEntity#lastHitTime
    static jlong get_field_lastHitTime(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bO", "lastHit", "field_7112", "lastHitTime", "f_31528_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static public field net.minecraft.entity.decoration.ArmorStandEntity#lastHitTime
    static void set_field_lastHitTime(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bO", "lastHit", "field_7112", "lastHitTime", "f_31528_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.decoration.ArmorStandEntity#disabledSlots
    static jint get_field_disabledSlots(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cg", "disabledSlots", "field_7118", "disabledSlots", "f_31541_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.decoration.ArmorStandEntity#disabledSlots
    static void set_field_disabledSlots(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cg", "disabledSlots", "field_7118", "disabledSlots", "f_31541_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.decoration.ArmorStandEntity#headRotation
    static jobject get_field_headRotation(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ch", "headPose", "field_7104", "headRotation", "f_31542_"), "Lke;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.decoration.ArmorStandEntity#headRotation
    static void set_field_headRotation(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ch", "headPose", "field_7104", "headRotation", "f_31542_"), "Lke;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.decoration.ArmorStandEntity#bodyRotation
    static jobject get_field_bodyRotation(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ci", "bodyPose", "field_7106", "bodyRotation", "f_31543_"), "Lke;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.decoration.ArmorStandEntity#bodyRotation
    static void set_field_bodyRotation(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ci", "bodyPose", "field_7106", "bodyRotation", "f_31543_"), "Lke;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.decoration.ArmorStandEntity#leftArmRotation
    static jobject get_field_leftArmRotation(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cj", "leftArmPose", "field_7126", "leftArmRotation", "f_31544_"), "Lke;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.decoration.ArmorStandEntity#leftArmRotation
    static void set_field_leftArmRotation(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cj", "leftArmPose", "field_7126", "leftArmRotation", "f_31544_"), "Lke;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.decoration.ArmorStandEntity#rightArmRotation
    static jobject get_field_rightArmRotation(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ck", "rightArmPose", "field_7120", "rightArmRotation", "f_31545_"), "Lke;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.decoration.ArmorStandEntity#rightArmRotation
    static void set_field_rightArmRotation(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ck", "rightArmPose", "field_7120", "rightArmRotation", "f_31545_"), "Lke;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.decoration.ArmorStandEntity#leftLegRotation
    static jobject get_field_leftLegRotation(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cl", "leftLegPose", "field_7110", "leftLegRotation", "f_31525_"), "Lke;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.decoration.ArmorStandEntity#leftLegRotation
    static void set_field_leftLegRotation(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cl", "leftLegPose", "field_7110", "leftLegRotation", "f_31525_"), "Lke;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.decoration.ArmorStandEntity#rightLegRotation
    static jobject get_field_rightLegRotation(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cm", "rightLegPose", "field_7103", "rightLegRotation", "f_31526_"), "Lke;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.decoration.ArmorStandEntity#rightLegRotation
    static void set_field_rightLegRotation(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cm", "rightLegPose", "field_7103", "rightLegRotation", "f_31526_"), "Lke;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_createArmorStandAttributes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("s", "createAttributes", "method_55745", "createArmorStandAttributes", "m_321608_"), "()Lbuv$a;");
    }

    static jobject createArmorStandAttributes() {
       const auto clazz = self();
       const auto methodID = methodID_createArmorStandAttributes();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_calculateDimensions() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("i_", "refreshDimensions", "method_18382", "calculateDimensions", "m_6210_"), "()V");
    }

    static void calculateDimensions(const jobject& obj) {
                
       const auto methodID = methodID_calculateDimensions();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_canClip() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("H", "hasPhysics", "method_18059", "canClip", "m_31560_"), "()Z");
    }

    static jboolean canClip(const jobject& obj) {
                
       const auto methodID = methodID_canClip();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_canMoveVoluntarily() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("db", "isEffectiveAi", "method_6034", "canMoveVoluntarily", "m_21515_"), "()Z");
    }

    static jboolean canMoveVoluntarily(const jobject& obj) {
                
       const auto methodID = methodID_canMoveVoluntarily();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_initDataTracker() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "defineSynchedData", "method_5693", "initDataTracker", "m_8097_"), "(Laka$a;)V");
    }

    static void initDataTracker(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_initDataTracker();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getHandItems() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("eW", "getHandSlots", "method_5877", "getHandItems", "m_21487_"), "()Ljava/lang/Iterable;");
    }

    static jobject getHandItems(const jobject& obj) {
                
       const auto methodID = methodID_getHandItems();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getArmorItems() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("eV", "getArmorSlots", "method_5661", "getArmorItems", "m_21151_"), "()Ljava/lang/Iterable;");
    }

    static jobject getArmorItems(const jobject& obj) {
                
       const auto methodID = methodID_getArmorItems();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getEquippedStack() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getItemBySlot", "method_6118", "getEquippedStack", "m_6844_"), "(Lbsy;)Lcuq;");
    }

    static jobject getEquippedStack(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getEquippedStack();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_canUseSlot() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "canUseSlot", "method_56991", "canUseSlot", "m_30729_"), "(Lbsy;)Z");
    }

    static jboolean canUseSlot(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_canUseSlot();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_equipStack() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setItemSlot", "method_5673", "equipStack", "m_21035_"), "(Lbsy;Lcuq;)V");
    }

    static void equipStack(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_equipStack();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_canEquip() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "canTakeItem", "method_18397", "canEquip", "m_7066_"), "(Lcuq;)Z");
    }

    static jboolean canEquip(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_canEquip();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_writeCustomDataToNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "addAdditionalSaveData", "method_5652", "writeCustomDataToNbt", "m_7380_"), "(Lub;)V");
    }

    static void writeCustomDataToNbt(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_writeCustomDataToNbt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_readCustomDataFromNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "readAdditionalSaveData", "method_5749", "readCustomDataFromNbt", "m_7378_"), "(Lub;)V");
    }

    static void readCustomDataFromNbt(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_readCustomDataFromNbt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_readPoseNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "readPose", "method_6928", "readPoseNbt", "m_31657_"), "(Lub;)V");
    }

    static void readPoseNbt(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_readPoseNbt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_poseToNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("I", "writePose", "method_6911", "poseToNbt", "m_31561_"), "()Lub;");
    }

    static jobject poseToNbt(const jobject& obj) {
                
       const auto methodID = methodID_poseToNbt();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_isPushable() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("bB", "isPushable", "method_5810", "isPushable", "m_6094_"), "()Z");
    }

    static jboolean isPushable(const jobject& obj) {
                
       const auto methodID = methodID_isPushable();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_pushAway() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("E", "doPush", "method_6087", "pushAway", "m_7324_"), "(Lbsr;)V");
    }

    static void pushAway(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_pushAway();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_tickCramming() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("r", "pushEntities", "method_6070", "tickCramming", "m_6138_"), "()V");
    }

    static void tickCramming(const jobject& obj) {
                
       const auto methodID = methodID_tickCramming();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_interactAt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "interactAt", "method_5664", "interactAt", "m_7111_"), "(Lcmx;Lexc;Lbqq;)Lbqr;");
    }

    static jobject interactAt(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_interactAt();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_getSlotFromPosition() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getClickedSlot", "method_6916", "getSlotFromPosition", "m_31659_"), "(Lexc;)Lbsy;");
    }

    static jobject getSlotFromPosition(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getSlotFromPosition();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isSlotDisabled() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "isDisabled", "method_6915", "isSlotDisabled", "m_31626_"), "(Lbsy;)Z");
    }

    static jboolean isSlotDisabled(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_isSlotDisabled();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_equip() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "swapItem", "method_6904", "equip", "m_31588_"), "(Lcmx;Lbsy;Lcuq;Lbqq;)Z");
    }

    static jboolean equip(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_equip();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_damage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "hurt", "method_5643", "damage", "m_6469_"), "(Lbrk;F)Z");
    }

    static jboolean damage(const jobject& obj, const jobject& arg0, const jfloat& arg1) {
                
       const auto methodID = methodID_damage();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_handleStatus() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "handleEntityEvent", "method_5711", "handleStatus", "m_7822_"), "(B)V");
    }

    static void handleStatus(const jobject& obj, const jbyte& arg0) {
                
       const auto methodID = methodID_handleStatus();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_shouldRender() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "shouldRenderAtSqrDistance", "method_5640", "shouldRender", "m_6783_"), "(D)Z");
    }

    static jboolean shouldRender(const jobject& obj, const jdouble& arg0) {
                
       const auto methodID = methodID_shouldRender();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_spawnBreakParticles() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("J", "showBreakingParticles", "method_6898", "spawnBreakParticles", "m_31565_"), "()V");
    }

    static void spawnBreakParticles(const jobject& obj) {
                
       const auto methodID = methodID_spawnBreakParticles();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_updateHealth() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "causeDamage", "method_6905", "updateHealth", "m_31648_"), "(Laqu;Lbrk;F)V");
    }

    static void updateHealth(const jobject& obj, const jobject& arg0, const jobject& arg1, const jfloat& arg2) {
                
       const auto methodID = methodID_updateHealth();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_breakAndDropItem() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "brokenByPlayer", "method_6924", "breakAndDropItem", "m_31646_"), "(Laqu;Lbrk;)V");
    }

    static void breakAndDropItem(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_breakAndDropItem();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_onBreak() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "brokenByAnything", "method_6908", "onBreak", "m_31653_"), "(Laqu;Lbrk;)V");
    }

    static void onBreak(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_onBreak();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_playBreakSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("L", "playBrokenSound", "method_6920", "playBreakSound", "m_31566_"), "()V");
    }

    static void playBreakSound(const jobject& obj) {
                
       const auto methodID = methodID_playBreakSound();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_turnHead() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "tickHeadTurn", "method_6031", "turnHead", "m_5632_"), "(FF)F");
    }

    static jfloat turnHead(const jobject& obj, const jfloat& arg0, const jfloat& arg1) {
                
       const auto methodID = methodID_turnHead();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_travel() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "travel", "method_6091", "travel", "m_7023_"), "(Lexc;)V");
    }

    static void travel(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_travel();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setBodyYaw() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("p", "setYBodyRot", "method_5636", "setBodyYaw", "m_5618_"), "(F)V");
    }

    static void setBodyYaw(const jobject& obj, const jfloat& arg0) {
                
       const auto methodID = methodID_setBodyYaw();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setHeadYaw() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("o", "setYHeadRot", "method_5847", "setHeadYaw", "m_5616_"), "(F)V");
    }

    static void setHeadYaw(const jobject& obj, const jfloat& arg0) {
                
       const auto methodID = methodID_setHeadYaw();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_tick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("l", "tick", "method_5773", "tick", "m_8119_"), "()V");
    }

    static void tick(const jobject& obj) {
                
       const auto methodID = methodID_tick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_updatePotionVisibility() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("K", "updateInvisibilityStatus", "method_6027", "updatePotionVisibility", "m_8034_"), "()V");
    }

    static void updatePotionVisibility(const jobject& obj) {
                
       const auto methodID = methodID_updatePotionVisibility();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_setInvisible() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("k", "setInvisible", "method_5648", "setInvisible", "m_6842_"), "(Z)V");
    }

    static void setInvisible(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setInvisible();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isBaby() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("o_", "isBaby", "method_6109", "isBaby", "m_6162_"), "()Z");
    }

    static jboolean isBaby(const jobject& obj) {
                
       const auto methodID = methodID_isBaby();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_kill() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ap", "kill", "method_5768", "kill", "m_6074_"), "()V");
    }

    static void kill(const jobject& obj) {
                
       const auto methodID = methodID_kill();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_isImmuneToExplosion() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "ignoreExplosion", "method_5659", "isImmuneToExplosion", "m_6128_"), "(Ldco;)Z");
    }

    static jboolean isImmuneToExplosion(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_isImmuneToExplosion();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getPistonBehavior() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("j_", "getPistonPushReaction", "method_5657", "getPistonBehavior", "m_7752_"), "()Lepj;");
    }

    static jobject getPistonBehavior(const jobject& obj) {
                
       const auto methodID = methodID_getPistonBehavior();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_canAvoidTraps() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("r_", "isIgnoringBlockTriggers", "method_5696", "canAvoidTraps", "m_6090_"), "()Z");
    }

    static jboolean canAvoidTraps(const jobject& obj) {
                
       const auto methodID = methodID_canAvoidTraps();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_setSmall() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("u", "setSmall", "method_6922", "setSmall", "m_31603_"), "(Z)V");
    }

    static void setSmall(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setSmall();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isSmall() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("t", "isSmall", "method_6914", "isSmall", "m_31666_"), "()Z");
    }

    static jboolean isSmall(const jobject& obj) {
                
       const auto methodID = methodID_isSmall();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_setShowArms() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setShowArms", "method_6913", "setShowArms", "m_31675_"), "(Z)V");
    }

    static void setShowArms(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setShowArms();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_shouldShowArms() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("v", "isShowArms", "method_6929", "shouldShowArms", "m_31671_"), "()Z");
    }

    static jboolean shouldShowArms(const jobject& obj) {
                
       const auto methodID = methodID_shouldShowArms();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_setHideBasePlate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "setNoBasePlate", "method_6907", "setHideBasePlate", "m_31678_"), "(Z)V");
    }

    static void setHideBasePlate(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setHideBasePlate();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_shouldHideBasePlate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("x", "isNoBasePlate", "method_6901", "shouldHideBasePlate", "m_31674_"), "()Z");
    }

    static jboolean shouldHideBasePlate(const jobject& obj) {
                
       const auto methodID = methodID_shouldHideBasePlate();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_setMarker() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("v", "setMarker", "method_6902", "setMarker", "m_31681_"), "(Z)V");
    }

    static void setMarker(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setMarker();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isMarker() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("z", "isMarker", "method_6912", "isMarker", "m_31677_"), "()Z");
    }

    static jboolean isMarker(const jobject& obj) {
                
       const auto methodID = methodID_isMarker();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_setBitField() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setBit", "method_6906", "setBitField", "m_31569_"), "(BIZ)B");
    }

    static jbyte setBitField(const jobject& obj, const jbyte& arg0, const jint& arg1, const jboolean& arg2) {
                
       const auto methodID = methodID_setBitField();
       return MinecraftSDK::env->CallByteMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_setHeadRotation() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setHeadPose", "method_6919", "setHeadRotation", "m_31597_"), "(Lke;)V");
    }

    static void setHeadRotation(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setHeadRotation();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setBodyRotation() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "setBodyPose", "method_6927", "setBodyRotation", "m_31616_"), "(Lke;)V");
    }

    static void setBodyRotation(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setBodyRotation();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setLeftArmRotation() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "setLeftArmPose", "method_6910", "setLeftArmRotation", "m_31623_"), "(Lke;)V");
    }

    static void setLeftArmRotation(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setLeftArmRotation();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setRightArmRotation() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "setRightArmPose", "method_6925", "setRightArmRotation", "m_31628_"), "(Lke;)V");
    }

    static void setRightArmRotation(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setRightArmRotation();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setLeftLegRotation() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "setLeftLegPose", "method_6909", "setLeftLegRotation", "m_31639_"), "(Lke;)V");
    }

    static void setLeftLegRotation(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setLeftLegRotation();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setRightLegRotation() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "setRightLegPose", "method_6926", "setRightLegRotation", "m_31651_"), "(Lke;)V");
    }

    static void setRightLegRotation(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setRightLegRotation();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getHeadRotation() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("A", "getHeadPose", "method_6921", "getHeadRotation", "m_31680_"), "()Lke;");
    }

    static jobject getHeadRotation(const jobject& obj) {
                
       const auto methodID = methodID_getHeadRotation();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getBodyRotation() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("B", "getBodyPose", "method_6923", "getBodyRotation", "m_31685_"), "()Lke;");
    }

    static jobject getBodyRotation(const jobject& obj) {
                
       const auto methodID = methodID_getBodyRotation();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getLeftArmRotation() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("C", "getLeftArmPose", "method_6930", "getLeftArmRotation", "m_31688_"), "()Lke;");
    }

    static jobject getLeftArmRotation(const jobject& obj) {
                
       const auto methodID = methodID_getLeftArmRotation();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getRightArmRotation() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("D", "getRightArmPose", "method_6903", "getRightArmRotation", "m_31689_"), "()Lke;");
    }

    static jobject getRightArmRotation(const jobject& obj) {
                
       const auto methodID = methodID_getRightArmRotation();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getLeftLegRotation() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("E", "getLeftLegPose", "method_6917", "getLeftLegRotation", "m_31691_"), "()Lke;");
    }

    static jobject getLeftLegRotation(const jobject& obj) {
                
       const auto methodID = methodID_getLeftLegRotation();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getRightLegRotation() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("F", "getRightLegPose", "method_6900", "getRightLegRotation", "m_31694_"), "()Lke;");
    }

    static jobject getRightLegRotation(const jobject& obj) {
                
       const auto methodID = methodID_getRightLegRotation();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_canHit() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("bA", "isPickable", "method_5863", "canHit", "m_6087_"), "()Z");
    }

    static jboolean canHit(const jobject& obj) {
                
       const auto methodID = methodID_canHit();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_handleAttack() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("u", "skipAttackInteraction", "method_5698", "handleAttack", "m_7313_"), "(Lbsr;)Z");
    }

    static jboolean handleAttack(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_handleAttack();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getMainArm() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("fq", "getMainArm", "method_6068", "getMainArm", "m_5737_"), "()Lbtg;");
    }

    static jobject getMainArm(const jobject& obj) {
                
       const auto methodID = methodID_getMainArm();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getFallSounds() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("eH", "getFallSounds", "method_39760", "getFallSounds", "m_196493_"), "()Lbtn$a;");
    }

    static jobject getFallSounds(const jobject& obj) {
                
       const auto methodID = methodID_getFallSounds();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getHurtSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getHurtSound", "method_6011", "getHurtSound", "m_7975_"), "(Lbrk;)Lavo;");
    }

    static jobject getHurtSound(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getHurtSound();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getDeathSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("n_", "getDeathSound", "method_6002", "getDeathSound", "m_5592_"), "()Lavo;");
    }

    static jobject getDeathSound(const jobject& obj) {
                
       const auto methodID = methodID_getDeathSound();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_onStruckByLightning() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "thunderHit", "method_5800", "onStruckByLightning", "m_8038_"), "(Laqu;Lbtm;)V");
    }

    static void onStruckByLightning(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_onStruckByLightning();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_isAffectedBySplashPotions() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("fC", "isAffectedByPotions", "method_6086", "isAffectedBySplashPotions", "m_5801_"), "()Z");
    }

    static jboolean isAffectedBySplashPotions(const jobject& obj) {
                
       const auto methodID = methodID_isAffectedBySplashPotions();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_onTrackedDataSet() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "onSyncedDataUpdated", "method_5674", "onTrackedDataSet", "m_7350_"), "(Lajw;)V");
    }

    static void onTrackedDataSet(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onTrackedDataSet();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isMobOrPlayer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("fD", "attackable", "method_6102", "isMobOrPlayer", "m_5789_"), "()Z");
    }

    static jboolean isMobOrPlayer(const jobject& obj) {
                
       const auto methodID = methodID_isMobOrPlayer();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getBaseDimensions() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "getDefaultDimensions", "method_55694", "getBaseDimensions", "m_31586_"), "(Lbua;)Lbsu;");
    }

    static jobject getBaseDimensions(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getBaseDimensions();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getDimensions() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("w", "getDimensionsMarker", "method_31168", "getDimensions", "m_31683_"), "(Z)Lbsu;");
    }

    static jobject getDimensions(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_getDimensions();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getClientCameraPosVec() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("l", "getLightProbePosition", "method_31166", "getClientCameraPosVec", "m_7371_"), "(F)Lexc;");
    }

    static jobject getClientCameraPosVec(const jobject& obj, const jfloat& arg0) {
                
       const auto methodID = methodID_getClientCameraPosVec();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getPickBlockStack() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("dB", "getPickResult", "method_31480", "getPickBlockStack", "m_142340_"), "()Lcuq;");
    }

    static jobject getPickBlockStack(const jobject& obj) {
                
       const auto methodID = methodID_getPickBlockStack();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_isPartOfGame() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("eq", "canBeSeenByAnyone", "method_36608", "isPartOfGame", "m_142065_"), "()Z");
    }

    static jboolean isPartOfGame(const jobject& obj) {
                
       const auto methodID = methodID_isPartOfGame();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_ENTITY_DECORATION_ARMORSTANDENTITY_HPP