// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ENTITY_DECORATION_ABSTRACTDECORATIONENTITY_HPP
#define NET_MINECRAFT_ENTITY_DECORATION_ABSTRACTDECORATIONENTITY_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.entity.decoration.AbstractDecorationEntity
 * Remapped: ciz
 */
namespace AbstractDecorationEntity {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("ciz", "net/minecraft/world/entity/decoration/HangingEntity", "net/minecraft/class_1530", "net/minecraft/entity/decoration/AbstractDecorationEntity", "net/minecraft/src/C_968_"));
        }
        return cachedClass;
    };

    // getter for static protected field net.minecraft.entity.decoration.AbstractDecorationEntity#PREDICATE
    [[maybe_unused]] static jobject get_field_PREDICATE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "HANGING_ENTITY", "field_7098", "PREDICATE", "f_31697_"), "Ljava/util/function/Predicate;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static protected field net.minecraft.entity.decoration.AbstractDecorationEntity#PREDICATE
    [[maybe_unused]] static void set_field_PREDICATE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "HANGING_ENTITY", "field_7098", "PREDICATE", "f_31697_"), "Ljava/util/function/Predicate;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for protected field net.minecraft.entity.decoration.AbstractDecorationEntity#facing
    static jobject get_field_facing(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "direction", "field_7099", "facing", "f_31699_"), "Lji;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.entity.decoration.AbstractDecorationEntity#facing
    static void set_field_facing(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "direction", "field_7099", "facing", "f_31699_"), "Lji;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_setFacing() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setDirection", "method_6892", "setFacing", "m_6022_"), "(Lji;)V");
    }

    static void setFacing(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setFacing();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_updateAttachmentPosition() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("p", "recalculateBoundingBox", "method_6895", "updateAttachmentPosition", "m_7087_"), "()V");
    }

    static void updateAttachmentPosition(const jobject& obj) {
                
       const auto methodID = methodID_updateAttachmentPosition();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_calculateBoundingBox() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "calculateBoundingBox", "method_59943", "calculateBoundingBox", "m_338754_"), "(Ljd;Lji;)Lewx;");
    }

    static jobject calculateBoundingBox(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_calculateBoundingBox();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_canStayAttached() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("s", "survives", "method_6888", "canStayAttached", "m_7088_"), "()Z");
    }

    static jboolean canStayAttached(const jobject& obj) {
                
       const auto methodID = methodID_canStayAttached();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getAttachmentBox() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("B", "calculateSupportBox", "method_59941", "getAttachmentBox", "m_339128_"), "()Lewx;");
    }

    static jobject getAttachmentBox(const jobject& obj) {
                
       const auto methodID = methodID_getAttachmentBox();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getHorizontalFacing() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("cH", "getDirection", "method_5735", "getHorizontalFacing", "m_6350_"), "()Lji;");
    }

    static jobject getHorizontalFacing(const jobject& obj) {
                
       const auto methodID = methodID_getHorizontalFacing();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_onPlace() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("C", "playPlacementSound", "method_6894", "onPlace", "m_7084_"), "()V");
    }

    static void onPlace(const jobject& obj) {
                
       const auto methodID = methodID_onPlace();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_dropStack() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "spawnAtLocation", "method_5699", "dropStack", "m_5552_"), "(Lcuq;F)Lcjh;");
    }

    static jobject dropStack(const jobject& obj, const jobject& arg0, const jfloat& arg1) {
                
       const auto methodID = methodID_dropStack();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_applyRotation() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "rotate", "method_5832", "applyRotation", "m_7890_"), "(Ldmm;)F");
    }

    static jfloat applyRotation(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_applyRotation();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_applyMirror() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "mirror", "method_5763", "applyMirror", "m_6961_"), "(Ldkv;)F");
    }

    static jfloat applyMirror(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_applyMirror();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_ENTITY_DECORATION_ABSTRACTDECORATIONENTITY_HPP