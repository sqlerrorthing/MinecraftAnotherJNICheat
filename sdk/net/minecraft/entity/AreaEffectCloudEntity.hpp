// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ENTITY_AREAEFFECTCLOUDENTITY_HPP
#define NET_MINECRAFT_ENTITY_AREAEFFECTCLOUDENTITY_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.entity.AreaEffectCloudEntity
 * Remapped: bsn
 */
namespace AreaEffectCloudEntity {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("bsn", "net/minecraft/world/entity/AreaEffectCloud", "net/minecraft/class_1295", "net/minecraft/entity/AreaEffectCloudEntity", "net/minecraft/src/C_504_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.entity.AreaEffectCloudEntity#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "LOGGER", "field_5935", "LOGGER", "f_19696_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.AreaEffectCloudEntity#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "LOGGER", "field_5935", "LOGGER", "f_19696_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.AreaEffectCloudEntity#field_29972
    [[maybe_unused]] static jint get_field_field_29972() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "TIME_BETWEEN_APPLICATIONS", "field_29972", "field_29972", "f_146782_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.AreaEffectCloudEntity#field_29972
    [[maybe_unused]] static void set_field_field_29972(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "TIME_BETWEEN_APPLICATIONS", "field_29972", "field_29972", "f_146782_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.AreaEffectCloudEntity#RADIUS
    [[maybe_unused]] static jobject get_field_RADIUS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "DATA_RADIUS", "field_5938", "RADIUS", "f_19697_"), "Lajw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.AreaEffectCloudEntity#RADIUS
    [[maybe_unused]] static void set_field_RADIUS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "DATA_RADIUS", "field_5938", "RADIUS", "f_19697_"), "Lajw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.AreaEffectCloudEntity#WAITING
    [[maybe_unused]] static jobject get_field_WAITING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "DATA_WAITING", "field_5944", "WAITING", "f_19699_"), "Lajw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.AreaEffectCloudEntity#WAITING
    [[maybe_unused]] static void set_field_WAITING(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "DATA_WAITING", "field_5944", "WAITING", "f_19699_"), "Lajw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.AreaEffectCloudEntity#PARTICLE_ID
    [[maybe_unused]] static jobject get_field_PARTICLE_ID() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "DATA_PARTICLE", "field_5931", "PARTICLE_ID", "f_19700_"), "Lajw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.AreaEffectCloudEntity#PARTICLE_ID
    [[maybe_unused]] static void set_field_PARTICLE_ID(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "DATA_PARTICLE", "field_5931", "PARTICLE_ID", "f_19700_"), "Lajw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.AreaEffectCloudEntity#MAX_RADIUS
    [[maybe_unused]] static jfloat get_field_MAX_RADIUS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "MAX_RADIUS", "field_29971", "MAX_RADIUS", "f_146781_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.AreaEffectCloudEntity#MAX_RADIUS
    [[maybe_unused]] static void set_field_MAX_RADIUS(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "MAX_RADIUS", "field_29971", "MAX_RADIUS", "f_146781_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.AreaEffectCloudEntity#field_40730
    [[maybe_unused]] static jfloat get_field_field_40730() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "MINIMAL_RADIUS", "field_40730", "field_40730", "f_252417_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.AreaEffectCloudEntity#field_40730
    [[maybe_unused]] static void set_field_field_40730(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "MINIMAL_RADIUS", "field_40730", "field_40730", "f_252417_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.AreaEffectCloudEntity#field_40731
    [[maybe_unused]] static jfloat get_field_field_40731() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "DEFAULT_RADIUS", "field_40731", "field_40731", "f_252519_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.AreaEffectCloudEntity#field_40731
    [[maybe_unused]] static void set_field_field_40731(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "DEFAULT_RADIUS", "field_40731", "field_40731", "f_252519_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.AreaEffectCloudEntity#field_40732
    [[maybe_unused]] static jfloat get_field_field_40732() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "DEFAULT_WIDTH", "field_40732", "field_40732", "f_252512_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.AreaEffectCloudEntity#field_40732
    [[maybe_unused]] static void set_field_field_40732(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "DEFAULT_WIDTH", "field_40732", "field_40732", "f_252512_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.AreaEffectCloudEntity#field_40733
    [[maybe_unused]] static jfloat get_field_field_40733() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "HEIGHT", "field_40733", "field_40733", "f_252504_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.AreaEffectCloudEntity#field_40733
    [[maybe_unused]] static void set_field_field_40733(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "HEIGHT", "field_40733", "field_40733", "f_252504_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.entity.AreaEffectCloudEntity#potionContentsComponent
    static jobject get_field_potionContentsComponent(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "potionContents", "field_49209", "potionContentsComponent", "f_314286_"), "Lcwu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.AreaEffectCloudEntity#potionContentsComponent
    static void set_field_potionContentsComponent(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "potionContents", "field_49209", "potionContentsComponent", "f_314286_"), "Lcwu;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.AreaEffectCloudEntity#affectedEntities
    static jobject get_field_affectedEntities(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "victims", "field_5942", "affectedEntities", "f_19686_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.AreaEffectCloudEntity#affectedEntities
    static void set_field_affectedEntities(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "victims", "field_5942", "affectedEntities", "f_19686_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.AreaEffectCloudEntity#duration
    static jint get_field_duration(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "duration", "field_5939", "duration", "f_19687_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.AreaEffectCloudEntity#duration
    static void set_field_duration(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "duration", "field_5939", "duration", "f_19687_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.AreaEffectCloudEntity#waitTime
    static jint get_field_waitTime(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("o", "waitTime", "field_5941", "waitTime", "f_19688_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.AreaEffectCloudEntity#waitTime
    static void set_field_waitTime(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("o", "waitTime", "field_5941", "waitTime", "f_19688_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.AreaEffectCloudEntity#reapplicationDelay
    static jint get_field_reapplicationDelay(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("p", "reapplicationDelay", "field_5937", "reapplicationDelay", "f_19689_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.AreaEffectCloudEntity#reapplicationDelay
    static void set_field_reapplicationDelay(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("p", "reapplicationDelay", "field_5937", "reapplicationDelay", "f_19689_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.AreaEffectCloudEntity#durationOnUse
    static jint get_field_durationOnUse(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("q", "durationOnUse", "field_5932", "durationOnUse", "f_19691_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.AreaEffectCloudEntity#durationOnUse
    static void set_field_durationOnUse(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("q", "durationOnUse", "field_5932", "durationOnUse", "f_19691_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.AreaEffectCloudEntity#radiusOnUse
    static jfloat get_field_radiusOnUse(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("r", "radiusOnUse", "field_5929", "radiusOnUse", "f_19692_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.AreaEffectCloudEntity#radiusOnUse
    static void set_field_radiusOnUse(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("r", "radiusOnUse", "field_5929", "radiusOnUse", "f_19692_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.AreaEffectCloudEntity#radiusGrowth
    static jfloat get_field_radiusGrowth(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("s", "radiusPerTick", "field_5930", "radiusGrowth", "f_19693_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.AreaEffectCloudEntity#radiusGrowth
    static void set_field_radiusGrowth(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("s", "radiusPerTick", "field_5930", "radiusGrowth", "f_19693_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.AreaEffectCloudEntity#owner
    static jobject get_field_owner(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("t", "owner", "field_5943", "owner", "f_19694_"), "Lbtn;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.AreaEffectCloudEntity#owner
    static void set_field_owner(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("t", "owner", "field_5943", "owner", "f_19694_"), "Lbtn;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.AreaEffectCloudEntity#ownerUuid
    static jobject get_field_ownerUuid(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("u", "ownerUUID", "field_5940", "ownerUuid", "f_19695_"), "Ljava/util/UUID;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.AreaEffectCloudEntity#ownerUuid
    static void set_field_ownerUuid(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("u", "ownerUUID", "field_5940", "ownerUuid", "f_19695_"), "Ljava/util/UUID;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_initDataTracker() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "defineSynchedData", "method_5693", "initDataTracker", "m_8097_"), "(Laka$a;)V");
    }

    static void initDataTracker(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_initDataTracker();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setRadius() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setRadius", "method_5603", "setRadius", "m_19712_"), "(F)V");
    }

    static void setRadius(const jobject& obj, const jfloat& arg0) {
                
       const auto methodID = methodID_setRadius();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_calculateDimensions() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("i_", "refreshDimensions", "method_18382", "calculateDimensions", "m_6210_"), "()V");
    }

    static void calculateDimensions(const jobject& obj) {
                
       const auto methodID = methodID_calculateDimensions();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getRadius() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "getRadius", "method_5599", "getRadius", "m_19743_"), "()F");
    }

    static jfloat getRadius(const jobject& obj) {
                
       const auto methodID = methodID_getRadius();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID_setPotionContents() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setPotionContents", "method_57280", "setPotionContents", "m_323515_"), "(Lcwu;)V");
    }

    static void setPotionContents(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setPotionContents();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_updateColor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("t", "updateColor", "method_5597", "updateColor", "m_19750_"), "()V");
    }

    static void updateColor(const jobject& obj) {
                
       const auto methodID = methodID_updateColor();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_addEffect() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "addEffect", "method_5610", "addEffect", "m_19716_"), "(Lbrz;)V");
    }

    static void addEffect(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_addEffect();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getParticleType() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "getParticle", "method_5600", "getParticleType", "m_19745_"), "()Llk;");
    }

    static jobject getParticleType(const jobject& obj) {
                
       const auto methodID = methodID_getParticleType();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_setParticleType() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setParticle", "method_5608", "setParticleType", "m_19724_"), "(Llk;)V");
    }

    static void setParticleType(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setParticleType();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setWaiting() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setWaiting", "method_5598", "setWaiting", "m_19730_"), "(Z)V");
    }

    static void setWaiting(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setWaiting();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isWaiting() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("i", "isWaiting", "method_5611", "isWaiting", "m_19747_"), "()Z");
    }

    static jboolean isWaiting(const jobject& obj) {
                
       const auto methodID = methodID_isWaiting();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getDuration() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("j", "getDuration", "method_5605", "getDuration", "m_19748_"), "()I");
    }

    static jint getDuration(const jobject& obj) {
                
       const auto methodID = methodID_getDuration();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_setDuration() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setDuration", "method_5604", "setDuration", "m_19734_"), "(I)V");
    }

    static void setDuration(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_setDuration();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_tick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("l", "tick", "method_5773", "tick", "m_8119_"), "()V");
    }

    static void tick(const jobject& obj) {
                
       const auto methodID = methodID_tick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getRadiusOnUse() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("k", "getRadiusOnUse", "method_35044", "getRadiusOnUse", "m_146787_"), "()F");
    }

    static jfloat getRadiusOnUse(const jobject& obj) {
                
       const auto methodID = methodID_getRadiusOnUse();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID_setRadiusOnUse() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "setRadiusOnUse", "method_5609", "setRadiusOnUse", "m_19732_"), "(F)V");
    }

    static void setRadiusOnUse(const jobject& obj, const jfloat& arg0) {
                
       const auto methodID = methodID_setRadiusOnUse();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getRadiusGrowth() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("m", "getRadiusPerTick", "method_35045", "getRadiusGrowth", "m_146788_"), "()F");
    }

    static jfloat getRadiusGrowth(const jobject& obj) {
                
       const auto methodID = methodID_getRadiusGrowth();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID_setRadiusGrowth() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "setRadiusPerTick", "method_5596", "setRadiusGrowth", "m_19738_"), "(F)V");
    }

    static void setRadiusGrowth(const jobject& obj, const jfloat& arg0) {
                
       const auto methodID = methodID_setRadiusGrowth();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getDurationOnUse() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("o", "getDurationOnUse", "method_35046", "getDurationOnUse", "m_146789_"), "()I");
    }

    static jint getDurationOnUse(const jobject& obj) {
                
       const auto methodID = methodID_getDurationOnUse();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_setDurationOnUse() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "setDurationOnUse", "method_35043", "setDurationOnUse", "m_146785_"), "(I)V");
    }

    static void setDurationOnUse(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_setDurationOnUse();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getWaitTime() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("p", "getWaitTime", "method_35047", "getWaitTime", "m_146790_"), "()I");
    }

    static jint getWaitTime(const jobject& obj) {
                
       const auto methodID = methodID_getWaitTime();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_setWaitTime() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "setWaitTime", "method_5595", "setWaitTime", "m_19740_"), "(I)V");
    }

    static void setWaitTime(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_setWaitTime();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setOwner() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setOwner", "method_5607", "setOwner", "m_19718_"), "(Lbtn;)V");
    }

    static void setOwner(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setOwner();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getOwner() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("q", "getOwner", "method_5601", "getOwner", "m_19749_"), "()Lbtn;");
    }

    static jobject getOwner(const jobject& obj) {
                
       const auto methodID = methodID_getOwner();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_readCustomDataFromNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "readAdditionalSaveData", "method_5749", "readCustomDataFromNbt", "m_7378_"), "(Lub;)V");
    }

    static void readCustomDataFromNbt(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_readCustomDataFromNbt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_writeCustomDataToNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "addAdditionalSaveData", "method_5652", "writeCustomDataToNbt", "m_7380_"), "(Lub;)V");
    }

    static void writeCustomDataToNbt(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_writeCustomDataToNbt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_onTrackedDataSet() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "onSyncedDataUpdated", "method_5674", "onTrackedDataSet", "m_7350_"), "(Lajw;)V");
    }

    static void onTrackedDataSet(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onTrackedDataSet();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getPistonBehavior() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("j_", "getPistonPushReaction", "method_5657", "getPistonBehavior", "m_7752_"), "()Lepj;");
    }

    static jobject getPistonBehavior(const jobject& obj) {
                
       const auto methodID = methodID_getPistonBehavior();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getDimensions() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getDimensions", "method_18377", "getDimensions", "m_6972_"), "(Lbua;)Lbsu;");
    }

    static jobject getDimensions(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getDimensions();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_ENTITY_AREAEFFECTCLOUDENTITY_HPP