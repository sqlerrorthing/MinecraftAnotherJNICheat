// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ENTITY_PASSIVE_CAMELBRAIN_HPP
#define NET_MINECRAFT_ENTITY_PASSIVE_CAMELBRAIN_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.entity.passive.CamelBrain
 * Remapped: cgw
 */
namespace CamelBrain {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("cgw", "net/minecraft/world/entity/animal/camel/CamelAi", "net/minecraft/class_7691", "net/minecraft/entity/passive/CamelBrain", "net/minecraft/src/C_243515_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.entity.passive.CamelBrain#WALK_SPEED
    [[maybe_unused]] static jfloat get_field_WALK_SPEED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "SPEED_MULTIPLIER_WHEN_PANICKING", "field_40152", "WALK_SPEED", "f_244010_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.CamelBrain#WALK_SPEED
    [[maybe_unused]] static void set_field_WALK_SPEED(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "SPEED_MULTIPLIER_WHEN_PANICKING", "field_40152", "WALK_SPEED", "f_244010_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.passive.CamelBrain#field_40153
    [[maybe_unused]] static jfloat get_field_field_40153() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "SPEED_MULTIPLIER_WHEN_IDLING", "field_40153", "field_40153", "f_243736_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.CamelBrain#field_40153
    [[maybe_unused]] static void set_field_field_40153(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "SPEED_MULTIPLIER_WHEN_IDLING", "field_40153", "field_40153", "f_243736_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.passive.CamelBrain#field_40154
    [[maybe_unused]] static jfloat get_field_field_40154() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "SPEED_MULTIPLIER_WHEN_TEMPTED", "field_40154", "field_40154", "f_244250_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.CamelBrain#field_40154
    [[maybe_unused]] static void set_field_field_40154(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "SPEED_MULTIPLIER_WHEN_TEMPTED", "field_40154", "field_40154", "f_244250_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.passive.CamelBrain#field_40155
    [[maybe_unused]] static jfloat get_field_field_40155() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "SPEED_MULTIPLIER_WHEN_FOLLOWING_ADULT", "field_40155", "field_40155", "f_244120_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.CamelBrain#field_40155
    [[maybe_unused]] static void set_field_field_40155(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "SPEED_MULTIPLIER_WHEN_FOLLOWING_ADULT", "field_40155", "field_40155", "f_244120_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.passive.CamelBrain#BREED_SPEED
    [[maybe_unused]] static jfloat get_field_BREED_SPEED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "SPEED_MULTIPLIER_WHEN_MAKING_LOVE", "field_40156", "BREED_SPEED", "f_244079_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.CamelBrain#BREED_SPEED
    [[maybe_unused]] static void set_field_BREED_SPEED(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "SPEED_MULTIPLIER_WHEN_MAKING_LOVE", "field_40156", "BREED_SPEED", "f_244079_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.passive.CamelBrain#WALK_TOWARD_ADULT_RANGE
    [[maybe_unused]] static jobject get_field_WALK_TOWARD_ADULT_RANGE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "ADULT_FOLLOW_RANGE", "field_40157", "WALK_TOWARD_ADULT_RANGE", "f_244425_"), "Lbqc;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.CamelBrain#WALK_TOWARD_ADULT_RANGE
    [[maybe_unused]] static void set_field_WALK_TOWARD_ADULT_RANGE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "ADULT_FOLLOW_RANGE", "field_40157", "WALK_TOWARD_ADULT_RANGE", "f_244425_"), "Lbqc;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.passive.CamelBrain#SENSORS
    [[maybe_unused]] static jobject get_field_SENSORS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "SENSOR_TYPES", "field_40158", "SENSORS", "f_244270_"), "Lcom/google/common/collect/ImmutableList;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.CamelBrain#SENSORS
    [[maybe_unused]] static void set_field_SENSORS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "SENSOR_TYPES", "field_40158", "SENSORS", "f_244270_"), "Lcom/google/common/collect/ImmutableList;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.passive.CamelBrain#MEMORY_MODULES
    [[maybe_unused]] static jobject get_field_MEMORY_MODULES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "MEMORY_TYPES", "field_40159", "MEMORY_MODULES", "f_243769_"), "Lcom/google/common/collect/ImmutableList;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.CamelBrain#MEMORY_MODULES
    [[maybe_unused]] static void set_field_MEMORY_MODULES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "MEMORY_TYPES", "field_40159", "MEMORY_MODULES", "f_243769_"), "Lcom/google/common/collect/ImmutableList;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_initialize() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "initMemories", "method_45367", "initialize", "m_246286_"), "(Lcgv;Layw;)V");
    }

    static void initialize(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_initialize();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_createProfile() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "brainProvider", "method_45363", "createProfile", "m_246665_"), "()Lbuq$b;");
    }

    static jobject createProfile() {
       const auto clazz = self();
       const auto methodID = methodID_createProfile();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_create() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "makeBrain", "method_45365", "create", "m_246748_"), "(Lbuq;)Lbuq;");
    }

    static jobject create(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_create();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_addCoreActivities() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "initCoreActivity", "method_45369", "addCoreActivities", "m_245825_"), "(Lbuq;)V");
    }

    static void addCoreActivities(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_addCoreActivities();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_addIdleActivities() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "initIdleActivity", "method_45370", "addIdleActivities", "m_246612_"), "(Lbuq;)V");
    }

    static void addIdleActivities(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_addIdleActivities();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_updateActivities() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "updateActivity", "method_45366", "updateActivities", "m_246127_"), "(Lcgv;)V");
    }

    static void updateActivities(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_updateActivities();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getTemptItemPredicate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "getTemptations", "method_45368", "getTemptItemPredicate", "m_246511_"), "()Ljava/util/function/Predicate;");
    }

    static jobject getTemptItemPredicate() {
       const auto clazz = self();
       const auto methodID = methodID_getTemptItemPredicate();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
};

#endif // NET_MINECRAFT_ENTITY_PASSIVE_CAMELBRAIN_HPP