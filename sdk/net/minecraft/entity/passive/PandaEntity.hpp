// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ENTITY_PASSIVE_PANDAENTITY_HPP
#define NET_MINECRAFT_ENTITY_PASSIVE_PANDAENTITY_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.entity.passive.PandaEntity
 * Remapped: cft
 */
namespace PandaEntity {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("cft", "net/minecraft/world/entity/animal/Panda", "net/minecraft/class_1440", "net/minecraft/entity/passive/PandaEntity", "net/minecraft/src/C_864_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.entity.passive.PandaEntity#ASK_FOR_BAMBOO_TICKS
    [[maybe_unused]] static jobject get_field_ASK_FOR_BAMBOO_TICKS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ce", "UNHAPPY_COUNTER", "field_6764", "ASK_FOR_BAMBOO_TICKS", "f_29073_"), "Lajw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.PandaEntity#ASK_FOR_BAMBOO_TICKS
    [[maybe_unused]] static void set_field_ASK_FOR_BAMBOO_TICKS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ce", "UNHAPPY_COUNTER", "field_6764", "ASK_FOR_BAMBOO_TICKS", "f_29073_"), "Lajw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.passive.PandaEntity#SNEEZE_PROGRESS
    [[maybe_unused]] static jobject get_field_SNEEZE_PROGRESS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cg", "SNEEZE_COUNTER", "field_6771", "SNEEZE_PROGRESS", "f_29074_"), "Lajw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.PandaEntity#SNEEZE_PROGRESS
    [[maybe_unused]] static void set_field_SNEEZE_PROGRESS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cg", "SNEEZE_COUNTER", "field_6771", "SNEEZE_PROGRESS", "f_29074_"), "Lajw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.passive.PandaEntity#EATING_TICKS
    [[maybe_unused]] static jobject get_field_EATING_TICKS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ch", "EAT_COUNTER", "field_6780", "EATING_TICKS", "f_29075_"), "Lajw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.PandaEntity#EATING_TICKS
    [[maybe_unused]] static void set_field_EATING_TICKS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ch", "EAT_COUNTER", "field_6780", "EATING_TICKS", "f_29075_"), "Lajw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.passive.PandaEntity#MAIN_GENE
    [[maybe_unused]] static jobject get_field_MAIN_GENE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ci", "MAIN_GENE_ID", "field_6766", "MAIN_GENE", "f_29076_"), "Lajw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.PandaEntity#MAIN_GENE
    [[maybe_unused]] static void set_field_MAIN_GENE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ci", "MAIN_GENE_ID", "field_6766", "MAIN_GENE", "f_29076_"), "Lajw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.passive.PandaEntity#HIDDEN_GENE
    [[maybe_unused]] static jobject get_field_HIDDEN_GENE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cj", "HIDDEN_GENE_ID", "field_6781", "HIDDEN_GENE", "f_29077_"), "Lajw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.PandaEntity#HIDDEN_GENE
    [[maybe_unused]] static void set_field_HIDDEN_GENE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cj", "HIDDEN_GENE_ID", "field_6781", "HIDDEN_GENE", "f_29077_"), "Lajw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.passive.PandaEntity#PANDA_FLAGS
    [[maybe_unused]] static jobject get_field_PANDA_FLAGS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ck", "DATA_ID_FLAGS", "field_6768", "PANDA_FLAGS", "f_29078_"), "Lajw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.PandaEntity#PANDA_FLAGS
    [[maybe_unused]] static void set_field_PANDA_FLAGS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ck", "DATA_ID_FLAGS", "field_6768", "PANDA_FLAGS", "f_29078_"), "Lajw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static default field net.minecraft.entity.passive.PandaEntity#ASK_FOR_BAMBOO_TARGET
    [[maybe_unused]] static jobject get_field_ASK_FOR_BAMBOO_TARGET() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cl", "BREED_TARGETING", "field_21803", "ASK_FOR_BAMBOO_TARGET", "f_29079_"), "Lcef;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static default field net.minecraft.entity.passive.PandaEntity#ASK_FOR_BAMBOO_TARGET
    [[maybe_unused]] static void set_field_ASK_FOR_BAMBOO_TARGET(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cl", "BREED_TARGETING", "field_21803", "ASK_FOR_BAMBOO_TARGET", "f_29079_"), "Lcef;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.passive.PandaEntity#BABY_BASE_DIMENSIONS
    [[maybe_unused]] static jobject get_field_BABY_BASE_DIMENSIONS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cm", "BABY_DIMENSIONS", "field_47773", "BABY_BASE_DIMENSIONS", "f_316579_"), "Lbsu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.PandaEntity#BABY_BASE_DIMENSIONS
    [[maybe_unused]] static void set_field_BABY_BASE_DIMENSIONS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cm", "BABY_DIMENSIONS", "field_47773", "BABY_BASE_DIMENSIONS", "f_316579_"), "Lbsu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.passive.PandaEntity#SNEEZING_FLAG
    [[maybe_unused]] static jint get_field_SNEEZING_FLAG() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cn", "FLAG_SNEEZE", "field_30344", "SNEEZING_FLAG", "f_148960_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.PandaEntity#SNEEZING_FLAG
    [[maybe_unused]] static void set_field_SNEEZING_FLAG(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cn", "FLAG_SNEEZE", "field_30344", "SNEEZING_FLAG", "f_148960_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.passive.PandaEntity#PLAYING_FLAG
    [[maybe_unused]] static jint get_field_PLAYING_FLAG() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("co", "FLAG_ROLL", "field_30345", "PLAYING_FLAG", "f_148961_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.PandaEntity#PLAYING_FLAG
    [[maybe_unused]] static void set_field_PLAYING_FLAG(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("co", "FLAG_ROLL", "field_30345", "PLAYING_FLAG", "f_148961_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.passive.PandaEntity#SITTING_FLAG
    [[maybe_unused]] static jint get_field_SITTING_FLAG() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cp", "FLAG_SIT", "field_30346", "SITTING_FLAG", "f_148962_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.PandaEntity#SITTING_FLAG
    [[maybe_unused]] static void set_field_SITTING_FLAG(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cp", "FLAG_SIT", "field_30346", "SITTING_FLAG", "f_148962_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.passive.PandaEntity#LYING_ON_BACK_FLAG
    [[maybe_unused]] static jint get_field_LYING_ON_BACK_FLAG() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cq", "FLAG_ON_BACK", "field_30347", "LYING_ON_BACK_FLAG", "f_148963_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.PandaEntity#LYING_ON_BACK_FLAG
    [[maybe_unused]] static void set_field_LYING_ON_BACK_FLAG(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cq", "FLAG_ON_BACK", "field_30347", "LYING_ON_BACK_FLAG", "f_148963_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.passive.PandaEntity#EATING_ANIMATION_INTERVAL
    [[maybe_unused]] static jint get_field_EATING_ANIMATION_INTERVAL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cr", "EAT_TICK_INTERVAL", "field_30348", "EATING_ANIMATION_INTERVAL", "f_148964_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.PandaEntity#EATING_ANIMATION_INTERVAL
    [[maybe_unused]] static void set_field_EATING_ANIMATION_INTERVAL(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cr", "EAT_TICK_INTERVAL", "field_30348", "EATING_ANIMATION_INTERVAL", "f_148964_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.passive.PandaEntity#MAIN_GENE_MUTATION_CHANCE
    [[maybe_unused]] static jint get_field_MAIN_GENE_MUTATION_CHANCE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cc", "TOTAL_ROLL_STEPS", "field_30343", "MAIN_GENE_MUTATION_CHANCE", "f_148959_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.passive.PandaEntity#MAIN_GENE_MUTATION_CHANCE
    [[maybe_unused]] static void set_field_MAIN_GENE_MUTATION_CHANCE(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cc", "TOTAL_ROLL_STEPS", "field_30343", "MAIN_GENE_MUTATION_CHANCE", "f_148959_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.passive.PandaEntity#HIDDEN_GENE_MUTATION_CHANCE
    [[maybe_unused]] static jint get_field_HIDDEN_GENE_MUTATION_CHANCE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cs", "TOTAL_UNHAPPY_TIME", "field_30349", "HIDDEN_GENE_MUTATION_CHANCE", "f_148965_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.PandaEntity#HIDDEN_GENE_MUTATION_CHANCE
    [[maybe_unused]] static void set_field_HIDDEN_GENE_MUTATION_CHANCE(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cs", "TOTAL_UNHAPPY_TIME", "field_30349", "HIDDEN_GENE_MUTATION_CHANCE", "f_148965_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for default field net.minecraft.entity.passive.PandaEntity#shouldGetRevenge
    static jboolean get_field_shouldGetRevenge(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ct", "gotBamboo", "field_6769", "shouldGetRevenge", "f_29080_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static default field net.minecraft.entity.passive.PandaEntity#shouldGetRevenge
    static void set_field_shouldGetRevenge(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ct", "gotBamboo", "field_6769", "shouldGetRevenge", "f_29080_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.entity.passive.PandaEntity#shouldAttack
    static jboolean get_field_shouldAttack(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cu", "didBite", "field_6770", "shouldAttack", "f_29081_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static default field net.minecraft.entity.passive.PandaEntity#shouldAttack
    static void set_field_shouldAttack(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cu", "didBite", "field_6770", "shouldAttack", "f_29081_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.entity.passive.PandaEntity#playingTicks
    static jint get_field_playingTicks(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cd", "rollCounter", "field_6767", "playingTicks", "f_29072_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static public field net.minecraft.entity.passive.PandaEntity#playingTicks
    static void set_field_playingTicks(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cd", "rollCounter", "field_6767", "playingTicks", "f_29072_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.passive.PandaEntity#playingJump
    static jobject get_field_playingJump(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cv", "rollDelta", "field_18277", "playingJump", "f_29082_"), "Lexc;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.PandaEntity#playingJump
    static void set_field_playingJump(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cv", "rollDelta", "field_18277", "playingJump", "f_29082_"), "Lexc;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.passive.PandaEntity#sittingAnimationProgress
    static jfloat get_field_sittingAnimationProgress(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cw", "sitAmount", "field_6777", "sittingAnimationProgress", "f_29083_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.PandaEntity#sittingAnimationProgress
    static void set_field_sittingAnimationProgress(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cw", "sitAmount", "field_6777", "sittingAnimationProgress", "f_29083_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.passive.PandaEntity#lastSittingAnimationProgress
    static jfloat get_field_lastSittingAnimationProgress(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cx", "sitAmountO", "field_6779", "lastSittingAnimationProgress", "f_29065_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.PandaEntity#lastSittingAnimationProgress
    static void set_field_lastSittingAnimationProgress(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cx", "sitAmountO", "field_6779", "lastSittingAnimationProgress", "f_29065_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.passive.PandaEntity#lieOnBackAnimationProgress
    static jfloat get_field_lieOnBackAnimationProgress(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cy", "onBackAmount", "field_6774", "lieOnBackAnimationProgress", "f_29066_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.PandaEntity#lieOnBackAnimationProgress
    static void set_field_lieOnBackAnimationProgress(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cy", "onBackAmount", "field_6774", "lieOnBackAnimationProgress", "f_29066_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.passive.PandaEntity#lastLieOnBackAnimationProgress
    static jfloat get_field_lastLieOnBackAnimationProgress(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cz", "onBackAmountO", "field_6775", "lastLieOnBackAnimationProgress", "f_29067_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.PandaEntity#lastLieOnBackAnimationProgress
    static void set_field_lastLieOnBackAnimationProgress(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cz", "onBackAmountO", "field_6775", "lastLieOnBackAnimationProgress", "f_29067_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.passive.PandaEntity#rollOverAnimationProgress
    static jfloat get_field_rollOverAnimationProgress(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cA", "rollAmount", "field_6772", "rollOverAnimationProgress", "f_29068_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.PandaEntity#rollOverAnimationProgress
    static void set_field_rollOverAnimationProgress(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cA", "rollAmount", "field_6772", "rollOverAnimationProgress", "f_29068_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.passive.PandaEntity#lastRollOverAnimationProgress
    static jfloat get_field_lastRollOverAnimationProgress(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cB", "rollAmountO", "field_6773", "lastRollOverAnimationProgress", "f_29069_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.PandaEntity#lastRollOverAnimationProgress
    static void set_field_lastRollOverAnimationProgress(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cB", "rollAmountO", "field_6773", "lastRollOverAnimationProgress", "f_29069_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.entity.passive.PandaEntity#lookAtPlayerGoal
    static jobject get_field_lookAtPlayerGoal(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cD", "lookAtPlayerGoal", "field_21804", "lookAtPlayerGoal", "f_29070_"), "Lcft$g;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.entity.passive.PandaEntity#lookAtPlayerGoal
    static void set_field_lookAtPlayerGoal(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cD", "lookAtPlayerGoal", "field_21804", "lookAtPlayerGoal", "f_29070_"), "Lcft$g;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for static default field net.minecraft.entity.passive.PandaEntity#IS_FOOD
    [[maybe_unused]] static jobject get_field_IS_FOOD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cE", "PANDA_ITEMS", "field_6765", "IS_FOOD", "f_29071_"), "Ljava/util/function/Predicate;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static default field net.minecraft.entity.passive.PandaEntity#IS_FOOD
    [[maybe_unused]] static void set_field_IS_FOOD(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cE", "PANDA_ITEMS", "field_6765", "IS_FOOD", "f_29071_"), "Ljava/util/function/Predicate;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_canEquip() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "canTakeItem", "method_18397", "canEquip", "m_7066_"), "(Lcuq;)Z");
    }

    static jboolean canEquip(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_canEquip();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getAskForBambooTicks() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("s", "getUnhappyCounter", "method_6521", "getAskForBambooTicks", "m_29148_"), "()I");
    }

    static jint getAskForBambooTicks(const jobject& obj) {
                
       const auto methodID = methodID_getAskForBambooTicks();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_setAskForBambooTicks() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("t", "setUnhappyCounter", "method_6517", "setAskForBambooTicks", "m_29206_"), "(I)V");
    }

    static void setAskForBambooTicks(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_setAskForBambooTicks();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isSneezing() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("t", "isSneezing", "method_6545", "isSneezing", "m_29149_"), "()Z");
    }

    static jboolean isSneezing(const jobject& obj) {
                
       const auto methodID = methodID_isSneezing();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isSitting() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("x", "isSitting", "method_6535", "isSitting", "m_29150_"), "()Z");
    }

    static jboolean isSitting(const jobject& obj) {
                
       const auto methodID = methodID_isSitting();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_setSitting() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("x", "sit", "method_6513", "setSitting", "m_29208_"), "(Z)V");
    }

    static void setSitting(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setSitting();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isLyingOnBack() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gk", "isOnBack", "method_6514", "isLyingOnBack", "m_29151_"), "()Z");
    }

    static jboolean isLyingOnBack(const jobject& obj) {
                
       const auto methodID = methodID_isLyingOnBack();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_setLyingOnBack() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("y", "setOnBack", "method_6505", "setLyingOnBack", "m_29212_"), "(Z)V");
    }

    static void setLyingOnBack(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setLyingOnBack();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isEating() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gl", "isEating", "method_6527", "isEating", "m_29152_"), "()Z");
    }

    static jboolean isEating(const jobject& obj) {
                
       const auto methodID = methodID_isEating();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_setEating() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("z", "eat", "method_6552", "setEating", "m_29216_"), "(Z)V");
    }

    static void setEating(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setEating();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getEatingTicks() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gF", "getEatCounter", "method_6528", "getEatingTicks", "m_29170_"), "()I");
    }

    static jint getEatingTicks(const jobject& obj) {
                
       const auto methodID = methodID_getEatingTicks();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_setEatingTicks() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("v", "setEatCounter", "method_6558", "setEatingTicks", "m_29214_"), "(I)V");
    }

    static void setEatingTicks(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_setEatingTicks();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setSneezing() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("A", "sneeze", "method_6546", "setSneezing", "m_29220_"), "(Z)V");
    }

    static void setSneezing(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setSneezing();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getSneezeProgress() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gm", "getSneezeCounter", "method_6532", "getSneezeProgress", "m_29153_"), "()I");
    }

    static jint getSneezeProgress(const jobject& obj) {
                
       const auto methodID = methodID_getSneezeProgress();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_setSneezeProgress() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("u", "setSneezeCounter", "method_6539", "setSneezeProgress", "m_29210_"), "(I)V");
    }

    static void setSneezeProgress(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_setSneezeProgress();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getMainGene() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gn", "getMainGene", "method_6525", "getMainGene", "m_29154_"), "()Lcft$a;");
    }

    static jobject getMainGene(const jobject& obj) {
                
       const auto methodID = methodID_getMainGene();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_setMainGene() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setMainGene", "method_6529", "setMainGene", "m_29099_"), "(Lcft$a;)V");
    }

    static void setMainGene(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setMainGene();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getHiddenGene() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("go", "getHiddenGene", "method_6508", "getHiddenGene", "m_29155_"), "()Lcft$a;");
    }

    static jobject getHiddenGene(const jobject& obj) {
                
       const auto methodID = methodID_getHiddenGene();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_setHiddenGene() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "setHiddenGene", "method_6547", "setHiddenGene", "m_29116_"), "(Lcft$a;)V");
    }

    static void setHiddenGene(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setHiddenGene();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isPlaying() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gu", "isRolling", "method_6526", "isPlaying", "m_29156_"), "()Z");
    }

    static jboolean isPlaying(const jobject& obj) {
                
       const auto methodID = methodID_isPlaying();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_setPlaying() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("B", "roll", "method_6541", "setPlaying", "m_29222_"), "(Z)V");
    }

    static void setPlaying(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setPlaying();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_initDataTracker() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "defineSynchedData", "method_5693", "initDataTracker", "m_8097_"), "(Laka$a;)V");
    }

    static void initDataTracker(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_initDataTracker();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_hasPandaFlag() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("w", "getFlag", "method_6533", "hasPandaFlag", "m_29218_"), "(I)Z");
    }

    static jboolean hasPandaFlag(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_hasPandaFlag();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setPandaFlag() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "setFlag", "method_6557", "setPandaFlag", "m_29134_"), "(IZ)V");
    }

    static void setPandaFlag(const jobject& obj, const jint& arg0, const jboolean& arg1) {
                
       const auto methodID = methodID_setPandaFlag();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_writeCustomDataToNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "addAdditionalSaveData", "method_5652", "writeCustomDataToNbt", "m_7380_"), "(Lub;)V");
    }

    static void writeCustomDataToNbt(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_writeCustomDataToNbt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_readCustomDataFromNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "readAdditionalSaveData", "method_5749", "readCustomDataFromNbt", "m_7378_"), "(Lub;)V");
    }

    static void readCustomDataFromNbt(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_readCustomDataFromNbt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_createChild() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getBreedOffspring", "method_5613", "createChild", "m_142606_"), "(Laqu;Lbsl;)Lbsl;");
    }

    static jobject createChild(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_createChild();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_initGoals() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("B", "registerGoals", "method_5959", "initGoals", "m_8099_"), "()V");
    }

    static void initGoals(const jobject& obj) {
                
       const auto methodID = methodID_initGoals();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_createPandaAttributes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("gv", "createAttributes", "method_26888", "createPandaAttributes", "m_29157_"), "()Lbuv$a;");
    }

    static jobject createPandaAttributes() {
       const auto clazz = self();
       const auto methodID = methodID_createPandaAttributes();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_getProductGene() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gw", "getVariant", "method_6554", "getProductGene", "m_29158_"), "()Lcft$a;");
    }

    static jobject getProductGene(const jobject& obj) {
                
       const auto methodID = methodID_getProductGene();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_isLazy() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gx", "isLazy", "method_6549", "isLazy", "m_29161_"), "()Z");
    }

    static jboolean isLazy(const jobject& obj) {
                
       const auto methodID = methodID_isLazy();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isWorried() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gy", "isWorried", "method_6509", "isWorried", "m_29162_"), "()Z");
    }

    static jboolean isWorried(const jobject& obj) {
                
       const auto methodID = methodID_isWorried();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isPlayful() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gz", "isPlayful", "method_6522", "isPlayful", "m_29163_"), "()Z");
    }

    static jboolean isPlayful(const jobject& obj) {
                
       const auto methodID = methodID_isPlayful();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isBrown() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gA", "isBrown", "method_35173", "isBrown", "m_148973_"), "()Z");
    }

    static jboolean isBrown(const jobject& obj) {
                
       const auto methodID = methodID_isBrown();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isWeak() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gB", "isWeak", "method_6550", "isWeak", "m_29164_"), "()Z");
    }

    static jboolean isWeak(const jobject& obj) {
                
       const auto methodID = methodID_isWeak();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isAttacking() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gb", "isAggressive", "method_6510", "isAttacking", "m_5912_"), "()Z");
    }

    static jboolean isAttacking(const jobject& obj) {
                
       const auto methodID = methodID_isAttacking();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_canBeLeashed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("y", "canBeLeashed", "method_5931", "canBeLeashed", "m_6573_"), "()Z");
    }

    static jboolean canBeLeashed(const jobject& obj) {
                
       const auto methodID = methodID_canBeLeashed();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_tryAttack() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("D", "doHurtTarget", "method_6121", "tryAttack", "m_7327_"), "(Lbsr;)Z");
    }

    static jboolean tryAttack(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_tryAttack();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_playAttackSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gd", "playAttackSound", "method_59928", "playAttackSound", "m_339982_"), "()V");
    }

    static void playAttackSound(const jobject& obj) {
                
       const auto methodID = methodID_playAttackSound();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_tick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("l", "tick", "method_5773", "tick", "m_8119_"), "()V");
    }

    static void tick(const jobject& obj) {
                
       const auto methodID = methodID_tick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_isScaredByThunderstorm() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gC", "isScared", "method_6524", "isScaredByThunderstorm", "m_29165_"), "()Z");
    }

    static jboolean isScaredByThunderstorm(const jobject& obj) {
                
       const auto methodID = methodID_isScaredByThunderstorm();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_updateEatingAnimation() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gG", "handleEating", "method_6536", "updateEatingAnimation", "m_29171_"), "()V");
    }

    static void updateEatingAnimation(const jobject& obj) {
                
       const auto methodID = methodID_updateEatingAnimation();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_playEatingAnimation() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gH", "addEatingParticles", "method_6512", "playEatingAnimation", "m_29172_"), "()V");
    }

    static void playEatingAnimation(const jobject& obj) {
                
       const auto methodID = methodID_playEatingAnimation();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_updateSittingAnimation() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gI", "updateSitAmount", "method_6544", "updateSittingAnimation", "m_29173_"), "()V");
    }

    static void updateSittingAnimation(const jobject& obj) {
                
       const auto methodID = methodID_updateSittingAnimation();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_updateLieOnBackAnimation() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gJ", "updateOnBackAnimation", "method_6503", "updateLieOnBackAnimation", "m_29174_"), "()V");
    }

    static void updateLieOnBackAnimation(const jobject& obj) {
                
       const auto methodID = methodID_updateLieOnBackAnimation();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_updateRollOverAnimation() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gK", "updateRollAmount", "method_6523", "updateRollOverAnimation", "m_29175_"), "()V");
    }

    static void updateRollOverAnimation(const jobject& obj) {
                
       const auto methodID = methodID_updateRollOverAnimation();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getSittingAnimationProgress() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("H", "getSitAmount", "method_6534", "getSittingAnimationProgress", "m_29224_"), "(F)F");
    }

    static jfloat getSittingAnimationProgress(const jobject& obj, const jfloat& arg0) {
                
       const auto methodID = methodID_getSittingAnimationProgress();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getLieOnBackAnimationProgress() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("I", "getLieOnBackAmount", "method_6555", "getLieOnBackAnimationProgress", "m_29226_"), "(F)F");
    }

    static jfloat getLieOnBackAnimationProgress(const jobject& obj, const jfloat& arg0) {
                
       const auto methodID = methodID_getLieOnBackAnimationProgress();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getRollOverAnimationProgress() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("J", "getRollAmount", "method_6560", "getRollOverAnimationProgress", "m_29088_"), "(F)F");
    }

    static jfloat getRollOverAnimationProgress(const jobject& obj, const jfloat& arg0) {
                
       const auto methodID = methodID_getRollOverAnimationProgress();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_updatePlaying() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gL", "handleRoll", "method_6537", "updatePlaying", "m_29176_"), "()V");
    }

    static void updatePlaying(const jobject& obj) {
                
       const auto methodID = methodID_updatePlaying();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_sneeze() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gM", "afterSneeze", "method_6548", "sneeze", "m_29177_"), "()V");
    }

    static void sneeze(const jobject& obj) {
                
       const auto methodID = methodID_sneeze();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_loot() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "pickUpItem", "method_5949", "loot", "m_7581_"), "(Lcjh;)V");
    }

    static void loot(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_loot();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_damage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "hurt", "method_5643", "damage", "m_6469_"), "(Lbrk;F)Z");
    }

    static jboolean damage(const jobject& obj, const jobject& arg0, const jfloat& arg1) {
                
       const auto methodID = methodID_damage();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_initialize() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "finalizeSpawn", "method_5943", "initialize", "m_6518_"), "(Lddl;Lbqp;Lbtr;Lbuh;)Lbuh;");
    }

    static jobject initialize(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_initialize();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_initGenes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setGeneFromParents", "method_6515", "initGenes", "m_29103_"), "(Lcft;Lcft;)V");
    }

    static void initGenes(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_initGenes();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getRandomGene() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gN", "getOneOfGenesRandomly", "method_6519", "getRandomGene", "m_29178_"), "()Lcft$a;");
    }

    static jobject getRandomGene(const jobject& obj) {
                
       const auto methodID = methodID_getRandomGene();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_resetAttributes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gD", "setAttributes", "method_6538", "resetAttributes", "m_29166_"), "()V");
    }

    static void resetAttributes(const jobject& obj) {
                
       const auto methodID = methodID_resetAttributes();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_stop() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gO", "tryToSit", "method_18057", "stop", "m_29179_"), "()V");
    }

    static void stop(const jobject& obj) {
                
       const auto methodID = methodID_stop();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_interactMob() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "mobInteract", "method_5992", "interactMob", "m_6071_"), "(Lcmx;Lbqq;)Lbqr;");
    }

    static jobject interactMob(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_interactMob();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getAmbientSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("v", "getAmbientSound", "method_5994", "getAmbientSound", "m_7515_"), "()Lavo;");
    }

    static jobject getAmbientSound(const jobject& obj) {
                
       const auto methodID = methodID_getAmbientSound();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_playStepSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "playStepSound", "method_5712", "playStepSound", "m_7355_"), "(Ljd;Ldtc;)V");
    }

    static void playStepSound(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_playStepSound();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_isBreedingItem() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("o", "isFood", "method_6481", "isBreedingItem", "m_6898_"), "(Lcuq;)Z");
    }

    static jboolean isBreedingItem(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_isBreedingItem();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_canEat() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("n", "isFoodOrCake", "method_16106", "canEat", "m_29195_"), "(Lcuq;)Z");
    }

    static jboolean canEat(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_canEat();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getDeathSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("n_", "getDeathSound", "method_6002", "getDeathSound", "m_5592_"), "()Lavo;");
    }

    static jobject getDeathSound(const jobject& obj) {
                
       const auto methodID = methodID_getDeathSound();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getHurtSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getHurtSound", "method_6011", "getHurtSound", "m_7975_"), "(Lbrk;)Lavo;");
    }

    static jobject getHurtSound(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getHurtSound();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isIdle() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gE", "canPerformAction", "method_18442", "isIdle", "m_29167_"), "()Z");
    }

    static jboolean isIdle(const jobject& obj) {
                
       const auto methodID = methodID_isIdle();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getBaseDimensions() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "getDefaultDimensions", "method_55694", "getBaseDimensions", "m_31586_"), "(Lbua;)Lbsu;");
    }

    static jobject getBaseDimensions(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getBaseDimensions();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_ENTITY_PASSIVE_PANDAENTITY_HPP