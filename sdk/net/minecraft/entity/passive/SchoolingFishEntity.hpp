// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ENTITY_PASSIVE_SCHOOLINGFISHENTITY_HPP
#define NET_MINECRAFT_ENTITY_PASSIVE_SCHOOLINGFISHENTITY_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.entity.passive.SchoolingFishEntity
 * Remapped: cfd
 */
namespace SchoolingFishEntity {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("cfd", "net/minecraft/world/entity/animal/AbstractSchoolingFish", "net/minecraft/class_1425", "net/minecraft/entity/passive/SchoolingFishEntity", "net/minecraft/src/C_799_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.entity.passive.SchoolingFishEntity#leader
    static jobject get_field_leader(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "leader", "field_6734", "leader", "f_27520_"), "Lcfd;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.SchoolingFishEntity#leader
    static void set_field_leader(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "leader", "field_6734", "leader", "f_27520_"), "Lcfd;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.passive.SchoolingFishEntity#groupSize
    static jint get_field_groupSize(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "schoolSize", "field_6733", "groupSize", "f_27521_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.SchoolingFishEntity#groupSize
    static void set_field_groupSize(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "schoolSize", "field_6733", "groupSize", "f_27521_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    static jmethodID methodID_initGoals() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("B", "registerGoals", "method_5959", "initGoals", "m_8099_"), "()V");
    }

    static void initGoals(const jobject& obj) {
                
       const auto methodID = methodID_initGoals();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getLimitPerChunk() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("fN", "getMaxSpawnClusterSize", "method_5945", "getLimitPerChunk", "m_5792_"), "()I");
    }

    static jint getLimitPerChunk(const jobject& obj) {
                
       const auto methodID = methodID_getLimitPerChunk();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getMaxGroupSize() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gm", "getMaxSchoolSize", "method_6465", "getMaxGroupSize", "m_6031_"), "()I");
    }

    static jint getMaxGroupSize(const jobject& obj) {
                
       const auto methodID = methodID_getMaxGroupSize();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_hasSelfControl() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gk", "canRandomSwim", "method_6456", "hasSelfControl", "m_6004_"), "()Z");
    }

    static jboolean hasSelfControl(const jobject& obj) {
                
       const auto methodID = methodID_hasSelfControl();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_hasLeader() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gn", "isFollower", "method_6470", "hasLeader", "m_27540_"), "()Z");
    }

    static jboolean hasLeader(const jobject& obj) {
                
       const auto methodID = methodID_hasLeader();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_joinGroupOf() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "startFollowing", "method_6461", "joinGroupOf", "m_27525_"), "(Lcfd;)Lcfd;");
    }

    static jobject joinGroupOf(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_joinGroupOf();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_leaveGroup() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("go", "stopFollowing", "method_6466", "leaveGroup", "m_27541_"), "()V");
    }

    static void leaveGroup(const jobject& obj) {
                
       const auto methodID = methodID_leaveGroup();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_increaseGroupSize() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gt", "addFollower", "method_6462", "increaseGroupSize", "m_27546_"), "()V");
    }

    static void increaseGroupSize(const jobject& obj) {
                
       const auto methodID = methodID_increaseGroupSize();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_decreaseGroupSize() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gu", "removeFollower", "method_6459", "decreaseGroupSize", "m_27547_"), "()V");
    }

    static void decreaseGroupSize(const jobject& obj) {
                
       const auto methodID = methodID_decreaseGroupSize();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_canHaveMoreFishInGroup() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gp", "canBeFollowed", "method_6469", "canHaveMoreFishInGroup", "m_27542_"), "()Z");
    }

    static jboolean canHaveMoreFishInGroup(const jobject& obj) {
                
       const auto methodID = methodID_canHaveMoreFishInGroup();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_tick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("l", "tick", "method_5773", "tick", "m_8119_"), "()V");
    }

    static void tick(const jobject& obj) {
                
       const auto methodID = methodID_tick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_hasOtherFishInGroup() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gq", "hasFollowers", "method_6467", "hasOtherFishInGroup", "m_27543_"), "()Z");
    }

    static jboolean hasOtherFishInGroup(const jobject& obj) {
                
       const auto methodID = methodID_hasOtherFishInGroup();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isCloseEnoughToLeader() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gr", "inRangeOfLeader", "method_6464", "isCloseEnoughToLeader", "m_27544_"), "()Z");
    }

    static jboolean isCloseEnoughToLeader(const jobject& obj) {
                
       const auto methodID = methodID_isCloseEnoughToLeader();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_moveTowardLeader() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gs", "pathToLeader", "method_6463", "moveTowardLeader", "m_27545_"), "()V");
    }

    static void moveTowardLeader(const jobject& obj) {
                
       const auto methodID = methodID_moveTowardLeader();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_pullInOtherFish() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "addFollowers", "method_6468", "pullInOtherFish", "m_27533_"), "(Ljava/util/stream/Stream;)V");
    }

    static void pullInOtherFish(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_pullInOtherFish();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_initialize() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "finalizeSpawn", "method_5943", "initialize", "m_6518_"), "(Lddl;Lbqp;Lbtr;Lbuh;)Lbuh;");
    }

    static jobject initialize(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_initialize();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
};

#endif // NET_MINECRAFT_ENTITY_PASSIVE_SCHOOLINGFISHENTITY_HPP