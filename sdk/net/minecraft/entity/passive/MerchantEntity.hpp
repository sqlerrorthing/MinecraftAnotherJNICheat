// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ENTITY_PASSIVE_MERCHANTENTITY_HPP
#define NET_MINECRAFT_ENTITY_PASSIVE_MERCHANTENTITY_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.entity.passive.MerchantEntity
 * Remapped: cmf
 */
namespace MerchantEntity {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("cmf", "net/minecraft/world/entity/npc/AbstractVillager", "net/minecraft/class_3988", "net/minecraft/entity/passive/MerchantEntity", "net/minecraft/src/C_1114_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.entity.passive.MerchantEntity#HEAD_ROLLING_TIME_LEFT
    [[maybe_unused]] static jobject get_field_HEAD_ROLLING_TIME_LEFT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ce", "DATA_UNHAPPY_COUNTER", "field_19295", "HEAD_ROLLING_TIME_LEFT", "f_35262_"), "Lajw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.MerchantEntity#HEAD_ROLLING_TIME_LEFT
    [[maybe_unused]] static void set_field_HEAD_ROLLING_TIME_LEFT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ce", "DATA_UNHAPPY_COUNTER", "field_19295", "HEAD_ROLLING_TIME_LEFT", "f_35262_"), "Lajw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.passive.MerchantEntity#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cf", "LOGGER", "field_48833", "LOGGER", "f_314950_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.MerchantEntity#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cf", "LOGGER", "field_48833", "LOGGER", "f_314950_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.passive.MerchantEntity#field_30599
    [[maybe_unused]] static jint get_field_field_30599() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cc", "VILLAGER_SLOT_OFFSET", "field_30599", "field_30599", "f_149991_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.passive.MerchantEntity#field_30599
    [[maybe_unused]] static void set_field_field_30599(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cc", "VILLAGER_SLOT_OFFSET", "field_30599", "field_30599", "f_149991_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.passive.MerchantEntity#INVENTORY_SIZE
    [[maybe_unused]] static jint get_field_INVENTORY_SIZE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cg", "VILLAGER_INVENTORY_SIZE", "field_30600", "INVENTORY_SIZE", "f_149992_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.MerchantEntity#INVENTORY_SIZE
    [[maybe_unused]] static void set_field_INVENTORY_SIZE(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cg", "VILLAGER_INVENTORY_SIZE", "field_30600", "INVENTORY_SIZE", "f_149992_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.entity.passive.MerchantEntity#customer
    static jobject get_field_customer(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ch", "tradingPlayer", "field_17722", "customer", "f_35263_"), "Lcmx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.MerchantEntity#customer
    static void set_field_customer(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ch", "tradingPlayer", "field_17722", "customer", "f_35263_"), "Lcmx;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.entity.passive.MerchantEntity#offers
    static jobject get_field_offers(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cd", "offers", "field_17721", "offers", "f_35261_"), "Ldbv;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.entity.passive.MerchantEntity#offers
    static void set_field_offers(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cd", "offers", "field_17721", "offers", "f_35261_"), "Ldbv;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.passive.MerchantEntity#inventory
    static jobject get_field_inventory(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ci", "inventory", "field_17723", "inventory", "f_35264_"), "Lbra;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.MerchantEntity#inventory
    static void set_field_inventory(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ci", "inventory", "field_17723", "inventory", "f_35264_"), "Lbra;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_initialize() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "finalizeSpawn", "method_5943", "initialize", "m_6518_"), "(Lddl;Lbqp;Lbtr;Lbuh;)Lbuh;");
    }

    static jobject initialize(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_initialize();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_getHeadRollingTimeLeft() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("s", "getUnhappyCounter", "method_20506", "getHeadRollingTimeLeft", "m_35303_"), "()I");
    }

    static jint getHeadRollingTimeLeft(const jobject& obj) {
                
       const auto methodID = methodID_getHeadRollingTimeLeft();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_setHeadRollingTimeLeft() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("s", "setUnhappyCounter", "method_20507", "setHeadRollingTimeLeft", "m_35319_"), "(I)V");
    }

    static void setHeadRollingTimeLeft(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_setHeadRollingTimeLeft();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getExperience() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("t", "getVillagerXp", "method_19269", "getExperience", "m_7809_"), "()I");
    }

    static jint getExperience(const jobject& obj) {
                
       const auto methodID = methodID_getExperience();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_initDataTracker() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "defineSynchedData", "method_5693", "initDataTracker", "m_8097_"), "(Laka$a;)V");
    }

    static void initDataTracker(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_initDataTracker();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setCustomer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setTradingPlayer", "method_8259", "setCustomer", "m_7189_"), "(Lcmx;)V");
    }

    static void setCustomer(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setCustomer();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getCustomer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gk", "getTradingPlayer", "method_8257", "getCustomer", "m_7962_"), "()Lcmx;");
    }

    static jobject getCustomer(const jobject& obj) {
                
       const auto methodID = methodID_getCustomer();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_hasCustomer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gl", "isTrading", "method_18009", "hasCustomer", "m_35306_"), "()Z");
    }

    static jboolean hasCustomer(const jobject& obj) {
                
       const auto methodID = methodID_hasCustomer();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getOffers() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gm", "getOffers", "method_8264", "getOffers", "m_6616_"), "()Ldbv;");
    }

    static jobject getOffers(const jobject& obj) {
                
       const auto methodID = methodID_getOffers();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_setOffersFromServer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "overrideOffers", "method_8261", "setOffersFromServer", "m_6255_"), "(Ldbv;)V");
    }

    static void setOffersFromServer(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setOffersFromServer();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setExperienceFromServer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("t", "overrideXp", "method_19271", "setExperienceFromServer", "m_6621_"), "(I)V");
    }

    static void setExperienceFromServer(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_setExperienceFromServer();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_trade() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "notifyTrade", "method_8262", "trade", "m_6996_"), "(Ldbu;)V");
    }

    static void trade(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_trade();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_afterUsing() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "rewardTradeXp", "method_18008", "afterUsing", "m_8058_"), "(Ldbu;)V");
    }

    static void afterUsing(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_afterUsing();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isLeveledMerchant() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gn", "showProgressBar", "method_19270", "isLeveledMerchant", "m_7826_"), "()Z");
    }

    static jboolean isLeveledMerchant(const jobject& obj) {
                
       const auto methodID = methodID_isLeveledMerchant();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_onSellingItem() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("n", "notifyTradeUpdated", "method_8258", "onSellingItem", "m_7713_"), "(Lcuq;)V");
    }

    static void onSellingItem(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onSellingItem();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getYesSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("go", "getNotifyTradeSound", "method_18010", "getYesSound", "m_7596_"), "()Lavo;");
    }

    static jobject getYesSound(const jobject& obj) {
                
       const auto methodID = methodID_getYesSound();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getTradingSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("x", "getTradeUpdatedSound", "method_18012", "getTradingSound", "m_6068_"), "(Z)Lavo;");
    }

    static jobject getTradingSound(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_getTradingSound();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_playCelebrateSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gp", "playCelebrateSound", "method_20010", "playCelebrateSound", "m_35310_"), "()V");
    }

    static void playCelebrateSound(const jobject& obj) {
                
       const auto methodID = methodID_playCelebrateSound();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_writeCustomDataToNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "addAdditionalSaveData", "method_5652", "writeCustomDataToNbt", "m_7380_"), "(Lub;)V");
    }

    static void writeCustomDataToNbt(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_writeCustomDataToNbt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_readCustomDataFromNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "readAdditionalSaveData", "method_5749", "readCustomDataFromNbt", "m_7378_"), "(Lub;)V");
    }

    static void readCustomDataFromNbt(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_readCustomDataFromNbt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_teleportTo() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "changeDimension", "method_5731", "teleportTo", "m_5489_"), "(Leqc;)Lbsr;");
    }

    static jobject teleportTo(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_teleportTo();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_resetCustomer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gq", "stopTrading", "method_19181", "resetCustomer", "m_7996_"), "()V");
    }

    static void resetCustomer(const jobject& obj) {
                
       const auto methodID = methodID_resetCustomer();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_onDeath() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "die", "method_6078", "onDeath", "m_6667_"), "(Lbrk;)V");
    }

    static void onDeath(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onDeath();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_produceParticles() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "addParticlesAroundSelf", "method_18007", "produceParticles", "m_35287_"), "(Llk;)V");
    }

    static void produceParticles(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_produceParticles();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_canBeLeashed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("y", "canBeLeashed", "method_5931", "canBeLeashed", "m_6573_"), "()Z");
    }

    static jboolean canBeLeashed(const jobject& obj) {
                
       const auto methodID = methodID_canBeLeashed();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getInventory() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("x", "getInventory", "method_35199", "getInventory", "m_35311_"), "()Lbra;");
    }

    static jobject getInventory(const jobject& obj) {
                
       const auto methodID = methodID_getInventory();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getStackReference() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a_", "getSlot", "method_32318", "getStackReference", "m_141942_"), "(I)Lbug;");
    }

    static jobject getStackReference(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_getStackReference();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_fillRecipes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gr", "updateTrades", "method_7237", "fillRecipes", "m_7604_"), "()V");
    }

    static void fillRecipes(const jobject& obj) {
                
       const auto methodID = methodID_fillRecipes();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_fillRecipesFromPool() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "addOffersFromItemListings", "method_19170", "fillRecipesFromPool", "m_35277_"), "(Ldbv;[Lcmo$g;I)V");
    }

    static void fillRecipesFromPool(const jobject& obj, const jobject& arg0, const jarray& arg1, const jobject& arg2, const jint& arg3) {
                
       const auto methodID = methodID_fillRecipesFromPool();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_getLeashPos() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("s", "getRopeHoldPosition", "method_30951", "getLeashPos", "m_7398_"), "(F)Lexc;");
    }

    static jobject getLeashPos(const jobject& obj, const jfloat& arg0) {
                
       const auto methodID = methodID_getLeashPos();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isClient() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gs", "isClientSide", "method_38069", "isClient", "m_183595_"), "()Z");
    }

    static jboolean isClient(const jobject& obj) {
                
       const auto methodID = methodID_isClient();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_ENTITY_PASSIVE_MERCHANTENTITY_HPP