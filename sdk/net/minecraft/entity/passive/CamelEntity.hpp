// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ENTITY_PASSIVE_CAMELENTITY_HPP
#define NET_MINECRAFT_ENTITY_PASSIVE_CAMELENTITY_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.entity.passive.CamelEntity
 * Remapped: cgv
 */
namespace CamelEntity {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("cgv", "net/minecraft/world/entity/animal/camel/Camel", "net/minecraft/class_7689", "net/minecraft/entity/passive/CamelEntity", "net/minecraft/src/C_243588_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.entity.passive.CamelEntity#field_45127
    [[maybe_unused]] static jfloat get_field_field_45127() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cc", "BABY_SCALE", "field_45127", "field_45127", "f_290826_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.passive.CamelEntity#field_45127
    [[maybe_unused]] static void set_field_field_45127(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cc", "BABY_SCALE", "field_45127", "field_45127", "f_290826_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.passive.CamelEntity#field_40132
    [[maybe_unused]] static jint get_field_field_40132() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cd", "DASH_COOLDOWN_TICKS", "field_40132", "field_40132", "f_244289_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.passive.CamelEntity#field_40132
    [[maybe_unused]] static void set_field_field_40132(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cd", "DASH_COOLDOWN_TICKS", "field_40132", "field_40132", "f_244289_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.passive.CamelEntity#field_41764
    [[maybe_unused]] static jint get_field_field_41764() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ce", "MAX_HEAD_Y_ROT", "field_41764", "field_41764", "f_263725_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.passive.CamelEntity#field_41764
    [[maybe_unused]] static void set_field_field_41764(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ce", "MAX_HEAD_Y_ROT", "field_41764", "field_41764", "f_263725_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.passive.CamelEntity#field_40146
    [[maybe_unused]] static jfloat get_field_field_40146() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cD", "RUNNING_SPEED_BONUS", "field_40146", "field_40146", "f_243982_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.CamelEntity#field_40146
    [[maybe_unused]] static void set_field_field_40146(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cD", "RUNNING_SPEED_BONUS", "field_40146", "field_40146", "f_243982_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.passive.CamelEntity#field_40147
    [[maybe_unused]] static jfloat get_field_field_40147() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cE", "DASH_VERTICAL_MOMENTUM", "field_40147", "field_40147", "f_244195_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.CamelEntity#field_40147
    [[maybe_unused]] static void set_field_field_40147(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cE", "DASH_VERTICAL_MOMENTUM", "field_40147", "field_40147", "f_244195_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.passive.CamelEntity#field_40148
    [[maybe_unused]] static jfloat get_field_field_40148() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cF", "DASH_HORIZONTAL_MOMENTUM", "field_40148", "field_40148", "f_244101_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.CamelEntity#field_40148
    [[maybe_unused]] static void set_field_field_40148(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cF", "DASH_HORIZONTAL_MOMENTUM", "field_40148", "field_40148", "f_244101_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.passive.CamelEntity#field_43388
    [[maybe_unused]] static jint get_field_field_43388() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cG", "DASH_MINIMUM_DURATION_TICKS", "field_43388", "field_43388", "f_278128_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.CamelEntity#field_43388
    [[maybe_unused]] static void set_field_field_43388(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cG", "DASH_MINIMUM_DURATION_TICKS", "field_43388", "field_43388", "f_278128_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.passive.CamelEntity#field_40149
    [[maybe_unused]] static jint get_field_field_40149() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cH", "SITDOWN_DURATION_TICKS", "field_40149", "field_40149", "f_244084_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.CamelEntity#field_40149
    [[maybe_unused]] static void set_field_field_40149(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cH", "SITDOWN_DURATION_TICKS", "field_40149", "field_40149", "f_244084_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.passive.CamelEntity#field_40133
    [[maybe_unused]] static jint get_field_field_40133() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cI", "STANDUP_DURATION_TICKS", "field_40133", "field_40133", "f_244435_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.CamelEntity#field_40133
    [[maybe_unused]] static void set_field_field_40133(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cI", "STANDUP_DURATION_TICKS", "field_40133", "field_40133", "f_244435_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.passive.CamelEntity#field_40134
    [[maybe_unused]] static jint get_field_field_40134() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cJ", "IDLE_MINIMAL_DURATION_TICKS", "field_40134", "field_40134", "f_244638_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.CamelEntity#field_40134
    [[maybe_unused]] static void set_field_field_40134(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cJ", "IDLE_MINIMAL_DURATION_TICKS", "field_40134", "field_40134", "f_244638_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.passive.CamelEntity#field_40135
    [[maybe_unused]] static jfloat get_field_field_40135() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cK", "SITTING_HEIGHT_DIFFERENCE", "field_40135", "field_40135", "f_243730_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.CamelEntity#field_40135
    [[maybe_unused]] static void set_field_field_40135(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cK", "SITTING_HEIGHT_DIFFERENCE", "field_40135", "field_40135", "f_243730_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.passive.CamelEntity#DASHING
    [[maybe_unused]] static jobject get_field_DASHING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cg", "DASH", "field_40139", "DASHING", "f_244117_"), "Lajw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.passive.CamelEntity#DASHING
    [[maybe_unused]] static void set_field_DASHING(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cg", "DASH", "field_40139", "DASHING", "f_244117_"), "Lajw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.passive.CamelEntity#LAST_POSE_TICK
    [[maybe_unused]] static jobject get_field_LAST_POSE_TICK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ch", "LAST_POSE_CHANGE_TICK", "field_40140", "LAST_POSE_TICK", "f_243883_"), "Lajw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.passive.CamelEntity#LAST_POSE_TICK
    [[maybe_unused]] static void set_field_LAST_POSE_TICK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ch", "LAST_POSE_CHANGE_TICK", "field_40140", "LAST_POSE_TICK", "f_243883_"), "Lajw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for public field net.minecraft.entity.passive.CamelEntity#sittingTransitionAnimationState
    static jobject get_field_sittingTransitionAnimationState(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ci", "sitAnimationState", "field_40142", "sittingTransitionAnimationState", "f_243928_"), "Lbsm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.entity.passive.CamelEntity#sittingTransitionAnimationState
    static void set_field_sittingTransitionAnimationState(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ci", "sitAnimationState", "field_40142", "sittingTransitionAnimationState", "f_243928_"), "Lbsm;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.entity.passive.CamelEntity#sittingAnimationState
    static jobject get_field_sittingAnimationState(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cj", "sitPoseAnimationState", "field_40734", "sittingAnimationState", "f_252486_"), "Lbsm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.entity.passive.CamelEntity#sittingAnimationState
    static void set_field_sittingAnimationState(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cj", "sitPoseAnimationState", "field_40734", "sittingAnimationState", "f_252486_"), "Lbsm;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.entity.passive.CamelEntity#standingTransitionAnimationState
    static jobject get_field_standingTransitionAnimationState(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ck", "sitUpAnimationState", "field_40143", "standingTransitionAnimationState", "f_244242_"), "Lbsm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.entity.passive.CamelEntity#standingTransitionAnimationState
    static void set_field_standingTransitionAnimationState(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ck", "sitUpAnimationState", "field_40143", "standingTransitionAnimationState", "f_244242_"), "Lbsm;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.entity.passive.CamelEntity#idlingAnimationState
    static jobject get_field_idlingAnimationState(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cl", "idleAnimationState", "field_40144", "idlingAnimationState", "f_244047_"), "Lbsm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.entity.passive.CamelEntity#idlingAnimationState
    static void set_field_idlingAnimationState(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cl", "idleAnimationState", "field_40144", "idlingAnimationState", "f_244047_"), "Lbsm;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.entity.passive.CamelEntity#dashingAnimationState
    static jobject get_field_dashingAnimationState(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cm", "dashAnimationState", "field_40145", "dashingAnimationState", "f_244243_"), "Lbsm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.entity.passive.CamelEntity#dashingAnimationState
    static void set_field_dashingAnimationState(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cm", "dashAnimationState", "field_40145", "dashingAnimationState", "f_244243_"), "Lbsm;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.passive.CamelEntity#SITTING_DIMENSIONS
    [[maybe_unused]] static jobject get_field_SITTING_DIMENSIONS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cL", "SITTING_DIMENSIONS", "field_40136", "SITTING_DIMENSIONS", "f_244306_"), "Lbsu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.CamelEntity#SITTING_DIMENSIONS
    [[maybe_unused]] static void set_field_SITTING_DIMENSIONS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cL", "SITTING_DIMENSIONS", "field_40136", "SITTING_DIMENSIONS", "f_244306_"), "Lbsu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.entity.passive.CamelEntity#dashCooldown
    static jint get_field_dashCooldown(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cM", "dashCooldown", "field_40137", "dashCooldown", "f_244455_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.CamelEntity#dashCooldown
    static void set_field_dashCooldown(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cM", "dashCooldown", "field_40137", "dashCooldown", "f_244455_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.passive.CamelEntity#idleAnimationCooldown
    static jint get_field_idleAnimationCooldown(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cN", "idleAnimationTimeout", "field_40138", "idleAnimationCooldown", "f_244476_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.CamelEntity#idleAnimationCooldown
    static void set_field_idleAnimationCooldown(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cN", "idleAnimationTimeout", "field_40138", "idleAnimationCooldown", "f_244476_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    static jmethodID methodID_writeCustomDataToNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "addAdditionalSaveData", "method_5652", "writeCustomDataToNbt", "m_7380_"), "(Lub;)V");
    }

    static void writeCustomDataToNbt(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_writeCustomDataToNbt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_readCustomDataFromNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "readAdditionalSaveData", "method_5749", "readCustomDataFromNbt", "m_7378_"), "(Lub;)V");
    }

    static void readCustomDataFromNbt(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_readCustomDataFromNbt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_createCamelAttributes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("s", "createAttributes", "method_45360", "createCamelAttributes", "m_247319_"), "()Lbuv$a;");
    }

    static jobject createCamelAttributes() {
       const auto clazz = self();
       const auto methodID = methodID_createCamelAttributes();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_initDataTracker() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "defineSynchedData", "method_5693", "initDataTracker", "m_8097_"), "(Laka$a;)V");
    }

    static void initDataTracker(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_initDataTracker();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_initialize() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "finalizeSpawn", "method_5943", "initialize", "m_6518_"), "(Lddl;Lbqp;Lbtr;Lbuh;)Lbuh;");
    }

    static jobject initialize(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_initialize();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_createBrainProfile() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("dU", "brainProvider", "method_28306", "createBrainProfile", "m_5490_"), "()Lbuq$b;");
    }

    static jobject createBrainProfile(const jobject& obj) {
                
       const auto methodID = methodID_createBrainProfile();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_initGoals() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("B", "registerGoals", "method_5959", "initGoals", "m_8099_"), "()V");
    }

    static void initGoals(const jobject& obj) {
                
       const auto methodID = methodID_initGoals();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_deserializeBrain() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "makeBrain", "method_18867", "deserializeBrain", "m_8075_"), "(Lcom/mojang/serialization/Dynamic;)Lbuq;");
    }

    static jobject deserializeBrain(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_deserializeBrain();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getBaseDimensions() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "getDefaultDimensions", "method_55694", "getBaseDimensions", "m_31586_"), "(Lbua;)Lbsu;");
    }

    static jobject getBaseDimensions(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getBaseDimensions();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_mobTick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ab", "customServerAiStep", "method_5958", "mobTick", "m_8024_"), "()V");
    }

    static void mobTick(const jobject& obj) {
                
       const auto methodID = methodID_mobTick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_tick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("l", "tick", "method_5773", "tick", "m_8119_"), "()V");
    }

    static void tick(const jobject& obj) {
                
       const auto methodID = methodID_tick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_updateAnimations() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gV", "setupAnimationStates", "method_45356", "updateAnimations", "m_245223_"), "()V");
    }

    static void updateAnimations(const jobject& obj) {
                
       const auto methodID = methodID_updateAnimations();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_updateLimbs() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("z", "updateWalkAnimation", "method_48565", "updateLimbs", "m_267689_"), "(F)V");
    }

    static void updateLimbs(const jobject& obj, const jfloat& arg0) {
                
       const auto methodID = methodID_updateLimbs();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_travel() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "travel", "method_6091", "travel", "m_7023_"), "(Lexc;)V");
    }

    static void travel(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_travel();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_tickControlled() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "tickRidden", "method_49481", "tickControlled", "m_274498_"), "(Lcmx;Lexc;)V");
    }

    static void tickControlled(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_tickControlled();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_isStationary() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("t", "refuseToMove", "method_45357", "isStationary", "m_245824_"), "()Z");
    }

    static jboolean isStationary(const jobject& obj) {
                
       const auto methodID = methodID_isStationary();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getSaddledSpeed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "getRiddenSpeed", "method_49485", "getSaddledSpeed", "m_245547_"), "(Lcmx;)F");
    }

    static jfloat getSaddledSpeed(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getSaddledSpeed();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getControlledRotation() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("j", "getRiddenRotation", "method_49489", "getControlledRotation", "m_274391_"), "(Lbtn;)Lexb;");
    }

    static jobject getControlledRotation(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getControlledRotation();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getControlledMovementInput() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getRiddenInput", "method_49482", "getControlledMovementInput", "m_274312_"), "(Lcmx;Lexc;)Lexc;");
    }

    static jobject getControlledMovementInput(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_getControlledMovementInput();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_canJump() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "canJump", "method_6153", "canJump", "m_7132_"), "()Z");
    }

    static jboolean canJump(const jobject& obj) {
                
       const auto methodID = methodID_canJump();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_setJumpStrength() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "onPlayerJump", "method_6154", "setJumpStrength", "m_7888_"), "(I)V");
    }

    static void setJumpStrength(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_setJumpStrength();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_canSprintAsVehicle() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("dH", "canSprint", "method_48155", "canSprintAsVehicle", "m_264410_"), "()Z");
    }

    static jboolean canSprintAsVehicle(const jobject& obj) {
                
       const auto methodID = methodID_canSprintAsVehicle();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_jump() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "executeRidersJump", "method_45343", "jump", "m_245980_"), "(FLexc;)V");
    }

    static void jump(const jobject& obj, const jfloat& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_jump();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_isDashing() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("x", "isDashing", "method_45361", "isDashing", "m_245293_"), "()Z");
    }

    static jboolean isDashing(const jobject& obj) {
                
       const auto methodID = methodID_isDashing();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_setDashing() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("x", "setDashing", "method_45362", "setDashing", "m_246841_"), "(Z)V");
    }

    static void setDashing(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setDashing();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_startJumping() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "handleStartJump", "method_6155", "startJumping", "m_7199_"), "(I)V");
    }

    static void startJumping(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_startJumping();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_stopJumping() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "handleStopJump", "method_6156", "stopJumping", "m_8012_"), "()V");
    }

    static void stopJumping(const jobject& obj) {
                
       const auto methodID = methodID_stopJumping();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getJumpCooldown() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getJumpCooldown", "method_45327", "getJumpCooldown", "m_245614_"), "()I");
    }

    static jint getJumpCooldown(const jobject& obj) {
                
       const auto methodID = methodID_getJumpCooldown();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getAmbientSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("v", "getAmbientSound", "method_5994", "getAmbientSound", "m_7515_"), "()Lavo;");
    }

    static jobject getAmbientSound(const jobject& obj) {
                
       const auto methodID = methodID_getAmbientSound();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getDeathSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("n_", "getDeathSound", "method_6002", "getDeathSound", "m_5592_"), "()Lavo;");
    }

    static jobject getDeathSound(const jobject& obj) {
                
       const auto methodID = methodID_getDeathSound();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getHurtSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getHurtSound", "method_6011", "getHurtSound", "m_7975_"), "(Lbrk;)Lavo;");
    }

    static jobject getHurtSound(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getHurtSound();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_playStepSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "playStepSound", "method_5712", "playStepSound", "m_7355_"), "(Ljd;Ldtc;)V");
    }

    static void playStepSound(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_playStepSound();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_isBreedingItem() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("o", "isFood", "method_6481", "isBreedingItem", "m_6898_"), "(Lcuq;)Z");
    }

    static jboolean isBreedingItem(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_isBreedingItem();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_interactMob() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "mobInteract", "method_5992", "interactMob", "m_6071_"), "(Lcmx;Lbqq;)Lbqr;");
    }

    static jobject interactMob(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_interactMob();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_shouldTickLeash() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "handleLeashAtDistance", "method_60956", "shouldTickLeash", "m_338665_"), "(Lbsr;F)Z");
    }

    static jboolean shouldTickLeash(const jobject& obj, const jobject& arg0, const jfloat& arg1) {
                
       const auto methodID = methodID_shouldTickLeash();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_canChangePose() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gk", "canCamelChangePose", "method_52548", "canChangePose", "m_293983_"), "()Z");
    }

    static jboolean canChangePose(const jobject& obj) {
                
       const auto methodID = methodID_canChangePose();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_receiveFood() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "handleEating", "method_6742", "receiveFood", "m_5994_"), "(Lcmx;Lcuq;)Z");
    }

    static jboolean receiveFood(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_receiveFood();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_shouldAmbientStand() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gl", "canPerformRearing", "method_45349", "shouldAmbientStand", "m_245259_"), "()Z");
    }

    static jboolean shouldAmbientStand(const jobject& obj) {
                
       const auto methodID = methodID_shouldAmbientStand();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_canBreedWith() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "canMate", "method_6474", "canBreedWith", "m_7848_"), "(Lcfe;)Z");
    }

    static jboolean canBreedWith(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_canBreedWith();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_createChild() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getBreedOffspring", "method_45347", "createChild", "m_142606_"), "(Laqu;Lbsl;)Lcgv;");
    }

    static jobject createChild(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_createChild();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getEatSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gm", "getEatingSound", "method_28368", "getEatSound", "m_7872_"), "()Lavo;");
    }

    static jobject getEatSound(const jobject& obj) {
                
       const auto methodID = methodID_getEatSound();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_applyDamage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "actuallyHurt", "method_6074", "applyDamage", "m_6475_"), "(Lbrk;F)V");
    }

    static void applyDamage(const jobject& obj, const jobject& arg0, const jfloat& arg1) {
                
       const auto methodID = methodID_applyDamage();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getPassengerAttachmentPos() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getPassengerAttachmentPoint", "method_52533", "getPassengerAttachmentPos", "m_293035_"), "(Lbsr;Lbsu;F)Lexc;");
    }

    static jobject getPassengerAttachmentPos(const jobject& obj, const jobject& arg0, const jobject& arg1, const jfloat& arg2) {
                
       const auto methodID = methodID_getPassengerAttachmentPos();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_getScaleFactor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ea", "getAgeScale", "method_17825", "getScaleFactor", "m_320705_"), "()F");
    }

    static jfloat getScaleFactor(const jobject& obj) {
                
       const auto methodID = methodID_getScaleFactor();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID_getPassengerAttachmentY() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getBodyAnchorAnimationYOffset", "method_45346", "getPassengerAttachmentY", "m_246718_"), "(ZFLbsu;F)D");
    }

    static jdouble getPassengerAttachmentY(const jobject& obj, const jboolean& arg0, const jfloat& arg1, const jobject& arg2, const jfloat& arg3) {
                
       const auto methodID = methodID_getPassengerAttachmentY();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_getLeashOffset() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("q", "getLeashOffset", "method_45321", "getLeashOffset", "m_245894_"), "(F)Lexc;");
    }

    static jobject getLeashOffset(const jobject& obj, const jfloat& arg0) {
                
       const auto methodID = methodID_getLeashOffset();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getMaxHeadRotation() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ae", "getMaxHeadYRot", "method_5986", "getMaxHeadRotation", "m_8085_"), "()I");
    }

    static jint getMaxHeadRotation(const jobject& obj) {
                
       const auto methodID = methodID_getMaxHeadRotation();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_canAddPassenger() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("r", "canAddPassenger", "method_5818", "canAddPassenger", "m_7310_"), "(Lbsr;)Z");
    }

    static jboolean canAddPassenger(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_canAddPassenger();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_sendAiDebugData() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aa", "sendDebugPackets", "method_18409", "sendAiDebugData", "m_8025_"), "()V");
    }

    static void sendAiDebugData(const jobject& obj) {
                
       const auto methodID = methodID_sendAiDebugData();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_isSitting() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gn", "isCamelSitting", "method_45350", "isSitting", "m_264103_"), "()Z");
    }

    static jboolean isSitting(const jobject& obj) {
                
       const auto methodID = methodID_isSitting();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_shouldUpdateSittingAnimations() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("go", "isCamelVisuallySitting", "method_48573", "shouldUpdateSittingAnimations", "m_267745_"), "()Z");
    }

    static jboolean shouldUpdateSittingAnimations(const jobject& obj) {
                
       const auto methodID = methodID_shouldUpdateSittingAnimations();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isChangingPose() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gu", "isInPoseTransition", "method_45351", "isChangingPose", "m_245346_"), "()Z");
    }

    static jboolean isChangingPose(const jobject& obj) {
                
       const auto methodID = methodID_isChangingPose();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_shouldPlaySittingTransitionAnimation() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gW", "isVisuallySittingDown", "method_46398", "shouldPlaySittingTransitionAnimation", "m_267631_"), "()Z");
    }

    static jboolean shouldPlaySittingTransitionAnimation(const jobject& obj) {
                
       const auto methodID = methodID_shouldPlaySittingTransitionAnimation();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_startSitting() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gv", "sitDown", "method_45352", "startSitting", "m_245138_"), "()V");
    }

    static void startSitting(const jobject& obj) {
                
       const auto methodID = methodID_startSitting();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_startStanding() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gw", "standUp", "method_45353", "startStanding", "m_246761_"), "()V");
    }

    static void startStanding(const jobject& obj) {
                
       const auto methodID = methodID_startStanding();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_setStanding() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gx", "standUpInstantly", "method_45354", "setStanding", "m_247328_"), "()V");
    }

    static void setStanding(const jobject& obj) {
                
       const auto methodID = methodID_setStanding();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_setLastPoseTick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "resetLastPoseChangeTick", "method_45344", "setLastPoseTick", "m_246174_"), "(J)V");
    }

    static void setLastPoseTick(const jobject& obj, const jlong& arg0) {
                
       const auto methodID = methodID_setLastPoseTick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_initLastPoseTick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "resetLastPoseChangeTickToFullStand", "method_48160", "initLastPoseTick", "m_264491_"), "(J)V");
    }

    static void initLastPoseTick(const jobject& obj, const jlong& arg0) {
                
       const auto methodID = methodID_initLastPoseTick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getLastPoseTickDelta() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gy", "getPoseTime", "method_45355", "getLastPoseTickDelta", "m_246237_"), "()J");
    }

    static jlong getLastPoseTickDelta(const jobject& obj) {
                
       const auto methodID = methodID_getLastPoseTickDelta();
       return MinecraftSDK::env->CallLongMethod(obj, methodID);
    };
    
    static jmethodID methodID_getSaddleSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ac_", "getSaddleSoundEvent", "method_45328", "getSaddleSound", "m_246265_"), "()Lavo;");
    }

    static jobject getSaddleSound(const jobject& obj) {
                
       const auto methodID = methodID_getSaddleSound();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_onTrackedDataSet() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "onSyncedDataUpdated", "method_5674", "onTrackedDataSet", "m_7350_"), "(Lajw;)V");
    }

    static void onTrackedDataSet(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onTrackedDataSet();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isTame() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gz", "isTamed", "method_6727", "isTame", "m_30614_"), "()Z");
    }

    static jboolean isTame(const jobject& obj) {
                
       const auto methodID = methodID_isTame();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_openInventory() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "openCustomInventoryScreen", "method_6722", "openInventory", "m_213583_"), "(Lcmx;)V");
    }

    static void openInventory(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_openInventory();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_createBodyControl() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("H", "createBodyControl", "method_5963", "createBodyControl", "m_7560_"), "()Lbzk;");
    }

    static jobject createBodyControl(const jobject& obj) {
                
       const auto methodID = methodID_createBodyControl();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_ENTITY_PASSIVE_CAMELENTITY_HPP