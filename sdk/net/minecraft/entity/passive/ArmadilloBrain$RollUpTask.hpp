// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ENTITY_PASSIVE_ARMADILLOBRAIN$ROLLUPTASK_HPP
#define NET_MINECRAFT_ENTITY_PASSIVE_ARMADILLOBRAIN$ROLLUPTASK_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.entity.passive.ArmadilloBrain$RollUpTask
 * Remapped: cgo$a
 */
namespace ArmadilloBrain$RollUpTask {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("cgo$a", "net/minecraft/world/entity/animal/armadillo/ArmadilloAi$ArmadilloBallUp", "net/minecraft/class_9071$class_9072", "net/minecraft/entity/passive/ArmadilloBrain$RollUpTask", "net/minecraft/src/C_313534_$C_313773_"));
        }
        return cachedClass;
    };

    // getter for static default field net.minecraft.entity.passive.ArmadilloBrain$RollUpTask#RUN_TIME_IN_TICKS
    [[maybe_unused]] static jint get_field_RUN_TIME_IN_TICKS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "BALL_UP_STAY_IN_STATE", "field_49087", "RUN_TIME_IN_TICKS", "f_316786_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static default field net.minecraft.entity.passive.ArmadilloBrain$RollUpTask#RUN_TIME_IN_TICKS
    [[maybe_unused]] static void set_field_RUN_TIME_IN_TICKS(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "BALL_UP_STAY_IN_STATE", "field_49087", "RUN_TIME_IN_TICKS", "f_316786_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static default field net.minecraft.entity.passive.ArmadilloBrain$RollUpTask#field_49088
    [[maybe_unused]] static jint get_field_field_49088() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "TICKS_DELAY_TO_DETERMINE_IF_DANGER_IS_STILL_AROUND", "field_49088", "field_49088", "f_316110_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static default field net.minecraft.entity.passive.ArmadilloBrain$RollUpTask#field_49088
    [[maybe_unused]] static void set_field_field_49088(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "TICKS_DELAY_TO_DETERMINE_IF_DANGER_IS_STILL_AROUND", "field_49088", "field_49088", "f_316110_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static default field net.minecraft.entity.passive.ArmadilloBrain$RollUpTask#field_49089
    [[maybe_unused]] static jint get_field_field_49089() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "DANGER_DETECTED_RECENTLY_DANGER_THRESHOLD", "field_49089", "field_49089", "f_315080_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static default field net.minecraft.entity.passive.ArmadilloBrain$RollUpTask#field_49089
    [[maybe_unused]] static void set_field_field_49089(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "DANGER_DETECTED_RECENTLY_DANGER_THRESHOLD", "field_49089", "field_49089", "f_315080_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for default field net.minecraft.entity.passive.ArmadilloBrain$RollUpTask#ticksUntilPeek
    static jint get_field_ticksUntilPeek(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "nextPeekTimer", "field_49090", "ticksUntilPeek", "f_314305_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static default field net.minecraft.entity.passive.ArmadilloBrain$RollUpTask#ticksUntilPeek
    static void set_field_ticksUntilPeek(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "nextPeekTimer", "field_49090", "ticksUntilPeek", "f_314305_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.entity.passive.ArmadilloBrain$RollUpTask#considerPeeking
    static jboolean get_field_considerPeeking(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "dangerWasAround", "field_49091", "considerPeeking", "f_314339_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static default field net.minecraft.entity.passive.ArmadilloBrain$RollUpTask#considerPeeking
    static void set_field_considerPeeking(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "dangerWasAround", "field_49091", "considerPeeking", "f_314339_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    static jmethodID methodID_keepRunning() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "tick", "method_55741", "keepRunning", "m_6725_"), "(Laqu;Lcgn;J)V");
    }

    static void keepRunning(const jobject& obj, const jobject& arg0, const jobject& arg1, const jlong& arg2) {
                
       const auto methodID = methodID_keepRunning();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_calculateTicksUntilPeek() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "pickNextPeekTimer", "method_57001", "calculateTicksUntilPeek", "m_323824_"), "(Lcgn;)I");
    }

    static jint calculateTicksUntilPeek(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_calculateTicksUntilPeek();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_shouldRun() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "checkExtraStartConditions", "method_55740", "shouldRun", "m_6114_"), "(Laqu;Lcgn;)Z");
    }

    static jboolean shouldRun(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_shouldRun();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_shouldKeepRunning() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "canStillUse", "method_55742", "shouldKeepRunning", "m_6737_"), "(Laqu;Lcgn;J)Z");
    }

    static jboolean shouldKeepRunning(const jobject& obj, const jobject& arg0, const jobject& arg1, const jlong& arg2) {
                
       const auto methodID = methodID_shouldKeepRunning();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_run() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "start", "method_55743", "run", "m_6735_"), "(Laqu;Lcgn;J)V");
    }

    static void run(const jobject& obj, const jobject& arg0, const jobject& arg1, const jlong& arg2) {
                
       const auto methodID = methodID_run();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_finishRunning() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "stop", "method_55744", "finishRunning", "m_6732_"), "(Laqu;Lcgn;J)V");
    }

    static void finishRunning(const jobject& obj, const jobject& arg0, const jobject& arg1, const jlong& arg2) {
                
       const auto methodID = methodID_finishRunning();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
};

#endif // NET_MINECRAFT_ENTITY_PASSIVE_ARMADILLOBRAIN$ROLLUPTASK_HPP