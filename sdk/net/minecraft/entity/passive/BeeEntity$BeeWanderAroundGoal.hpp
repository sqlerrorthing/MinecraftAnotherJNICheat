// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ENTITY_PASSIVE_BEEENTITY$BEEWANDERAROUNDGOAL_HPP
#define NET_MINECRAFT_ENTITY_PASSIVE_BEEENTITY$BEEWANDERAROUNDGOAL_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.entity.passive.BeeEntity$BeeWanderAroundGoal
 * Remapped: cff$l
 */
namespace BeeEntity$BeeWanderAroundGoal {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("cff$l", "net/minecraft/world/entity/animal/Bee$BeeWanderGoal", "net/minecraft/class_4466$class_4479", "net/minecraft/entity/passive/BeeEntity$BeeWanderAroundGoal", "net/minecraft/src/C_805_$C_818_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.entity.passive.BeeEntity$BeeWanderAroundGoal#MAX_DISTANCE
    [[maybe_unused]] static jint get_field_MAX_DISTANCE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "WANDER_THRESHOLD", "field_30309", "MAX_DISTANCE", "f_148821_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.BeeEntity$BeeWanderAroundGoal#MAX_DISTANCE
    [[maybe_unused]] static void set_field_MAX_DISTANCE(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "WANDER_THRESHOLD", "field_30309", "MAX_DISTANCE", "f_148821_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    static jmethodID methodID_canStart() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "canUse", "method_6264", "canStart", "m_8036_"), "()Z");
    }

    static jboolean canStart(const jobject& obj) {
                
       const auto methodID = methodID_canStart();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_shouldContinue() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "canContinueToUse", "method_6266", "shouldContinue", "m_8045_"), "()Z");
    }

    static jboolean shouldContinue(const jobject& obj) {
                
       const auto methodID = methodID_shouldContinue();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_start() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "start", "method_6269", "start", "m_8056_"), "()V");
    }

    static void start(const jobject& obj) {
                
       const auto methodID = methodID_start();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getRandomLocation() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "findPos", "method_21822", "getRandomLocation", "m_28097_"), "()Lexc;");
    }

    static jobject getRandomLocation(const jobject& obj) {
                
       const auto methodID = methodID_getRandomLocation();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_ENTITY_PASSIVE_BEEENTITY$BEEWANDERAROUNDGOAL_HPP