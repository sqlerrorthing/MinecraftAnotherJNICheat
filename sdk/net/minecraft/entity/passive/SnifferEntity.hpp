// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ENTITY_PASSIVE_SNIFFERENTITY_HPP
#define NET_MINECRAFT_ENTITY_PASSIVE_SNIFFERENTITY_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.entity.passive.SnifferEntity
 * Remapped: chv
 */
namespace SnifferEntity {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("chv", "net/minecraft/world/entity/animal/sniffer/Sniffer", "net/minecraft/class_8153", "net/minecraft/entity/passive/SnifferEntity", "net/minecraft/src/C_271078_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.entity.passive.SnifferEntity#field_42656
    [[maybe_unused]] static jint get_field_field_42656() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ci", "DIGGING_PARTICLES_DELAY_TICKS", "field_42656", "field_42656", "f_271109_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.SnifferEntity#field_42656
    [[maybe_unused]] static void set_field_field_42656(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ci", "DIGGING_PARTICLES_DELAY_TICKS", "field_42656", "field_42656", "f_271109_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.passive.SnifferEntity#field_42657
    [[maybe_unused]] static jint get_field_field_42657() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cj", "DIGGING_PARTICLES_DURATION_TICKS", "field_42657", "field_42657", "f_271252_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.SnifferEntity#field_42657
    [[maybe_unused]] static void set_field_field_42657(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cj", "DIGGING_PARTICLES_DURATION_TICKS", "field_42657", "field_42657", "f_271252_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.passive.SnifferEntity#field_42658
    [[maybe_unused]] static jint get_field_field_42658() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ck", "DIGGING_PARTICLES_AMOUNT", "field_42658", "field_42658", "f_271435_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.SnifferEntity#field_42658
    [[maybe_unused]] static void set_field_field_42658(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ck", "DIGGING_PARTICLES_AMOUNT", "field_42658", "field_42658", "f_271435_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.passive.SnifferEntity#field_42659
    [[maybe_unused]] static jint get_field_field_42659() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cl", "DIGGING_DROP_SEED_OFFSET_TICKS", "field_42659", "field_42659", "f_271151_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.SnifferEntity#field_42659
    [[maybe_unused]] static void set_field_field_42659(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cl", "DIGGING_DROP_SEED_OFFSET_TICKS", "field_42659", "field_42659", "f_271151_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.passive.SnifferEntity#field_42661
    [[maybe_unused]] static jint get_field_field_42661() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cm", "SNIFFER_BABY_AGE_TICKS", "field_42661", "field_42661", "f_271414_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.SnifferEntity#field_42661
    [[maybe_unused]] static void set_field_field_42661(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cm", "SNIFFER_BABY_AGE_TICKS", "field_42661", "field_42661", "f_271414_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.passive.SnifferEntity#field_44785
    [[maybe_unused]] static jfloat get_field_field_44785() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cn", "DIGGING_BB_HEIGHT_OFFSET", "field_44785", "field_44785", "f_285640_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.SnifferEntity#field_44785
    [[maybe_unused]] static void set_field_field_44785(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cn", "DIGGING_BB_HEIGHT_OFFSET", "field_44785", "field_44785", "f_285640_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.passive.SnifferEntity#DIMENSIONS
    [[maybe_unused]] static jobject get_field_DIMENSIONS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("co", "DIGGING_DIMENSIONS", "field_44786", "DIMENSIONS", "f_285627_"), "Lbsu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.SnifferEntity#DIMENSIONS
    [[maybe_unused]] static void set_field_DIMENSIONS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("co", "DIGGING_DIMENSIONS", "field_44786", "DIMENSIONS", "f_285627_"), "Lbsu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.passive.SnifferEntity#STATE
    [[maybe_unused]] static jobject get_field_STATE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cp", "DATA_STATE", "field_42662", "STATE", "f_271416_"), "Lajw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.SnifferEntity#STATE
    [[maybe_unused]] static void set_field_STATE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cp", "DATA_STATE", "field_42662", "STATE", "f_271416_"), "Lajw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.passive.SnifferEntity#FINISH_DIG_TIME
    [[maybe_unused]] static jobject get_field_FINISH_DIG_TIME() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cq", "DATA_DROP_SEED_AT_TICK", "field_42663", "FINISH_DIG_TIME", "f_271498_"), "Lajw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.SnifferEntity#FINISH_DIG_TIME
    [[maybe_unused]] static void set_field_FINISH_DIG_TIME(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cq", "DATA_DROP_SEED_AT_TICK", "field_42663", "FINISH_DIG_TIME", "f_271498_"), "Lajw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for public field net.minecraft.entity.passive.SnifferEntity#feelingHappyAnimationState
    static jobject get_field_feelingHappyAnimationState(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cc", "feelingHappyAnimationState", "field_42650", "feelingHappyAnimationState", "f_271434_"), "Lbsm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.entity.passive.SnifferEntity#feelingHappyAnimationState
    static void set_field_feelingHappyAnimationState(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cc", "feelingHappyAnimationState", "field_42650", "feelingHappyAnimationState", "f_271434_"), "Lbsm;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.entity.passive.SnifferEntity#scentingAnimationState
    static jobject get_field_scentingAnimationState(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cd", "scentingAnimationState", "field_42651", "scentingAnimationState", "f_271092_"), "Lbsm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.entity.passive.SnifferEntity#scentingAnimationState
    static void set_field_scentingAnimationState(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cd", "scentingAnimationState", "field_42651", "scentingAnimationState", "f_271092_"), "Lbsm;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.entity.passive.SnifferEntity#sniffingAnimationState
    static jobject get_field_sniffingAnimationState(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ce", "sniffingAnimationState", "field_42652", "sniffingAnimationState", "f_271278_"), "Lbsm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.entity.passive.SnifferEntity#sniffingAnimationState
    static void set_field_sniffingAnimationState(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ce", "sniffingAnimationState", "field_42652", "sniffingAnimationState", "f_271278_"), "Lbsm;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.entity.passive.SnifferEntity#diggingAnimationState
    static jobject get_field_diggingAnimationState(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cg", "diggingAnimationState", "field_42654", "diggingAnimationState", "f_271472_"), "Lbsm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.entity.passive.SnifferEntity#diggingAnimationState
    static void set_field_diggingAnimationState(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cg", "diggingAnimationState", "field_42654", "diggingAnimationState", "f_271472_"), "Lbsm;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.entity.passive.SnifferEntity#risingAnimationState
    static jobject get_field_risingAnimationState(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ch", "risingAnimationState", "field_42655", "risingAnimationState", "f_271318_"), "Lbsm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.entity.passive.SnifferEntity#risingAnimationState
    static void set_field_risingAnimationState(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ch", "risingAnimationState", "field_42655", "risingAnimationState", "f_271318_"), "Lbsm;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_createSnifferAttributes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("s", "createAttributes", "method_49146", "createSnifferAttributes", "m_271876_"), "()Lbuv$a;");
    }

    static jobject createSnifferAttributes() {
       const auto clazz = self();
       const auto methodID = methodID_createSnifferAttributes();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_initDataTracker() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "defineSynchedData", "method_5693", "initDataTracker", "m_8097_"), "(Laka$a;)V");
    }

    static void initDataTracker(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_initDataTracker();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_onStartPathfinding() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("E", "onPathfindingStart", "method_51504", "onStartPathfinding", "m_284177_"), "()V");
    }

    static void onStartPathfinding(const jobject& obj) {
                
       const auto methodID = methodID_onStartPathfinding();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_onFinishPathfinding() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("F", "onPathfindingDone", "method_51503", "onFinishPathfinding", "m_284461_"), "()V");
    }

    static void onFinishPathfinding(const jobject& obj) {
                
       const auto methodID = methodID_onFinishPathfinding();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getBaseDimensions() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "getDefaultDimensions", "method_55694", "getBaseDimensions", "m_31586_"), "(Lbua;)Lbsu;");
    }

    static jobject getBaseDimensions(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getBaseDimensions();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isSearching() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("t", "isSearching", "method_51301", "isSearching", "m_280317_"), "()Z");
    }

    static jboolean isSearching(const jobject& obj) {
                
       const auto methodID = methodID_isSearching();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isTempted() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("x", "isTempted", "method_51158", "isTempted", "m_278663_"), "()Z");
    }

    static jboolean isTempted(const jobject& obj) {
                
       const auto methodID = methodID_isTempted();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_canTryToDig() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gk", "canSniff", "method_51155", "canTryToDig", "m_278650_"), "()Z");
    }

    static jboolean canTryToDig(const jobject& obj) {
                
       const auto methodID = methodID_canTryToDig();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isDiggingOrSearching() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gl", "canPlayDiggingSound", "method_49150", "isDiggingOrSearching", "m_272076_"), "()Z");
    }

    static jboolean isDiggingOrSearching(const jobject& obj) {
                
       const auto methodID = methodID_isDiggingOrSearching();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getDigPos() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("go", "getHeadBlock", "method_51508", "getDigPos", "m_284345_"), "()Ljd;");
    }

    static jobject getDigPos(const jobject& obj) {
                
       const auto methodID = methodID_getDigPos();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getDigLocation() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gu", "getHeadPosition", "method_49137", "getDigLocation", "m_284388_"), "()Lexc;");
    }

    static jobject getDigLocation(const jobject& obj) {
                
       const auto methodID = methodID_getDigLocation();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getState() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gv", "getState", "method_49138", "getState", "m_271917_"), "()Lchv$a;");
    }

    static jobject getState(const jobject& obj) {
                
       const auto methodID = methodID_getState();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_setState() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "setState", "method_49133", "setState", "m_271705_"), "(Lchv$a;)Lchv;");
    }

    static jobject setState(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setState();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_onTrackedDataSet() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "onSyncedDataUpdated", "method_5674", "onTrackedDataSet", "m_7350_"), "(Lajw;)V");
    }

    static void onTrackedDataSet(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onTrackedDataSet();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_stopAnimations() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gw", "resetAnimations", "method_49139", "stopAnimations", "m_271845_"), "()V");
    }

    static void stopAnimations(const jobject& obj) {
                
       const auto methodID = methodID_stopAnimations();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_startState() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "transitionTo", "method_49132", "startState", "m_272034_"), "(Lchv$a;)Lchv;");
    }

    static jobject startState(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_startState();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_playScentingSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gx", "onScentingStart", "method_51156", "playScentingSound", "m_278765_"), "()Lchv;");
    }

    static jobject playScentingSound(const jobject& obj) {
                
       const auto methodID = methodID_playScentingSound();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_setDigging() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gy", "onDiggingStart", "method_49141", "setDigging", "m_271851_"), "()Lchv;");
    }

    static jobject setDigging(const jobject& obj) {
                
       const auto methodID = methodID_setDigging();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_finishDigging() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("x", "onDiggingComplete", "method_49149", "finishDigging", "m_271943_"), "(Z)Lchv;");
    }

    static jobject finishDigging(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_finishDigging();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_findSniffingTargetPos() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gm", "calculateDigPosition", "method_49134", "findSniffingTargetPos", "m_271905_"), "()Ljava/util/Optional;");
    }

    static jobject findSniffingTargetPos(const jobject& obj) {
                
       const auto methodID = methodID_findSniffingTargetPos();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_canDig() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gn", "canDig", "method_49135", "canDig", "m_272270_"), "()Z");
    }

    static jboolean canDig(const jobject& obj) {
                
       const auto methodID = methodID_canDig();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isDiggable() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "canDig", "method_49140", "isDiggable", "m_271898_"), "(Ljd;)Z");
    }

    static jboolean isDiggable(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_isDiggable();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_dropSeeds() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gz", "dropSeed", "method_49142", "dropSeeds", "m_271740_"), "()V");
    }

    static void dropSeeds(const jobject& obj) {
                
       const auto methodID = methodID_dropSeeds();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_spawnDiggingParticles() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "emitDiggingParticles", "method_49131", "spawnDiggingParticles", "m_272274_"), "(Lbsm;)Lchv;");
    }

    static jobject spawnDiggingParticles(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_spawnDiggingParticles();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_addExploredPosition() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("i", "storeExploredPosition", "method_49145", "addExploredPosition", "m_271874_"), "(Ljd;)Lchv;");
    }

    static jobject addExploredPosition(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_addExploredPosition();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getExploredPositions() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gA", "getExploredPositions", "method_49143", "getExploredPositions", "m_272217_"), "()Ljava/util/stream/Stream;");
    }

    static jobject getExploredPositions(const jobject& obj) {
                
       const auto methodID = methodID_getExploredPositions();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_jump() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ff", "jumpFromGround", "method_6043", "jump", "m_6135_"), "()V");
    }

    static void jump(const jobject& obj) {
                
       const auto methodID = methodID_jump();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_breed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "spawnChildFromBreeding", "method_24650", "breed", "m_27563_"), "(Laqu;Lcfe;)V");
    }

    static void breed(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_breed();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_onDeath() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "die", "method_6078", "onDeath", "m_6667_"), "(Lbrk;)V");
    }

    static void onDeath(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onDeath();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_tick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("l", "tick", "method_5773", "tick", "m_8119_"), "()V");
    }

    static void tick(const jobject& obj) {
                
       const auto methodID = methodID_tick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_interactMob() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "mobInteract", "method_5992", "interactMob", "m_6071_"), "(Lcmx;Lbqq;)Lbqr;");
    }

    static jobject interactMob(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_interactMob();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_playSearchingSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gB", "playSearchingSound", "method_49144", "playSearchingSound", "m_272136_"), "()V");
    }

    static void playSearchingSound(const jobject& obj) {
                
       const auto methodID = methodID_playSearchingSound();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_playStepSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "playStepSound", "method_5712", "playStepSound", "m_7355_"), "(Ljd;Ldtc;)V");
    }

    static void playStepSound(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_playStepSound();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getEatSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getEatingSound", "method_18869", "getEatSound", "m_7866_"), "(Lcuq;)Lavo;");
    }

    static jobject getEatSound(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getEatSound();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getAmbientSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("v", "getAmbientSound", "method_5994", "getAmbientSound", "m_7515_"), "()Lavo;");
    }

    static jobject getAmbientSound(const jobject& obj) {
                
       const auto methodID = methodID_getAmbientSound();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getHurtSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getHurtSound", "method_6011", "getHurtSound", "m_7975_"), "(Lbrk;)Lavo;");
    }

    static jobject getHurtSound(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getHurtSound();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getDeathSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("n_", "getDeathSound", "method_6002", "getDeathSound", "m_5592_"), "()Lavo;");
    }

    static jobject getDeathSound(const jobject& obj) {
                
       const auto methodID = methodID_getDeathSound();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getMaxHeadRotation() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ae", "getMaxHeadYRot", "method_5986", "getMaxHeadRotation", "m_8085_"), "()I");
    }

    static jint getMaxHeadRotation(const jobject& obj) {
                
       const auto methodID = methodID_getMaxHeadRotation();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_setBaby() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setBaby", "method_7217", "setBaby", "m_6863_"), "(Z)V");
    }

    static void setBaby(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setBaby();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_createChild() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getBreedOffspring", "method_5613", "createChild", "m_142606_"), "(Laqu;Lbsl;)Lbsl;");
    }

    static jobject createChild(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_createChild();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_canBreedWith() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "canMate", "method_6474", "canBreedWith", "m_7848_"), "(Lcfe;)Z");
    }

    static jboolean canBreedWith(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_canBreedWith();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getVisibilityBoundingBox() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h_", "getBoundingBoxForCulling", "method_5830", "getVisibilityBoundingBox", "m_6921_"), "()Lewx;");
    }

    static jobject getVisibilityBoundingBox(const jobject& obj) {
                
       const auto methodID = methodID_getVisibilityBoundingBox();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_isBreedingItem() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("o", "isFood", "method_6481", "isBreedingItem", "m_6898_"), "(Lcuq;)Z");
    }

    static jboolean isBreedingItem(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_isBreedingItem();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_deserializeBrain() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "makeBrain", "method_18867", "deserializeBrain", "m_8075_"), "(Lcom/mojang/serialization/Dynamic;)Lbuq;");
    }

    static jobject deserializeBrain(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_deserializeBrain();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getBrain() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("dT", "getBrain", "method_18868", "getBrain", "m_6274_"), "()Lbuq;");
    }

    static jobject getBrain(const jobject& obj) {
                
       const auto methodID = methodID_getBrain();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_createBrainProfile() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("dU", "brainProvider", "method_28306", "createBrainProfile", "m_5490_"), "()Lbuq$b;");
    }

    static jobject createBrainProfile(const jobject& obj) {
                
       const auto methodID = methodID_createBrainProfile();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_mobTick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ab", "customServerAiStep", "method_5958", "mobTick", "m_8024_"), "()V");
    }

    static void mobTick(const jobject& obj) {
                
       const auto methodID = methodID_mobTick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_sendAiDebugData() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aa", "sendDebugPackets", "method_18409", "sendAiDebugData", "m_8025_"), "()V");
    }

    static void sendAiDebugData(const jobject& obj) {
                
       const auto methodID = methodID_sendAiDebugData();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_ENTITY_PASSIVE_SNIFFERENTITY_HPP