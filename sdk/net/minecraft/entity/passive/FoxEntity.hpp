// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ENTITY_PASSIVE_FOXENTITY_HPP
#define NET_MINECRAFT_ENTITY_PASSIVE_FOXENTITY_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.entity.passive.FoxEntity
 * Remapped: cfo
 */
namespace FoxEntity {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("cfo", "net/minecraft/world/entity/animal/Fox", "net/minecraft/class_4019", "net/minecraft/entity/passive/FoxEntity", "net/minecraft/src/C_833_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.entity.passive.FoxEntity#TYPE
    [[maybe_unused]] static jobject get_field_TYPE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cg", "DATA_TYPE_ID", "field_17949", "TYPE", "f_28437_"), "Lajw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.FoxEntity#TYPE
    [[maybe_unused]] static void set_field_TYPE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cg", "DATA_TYPE_ID", "field_17949", "TYPE", "f_28437_"), "Lajw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.passive.FoxEntity#FOX_FLAGS
    [[maybe_unused]] static jobject get_field_FOX_FLAGS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ch", "DATA_FLAGS_ID", "field_17950", "FOX_FLAGS", "f_28438_"), "Lajw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.FoxEntity#FOX_FLAGS
    [[maybe_unused]] static void set_field_FOX_FLAGS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ch", "DATA_FLAGS_ID", "field_17950", "FOX_FLAGS", "f_28438_"), "Lajw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.passive.FoxEntity#SITTING_FLAG
    [[maybe_unused]] static jint get_field_SITTING_FLAG() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ci", "FLAG_SITTING", "field_30331", "SITTING_FLAG", "f_148899_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.FoxEntity#SITTING_FLAG
    [[maybe_unused]] static void set_field_SITTING_FLAG(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ci", "FLAG_SITTING", "field_30331", "SITTING_FLAG", "f_148899_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.passive.FoxEntity#CROUCHING_FLAG
    [[maybe_unused]] static jint get_field_CROUCHING_FLAG() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cc", "FLAG_CROUCHING", "field_30328", "CROUCHING_FLAG", "f_148896_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.passive.FoxEntity#CROUCHING_FLAG
    [[maybe_unused]] static void set_field_CROUCHING_FLAG(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cc", "FLAG_CROUCHING", "field_30328", "CROUCHING_FLAG", "f_148896_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.passive.FoxEntity#ROLLING_HEAD_FLAG
    [[maybe_unused]] static jint get_field_ROLLING_HEAD_FLAG() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cd", "FLAG_INTERESTED", "field_30329", "ROLLING_HEAD_FLAG", "f_148897_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.passive.FoxEntity#ROLLING_HEAD_FLAG
    [[maybe_unused]] static void set_field_ROLLING_HEAD_FLAG(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cd", "FLAG_INTERESTED", "field_30329", "ROLLING_HEAD_FLAG", "f_148897_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.passive.FoxEntity#CHASING_FLAG
    [[maybe_unused]] static jint get_field_CHASING_FLAG() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ce", "FLAG_POUNCING", "field_30330", "CHASING_FLAG", "f_148898_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.passive.FoxEntity#CHASING_FLAG
    [[maybe_unused]] static void set_field_CHASING_FLAG(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ce", "FLAG_POUNCING", "field_30330", "CHASING_FLAG", "f_148898_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.passive.FoxEntity#SLEEPING_FLAG
    [[maybe_unused]] static jint get_field_SLEEPING_FLAG() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cj", "FLAG_SLEEPING", "field_30332", "SLEEPING_FLAG", "f_148900_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.FoxEntity#SLEEPING_FLAG
    [[maybe_unused]] static void set_field_SLEEPING_FLAG(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cj", "FLAG_SLEEPING", "field_30332", "SLEEPING_FLAG", "f_148900_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.passive.FoxEntity#WALKING_FLAG
    [[maybe_unused]] static jint get_field_WALKING_FLAG() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ck", "FLAG_FACEPLANTED", "field_30333", "WALKING_FLAG", "f_148901_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.FoxEntity#WALKING_FLAG
    [[maybe_unused]] static void set_field_WALKING_FLAG(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ck", "FLAG_FACEPLANTED", "field_30333", "WALKING_FLAG", "f_148901_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.passive.FoxEntity#AGGRESSIVE_FLAG
    [[maybe_unused]] static jint get_field_AGGRESSIVE_FLAG() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cl", "FLAG_DEFENDING", "field_30334", "AGGRESSIVE_FLAG", "f_148902_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.FoxEntity#AGGRESSIVE_FLAG
    [[maybe_unused]] static void set_field_AGGRESSIVE_FLAG(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cl", "FLAG_DEFENDING", "field_30334", "AGGRESSIVE_FLAG", "f_148902_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.passive.FoxEntity#OWNER
    [[maybe_unused]] static jobject get_field_OWNER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cm", "DATA_TRUSTED_ID_0", "field_17951", "OWNER", "f_28439_"), "Lajw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.FoxEntity#OWNER
    [[maybe_unused]] static void set_field_OWNER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cm", "DATA_TRUSTED_ID_0", "field_17951", "OWNER", "f_28439_"), "Lajw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.passive.FoxEntity#OTHER_TRUSTED
    [[maybe_unused]] static jobject get_field_OTHER_TRUSTED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cn", "DATA_TRUSTED_ID_1", "field_17952", "OTHER_TRUSTED", "f_28440_"), "Lajw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.FoxEntity#OTHER_TRUSTED
    [[maybe_unused]] static void set_field_OTHER_TRUSTED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cn", "DATA_TRUSTED_ID_1", "field_17952", "OTHER_TRUSTED", "f_28440_"), "Lajw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static default field net.minecraft.entity.passive.FoxEntity#PICKABLE_DROP_FILTER
    [[maybe_unused]] static jobject get_field_PICKABLE_DROP_FILTER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("co", "ALLOWED_ITEMS", "field_17953", "PICKABLE_DROP_FILTER", "f_28441_"), "Ljava/util/function/Predicate;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static default field net.minecraft.entity.passive.FoxEntity#PICKABLE_DROP_FILTER
    [[maybe_unused]] static void set_field_PICKABLE_DROP_FILTER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("co", "ALLOWED_ITEMS", "field_17953", "PICKABLE_DROP_FILTER", "f_28441_"), "Ljava/util/function/Predicate;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.passive.FoxEntity#JUST_ATTACKED_SOMETHING_FILTER
    [[maybe_unused]] static jobject get_field_JUST_ATTACKED_SOMETHING_FILTER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cp", "TRUSTED_TARGET_SELECTOR", "field_17954", "JUST_ATTACKED_SOMETHING_FILTER", "f_28442_"), "Ljava/util/function/Predicate;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.FoxEntity#JUST_ATTACKED_SOMETHING_FILTER
    [[maybe_unused]] static void set_field_JUST_ATTACKED_SOMETHING_FILTER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cp", "TRUSTED_TARGET_SELECTOR", "field_17954", "JUST_ATTACKED_SOMETHING_FILTER", "f_28442_"), "Ljava/util/function/Predicate;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static default field net.minecraft.entity.passive.FoxEntity#CHICKEN_AND_RABBIT_FILTER
    [[maybe_unused]] static jobject get_field_CHICKEN_AND_RABBIT_FILTER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cq", "STALKABLE_PREY", "field_17955", "CHICKEN_AND_RABBIT_FILTER", "f_28443_"), "Ljava/util/function/Predicate;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static default field net.minecraft.entity.passive.FoxEntity#CHICKEN_AND_RABBIT_FILTER
    [[maybe_unused]] static void set_field_CHICKEN_AND_RABBIT_FILTER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cq", "STALKABLE_PREY", "field_17955", "CHICKEN_AND_RABBIT_FILTER", "f_28443_"), "Ljava/util/function/Predicate;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.passive.FoxEntity#NOTICEABLE_PLAYER_FILTER
    [[maybe_unused]] static jobject get_field_NOTICEABLE_PLAYER_FILTER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cr", "AVOID_PLAYERS", "field_17956", "NOTICEABLE_PLAYER_FILTER", "f_28444_"), "Ljava/util/function/Predicate;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.FoxEntity#NOTICEABLE_PLAYER_FILTER
    [[maybe_unused]] static void set_field_NOTICEABLE_PLAYER_FILTER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cr", "AVOID_PLAYERS", "field_17956", "NOTICEABLE_PLAYER_FILTER", "f_28444_"), "Ljava/util/function/Predicate;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.passive.FoxEntity#EATING_DURATION
    [[maybe_unused]] static jint get_field_EATING_DURATION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cs", "MIN_TICKS_BEFORE_EAT", "field_30335", "EATING_DURATION", "f_148903_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.FoxEntity#EATING_DURATION
    [[maybe_unused]] static void set_field_EATING_DURATION(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cs", "MIN_TICKS_BEFORE_EAT", "field_30335", "EATING_DURATION", "f_148903_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.passive.FoxEntity#BABY_BASE_DIMENSIONS
    [[maybe_unused]] static jobject get_field_BABY_BASE_DIMENSIONS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ct", "BABY_DIMENSIONS", "field_47772", "BABY_BASE_DIMENSIONS", "f_314999_"), "Lbsu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.FoxEntity#BABY_BASE_DIMENSIONS
    [[maybe_unused]] static void set_field_BABY_BASE_DIMENSIONS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ct", "BABY_DIMENSIONS", "field_47772", "BABY_BASE_DIMENSIONS", "f_314999_"), "Lbsu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.entity.passive.FoxEntity#followChickenAndRabbitGoal
    static jobject get_field_followChickenAndRabbitGoal(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cu", "landTargetGoal", "field_17957", "followChickenAndRabbitGoal", "f_28445_"), "Lcam;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.FoxEntity#followChickenAndRabbitGoal
    static void set_field_followChickenAndRabbitGoal(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cu", "landTargetGoal", "field_17957", "followChickenAndRabbitGoal", "f_28445_"), "Lcam;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.passive.FoxEntity#followBabyTurtleGoal
    static jobject get_field_followBabyTurtleGoal(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cv", "turtleEggTargetGoal", "field_17958", "followBabyTurtleGoal", "f_28446_"), "Lcam;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.FoxEntity#followBabyTurtleGoal
    static void set_field_followBabyTurtleGoal(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cv", "turtleEggTargetGoal", "field_17958", "followBabyTurtleGoal", "f_28446_"), "Lcam;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.passive.FoxEntity#followFishGoal
    static jobject get_field_followFishGoal(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cw", "fishTargetGoal", "field_17959", "followFishGoal", "f_28447_"), "Lcam;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.FoxEntity#followFishGoal
    static void set_field_followFishGoal(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cw", "fishTargetGoal", "field_17959", "followFishGoal", "f_28447_"), "Lcam;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.passive.FoxEntity#headRollProgress
    static jfloat get_field_headRollProgress(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cx", "interestedAngle", "field_17960", "headRollProgress", "f_28448_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.FoxEntity#headRollProgress
    static void set_field_headRollProgress(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cx", "interestedAngle", "field_17960", "headRollProgress", "f_28448_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.passive.FoxEntity#lastHeadRollProgress
    static jfloat get_field_lastHeadRollProgress(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cy", "interestedAngleO", "field_17961", "lastHeadRollProgress", "f_28433_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.FoxEntity#lastHeadRollProgress
    static void set_field_lastHeadRollProgress(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cy", "interestedAngleO", "field_17961", "lastHeadRollProgress", "f_28433_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.entity.passive.FoxEntity#extraRollingHeight
    static jfloat get_field_extraRollingHeight(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cz", "crouchAmount", "field_17962", "extraRollingHeight", "f_28434_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static default field net.minecraft.entity.passive.FoxEntity#extraRollingHeight
    static void set_field_extraRollingHeight(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cz", "crouchAmount", "field_17962", "extraRollingHeight", "f_28434_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.entity.passive.FoxEntity#lastExtraRollingHeight
    static jfloat get_field_lastExtraRollingHeight(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cA", "crouchAmountO", "field_17963", "lastExtraRollingHeight", "f_28435_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static default field net.minecraft.entity.passive.FoxEntity#lastExtraRollingHeight
    static void set_field_lastExtraRollingHeight(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cA", "crouchAmountO", "field_17963", "lastExtraRollingHeight", "f_28435_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.passive.FoxEntity#eatingTime
    static jint get_field_eatingTime(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cB", "ticksSinceEaten", "field_17964", "eatingTime", "f_28436_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.FoxEntity#eatingTime
    static void set_field_eatingTime(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cB", "ticksSinceEaten", "field_17964", "eatingTime", "f_28436_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    static jmethodID methodID_initDataTracker() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "defineSynchedData", "method_5693", "initDataTracker", "m_8097_"), "(Laka$a;)V");
    }

    static void initDataTracker(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_initDataTracker();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_initGoals() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("B", "registerGoals", "method_5959", "initGoals", "m_8099_"), "()V");
    }

    static void initGoals(const jobject& obj) {
                
       const auto methodID = methodID_initGoals();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getEatSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getEatingSound", "method_18869", "getEatSound", "m_7866_"), "(Lcuq;)Lavo;");
    }

    static jobject getEatSound(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getEatSound();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_tickMovement() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("m_", "aiStep", "method_6007", "tickMovement", "m_8107_"), "()V");
    }

    static void tickMovement(const jobject& obj) {
                
       const auto methodID = methodID_tickMovement();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_isImmobile() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("fc", "isImmobile", "method_6062", "isImmobile", "m_6107_"), "()Z");
    }

    static jboolean isImmobile(const jobject& obj) {
                
       const auto methodID = methodID_isImmobile();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_canEat() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("n", "canEat", "method_18430", "canEat", "m_28597_"), "(Lcuq;)Z");
    }

    static jboolean canEat(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_canEat();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_initEquipment() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "populateDefaultEquipmentSlots", "method_5964", "initEquipment", "m_213945_"), "(Layw;Lbqp;)V");
    }

    static void initEquipment(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_initEquipment();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_handleStatus() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "handleEntityEvent", "method_5711", "handleStatus", "m_7822_"), "(B)V");
    }

    static void handleStatus(const jobject& obj, const jbyte& arg0) {
                
       const auto methodID = methodID_handleStatus();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_createFoxAttributes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("s", "createAttributes", "method_26885", "createFoxAttributes", "m_28553_"), "()Lbuv$a;");
    }

    static jobject createFoxAttributes() {
       const auto clazz = self();
       const auto methodID = methodID_createFoxAttributes();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_createChild() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getBreedOffspring", "method_18260", "createChild", "m_142606_"), "(Laqu;Lbsl;)Lcfo;");
    }

    static jobject createChild(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_createChild();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_canSpawn() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "checkFoxSpawnRules", "method_39449", "canSpawn", "m_218175_"), "(Lbsx;Ldcx;Lbtr;Ljd;Layw;)Z");
    }

    static jboolean canSpawn(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jobject& arg4) {
       const auto clazz = self();
       const auto methodID = methodID_canSpawn();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_initialize() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "finalizeSpawn", "method_5943", "initialize", "m_6518_"), "(Lddl;Lbqp;Lbtr;Lbuh;)Lbuh;");
    }

    static jobject initialize(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_initialize();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_addTypeSpecificGoals() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gu", "setTargetGoals", "method_18280", "addTypeSpecificGoals", "m_28562_"), "()V");
    }

    static void addTypeSpecificGoals(const jobject& obj) {
                
       const auto methodID = methodID_addTypeSpecificGoals();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_eat() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "usePlayerItem", "method_6475", "eat", "m_142075_"), "(Lcmx;Lbqq;Lcuq;)V");
    }

    static void eat(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_eat();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_getBaseDimensions() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "getDefaultDimensions", "method_55694", "getBaseDimensions", "m_31586_"), "(Lbua;)Lbsu;");
    }

    static jobject getBaseDimensions(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getBaseDimensions();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getVariant() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("t", "getVariant", "method_47845", "getVariant", "m_28554_"), "()Lcfo$v;");
    }

    static jobject getVariant(const jobject& obj) {
                
       const auto methodID = methodID_getVariant();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_setVariant() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setVariant", "method_47844", "setVariant", "m_28464_"), "(Lcfo$v;)V");
    }

    static void setVariant(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setVariant();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getTrustedUuids() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gv", "getTrustedUUIDs", "method_18281", "getTrustedUuids", "m_28566_"), "()Ljava/util/List;");
    }

    static jobject getTrustedUuids(const jobject& obj) {
                
       const auto methodID = methodID_getTrustedUuids();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_addTrustedUuid() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "addTrustedUUID", "method_18266", "addTrustedUuid", "m_28515_"), "(Ljava/util/UUID;)V");
    }

    static void addTrustedUuid(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_addTrustedUuid();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_writeCustomDataToNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "addAdditionalSaveData", "method_5652", "writeCustomDataToNbt", "m_7380_"), "(Lub;)V");
    }

    static void writeCustomDataToNbt(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_writeCustomDataToNbt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_readCustomDataFromNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "readAdditionalSaveData", "method_5749", "readCustomDataFromNbt", "m_7378_"), "(Lub;)V");
    }

    static void readCustomDataFromNbt(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_readCustomDataFromNbt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isSitting() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("x", "isSitting", "method_18272", "isSitting", "m_28555_"), "()Z");
    }

    static jboolean isSitting(const jobject& obj) {
                
       const auto methodID = methodID_isSitting();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_setSitting() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("x", "setSitting", "method_18294", "setSitting", "m_28610_"), "(Z)V");
    }

    static void setSitting(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setSitting();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isWalking() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gk", "isFaceplanted", "method_18273", "isWalking", "m_28556_"), "()Z");
    }

    static jboolean isWalking(const jobject& obj) {
                
       const auto methodID = methodID_isWalking();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_setWalking() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("B", "setFaceplanted", "method_18295", "setWalking", "m_28618_"), "(Z)V");
    }

    static void setWalking(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setWalking();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isAggressive() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gw", "isDefending", "method_18282", "isAggressive", "m_28567_"), "()Z");
    }

    static jboolean isAggressive(const jobject& obj) {
                
       const auto methodID = methodID_isAggressive();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_setAggressive() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("C", "setDefending", "method_18301", "setAggressive", "m_28622_"), "(Z)V");
    }

    static void setAggressive(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setAggressive();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isSleeping() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("fH", "isSleeping", "method_6113", "isSleeping", "m_5803_"), "()Z");
    }

    static jboolean isSleeping(const jobject& obj) {
                
       const auto methodID = methodID_isSleeping();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_setSleeping() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("D", "setSleeping", "method_18302", "setSleeping", "m_28626_"), "(Z)V");
    }

    static void setSleeping(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setSleeping();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setFoxFlag() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "setFlag", "method_18269", "setFoxFlag", "m_28532_"), "(IZ)V");
    }

    static void setFoxFlag(const jobject& obj, const jint& arg0, const jboolean& arg1) {
                
       const auto methodID = methodID_setFoxFlag();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getFoxFlag() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("t", "getFlag", "method_18293", "getFoxFlag", "m_28608_"), "(I)Z");
    }

    static jboolean getFoxFlag(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_getFoxFlag();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_canEquip() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "canTakeItem", "method_18397", "canEquip", "m_7066_"), "(Lcuq;)Z");
    }

    static jboolean canEquip(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_canEquip();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_canPickupItem() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("j", "canHoldItem", "method_5939", "canPickupItem", "m_7252_"), "(Lcuq;)Z");
    }

    static jboolean canPickupItem(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_canPickupItem();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_spit() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("p", "spitOutItem", "method_18289", "spit", "m_28601_"), "(Lcuq;)V");
    }

    static void spit(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_spit();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_dropItem() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("q", "dropItemStack", "method_18291", "dropItem", "m_28605_"), "(Lcuq;)V");
    }

    static void dropItem(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_dropItem();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_loot() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "pickUpItem", "method_5949", "loot", "m_7581_"), "(Lcjh;)V");
    }

    static void loot(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_loot();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_tick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("l", "tick", "method_5773", "tick", "m_8119_"), "()V");
    }

    static void tick(const jobject& obj) {
                
       const auto methodID = methodID_tick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_isBreedingItem() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("o", "isFood", "method_6481", "isBreedingItem", "m_6898_"), "(Lcuq;)Z");
    }

    static jboolean isBreedingItem(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_isBreedingItem();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_onPlayerSpawnedChild() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "onOffspringSpawnedFromEgg", "method_18249", "onPlayerSpawnedChild", "m_5502_"), "(Lcmx;Lbtp;)V");
    }

    static void onPlayerSpawnedChild(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_onPlayerSpawnedChild();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_isChasing() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gl", "isPouncing", "method_18274", "isChasing", "m_28557_"), "()Z");
    }

    static jboolean isChasing(const jobject& obj) {
                
       const auto methodID = methodID_isChasing();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_setChasing() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("y", "setIsPouncing", "method_18296", "setChasing", "m_28612_"), "(Z)V");
    }

    static void setChasing(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setChasing();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isJumping() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gm", "isJumping", "method_35172", "isJumping", "m_148924_"), "()Z");
    }

    static jboolean isJumping(const jobject& obj) {
                
       const auto methodID = methodID_isJumping();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isFullyCrouched() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gn", "isFullyCrouched", "method_18275", "isFullyCrouched", "m_28558_"), "()Z");
    }

    static jboolean isFullyCrouched(const jobject& obj) {
                
       const auto methodID = methodID_isFullyCrouched();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_setCrouching() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("z", "setIsCrouching", "method_18297", "setCrouching", "m_28614_"), "(Z)V");
    }

    static void setCrouching(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setCrouching();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isInSneakingPose() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("cb", "isCrouching", "method_18276", "isInSneakingPose", "m_6047_"), "()Z");
    }

    static jboolean isInSneakingPose(const jobject& obj) {
                
       const auto methodID = methodID_isInSneakingPose();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_setRollingHead() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("A", "setIsInterested", "method_18299", "setRollingHead", "m_28616_"), "(Z)V");
    }

    static void setRollingHead(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setRollingHead();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isRollingHead() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("go", "isInterested", "method_18277", "isRollingHead", "m_28559_"), "()Z");
    }

    static jboolean isRollingHead(const jobject& obj) {
                
       const auto methodID = methodID_isRollingHead();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getHeadRoll() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("H", "getHeadRollAngle", "method_18298", "getHeadRoll", "m_28620_"), "(F)F");
    }

    static jfloat getHeadRoll(const jobject& obj, const jfloat& arg0) {
                
       const auto methodID = methodID_getHeadRoll();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getBodyRotationHeightOffset() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("I", "getCrouchAmount", "method_18300", "getBodyRotationHeightOffset", "m_28624_"), "(F)F");
    }

    static jfloat getBodyRotationHeightOffset(const jobject& obj, const jfloat& arg0) {
                
       const auto methodID = methodID_getBodyRotationHeightOffset();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setTarget() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "setTarget", "method_5980", "setTarget", "m_6710_"), "(Lbtn;)V");
    }

    static void setTarget(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setTarget();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_stopSleeping() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gx", "wakeUp", "method_18283", "stopSleeping", "m_28568_"), "()V");
    }

    static void stopSleeping(const jobject& obj) {
                
       const auto methodID = methodID_stopSleeping();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_stopActions() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gy", "clearStates", "method_18284", "stopActions", "m_28569_"), "()V");
    }

    static void stopActions(const jobject& obj) {
                
       const auto methodID = methodID_stopActions();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_wantsToPickupItem() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gz", "canMove", "method_18285", "wantsToPickupItem", "m_28570_"), "()Z");
    }

    static jboolean wantsToPickupItem(const jobject& obj) {
                
       const auto methodID = methodID_wantsToPickupItem();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_playAmbientSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("S", "playAmbientSound", "method_5966", "playAmbientSound", "m_8032_"), "()V");
    }

    static void playAmbientSound(const jobject& obj) {
                
       const auto methodID = methodID_playAmbientSound();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getAmbientSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("v", "getAmbientSound", "method_5994", "getAmbientSound", "m_7515_"), "()Lavo;");
    }

    static jobject getAmbientSound(const jobject& obj) {
                
       const auto methodID = methodID_getAmbientSound();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getHurtSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getHurtSound", "method_6011", "getHurtSound", "m_7975_"), "(Lbrk;)Lavo;");
    }

    static jobject getHurtSound(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getHurtSound();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getDeathSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("n_", "getDeathSound", "method_6002", "getDeathSound", "m_5592_"), "()Lavo;");
    }

    static jobject getDeathSound(const jobject& obj) {
                
       const auto methodID = methodID_getDeathSound();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_canTrust() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "trusts", "method_18428", "canTrust", "m_28529_"), "(Ljava/util/UUID;)Z");
    }

    static jboolean canTrust(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_canTrust();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_drop() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "dropAllDeathLoot", "method_16080", "drop", "m_6668_"), "(Laqu;Lbrk;)V");
    }

    static void drop(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_drop();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_canJumpChase() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "isPathClear", "method_18257", "canJumpChase", "m_28471_"), "(Lcfo;Lbtn;)Z");
    }

    static jboolean canJumpChase(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_canJumpChase();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getLeashOffset() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("cM", "getLeashOffset", "method_29919", "getLeashOffset", "m_7939_"), "()Lexc;");
    }

    static jobject getLeashOffset(const jobject& obj) {
                
       const auto methodID = methodID_getLeashOffset();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_ENTITY_PASSIVE_FOXENTITY_HPP