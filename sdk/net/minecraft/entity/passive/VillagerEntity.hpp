// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ENTITY_PASSIVE_VILLAGERENTITY_HPP
#define NET_MINECRAFT_ENTITY_PASSIVE_VILLAGERENTITY_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.entity.passive.VillagerEntity
 * Remapped: cmk
 */
namespace VillagerEntity {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("cmk", "net/minecraft/world/entity/npc/Villager", "net/minecraft/class_1646", "net/minecraft/entity/passive/VillagerEntity", "net/minecraft/src/C_1118_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.entity.passive.VillagerEntity#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ci", "LOGGER", "field_36335", "LOGGER", "f_201976_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.VillagerEntity#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ci", "LOGGER", "field_36335", "LOGGER", "f_201976_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.passive.VillagerEntity#VILLAGER_DATA
    [[maybe_unused]] static jobject get_field_VILLAGER_DATA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cj", "DATA_VILLAGER_DATA", "field_7445", "VILLAGER_DATA", "f_35371_"), "Lajw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.VillagerEntity#VILLAGER_DATA
    [[maybe_unused]] static void set_field_VILLAGER_DATA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cj", "DATA_VILLAGER_DATA", "field_7445", "VILLAGER_DATA", "f_35371_"), "Lajw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.passive.VillagerEntity#field_30602
    [[maybe_unused]] static jint get_field_field_30602() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ce", "BREEDING_FOOD_THRESHOLD", "field_30602", "field_30602", "f_149997_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.passive.VillagerEntity#field_30602
    [[maybe_unused]] static void set_field_field_30602(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ce", "BREEDING_FOOD_THRESHOLD", "field_30602", "field_30602", "f_149997_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.passive.VillagerEntity#ITEM_FOOD_VALUES
    [[maybe_unused]] static jobject get_field_ITEM_FOOD_VALUES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cf", "FOOD_POINTS", "field_18526", "ITEM_FOOD_VALUES", "f_35369_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.passive.VillagerEntity#ITEM_FOOD_VALUES
    [[maybe_unused]] static void set_field_ITEM_FOOD_VALUES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cf", "FOOD_POINTS", "field_18526", "ITEM_FOOD_VALUES", "f_35369_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.passive.VillagerEntity#field_30604
    [[maybe_unused]] static jint get_field_field_30604() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ck", "TRADES_PER_LEVEL", "field_30604", "field_30604", "f_149999_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.VillagerEntity#field_30604
    [[maybe_unused]] static void set_field_field_30604(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ck", "TRADES_PER_LEVEL", "field_30604", "field_30604", "f_149999_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.passive.VillagerEntity#GATHERABLE_ITEMS
    [[maybe_unused]] static jobject get_field_GATHERABLE_ITEMS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cl", "WANTED_ITEMS", "field_18527", "GATHERABLE_ITEMS", "f_35372_"), "Ljava/util/Set;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.VillagerEntity#GATHERABLE_ITEMS
    [[maybe_unused]] static void set_field_GATHERABLE_ITEMS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cl", "WANTED_ITEMS", "field_18527", "GATHERABLE_ITEMS", "f_35372_"), "Ljava/util/Set;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.passive.VillagerEntity#field_30605
    [[maybe_unused]] static jint get_field_field_30605() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cm", "MAX_GOSSIP_TOPICS", "field_30605", "field_30605", "f_150000_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.VillagerEntity#field_30605
    [[maybe_unused]] static void set_field_field_30605(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cm", "MAX_GOSSIP_TOPICS", "field_30605", "field_30605", "f_150000_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.passive.VillagerEntity#field_30606
    [[maybe_unused]] static jint get_field_field_30606() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cn", "GOSSIP_COOLDOWN", "field_30606", "field_30606", "f_150001_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.VillagerEntity#field_30606
    [[maybe_unused]] static void set_field_field_30606(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cn", "GOSSIP_COOLDOWN", "field_30606", "field_30606", "f_150001_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.passive.VillagerEntity#field_30607
    [[maybe_unused]] static jint get_field_field_30607() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("co", "GOSSIP_DECAY_INTERVAL", "field_30607", "field_30607", "f_150002_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.VillagerEntity#field_30607
    [[maybe_unused]] static void set_field_field_30607(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("co", "GOSSIP_DECAY_INTERVAL", "field_30607", "field_30607", "f_150002_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.passive.VillagerEntity#field_30608
    [[maybe_unused]] static jint get_field_field_30608() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cp", "REPUTATION_CHANGE_PER_EVENT", "field_30608", "field_30608", "f_150003_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.VillagerEntity#field_30608
    [[maybe_unused]] static void set_field_field_30608(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cp", "REPUTATION_CHANGE_PER_EVENT", "field_30608", "field_30608", "f_150003_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.passive.VillagerEntity#field_30609
    [[maybe_unused]] static jint get_field_field_30609() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cq", "HOW_FAR_AWAY_TO_TALK_TO_OTHER_VILLAGERS_ABOUT_GOLEMS", "field_30609", "field_30609", "f_150004_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.VillagerEntity#field_30609
    [[maybe_unused]] static void set_field_field_30609(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cq", "HOW_FAR_AWAY_TO_TALK_TO_OTHER_VILLAGERS_ABOUT_GOLEMS", "field_30609", "field_30609", "f_150004_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.passive.VillagerEntity#field_30610
    [[maybe_unused]] static jint get_field_field_30610() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cr", "HOW_MANY_VILLAGERS_NEED_TO_AGREE_TO_SPAWN_A_GOLEM", "field_30610", "field_30610", "f_150005_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.VillagerEntity#field_30610
    [[maybe_unused]] static void set_field_field_30610(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cr", "HOW_MANY_VILLAGERS_NEED_TO_AGREE_TO_SPAWN_A_GOLEM", "field_30610", "field_30610", "f_150005_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.passive.VillagerEntity#field_30611
    [[maybe_unused]] static jlong get_field_field_30611() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cs", "TIME_SINCE_SLEEPING_FOR_GOLEM_SPAWNING", "field_30611", "field_30611", "f_150006_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticLongField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.VillagerEntity#field_30611
    [[maybe_unused]] static void set_field_field_30611(const jlong &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cs", "TIME_SINCE_SLEEPING_FOR_GOLEM_SPAWNING", "field_30611", "field_30611", "f_150006_"), "J");
        return MinecraftSDK::env->SetStaticLongField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.passive.VillagerEntity#field_30603
    [[maybe_unused]] static jfloat get_field_field_30603() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cg", "SPEED_MODIFIER", "field_30603", "field_30603", "f_149998_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.passive.VillagerEntity#field_30603
    [[maybe_unused]] static void set_field_field_30603(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cg", "SPEED_MODIFIER", "field_30603", "field_30603", "f_149998_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.entity.passive.VillagerEntity#levelUpTimer
    static jint get_field_levelUpTimer(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ct", "updateMerchantTimer", "field_18528", "levelUpTimer", "f_35373_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.VillagerEntity#levelUpTimer
    static void set_field_levelUpTimer(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ct", "updateMerchantTimer", "field_18528", "levelUpTimer", "f_35373_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.passive.VillagerEntity#levelingUp
    static jboolean get_field_levelingUp(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cu", "increaseProfessionLevelOnUpdate", "field_18529", "levelingUp", "f_35374_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.VillagerEntity#levelingUp
    static void set_field_levelingUp(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cu", "increaseProfessionLevelOnUpdate", "field_18529", "levelingUp", "f_35374_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.passive.VillagerEntity#lastCustomer
    static jobject get_field_lastCustomer(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cv", "lastTradedPlayer", "field_18530", "lastCustomer", "f_35375_"), "Lcmx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.VillagerEntity#lastCustomer
    static void set_field_lastCustomer(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cv", "lastTradedPlayer", "field_18530", "lastCustomer", "f_35375_"), "Lcmx;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.passive.VillagerEntity#field_30612
    static jboolean get_field_field_30612(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cw", "chasing", "field_30612", "field_30612", "f_150007_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.VillagerEntity#field_30612
    static void set_field_field_30612(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cw", "chasing", "field_30612", "field_30612", "f_150007_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.passive.VillagerEntity#foodLevel
    static jint get_field_foodLevel(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cx", "foodLevel", "field_18533", "foodLevel", "f_35376_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.VillagerEntity#foodLevel
    static void set_field_foodLevel(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cx", "foodLevel", "field_18533", "foodLevel", "f_35376_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.passive.VillagerEntity#gossip
    static jobject get_field_gossip(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cy", "gossips", "field_18534", "gossip", "f_35377_"), "Lcco;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.VillagerEntity#gossip
    static void set_field_gossip(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cy", "gossips", "field_18534", "gossip", "f_35377_"), "Lcco;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.passive.VillagerEntity#gossipStartTime
    static jlong get_field_gossipStartTime(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cz", "lastGossipTime", "field_18535", "gossipStartTime", "f_35378_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.VillagerEntity#gossipStartTime
    static void set_field_gossipStartTime(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cz", "lastGossipTime", "field_18535", "gossipStartTime", "f_35378_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.passive.VillagerEntity#lastGossipDecayTime
    static jlong get_field_lastGossipDecayTime(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cA", "lastGossipDecayTime", "field_19357", "lastGossipDecayTime", "f_35361_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.VillagerEntity#lastGossipDecayTime
    static void set_field_lastGossipDecayTime(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cA", "lastGossipDecayTime", "field_19357", "lastGossipDecayTime", "f_35361_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.passive.VillagerEntity#experience
    static jint get_field_experience(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cB", "villagerXp", "field_18536", "experience", "f_35362_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.VillagerEntity#experience
    static void set_field_experience(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cB", "villagerXp", "field_18536", "experience", "f_35362_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.passive.VillagerEntity#lastRestockTime
    static jlong get_field_lastRestockTime(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cD", "lastRestockGameTime", "field_18537", "lastRestockTime", "f_35363_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.VillagerEntity#lastRestockTime
    static void set_field_lastRestockTime(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cD", "lastRestockGameTime", "field_18537", "lastRestockTime", "f_35363_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.passive.VillagerEntity#restocksToday
    static jint get_field_restocksToday(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cE", "numberOfRestocksToday", "field_19427", "restocksToday", "f_35364_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.VillagerEntity#restocksToday
    static void set_field_restocksToday(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cE", "numberOfRestocksToday", "field_19427", "restocksToday", "f_35364_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.passive.VillagerEntity#lastRestockCheckTime
    static jlong get_field_lastRestockCheckTime(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cF", "lastRestockCheckDayTime", "field_20332", "lastRestockCheckTime", "f_35365_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.VillagerEntity#lastRestockCheckTime
    static void set_field_lastRestockCheckTime(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cF", "lastRestockCheckDayTime", "field_20332", "lastRestockCheckTime", "f_35365_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.passive.VillagerEntity#natural
    static jboolean get_field_natural(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cG", "assignProfessionWhenSpawned", "field_25167", "natural", "f_35366_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.VillagerEntity#natural
    static void set_field_natural(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cG", "assignProfessionWhenSpawned", "field_25167", "natural", "f_35366_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.passive.VillagerEntity#MEMORY_MODULES
    [[maybe_unused]] static jobject get_field_MEMORY_MODULES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cH", "MEMORY_TYPES", "field_18538", "MEMORY_MODULES", "f_35367_"), "Lcom/google/common/collect/ImmutableList;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.VillagerEntity#MEMORY_MODULES
    [[maybe_unused]] static void set_field_MEMORY_MODULES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cH", "MEMORY_TYPES", "field_18538", "MEMORY_MODULES", "f_35367_"), "Lcom/google/common/collect/ImmutableList;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.passive.VillagerEntity#SENSORS
    [[maybe_unused]] static jobject get_field_SENSORS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cI", "SENSOR_TYPES", "field_18539", "SENSORS", "f_35368_"), "Lcom/google/common/collect/ImmutableList;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.VillagerEntity#SENSORS
    [[maybe_unused]] static void set_field_SENSORS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cI", "SENSOR_TYPES", "field_18539", "SENSORS", "f_35368_"), "Lcom/google/common/collect/ImmutableList;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.passive.VillagerEntity#POINTS_OF_INTEREST
    [[maybe_unused]] static jobject get_field_POINTS_OF_INTEREST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ch", "POI_MEMORIES", "field_18851", "POINTS_OF_INTEREST", "f_35370_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.passive.VillagerEntity#POINTS_OF_INTEREST
    [[maybe_unused]] static void set_field_POINTS_OF_INTEREST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ch", "POI_MEMORIES", "field_18851", "POINTS_OF_INTEREST", "f_35370_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_getBrain() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("dT", "getBrain", "method_18868", "getBrain", "m_6274_"), "()Lbuq;");
    }

    static jobject getBrain(const jobject& obj) {
                
       const auto methodID = methodID_getBrain();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_createBrainProfile() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("dU", "brainProvider", "method_28306", "createBrainProfile", "m_5490_"), "()Lbuq$b;");
    }

    static jobject createBrainProfile(const jobject& obj) {
                
       const auto methodID = methodID_createBrainProfile();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_deserializeBrain() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "makeBrain", "method_18867", "deserializeBrain", "m_8075_"), "(Lcom/mojang/serialization/Dynamic;)Lbuq;");
    }

    static jobject deserializeBrain(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_deserializeBrain();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_reinitializeBrain() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "refreshBrain", "method_19179", "reinitializeBrain", "m_35483_"), "(Laqu;)V");
    }

    static void reinitializeBrain(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_reinitializeBrain();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_initBrain() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "registerBrainGoals", "method_19174", "initBrain", "m_35424_"), "(Lbuq;)V");
    }

    static void initBrain(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_initBrain();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_onGrowUp() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("k", "ageBoundaryReached", "method_5619", "onGrowUp", "m_30232_"), "()V");
    }

    static void onGrowUp(const jobject& obj) {
                
       const auto methodID = methodID_onGrowUp();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_createVillagerAttributes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("gt", "createAttributes", "method_26955", "createVillagerAttributes", "m_35503_"), "()Lbuv$a;");
    }

    static jobject createVillagerAttributes() {
       const auto clazz = self();
       const auto methodID = methodID_createVillagerAttributes();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_isNatural() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gu", "assignProfessionWhenSpawned", "method_29279", "isNatural", "m_35504_"), "()Z");
    }

    static jboolean isNatural(const jobject& obj) {
                
       const auto methodID = methodID_isNatural();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_mobTick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ab", "customServerAiStep", "method_5958", "mobTick", "m_8024_"), "()V");
    }

    static void mobTick(const jobject& obj) {
                
       const auto methodID = methodID_mobTick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_tick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("l", "tick", "method_5773", "tick", "m_8119_"), "()V");
    }

    static void tick(const jobject& obj) {
                
       const auto methodID = methodID_tick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_interactMob() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "mobInteract", "method_5992", "interactMob", "m_6071_"), "(Lcmx;Lbqq;)Lbqr;");
    }

    static jobject interactMob(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_interactMob();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_sayNo() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gG", "setUnhappy", "method_20264", "sayNo", "m_35518_"), "()V");
    }

    static void sayNo(const jobject& obj) {
                
       const auto methodID = methodID_sayNo();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_beginTradeWith() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "startTrading", "method_19191", "beginTradeWith", "m_35536_"), "(Lcmx;)V");
    }

    static void beginTradeWith(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_beginTradeWith();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setCustomer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setTradingPlayer", "method_8259", "setCustomer", "m_7189_"), "(Lcmx;)V");
    }

    static void setCustomer(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setCustomer();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_resetCustomer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gq", "stopTrading", "method_19181", "resetCustomer", "m_7996_"), "()V");
    }

    static void resetCustomer(const jobject& obj) {
                
       const auto methodID = methodID_resetCustomer();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_clearSpecialPrices() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gH", "resetSpecialPrices", "method_19187", "clearSpecialPrices", "m_35519_"), "()V");
    }

    static void clearSpecialPrices(const jobject& obj) {
                
       const auto methodID = methodID_clearSpecialPrices();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_canRefreshTrades() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gw", "canRestock", "method_20708", "canRefreshTrades", "m_7862_"), "()Z");
    }

    static jboolean canRefreshTrades(const jobject& obj) {
                
       const auto methodID = methodID_canRefreshTrades();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isClient() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gs", "isClientSide", "method_38069", "isClient", "m_183595_"), "()Z");
    }

    static jboolean isClient(const jobject& obj) {
                
       const auto methodID = methodID_isClient();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_restock() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gx", "restock", "method_19182", "restock", "m_35510_"), "()V");
    }

    static void restock(const jobject& obj) {
                
       const auto methodID = methodID_restock();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_sendOffersToCustomer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gI", "resendOffersToTradingPlayer", "method_49695", "sendOffersToCustomer", "m_275846_"), "()V");
    }

    static void sendOffersToCustomer(const jobject& obj) {
                
       const auto methodID = methodID_sendOffersToCustomer();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_needsRestock() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gJ", "needsToRestock", "method_20823", "needsRestock", "m_35520_"), "()Z");
    }

    static jboolean needsRestock(const jobject& obj) {
                
       const auto methodID = methodID_needsRestock();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_canRestock() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gK", "allowedToRestock", "method_20824", "canRestock", "m_35521_"), "()Z");
    }

    static jboolean canRestock(const jobject& obj) {
                
       const auto methodID = methodID_canRestock();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_shouldRestock() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gy", "shouldRestock", "method_20822", "shouldRestock", "m_35511_"), "()Z");
    }

    static jboolean shouldRestock(const jobject& obj) {
                
       const auto methodID = methodID_shouldRestock();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_restockAndUpdateDemandBonus() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gL", "catchUpDemand", "method_21723", "restockAndUpdateDemandBonus", "m_35522_"), "()V");
    }

    static void restockAndUpdateDemandBonus(const jobject& obj) {
                
       const auto methodID = methodID_restockAndUpdateDemandBonus();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_updateDemandBonus() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gM", "updateDemand", "method_21724", "updateDemandBonus", "m_35523_"), "()V");
    }

    static void updateDemandBonus(const jobject& obj) {
                
       const auto methodID = methodID_updateDemandBonus();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_prepareOffersFor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "updateSpecialPrices", "method_19192", "prepareOffersFor", "m_35540_"), "(Lcmx;)V");
    }

    static void prepareOffersFor(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_prepareOffersFor();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_initDataTracker() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "defineSynchedData", "method_5693", "initDataTracker", "m_8097_"), "(Laka$a;)V");
    }

    static void initDataTracker(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_initDataTracker();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_writeCustomDataToNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "addAdditionalSaveData", "method_5652", "writeCustomDataToNbt", "m_7380_"), "(Lub;)V");
    }

    static void writeCustomDataToNbt(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_writeCustomDataToNbt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_readCustomDataFromNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "readAdditionalSaveData", "method_5749", "readCustomDataFromNbt", "m_7378_"), "(Lub;)V");
    }

    static void readCustomDataFromNbt(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_readCustomDataFromNbt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_canImmediatelyDespawn() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "removeWhenFarAway", "method_5974", "canImmediatelyDespawn", "m_6785_"), "(D)Z");
    }

    static jboolean canImmediatelyDespawn(const jobject& obj, const jdouble& arg0) {
                
       const auto methodID = methodID_canImmediatelyDespawn();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getAmbientSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("v", "getAmbientSound", "method_5994", "getAmbientSound", "m_7515_"), "()Lavo;");
    }

    static jobject getAmbientSound(const jobject& obj) {
                
       const auto methodID = methodID_getAmbientSound();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getHurtSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getHurtSound", "method_6011", "getHurtSound", "m_7975_"), "(Lbrk;)Lavo;");
    }

    static jobject getHurtSound(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getHurtSound();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getDeathSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("n_", "getDeathSound", "method_6002", "getDeathSound", "m_5592_"), "()Lavo;");
    }

    static jobject getDeathSound(const jobject& obj) {
                
       const auto methodID = methodID_getDeathSound();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_playWorkSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gz", "playWorkSound", "method_19183", "playWorkSound", "m_35512_"), "()V");
    }

    static void playWorkSound(const jobject& obj) {
                
       const auto methodID = methodID_playWorkSound();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_setVillagerData() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setVillagerData", "method_7195", "setVillagerData", "m_34375_"), "(Lcml;)V");
    }

    static void setVillagerData(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setVillagerData();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getVillagerData() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gv", "getVillagerData", "method_7231", "getVillagerData", "m_7141_"), "()Lcml;");
    }

    static jobject getVillagerData(const jobject& obj) {
                
       const auto methodID = methodID_getVillagerData();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_afterUsing() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "rewardTradeXp", "method_18008", "afterUsing", "m_8058_"), "(Ldbu;)V");
    }

    static void afterUsing(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_afterUsing();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_method_35201() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("y", "setChasing", "method_35201", "method_35201", "m_150015_"), "(Z)V");
    }

    static void method_35201(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_method_35201();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_method_35200() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gA", "isChasing", "method_35200", "method_35200", "m_150014_"), "()Z");
    }

    static jboolean method_35200(const jobject& obj) {
                
       const auto methodID = methodID_method_35200();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_setAttacker() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setLastHurtByMob", "method_6015", "setAttacker", "m_6703_"), "(Lbtn;)V");
    }

    static void setAttacker(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setAttacker();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_onDeath() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "die", "method_6078", "onDeath", "m_6667_"), "(Lbrk;)V");
    }

    static void onDeath(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onDeath();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_releaseAllTickets() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gN", "releaseAllPois", "method_30958", "releaseAllTickets", "m_35524_"), "()V");
    }

    static void releaseAllTickets(const jobject& obj) {
                
       const auto methodID = methodID_releaseAllTickets();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_notifyDeath() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "tellWitnessesThatIWasMurdered", "method_20690", "notifyDeath", "m_35420_"), "(Lbsr;)V");
    }

    static void notifyDeath(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_notifyDeath();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_releaseTicketFor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "releasePoi", "method_19176", "releaseTicketFor", "m_35428_"), "(Lccs;)V");
    }

    static void releaseTicketFor(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_releaseTicketFor();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isReadyToBreed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ab_", "canBreed", "method_19184", "isReadyToBreed", "m_35506_"), "()Z");
    }

    static jboolean isReadyToBreed(const jobject& obj) {
                
       const auto methodID = methodID_isReadyToBreed();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_lacksFood() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gO", "hungry", "method_20698", "lacksFood", "m_35525_"), "()Z");
    }

    static jboolean lacksFood(const jobject& obj) {
                
       const auto methodID = methodID_lacksFood();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_consumeAvailableFood() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gP", "eatUntilFull", "method_19185", "consumeAvailableFood", "m_35526_"), "()V");
    }

    static void consumeAvailableFood(const jobject& obj) {
                
       const auto methodID = methodID_consumeAvailableFood();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getReputation() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "getPlayerReputation", "method_20594", "getReputation", "m_35532_"), "(Lcmx;)I");
    }

    static jint getReputation(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getReputation();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_depleteFood() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("v", "digestFood", "method_19193", "depleteFood", "m_35548_"), "(I)V");
    }

    static void depleteFood(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_depleteFood();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_eatForBreeding() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gB", "eatAndDigestFood", "method_20697", "eatForBreeding", "m_35513_"), "()V");
    }

    static void eatForBreeding(const jobject& obj) {
                
       const auto methodID = methodID_eatForBreeding();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_setOffers() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "setOffers", "method_16917", "setOffers", "m_35476_"), "(Ldbv;)V");
    }

    static void setOffers(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setOffers();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_canLevelUp() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gQ", "shouldIncreaseLevel", "method_19188", "canLevelUp", "m_35527_"), "()Z");
    }

    static jboolean canLevelUp(const jobject& obj) {
                
       const auto methodID = methodID_canLevelUp();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_levelUp() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gR", "increaseMerchantCareer", "method_16918", "levelUp", "m_35528_"), "()V");
    }

    static void levelUp(const jobject& obj) {
                
       const auto methodID = methodID_levelUp();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getDefaultName() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("cs", "getTypeName", "method_23315", "getDefaultName", "m_5677_"), "()Lwz;");
    }

    static jobject getDefaultName(const jobject& obj) {
                
       const auto methodID = methodID_getDefaultName();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_handleStatus() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "handleEntityEvent", "method_5711", "handleStatus", "m_7822_"), "(B)V");
    }

    static void handleStatus(const jobject& obj, const jbyte& arg0) {
                
       const auto methodID = methodID_handleStatus();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_initialize() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "finalizeSpawn", "method_5943", "initialize", "m_6518_"), "(Lddl;Lbqp;Lbtr;Lbuh;)Lbuh;");
    }

    static jobject initialize(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_initialize();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_createChild() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getBreedOffspring", "method_7225", "createChild", "m_142606_"), "(Laqu;Lbsl;)Lcmk;");
    }

    static jobject createChild(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_createChild();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_onStruckByLightning() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "thunderHit", "method_5800", "onStruckByLightning", "m_8038_"), "(Laqu;Lbtm;)V");
    }

    static void onStruckByLightning(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_onStruckByLightning();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_loot() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "pickUpItem", "method_5949", "loot", "m_7581_"), "(Lcjh;)V");
    }

    static void loot(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_loot();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_canGather() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("k", "wantsToPickUp", "method_20820", "canGather", "m_7243_"), "(Lcuq;)Z");
    }

    static jboolean canGather(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_canGather();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_wantsToStartBreeding() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gC", "hasExcessFood", "method_7234", "wantsToStartBreeding", "m_35514_"), "()Z");
    }

    static jboolean wantsToStartBreeding(const jobject& obj) {
                
       const auto methodID = methodID_wantsToStartBreeding();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_canBreed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gD", "wantsMoreFood", "method_7239", "canBreed", "m_35515_"), "()Z");
    }

    static jboolean canBreed(const jobject& obj) {
                
       const auto methodID = methodID_canBreed();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getAvailableFood() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gS", "countFoodPointsInInventory", "method_19189", "getAvailableFood", "m_35529_"), "()I");
    }

    static jint getAvailableFood(const jobject& obj) {
                
       const auto methodID = methodID_getAvailableFood();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_hasSeedToPlant() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gE", "hasFarmSeeds", "method_19623", "hasSeedToPlant", "m_35516_"), "()Z");
    }

    static jboolean hasSeedToPlant(const jobject& obj) {
                
       const auto methodID = methodID_hasSeedToPlant();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_fillRecipes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gr", "updateTrades", "method_7237", "fillRecipes", "m_7604_"), "()V");
    }

    static void fillRecipes(const jobject& obj) {
                
       const auto methodID = methodID_fillRecipes();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_talkWithVillager() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "gossip", "method_19177", "talkWithVillager", "m_35411_"), "(Laqu;Lcmk;J)V");
    }

    static void talkWithVillager(const jobject& obj, const jobject& arg0, const jobject& arg1, const jlong& arg2) {
                
       const auto methodID = methodID_talkWithVillager();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_decayGossip() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gT", "maybeDecayGossip", "method_20696", "decayGossip", "m_35530_"), "()V");
    }

    static void decayGossip(const jobject& obj) {
                
       const auto methodID = methodID_decayGossip();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_summonGolem() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "spawnGolemIfNeeded", "method_20688", "summonGolem", "m_35397_"), "(Laqu;JI)V");
    }

    static void summonGolem(const jobject& obj, const jobject& arg0, const jlong& arg1, const jint& arg2) {
                
       const auto methodID = methodID_summonGolem();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_canSummonGolem() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "wantsToSpawnGolem", "method_20687", "canSummonGolem", "m_35392_"), "(J)Z");
    }

    static jboolean canSummonGolem(const jobject& obj, const jlong& arg0) {
                
       const auto methodID = methodID_canSummonGolem();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_onInteractionWith() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "onReputationEventFrom", "method_18870", "onInteractionWith", "m_6814_"), "(Lcep;Lbsr;)V");
    }

    static void onInteractionWith(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_onInteractionWith();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getExperience() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("t", "getVillagerXp", "method_19269", "getExperience", "m_7809_"), "()I");
    }

    static jint getExperience(const jobject& obj) {
                
       const auto methodID = methodID_getExperience();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_setExperience() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("u", "setVillagerXp", "method_19625", "setExperience", "m_35546_"), "(I)V");
    }

    static void setExperience(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_setExperience();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_clearDailyRestockCount() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gU", "resetNumberOfRestocks", "method_20821", "clearDailyRestockCount", "m_35531_"), "()V");
    }

    static void clearDailyRestockCount(const jobject& obj) {
                
       const auto methodID = methodID_clearDailyRestockCount();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getGossip() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gF", "getGossips", "method_21651", "getGossip", "m_35517_"), "()Lcco;");
    }

    static jobject getGossip(const jobject& obj) {
                
       const auto methodID = methodID_getGossip();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_readGossipDataNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setGossips", "method_21650", "readGossipDataNbt", "m_35455_"), "(Luy;)V");
    }

    static void readGossipDataNbt(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_readGossipDataNbt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_sendAiDebugData() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aa", "sendDebugPackets", "method_18409", "sendAiDebugData", "m_8025_"), "()V");
    }

    static void sendAiDebugData(const jobject& obj) {
                
       const auto methodID = methodID_sendAiDebugData();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_sleep() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "startSleeping", "method_18403", "sleep", "m_5802_"), "(Ljd;)V");
    }

    static void sleep(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_sleep();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_wakeUp() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("fI", "stopSleeping", "method_18400", "wakeUp", "m_5796_"), "()V");
    }

    static void wakeUp(const jobject& obj) {
                
       const auto methodID = methodID_wakeUp();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_hasRecentlySlept() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "golemSpawnConditionsMet", "method_20741", "hasRecentlySlept", "m_35461_"), "(J)Z");
    }

    static jboolean hasRecentlySlept(const jobject& obj, const jlong& arg0) {
                
       const auto methodID = methodID_hasRecentlySlept();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_ENTITY_PASSIVE_VILLAGERENTITY_HPP