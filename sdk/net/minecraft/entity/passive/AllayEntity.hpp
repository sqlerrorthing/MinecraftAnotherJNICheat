// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ENTITY_PASSIVE_ALLAYENTITY_HPP
#define NET_MINECRAFT_ENTITY_PASSIVE_ALLAYENTITY_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.entity.passive.AllayEntity
 * Remapped: cgk
 */
namespace AllayEntity {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("cgk", "net/minecraft/world/entity/animal/allay/Allay", "net/minecraft/class_7298", "net/minecraft/entity/passive/AllayEntity", "net/minecraft/src/C_213035_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.entity.passive.AllayEntity#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "LOGGER", "field_39045", "LOGGER", "f_218307_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.AllayEntity#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "LOGGER", "field_39045", "LOGGER", "f_218307_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.passive.AllayEntity#ITEM_PICKUP_RANGE_EXPANDER
    [[maybe_unused]] static jobject get_field_ITEM_PICKUP_RANGE_EXPANDER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cc", "ITEM_PICKUP_REACH", "field_38399", "ITEM_PICKUP_RANGE_EXPANDER", "f_218299_"), "Lkh;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.AllayEntity#ITEM_PICKUP_RANGE_EXPANDER
    [[maybe_unused]] static void set_field_ITEM_PICKUP_RANGE_EXPANDER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cc", "ITEM_PICKUP_REACH", "field_38399", "ITEM_PICKUP_RANGE_EXPANDER", "f_218299_"), "Lkh;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.passive.AllayEntity#field_39461
    [[maybe_unused]] static jint get_field_field_39461() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cd", "LIFTING_ITEM_ANIMATION_DURATION", "field_39461", "field_39461", "f_238768_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.AllayEntity#field_39461
    [[maybe_unused]] static void set_field_field_39461(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cd", "LIFTING_ITEM_ANIMATION_DURATION", "field_39461", "field_39461", "f_238768_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.passive.AllayEntity#field_39462
    [[maybe_unused]] static jfloat get_field_field_39462() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ce", "DANCING_LOOP_DURATION", "field_39462", "field_39462", "f_238696_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.AllayEntity#field_39462
    [[maybe_unused]] static void set_field_field_39462(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ce", "DANCING_LOOP_DURATION", "field_39462", "field_39462", "f_238696_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.passive.AllayEntity#field_39463
    [[maybe_unused]] static jfloat get_field_field_39463() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cf", "SPINNING_ANIMATION_DURATION", "field_39463", "field_39463", "f_238650_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.AllayEntity#field_39463
    [[maybe_unused]] static void set_field_field_39463(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cf", "SPINNING_ANIMATION_DURATION", "field_39463", "field_39463", "f_238650_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.passive.AllayEntity#DUPLICATION_INGREDIENT
    [[maybe_unused]] static jobject get_field_DUPLICATION_INGREDIENT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cg", "DUPLICATION_ITEM", "field_39464", "DUPLICATION_INGREDIENT", "f_238776_"), "Lcyw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.AllayEntity#DUPLICATION_INGREDIENT
    [[maybe_unused]] static void set_field_DUPLICATION_INGREDIENT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cg", "DUPLICATION_ITEM", "field_39464", "DUPLICATION_INGREDIENT", "f_238776_"), "Lcyw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.passive.AllayEntity#DUPLICATION_COOLDOWN
    [[maybe_unused]] static jint get_field_DUPLICATION_COOLDOWN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ch", "DUPLICATION_COOLDOWN_TICKS", "field_39465", "DUPLICATION_COOLDOWN", "f_238543_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.AllayEntity#DUPLICATION_COOLDOWN
    [[maybe_unused]] static void set_field_DUPLICATION_COOLDOWN(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ch", "DUPLICATION_COOLDOWN_TICKS", "field_39465", "DUPLICATION_COOLDOWN", "f_238543_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.passive.AllayEntity#field_39679
    [[maybe_unused]] static jint get_field_field_39679() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ci", "NUM_OF_DUPLICATION_HEARTS", "field_39679", "field_39679", "f_238742_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.AllayEntity#field_39679
    [[maybe_unused]] static void set_field_field_39679(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ci", "NUM_OF_DUPLICATION_HEARTS", "field_39679", "field_39679", "f_238742_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.passive.AllayEntity#DANCING
    [[maybe_unused]] static jobject get_field_DANCING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cj", "DATA_DANCING", "field_39466", "DANCING", "f_238627_"), "Lajw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.AllayEntity#DANCING
    [[maybe_unused]] static void set_field_DANCING(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cj", "DATA_DANCING", "field_39466", "DANCING", "f_238627_"), "Lajw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.passive.AllayEntity#CAN_DUPLICATE
    [[maybe_unused]] static jobject get_field_CAN_DUPLICATE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ck", "DATA_CAN_DUPLICATE", "field_39467", "CAN_DUPLICATE", "f_238802_"), "Lajw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.AllayEntity#CAN_DUPLICATE
    [[maybe_unused]] static void set_field_CAN_DUPLICATE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ck", "DATA_CAN_DUPLICATE", "field_39467", "CAN_DUPLICATE", "f_238802_"), "Lajw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static protected field net.minecraft.entity.passive.AllayEntity#SENSORS
    [[maybe_unused]] static jobject get_field_SENSORS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "SENSOR_TYPES", "field_38398", "SENSORS", "f_218297_"), "Lcom/google/common/collect/ImmutableList;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static protected field net.minecraft.entity.passive.AllayEntity#SENSORS
    [[maybe_unused]] static void set_field_SENSORS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "SENSOR_TYPES", "field_38398", "SENSORS", "f_218297_"), "Lcom/google/common/collect/ImmutableList;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static protected field net.minecraft.entity.passive.AllayEntity#MEMORY_MODULES
    [[maybe_unused]] static jobject get_field_MEMORY_MODULES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "MEMORY_TYPES", "field_38403", "MEMORY_MODULES", "f_218301_"), "Lcom/google/common/collect/ImmutableList;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static protected field net.minecraft.entity.passive.AllayEntity#MEMORY_MODULES
    [[maybe_unused]] static void set_field_MEMORY_MODULES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "MEMORY_TYPES", "field_38403", "MEMORY_MODULES", "f_218301_"), "Lcom/google/common/collect/ImmutableList;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.passive.AllayEntity#THROW_SOUND_PITCHES
    [[maybe_unused]] static jobject get_field_THROW_SOUND_PITCHES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "THROW_SOUND_PITCHES", "field_38937", "THROW_SOUND_PITCHES", "f_218306_"), "Lcom/google/common/collect/ImmutableList;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.passive.AllayEntity#THROW_SOUND_PITCHES
    [[maybe_unused]] static void set_field_THROW_SOUND_PITCHES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "THROW_SOUND_PITCHES", "field_38937", "THROW_SOUND_PITCHES", "f_218306_"), "Lcom/google/common/collect/ImmutableList;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.entity.passive.AllayEntity#gameEventHandler
    static jobject get_field_gameEventHandler(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cl", "dynamicVibrationListener", "field_38401", "gameEventHandler", "f_238685_"), "Ldxw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.AllayEntity#gameEventHandler
    static void set_field_gameEventHandler(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cl", "dynamicVibrationListener", "field_38401", "gameEventHandler", "f_238685_"), "Ldxw;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.passive.AllayEntity#vibrationListenerData
    static jobject get_field_vibrationListenerData(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cm", "vibrationData", "field_44596", "vibrationListenerData", "f_279586_"), "Ldyi$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.AllayEntity#vibrationListenerData
    static void set_field_vibrationListenerData(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cm", "vibrationData", "field_44596", "vibrationListenerData", "f_279586_"), "Ldyi$a;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.passive.AllayEntity#vibrationCallback
    static jobject get_field_vibrationCallback(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cn", "vibrationUser", "field_39468", "vibrationCallback", "f_279563_"), "Ldyi$d;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.AllayEntity#vibrationCallback
    static void set_field_vibrationCallback(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cn", "vibrationUser", "field_39468", "vibrationCallback", "f_279563_"), "Ldyi$d;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.passive.AllayEntity#jukeboxEventHandler
    static jobject get_field_jukeboxEventHandler(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("co", "dynamicJukeboxListener", "field_39469", "jukeboxEventHandler", "f_238563_"), "Ldxw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.AllayEntity#jukeboxEventHandler
    static void set_field_jukeboxEventHandler(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("co", "dynamicJukeboxListener", "field_39469", "jukeboxEventHandler", "f_238563_"), "Ldxw;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.passive.AllayEntity#inventory
    static jobject get_field_inventory(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cp", "inventory", "field_38402", "inventory", "f_218303_"), "Lbra;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.AllayEntity#inventory
    static void set_field_inventory(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cp", "inventory", "field_38402", "inventory", "f_218303_"), "Lbra;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.passive.AllayEntity#jukeboxPos
    static jobject get_field_jukeboxPos(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cq", "jukeboxPos", "field_39470", "jukeboxPos", "f_238682_"), "Ljd;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.AllayEntity#jukeboxPos
    static void set_field_jukeboxPos(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cq", "jukeboxPos", "field_39470", "jukeboxPos", "f_238682_"), "Ljd;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.passive.AllayEntity#duplicationCooldown
    static jlong get_field_duplicationCooldown(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cr", "duplicationCooldown", "field_39471", "duplicationCooldown", "f_238791_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.AllayEntity#duplicationCooldown
    static void set_field_duplicationCooldown(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cr", "duplicationCooldown", "field_39471", "duplicationCooldown", "f_238791_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.passive.AllayEntity#field_38935
    static jfloat get_field_field_38935(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cs", "holdingItemAnimationTicks", "field_38935", "field_38935", "f_218304_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.AllayEntity#field_38935
    static void set_field_field_38935(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cs", "holdingItemAnimationTicks", "field_38935", "field_38935", "f_218304_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.passive.AllayEntity#field_38936
    static jfloat get_field_field_38936(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ct", "holdingItemAnimationTicks0", "field_38936", "field_38936", "f_218305_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.AllayEntity#field_38936
    static void set_field_field_38936(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ct", "holdingItemAnimationTicks0", "field_38936", "field_38936", "f_218305_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.passive.AllayEntity#danceTicks
    static jfloat get_field_danceTicks(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cu", "dancingAnimationTicks", "field_39472", "danceTicks", "f_238687_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.AllayEntity#danceTicks
    static void set_field_danceTicks(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cu", "dancingAnimationTicks", "field_39472", "danceTicks", "f_238687_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.passive.AllayEntity#field_39473
    static jfloat get_field_field_39473(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cv", "spinningAnimationTicks", "field_39473", "field_39473", "f_238541_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.AllayEntity#field_39473
    static void set_field_field_39473(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cv", "spinningAnimationTicks", "field_39473", "field_39473", "f_238541_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.passive.AllayEntity#field_39474
    static jfloat get_field_field_39474(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cw", "spinningAnimationTicks0", "field_39474", "field_39474", "f_238552_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.AllayEntity#field_39474
    static void set_field_field_39474(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cw", "spinningAnimationTicks0", "field_39474", "field_39474", "f_238552_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    static jmethodID methodID_createBrainProfile() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("dU", "brainProvider", "method_28306", "createBrainProfile", "m_5490_"), "()Lbuq$b;");
    }

    static jobject createBrainProfile(const jobject& obj) {
                
       const auto methodID = methodID_createBrainProfile();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_deserializeBrain() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "makeBrain", "method_18867", "deserializeBrain", "m_8075_"), "(Lcom/mojang/serialization/Dynamic;)Lbuq;");
    }

    static jobject deserializeBrain(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_deserializeBrain();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getBrain() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("dT", "getBrain", "method_18868", "getBrain", "m_6274_"), "()Lbuq;");
    }

    static jobject getBrain(const jobject& obj) {
                
       const auto methodID = methodID_getBrain();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_createAllayAttributes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("s", "createAttributes", "method_42655", "createAllayAttributes", "m_218388_"), "()Lbuv$a;");
    }

    static jobject createAllayAttributes() {
       const auto clazz = self();
       const auto methodID = methodID_createAllayAttributes();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_createNavigation() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "createNavigation", "method_5965", "createNavigation", "m_6037_"), "(Ldcw;)Lcda;");
    }

    static jobject createNavigation(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_createNavigation();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_initDataTracker() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "defineSynchedData", "method_5693", "initDataTracker", "m_8097_"), "(Laka$a;)V");
    }

    static void initDataTracker(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_initDataTracker();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_travel() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "travel", "method_6091", "travel", "m_7023_"), "(Lexc;)V");
    }

    static void travel(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_travel();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_damage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "hurt", "method_5643", "damage", "m_6469_"), "(Lbrk;F)Z");
    }

    static jboolean damage(const jobject& obj, const jobject& arg0, const jfloat& arg1) {
                
       const auto methodID = methodID_damage();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_playStepSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "playStepSound", "method_5712", "playStepSound", "m_7355_"), "(Ljd;Ldtc;)V");
    }

    static void playStepSound(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_playStepSound();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_fall() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "checkFallDamage", "method_5623", "fall", "m_7840_"), "(DZLdtc;Ljd;)V");
    }

    static void fall(const jobject& obj, const jdouble& arg0, const jboolean& arg1, const jobject& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_fall();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_getAmbientSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("v", "getAmbientSound", "method_5994", "getAmbientSound", "m_7515_"), "()Lavo;");
    }

    static jobject getAmbientSound(const jobject& obj) {
                
       const auto methodID = methodID_getAmbientSound();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getHurtSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getHurtSound", "method_6011", "getHurtSound", "m_7975_"), "(Lbrk;)Lavo;");
    }

    static jobject getHurtSound(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getHurtSound();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getDeathSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("n_", "getDeathSound", "method_6002", "getDeathSound", "m_5592_"), "()Lavo;");
    }

    static jobject getDeathSound(const jobject& obj) {
                
       const auto methodID = methodID_getDeathSound();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getSoundVolume() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("fa", "getSoundVolume", "method_6107", "getSoundVolume", "m_6121_"), "()F");
    }

    static jfloat getSoundVolume(const jobject& obj) {
                
       const auto methodID = methodID_getSoundVolume();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID_mobTick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ab", "customServerAiStep", "method_5958", "mobTick", "m_8024_"), "()V");
    }

    static void mobTick(const jobject& obj) {
                
       const auto methodID = methodID_mobTick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_tickMovement() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("m_", "aiStep", "method_6007", "tickMovement", "m_8107_"), "()V");
    }

    static void tickMovement(const jobject& obj) {
                
       const auto methodID = methodID_tickMovement();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_tick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("l", "tick", "method_5773", "tick", "m_8119_"), "()V");
    }

    static void tick(const jobject& obj) {
                
       const auto methodID = methodID_tick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_canPickUpLoot() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("fS", "canPickUpLoot", "method_5936", "canPickUpLoot", "m_21531_"), "()Z");
    }

    static jboolean canPickUpLoot(const jobject& obj) {
                
       const auto methodID = methodID_canPickUpLoot();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isHoldingItem() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("t", "hasItemInHand", "method_43396", "isHoldingItem", "m_218389_"), "()Z");
    }

    static jboolean isHoldingItem(const jobject& obj) {
                
       const auto methodID = methodID_isHoldingItem();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_canEquip() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "canTakeItem", "method_18397", "canEquip", "m_7066_"), "(Lcuq;)Z");
    }

    static jboolean canEquip(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_canEquip();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isItemPickupCoolingDown() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("go", "isOnPickupCooldown", "method_42654", "isItemPickupCoolingDown", "m_218377_"), "()Z");
    }

    static jboolean isItemPickupCoolingDown(const jobject& obj) {
                
       const auto methodID = methodID_isItemPickupCoolingDown();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_interactMob() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "mobInteract", "method_5992", "interactMob", "m_6071_"), "(Lcmx;Lbqq;)Lbqr;");
    }

    static jobject interactMob(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_interactMob();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_updateJukeboxPos() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "setJukeboxPlaying", "method_44358", "updateJukeboxPos", "m_240101_"), "(Ljd;Z)V");
    }

    static void updateJukeboxPos(const jobject& obj, const jobject& arg0, const jboolean& arg1) {
                
       const auto methodID = methodID_updateJukeboxPos();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getInventory() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("x", "getInventory", "method_35199", "getInventory", "m_35311_"), "()Lbra;");
    }

    static jobject getInventory(const jobject& obj) {
                
       const auto methodID = methodID_getInventory();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getItemPickUpRangeExpander() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("X", "getPickupReach", "method_42646", "getItemPickUpRangeExpander", "m_213552_"), "()Lkh;");
    }

    static jobject getItemPickUpRangeExpander(const jobject& obj) {
                
       const auto methodID = methodID_getItemPickUpRangeExpander();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_canGather() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("k", "wantsToPickUp", "method_20820", "canGather", "m_7243_"), "(Lcuq;)Z");
    }

    static jboolean canGather(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_canGather();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_areItemsEqual() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "allayConsidersItemEqual", "method_45340", "areItemsEqual", "m_245613_"), "(Lcuq;Lcuq;)Z");
    }

    static jboolean areItemsEqual(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_areItemsEqual();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_areDifferentPotions() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "hasNonMatchingPotion", "method_45341", "areDifferentPotions", "m_247678_"), "(Lcuq;Lcuq;)Z");
    }

    static jboolean areDifferentPotions(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_areDifferentPotions();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_loot() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "pickUpItem", "method_5949", "loot", "m_7581_"), "(Lcjh;)V");
    }

    static void loot(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_loot();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_sendAiDebugData() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aa", "sendDebugPackets", "method_18409", "sendAiDebugData", "m_8025_"), "()V");
    }

    static void sendAiDebugData(const jobject& obj) {
                
       const auto methodID = methodID_sendAiDebugData();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_isFlappingWings() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aW", "isFlapping", "method_5776", "isFlappingWings", "m_142039_"), "()Z");
    }

    static jboolean isFlappingWings(const jobject& obj) {
                
       const auto methodID = methodID_isFlappingWings();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_updateEventHandler() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "updateDynamicGameEventListener", "method_42147", "updateEventHandler", "m_213651_"), "(Ljava/util/function/BiConsumer;)V");
    }

    static void updateEventHandler(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_updateEventHandler();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isDancing() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gk", "isDancing", "method_44359", "isDancing", "m_239559_"), "()Z");
    }

    static jboolean isDancing(const jobject& obj) {
                
       const auto methodID = methodID_isDancing();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_setDancing() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("x", "setDancing", "method_44367", "setDancing", "m_240177_"), "(Z)V");
    }

    static void setDancing(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setDancing();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_shouldStopDancing() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gp", "shouldStopDancing", "method_44361", "shouldStopDancing", "m_239812_"), "()Z");
    }

    static jboolean shouldStopDancing(const jobject& obj) {
                
       const auto methodID = methodID_shouldStopDancing();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_method_43397() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("H", "getHoldingItemAnimationProgress", "method_43397", "method_43397", "m_218394_"), "(F)F");
    }

    static jfloat method_43397(const jobject& obj, const jfloat& arg0) {
                
       const auto methodID = methodID_method_43397();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isSpinning() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gl", "isSpinning", "method_44360", "isSpinning", "m_239302_"), "()Z");
    }

    static jboolean isSpinning(const jobject& obj) {
                
       const auto methodID = methodID_isSpinning();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_method_44368() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("I", "getSpinningProgress", "method_44368", "method_44368", "m_240056_"), "(F)F");
    }

    static jfloat method_44368(const jobject& obj, const jfloat& arg0) {
                
       const auto methodID = methodID_method_44368();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_areItemsDifferent() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "equipmentHasChanged", "method_45324", "areItemsDifferent", "m_246525_"), "(Lcuq;Lcuq;)Z");
    }

    static jboolean areItemsDifferent(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_areItemsDifferent();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_dropInventory() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ez", "dropEquipment", "method_16078", "dropInventory", "m_5907_"), "()V");
    }

    static void dropInventory(const jobject& obj) {
                
       const auto methodID = methodID_dropInventory();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_canImmediatelyDespawn() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "removeWhenFarAway", "method_5974", "canImmediatelyDespawn", "m_6785_"), "(D)Z");
    }

    static jboolean canImmediatelyDespawn(const jobject& obj, const jdouble& arg0) {
                
       const auto methodID = methodID_canImmediatelyDespawn();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_writeCustomDataToNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "addAdditionalSaveData", "method_5652", "writeCustomDataToNbt", "m_7380_"), "(Lub;)V");
    }

    static void writeCustomDataToNbt(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_writeCustomDataToNbt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_readCustomDataFromNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "readAdditionalSaveData", "method_5749", "readCustomDataFromNbt", "m_7378_"), "(Lub;)V");
    }

    static void readCustomDataFromNbt(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_readCustomDataFromNbt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_shouldFollowLeash() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gi", "shouldStayCloseToLeashHolder", "method_43689", "shouldFollowLeash", "m_213814_"), "()Z");
    }

    static jboolean shouldFollowLeash(const jobject& obj) {
                
       const auto methodID = methodID_shouldFollowLeash();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_tickDuplicationCooldown() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gq", "updateDuplicationCooldown", "method_44362", "tickDuplicationCooldown", "m_218375_"), "()V");
    }

    static void tickDuplicationCooldown(const jobject& obj) {
                
       const auto methodID = methodID_tickDuplicationCooldown();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_matchesDuplicationIngredient() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("n", "isDuplicationItem", "method_44366", "matchesDuplicationIngredient", "m_239735_"), "(Lcuq;)Z");
    }

    static jboolean matchesDuplicationIngredient(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_matchesDuplicationIngredient();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_duplicate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gr", "duplicateAllay", "method_44363", "duplicate", "m_218376_"), "()V");
    }

    static void duplicate(const jobject& obj) {
                
       const auto methodID = methodID_duplicate();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_startDuplicationCooldown() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gs", "resetDuplicationCooldown", "method_44364", "startDuplicationCooldown", "m_239811_"), "()V");
    }

    static void startDuplicationCooldown(const jobject& obj) {
                
       const auto methodID = methodID_startDuplicationCooldown();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_canDuplicate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gt", "canDuplicate", "method_44365", "canDuplicate", "m_218324_"), "()Z");
    }

    static jboolean canDuplicate(const jobject& obj) {
                
       const auto methodID = methodID_canDuplicate();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_decrementStackUnlessInCreative() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "removeInteractionItem", "method_44357", "decrementStackUnlessInCreative", "m_239358_"), "(Lcmx;Lcuq;)V");
    }

    static void decrementStackUnlessInCreative(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_decrementStackUnlessInCreative();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getLeashOffset() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("cM", "getLeashOffset", "method_29919", "getLeashOffset", "m_7939_"), "()Lexc;");
    }

    static jobject getLeashOffset(const jobject& obj) {
                
       const auto methodID = methodID_getLeashOffset();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_handleStatus() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "handleEntityEvent", "method_5711", "handleStatus", "m_7822_"), "(B)V");
    }

    static void handleStatus(const jobject& obj, const jbyte& arg0) {
                
       const auto methodID = methodID_handleStatus();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_addHeartParticle() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gu", "spawnHeartParticle", "method_44608", "addHeartParticle", "m_240069_"), "()V");
    }

    static void addHeartParticle(const jobject& obj) {
                
       const auto methodID = methodID_addHeartParticle();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getVibrationListenerData() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gm", "getVibrationData", "method_51298", "getVibrationListenerData", "m_280002_"), "()Ldyi$a;");
    }

    static jobject getVibrationListenerData(const jobject& obj) {
                
       const auto methodID = methodID_getVibrationListenerData();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getVibrationCallback() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gn", "getVibrationUser", "method_51299", "getVibrationCallback", "m_280445_"), "()Ldyi$d;");
    }

    static jobject getVibrationCallback(const jobject& obj) {
                
       const auto methodID = methodID_getVibrationCallback();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_ENTITY_PASSIVE_ALLAYENTITY_HPP