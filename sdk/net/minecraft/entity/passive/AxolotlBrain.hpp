// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ENTITY_PASSIVE_AXOLOTLBRAIN_HPP
#define NET_MINECRAFT_ENTITY_PASSIVE_AXOLOTLBRAIN_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.entity.passive.AxolotlBrain
 * Remapped: cgr
 */
namespace AxolotlBrain {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("cgr", "net/minecraft/world/entity/animal/axolotl/AxolotlAi", "net/minecraft/class_5768", "net/minecraft/entity/passive/AxolotlBrain", "net/minecraft/src/C_141125_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.entity.passive.AxolotlBrain#WALK_TOWARD_ADULT_RANGE
    [[maybe_unused]] static jobject get_field_WALK_TOWARD_ADULT_RANGE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "ADULT_FOLLOW_RANGE", "field_28351", "WALK_TOWARD_ADULT_RANGE", "f_149279_"), "Lbqc;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.AxolotlBrain#WALK_TOWARD_ADULT_RANGE
    [[maybe_unused]] static void set_field_WALK_TOWARD_ADULT_RANGE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "ADULT_FOLLOW_RANGE", "field_28351", "WALK_TOWARD_ADULT_RANGE", "f_149279_"), "Lbqc;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.passive.AxolotlBrain#BREEDING_SPEED
    [[maybe_unused]] static jfloat get_field_BREEDING_SPEED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "SPEED_MULTIPLIER_WHEN_MAKING_LOVE", "field_30394", "BREEDING_SPEED", "f_149280_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.AxolotlBrain#BREEDING_SPEED
    [[maybe_unused]] static void set_field_BREEDING_SPEED(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "SPEED_MULTIPLIER_WHEN_MAKING_LOVE", "field_30394", "BREEDING_SPEED", "f_149280_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.passive.AxolotlBrain#ON_LAND_SPEED
    [[maybe_unused]] static jfloat get_field_ON_LAND_SPEED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "SPEED_MULTIPLIER_ON_LAND", "field_30395", "ON_LAND_SPEED", "f_149281_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.AxolotlBrain#ON_LAND_SPEED
    [[maybe_unused]] static void set_field_ON_LAND_SPEED(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "SPEED_MULTIPLIER_ON_LAND", "field_30395", "ON_LAND_SPEED", "f_149281_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.passive.AxolotlBrain#IDLE_SPEED
    [[maybe_unused]] static jfloat get_field_IDLE_SPEED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "SPEED_MULTIPLIER_WHEN_IDLING_IN_WATER", "field_30396", "IDLE_SPEED", "f_149282_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.AxolotlBrain#IDLE_SPEED
    [[maybe_unused]] static void set_field_IDLE_SPEED(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "SPEED_MULTIPLIER_WHEN_IDLING_IN_WATER", "field_30396", "IDLE_SPEED", "f_149282_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.passive.AxolotlBrain#TARGET_APPROACHING_SPEED
    [[maybe_unused]] static jfloat get_field_TARGET_APPROACHING_SPEED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "SPEED_MULTIPLIER_WHEN_CHASING_IN_WATER", "field_30397", "TARGET_APPROACHING_SPEED", "f_149283_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.AxolotlBrain#TARGET_APPROACHING_SPEED
    [[maybe_unused]] static void set_field_TARGET_APPROACHING_SPEED(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "SPEED_MULTIPLIER_WHEN_CHASING_IN_WATER", "field_30397", "TARGET_APPROACHING_SPEED", "f_149283_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.passive.AxolotlBrain#ADULT_FOLLOWING_SPEED
    [[maybe_unused]] static jfloat get_field_ADULT_FOLLOWING_SPEED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "SPEED_MULTIPLIER_WHEN_FOLLOWING_ADULT_IN_WATER", "field_30398", "ADULT_FOLLOWING_SPEED", "f_149284_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.AxolotlBrain#ADULT_FOLLOWING_SPEED
    [[maybe_unused]] static void set_field_ADULT_FOLLOWING_SPEED(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "SPEED_MULTIPLIER_WHEN_FOLLOWING_ADULT_IN_WATER", "field_30398", "ADULT_FOLLOWING_SPEED", "f_149284_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    static jmethodID methodID_create() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "makeBrain", "method_33243", "create", "m_149290_"), "(Lbuq;)Lbuq;");
    }

    static jobject create(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_create();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_addPlayDeadActivities() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "initPlayDeadActivity", "method_33246", "addPlayDeadActivities", "m_149296_"), "(Lbuq;)V");
    }

    static void addPlayDeadActivities(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_addPlayDeadActivities();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_addFightActivities() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "initFightActivity", "method_33249", "addFightActivities", "m_149302_"), "(Lbuq;)V");
    }

    static void addFightActivities(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_addFightActivities();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_addCoreActivities() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("d", "initCoreActivity", "method_33251", "addCoreActivities", "m_149306_"), "(Lbuq;)V");
    }

    static void addCoreActivities(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_addCoreActivities();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_addIdleActivities() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("e", "initIdleActivity", "method_33252", "addIdleActivities", "m_149308_"), "(Lbuq;)V");
    }

    static void addIdleActivities(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_addIdleActivities();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_canGoToLookTarget() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "canSetWalkTargetFromLookTarget", "method_37457", "canGoToLookTarget", "m_182380_"), "(Lbtn;)Z");
    }

    static jboolean canGoToLookTarget(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_canGoToLookTarget();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_updateActivities() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "updateActivity", "method_33244", "updateActivities", "m_149292_"), "(Lcgq;)V");
    }

    static void updateActivities(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_updateActivities();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getTargetApproachingSpeed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "getSpeedModifierChasing", "method_33242", "getTargetApproachingSpeed", "m_149288_"), "(Lbtn;)F");
    }

    static jfloat getTargetApproachingSpeed(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getTargetApproachingSpeed();
       return MinecraftSDK::env->CallStaticFloatMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getAdultFollowingSpeed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "getSpeedModifierFollowingAdult", "method_33245", "getAdultFollowingSpeed", "m_149294_"), "(Lbtn;)F");
    }

    static jfloat getAdultFollowingSpeed(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getAdultFollowingSpeed();
       return MinecraftSDK::env->CallStaticFloatMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getTemptedSpeed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("d", "getSpeedModifier", "method_33248", "getTemptedSpeed", "m_149300_"), "(Lbtn;)F");
    }

    static jfloat getTemptedSpeed(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getTemptedSpeed();
       return MinecraftSDK::env->CallStaticFloatMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getAttackTarget() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "findNearestValidAttackTarget", "method_33247", "getAttackTarget", "m_149298_"), "(Lcgq;)Ljava/util/Optional;");
    }

    static jobject getAttackTarget(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getAttackTarget();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getTemptItemPredicate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getTemptations", "method_33241", "getTemptItemPredicate", "m_149287_"), "()Ljava/util/function/Predicate;");
    }

    static jobject getTemptItemPredicate() {
       const auto clazz = self();
       const auto methodID = methodID_getTemptItemPredicate();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
};

#endif // NET_MINECRAFT_ENTITY_PASSIVE_AXOLOTLBRAIN_HPP