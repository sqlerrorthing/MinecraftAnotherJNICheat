// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ENTITY_PASSIVE_ABSTRACTHORSEENTITY_HPP
#define NET_MINECRAFT_ENTITY_PASSIVE_ABSTRACTHORSEENTITY_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.entity.passive.AbstractHorseEntity
 * Remapped: chi
 */
namespace AbstractHorseEntity {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("chi", "net/minecraft/world/entity/animal/horse/AbstractHorse", "net/minecraft/class_1496", "net/minecraft/entity/passive/AbstractHorseEntity", "net/minecraft/src/C_926_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.entity.passive.AbstractHorseEntity#field_30413
    [[maybe_unused]] static jint get_field_field_30413() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cn", "EQUIPMENT_SLOT_OFFSET", "field_30413", "field_30413", "f_149486_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.passive.AbstractHorseEntity#field_30413
    [[maybe_unused]] static void set_field_field_30413(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cn", "EQUIPMENT_SLOT_OFFSET", "field_30413", "field_30413", "f_149486_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.passive.AbstractHorseEntity#field_30414
    [[maybe_unused]] static jint get_field_field_30414() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("co", "CHEST_SLOT_OFFSET", "field_30414", "field_30414", "f_149487_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.passive.AbstractHorseEntity#field_30414
    [[maybe_unused]] static void set_field_field_30414(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("co", "CHEST_SLOT_OFFSET", "field_30414", "field_30414", "f_149487_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.passive.AbstractHorseEntity#field_30415
    [[maybe_unused]] static jint get_field_field_30415() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cp", "INVENTORY_SLOT_OFFSET", "field_30415", "field_30415", "f_149488_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.passive.AbstractHorseEntity#field_30415
    [[maybe_unused]] static void set_field_field_30415(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cp", "INVENTORY_SLOT_OFFSET", "field_30415", "field_30415", "f_149488_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.passive.AbstractHorseEntity#field_42647
    [[maybe_unused]] static jdouble get_field_field_42647() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cq", "BREEDING_CROSS_FACTOR", "field_42647", "field_42647", "f_271338_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticDoubleField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.passive.AbstractHorseEntity#field_42647
    [[maybe_unused]] static void set_field_field_42647(const jdouble &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cq", "BREEDING_CROSS_FACTOR", "field_42647", "field_42647", "f_271338_"), "D");
        return MinecraftSDK::env->SetStaticDoubleField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.passive.AbstractHorseEntity#MIN_MOVEMENT_SPEED_BONUS
    [[maybe_unused]] static jfloat get_field_MIN_MOVEMENT_SPEED_BONUS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cc", "MIN_MOVEMENT_SPEED", "field_42641", "MIN_MOVEMENT_SPEED_BONUS", "f_271139_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.AbstractHorseEntity#MIN_MOVEMENT_SPEED_BONUS
    [[maybe_unused]] static void set_field_MIN_MOVEMENT_SPEED_BONUS(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cc", "MIN_MOVEMENT_SPEED", "field_42641", "MIN_MOVEMENT_SPEED_BONUS", "f_271139_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.passive.AbstractHorseEntity#MAX_MOVEMENT_SPEED_BONUS
    [[maybe_unused]] static jfloat get_field_MAX_MOVEMENT_SPEED_BONUS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cd", "MAX_MOVEMENT_SPEED", "field_42642", "MAX_MOVEMENT_SPEED_BONUS", "f_271541_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.AbstractHorseEntity#MAX_MOVEMENT_SPEED_BONUS
    [[maybe_unused]] static void set_field_MAX_MOVEMENT_SPEED_BONUS(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cd", "MAX_MOVEMENT_SPEED", "field_42642", "MAX_MOVEMENT_SPEED_BONUS", "f_271541_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.passive.AbstractHorseEntity#MIN_JUMP_STRENGTH_BONUS
    [[maybe_unused]] static jfloat get_field_MIN_JUMP_STRENGTH_BONUS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ce", "MIN_JUMP_STRENGTH", "field_42643", "MIN_JUMP_STRENGTH_BONUS", "f_271305_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.AbstractHorseEntity#MIN_JUMP_STRENGTH_BONUS
    [[maybe_unused]] static void set_field_MIN_JUMP_STRENGTH_BONUS(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ce", "MIN_JUMP_STRENGTH", "field_42643", "MIN_JUMP_STRENGTH_BONUS", "f_271305_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.passive.AbstractHorseEntity#MAX_JUMP_STRENGTH_BONUS
    [[maybe_unused]] static jfloat get_field_MAX_JUMP_STRENGTH_BONUS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cg", "MAX_JUMP_STRENGTH", "field_42644", "MAX_JUMP_STRENGTH_BONUS", "f_271293_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.AbstractHorseEntity#MAX_JUMP_STRENGTH_BONUS
    [[maybe_unused]] static void set_field_MAX_JUMP_STRENGTH_BONUS(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cg", "MAX_JUMP_STRENGTH", "field_42644", "MAX_JUMP_STRENGTH_BONUS", "f_271293_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.passive.AbstractHorseEntity#MIN_HEALTH_BONUS
    [[maybe_unused]] static jfloat get_field_MIN_HEALTH_BONUS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ch", "MIN_HEALTH", "field_42645", "MIN_HEALTH_BONUS", "f_271313_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.AbstractHorseEntity#MIN_HEALTH_BONUS
    [[maybe_unused]] static void set_field_MIN_HEALTH_BONUS(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ch", "MIN_HEALTH", "field_42645", "MIN_HEALTH_BONUS", "f_271313_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.passive.AbstractHorseEntity#MAX_HEALTH_BONUS
    [[maybe_unused]] static jfloat get_field_MAX_HEALTH_BONUS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ci", "MAX_HEALTH", "field_42646", "MAX_HEALTH_BONUS", "f_271308_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.AbstractHorseEntity#MAX_HEALTH_BONUS
    [[maybe_unused]] static void set_field_MAX_HEALTH_BONUS(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ci", "MAX_HEALTH", "field_42646", "MAX_HEALTH_BONUS", "f_271308_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.passive.AbstractHorseEntity#field_42979
    [[maybe_unused]] static jfloat get_field_field_42979() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cj", "BACKWARDS_MOVE_SPEED_FACTOR", "field_42979", "field_42979", "f_273870_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.AbstractHorseEntity#field_42979
    [[maybe_unused]] static void set_field_field_42979(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cj", "BACKWARDS_MOVE_SPEED_FACTOR", "field_42979", "field_42979", "f_273870_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.passive.AbstractHorseEntity#field_42980
    [[maybe_unused]] static jfloat get_field_field_42980() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ck", "SIDEWAYS_MOVE_SPEED_FACTOR", "field_42980", "field_42980", "f_273946_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.AbstractHorseEntity#field_42980
    [[maybe_unused]] static void set_field_field_42980(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ck", "SIDEWAYS_MOVE_SPEED_FACTOR", "field_42980", "field_42980", "f_273946_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.passive.AbstractHorseEntity#IS_BRED_HORSE
    [[maybe_unused]] static jobject get_field_IS_BRED_HORSE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cl", "PARENT_HORSE_SELECTOR", "field_6956", "IS_BRED_HORSE", "f_30525_"), "Ljava/util/function/Predicate;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.AbstractHorseEntity#IS_BRED_HORSE
    [[maybe_unused]] static void set_field_IS_BRED_HORSE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cl", "PARENT_HORSE_SELECTOR", "field_6956", "IS_BRED_HORSE", "f_30525_"), "Ljava/util/function/Predicate;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.passive.AbstractHorseEntity#PARENT_HORSE_PREDICATE
    [[maybe_unused]] static jobject get_field_PARENT_HORSE_PREDICATE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cm", "MOMMY_TARGETING", "field_18118", "PARENT_HORSE_PREDICATE", "f_30526_"), "Lcef;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.AbstractHorseEntity#PARENT_HORSE_PREDICATE
    [[maybe_unused]] static void set_field_PARENT_HORSE_PREDICATE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cm", "MOMMY_TARGETING", "field_18118", "PARENT_HORSE_PREDICATE", "f_30526_"), "Lcef;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.passive.AbstractHorseEntity#HORSE_FLAGS
    [[maybe_unused]] static jobject get_field_HORSE_FLAGS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cD", "DATA_ID_FLAGS", "field_6959", "HORSE_FLAGS", "f_30528_"), "Lajw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.AbstractHorseEntity#HORSE_FLAGS
    [[maybe_unused]] static void set_field_HORSE_FLAGS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cD", "DATA_ID_FLAGS", "field_6959", "HORSE_FLAGS", "f_30528_"), "Lajw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.passive.AbstractHorseEntity#TAMED_FLAG
    [[maybe_unused]] static jint get_field_TAMED_FLAG() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cE", "FLAG_TAME", "field_30419", "TAMED_FLAG", "f_149492_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.AbstractHorseEntity#TAMED_FLAG
    [[maybe_unused]] static void set_field_TAMED_FLAG(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cE", "FLAG_TAME", "field_30419", "TAMED_FLAG", "f_149492_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.passive.AbstractHorseEntity#SADDLED_FLAG
    [[maybe_unused]] static jint get_field_SADDLED_FLAG() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cF", "FLAG_SADDLE", "field_30420", "SADDLED_FLAG", "f_149493_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.AbstractHorseEntity#SADDLED_FLAG
    [[maybe_unused]] static void set_field_SADDLED_FLAG(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cF", "FLAG_SADDLE", "field_30420", "SADDLED_FLAG", "f_149493_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.passive.AbstractHorseEntity#BRED_FLAG
    [[maybe_unused]] static jint get_field_BRED_FLAG() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cG", "FLAG_BRED", "field_30421", "BRED_FLAG", "f_149494_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.AbstractHorseEntity#BRED_FLAG
    [[maybe_unused]] static void set_field_BRED_FLAG(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cG", "FLAG_BRED", "field_30421", "BRED_FLAG", "f_149494_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.passive.AbstractHorseEntity#EATING_GRASS_FLAG
    [[maybe_unused]] static jint get_field_EATING_GRASS_FLAG() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cH", "FLAG_EATING", "field_30422", "EATING_GRASS_FLAG", "f_149495_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.AbstractHorseEntity#EATING_GRASS_FLAG
    [[maybe_unused]] static void set_field_EATING_GRASS_FLAG(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cH", "FLAG_EATING", "field_30422", "EATING_GRASS_FLAG", "f_149495_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.passive.AbstractHorseEntity#ANGRY_FLAG
    [[maybe_unused]] static jint get_field_ANGRY_FLAG() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cI", "FLAG_STANDING", "field_30423", "ANGRY_FLAG", "f_149496_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.AbstractHorseEntity#ANGRY_FLAG
    [[maybe_unused]] static void set_field_ANGRY_FLAG(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cI", "FLAG_STANDING", "field_30423", "ANGRY_FLAG", "f_149496_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.passive.AbstractHorseEntity#EATING_FLAG
    [[maybe_unused]] static jint get_field_EATING_FLAG() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cJ", "FLAG_OPEN_MOUTH", "field_30424", "EATING_FLAG", "f_149497_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.AbstractHorseEntity#EATING_FLAG
    [[maybe_unused]] static void set_field_EATING_FLAG(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cJ", "FLAG_OPEN_MOUTH", "field_30424", "EATING_FLAG", "f_149497_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.passive.AbstractHorseEntity#field_30416
    [[maybe_unused]] static jint get_field_field_30416() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cr", "INV_SLOT_SADDLE", "field_30416", "field_30416", "f_149489_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.passive.AbstractHorseEntity#field_30416
    [[maybe_unused]] static void set_field_field_30416(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cr", "INV_SLOT_SADDLE", "field_30416", "field_30416", "f_149489_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.passive.AbstractHorseEntity#field_30418
    [[maybe_unused]] static jint get_field_field_30418() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cs", "INV_BASE_COUNT", "field_30418", "field_30418", "f_149491_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.passive.AbstractHorseEntity#field_30418
    [[maybe_unused]] static void set_field_field_30418(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cs", "INV_BASE_COUNT", "field_30418", "field_30418", "f_149491_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.entity.passive.AbstractHorseEntity#eatingGrassTicks
    static jint get_field_eatingGrassTicks(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cK", "eatingCounter", "field_6971", "eatingGrassTicks", "f_30507_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.AbstractHorseEntity#eatingGrassTicks
    static void set_field_eatingGrassTicks(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cK", "eatingCounter", "field_6971", "eatingGrassTicks", "f_30507_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.passive.AbstractHorseEntity#eatingTicks
    static jint get_field_eatingTicks(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cL", "mouthCounter", "field_6973", "eatingTicks", "f_30508_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.AbstractHorseEntity#eatingTicks
    static void set_field_eatingTicks(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cL", "mouthCounter", "field_6973", "eatingTicks", "f_30508_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.passive.AbstractHorseEntity#angryTicks
    static jint get_field_angryTicks(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cM", "standCounter", "field_6970", "angryTicks", "f_30509_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.AbstractHorseEntity#angryTicks
    static void set_field_angryTicks(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cM", "standCounter", "field_6970", "angryTicks", "f_30509_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.entity.passive.AbstractHorseEntity#tailWagTicks
    static jint get_field_tailWagTicks(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ct", "tailCounter", "field_6957", "tailWagTicks", "f_30517_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static public field net.minecraft.entity.passive.AbstractHorseEntity#tailWagTicks
    static void set_field_tailWagTicks(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ct", "tailCounter", "field_6957", "tailWagTicks", "f_30517_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.entity.passive.AbstractHorseEntity#field_6958
    static jint get_field_field_6958(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cu", "sprintCounter", "field_6958", "field_6958", "f_30518_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static public field net.minecraft.entity.passive.AbstractHorseEntity#field_6958
    static void set_field_field_6958(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cu", "sprintCounter", "field_6958", "field_6958", "f_30518_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.entity.passive.AbstractHorseEntity#inAir
    static jboolean get_field_inAir(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cv", "isJumping", "field_6968", "inAir", "f_30519_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.entity.passive.AbstractHorseEntity#inAir
    static void set_field_inAir(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cv", "isJumping", "field_6968", "inAir", "f_30519_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.entity.passive.AbstractHorseEntity#items
    static jobject get_field_items(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cw", "inventory", "field_6962", "items", "f_30520_"), "Lbra;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.entity.passive.AbstractHorseEntity#items
    static void set_field_items(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cw", "inventory", "field_6962", "items", "f_30520_"), "Lbra;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.entity.passive.AbstractHorseEntity#temper
    static jint get_field_temper(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cx", "temper", "field_6955", "temper", "f_30521_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.entity.passive.AbstractHorseEntity#temper
    static void set_field_temper(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cx", "temper", "field_6955", "temper", "f_30521_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.entity.passive.AbstractHorseEntity#jumpStrength
    static jfloat get_field_jumpStrength(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cy", "playerJumpPendingScale", "field_6976", "jumpStrength", "f_30522_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.entity.passive.AbstractHorseEntity#jumpStrength
    static void set_field_jumpStrength(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cy", "playerJumpPendingScale", "field_6976", "jumpStrength", "f_30522_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.entity.passive.AbstractHorseEntity#jumping
    static jboolean get_field_jumping(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cz", "allowStandSliding", "field_6960", "jumping", "f_30510_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.entity.passive.AbstractHorseEntity#jumping
    static void set_field_jumping(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cz", "allowStandSliding", "field_6960", "jumping", "f_30510_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.passive.AbstractHorseEntity#eatingGrassAnimationProgress
    static jfloat get_field_eatingGrassAnimationProgress(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cN", "eatAnim", "field_6969", "eatingGrassAnimationProgress", "f_30511_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.AbstractHorseEntity#eatingGrassAnimationProgress
    static void set_field_eatingGrassAnimationProgress(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cN", "eatAnim", "field_6969", "eatingGrassAnimationProgress", "f_30511_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.passive.AbstractHorseEntity#lastEatingGrassAnimationProgress
    static jfloat get_field_lastEatingGrassAnimationProgress(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cO", "eatAnimO", "field_6966", "lastEatingGrassAnimationProgress", "f_30512_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.AbstractHorseEntity#lastEatingGrassAnimationProgress
    static void set_field_lastEatingGrassAnimationProgress(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cO", "eatAnimO", "field_6966", "lastEatingGrassAnimationProgress", "f_30512_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.passive.AbstractHorseEntity#angryAnimationProgress
    static jfloat get_field_angryAnimationProgress(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cP", "standAnim", "field_6967", "angryAnimationProgress", "f_30513_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.AbstractHorseEntity#angryAnimationProgress
    static void set_field_angryAnimationProgress(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cP", "standAnim", "field_6967", "angryAnimationProgress", "f_30513_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.passive.AbstractHorseEntity#lastAngryAnimationProgress
    static jfloat get_field_lastAngryAnimationProgress(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cQ", "standAnimO", "field_6963", "lastAngryAnimationProgress", "f_30514_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.AbstractHorseEntity#lastAngryAnimationProgress
    static void set_field_lastAngryAnimationProgress(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cQ", "standAnimO", "field_6963", "lastAngryAnimationProgress", "f_30514_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.passive.AbstractHorseEntity#eatingAnimationProgress
    static jfloat get_field_eatingAnimationProgress(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cR", "mouthAnim", "field_6965", "eatingAnimationProgress", "f_30515_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.AbstractHorseEntity#eatingAnimationProgress
    static void set_field_eatingAnimationProgress(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cR", "mouthAnim", "field_6965", "eatingAnimationProgress", "f_30515_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.passive.AbstractHorseEntity#lastEatingAnimationProgress
    static jfloat get_field_lastEatingAnimationProgress(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cS", "mouthAnimO", "field_6961", "lastEatingAnimationProgress", "f_30516_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.AbstractHorseEntity#lastEatingAnimationProgress
    static void set_field_lastEatingAnimationProgress(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cS", "mouthAnimO", "field_6961", "lastEatingAnimationProgress", "f_30516_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.entity.passive.AbstractHorseEntity#playExtraHorseSounds
    static jboolean get_field_playExtraHorseSounds(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cA", "canGallop", "field_6964", "playExtraHorseSounds", "f_30523_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.entity.passive.AbstractHorseEntity#playExtraHorseSounds
    static void set_field_playExtraHorseSounds(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cA", "canGallop", "field_6964", "playExtraHorseSounds", "f_30523_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.entity.passive.AbstractHorseEntity#soundTicks
    static jint get_field_soundTicks(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cB", "gallopSoundCounter", "field_6975", "soundTicks", "f_30524_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.entity.passive.AbstractHorseEntity#soundTicks
    static void set_field_soundTicks(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cB", "gallopSoundCounter", "field_6975", "soundTicks", "f_30524_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.passive.AbstractHorseEntity#ownerUuid
    static jobject get_field_ownerUuid(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cT", "owner", "field_42462", "ownerUuid", "f_268614_"), "Ljava/util/UUID;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.AbstractHorseEntity#ownerUuid
    static void set_field_ownerUuid(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cT", "owner", "field_42462", "ownerUuid", "f_268614_"), "Ljava/util/UUID;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.passive.AbstractHorseEntity#inventory
    static jobject get_field_inventory(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cU", "bodyArmorAccess", "field_48830", "inventory", "f_314558_"), "Lbqk;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.AbstractHorseEntity#inventory
    static void set_field_inventory(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cU", "bodyArmorAccess", "field_48830", "inventory", "f_314558_"), "Lbqk;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_initGoals() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("B", "registerGoals", "method_5959", "initGoals", "m_8099_"), "()V");
    }

    static void initGoals(const jobject& obj) {
                
       const auto methodID = methodID_initGoals();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_initCustomGoals() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gA", "addBehaviourGoals", "method_6764", "initCustomGoals", "m_7509_"), "()V");
    }

    static void initCustomGoals(const jobject& obj) {
                
       const auto methodID = methodID_initCustomGoals();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_initDataTracker() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "defineSynchedData", "method_5693", "initDataTracker", "m_8097_"), "(Laka$a;)V");
    }

    static void initDataTracker(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_initDataTracker();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getHorseFlag() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("t", "getFlag", "method_6730", "getHorseFlag", "m_30647_"), "(I)Z");
    }

    static jboolean getHorseFlag(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_getHorseFlag();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setHorseFlag() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "setFlag", "method_6769", "setHorseFlag", "m_30597_"), "(IZ)V");
    }

    static void setHorseFlag(const jobject& obj, const jint& arg0, const jboolean& arg1) {
                
       const auto methodID = methodID_setHorseFlag();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_isTame() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gz", "isTamed", "method_6727", "isTame", "m_30614_"), "()Z");
    }

    static jboolean isTame(const jobject& obj) {
                
       const auto methodID = methodID_isTame();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getOwnerUuid() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aa_", "getOwnerUUID", "method_6139", "getOwnerUuid", "m_21805_"), "()Ljava/util/UUID;");
    }

    static jobject getOwnerUuid(const jobject& obj) {
                
       const auto methodID = methodID_getOwnerUuid();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_setOwnerUuid() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "setOwnerUUID", "method_6732", "setOwnerUuid", "m_30586_"), "(Ljava/util/UUID;)V");
    }

    static void setOwnerUuid(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setOwnerUuid();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isInAir() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gB", "isJumping", "method_6763", "isInAir", "m_30616_"), "()Z");
    }

    static jboolean isInAir(const jobject& obj) {
                
       const auto methodID = methodID_isInAir();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_setTame() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("y", "setTamed", "method_6766", "setTame", "m_30651_"), "(Z)V");
    }

    static void setTame(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setTame();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setInAir() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("z", "setIsJumping", "method_6758", "setInAir", "m_30655_"), "(Z)V");
    }

    static void setInAir(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setInAir();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_shouldTickLeash() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "handleLeashAtDistance", "method_60956", "shouldTickLeash", "m_338665_"), "(Lbsr;F)Z");
    }

    static jboolean shouldTickLeash(const jobject& obj, const jobject& arg0, const jfloat& arg1) {
                
       const auto methodID = methodID_shouldTickLeash();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_isEatingGrass() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gC", "isEating", "method_6724", "isEatingGrass", "m_30617_"), "()Z");
    }

    static jboolean isEatingGrass(const jobject& obj) {
                
       const auto methodID = methodID_isEatingGrass();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isAngry() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gD", "isStanding", "method_6736", "isAngry", "m_30622_"), "()Z");
    }

    static jboolean isAngry(const jobject& obj) {
                
       const auto methodID = methodID_isAngry();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isBred() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gE", "isBred", "method_6744", "isBred", "m_30623_"), "()Z");
    }

    static jboolean isBred(const jobject& obj) {
                
       const auto methodID = methodID_isBred();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_setBred() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("A", "setBred", "method_6751", "setBred", "m_30657_"), "(Z)V");
    }

    static void setBred(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setBred();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_canBeSaddled() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "isSaddleable", "method_6765", "canBeSaddled", "m_6741_"), "()Z");
    }

    static jboolean canBeSaddled(const jobject& obj) {
                
       const auto methodID = methodID_canBeSaddled();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_saddle() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "equipSaddle", "method_6576", "saddle", "m_5853_"), "(Lcuq;Lavq;)V");
    }

    static void saddle(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_saddle();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_equipHorseArmor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "equipBodyArmor", "method_45375", "equipHorseArmor", "m_319774_"), "(Lcmx;Lcuq;)V");
    }

    static void equipHorseArmor(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_equipHorseArmor();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_isSaddled() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("i", "isSaddled", "method_6725", "isSaddled", "m_6254_"), "()Z");
    }

    static jboolean isSaddled(const jobject& obj) {
                
       const auto methodID = methodID_isSaddled();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getTemper() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gF", "getTemper", "method_6729", "getTemper", "m_30624_"), "()I");
    }

    static jint getTemper(const jobject& obj) {
                
       const auto methodID = methodID_getTemper();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_setTemper() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("u", "setTemper", "method_6749", "setTemper", "m_30649_"), "(I)V");
    }

    static void setTemper(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_setTemper();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_addTemper() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("v", "modifyTemper", "method_6745", "addTemper", "m_30653_"), "(I)I");
    }

    static jint addTemper(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_addTemper();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isPushable() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("bB", "isPushable", "method_5810", "isPushable", "m_6094_"), "()Z");
    }

    static jboolean isPushable(const jobject& obj) {
                
       const auto methodID = methodID_isPushable();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_playEatingAnimation() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("s", "eating", "method_6733", "playEatingAnimation", "m_30610_"), "()V");
    }

    static void playEatingAnimation(const jobject& obj) {
                
       const auto methodID = methodID_playEatingAnimation();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_handleFallDamage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "causeFallDamage", "method_5747", "handleFallDamage", "m_142535_"), "(FFLbrk;)Z");
    }

    static jboolean handleFallDamage(const jobject& obj, const jfloat& arg0, const jfloat& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_handleFallDamage();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_getInventorySize() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gG", "getInventorySize", "method_6750", "getInventorySize", "m_7506_"), "()I");
    }

    static jint getInventorySize(const jobject& obj) {
                
       const auto methodID = methodID_getInventorySize();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID__getInventorySize() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("w", "getInventorySize", "method_60977", "getInventorySize", "m_339034_"), "(I)I");
    }

    static jint _getInventorySize(const jint& arg0) {
       const auto clazz = self();
       const auto methodID = methodID__getInventorySize();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_onChestedStatusChanged() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gH", "createInventory", "method_6721", "onChestedStatusChanged", "m_30625_"), "()V");
    }

    static void onChestedStatusChanged(const jobject& obj) {
                
       const auto methodID = methodID_onChestedStatusChanged();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_updateSaddledFlag() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gI", "syncSaddleToClients", "method_56679", "updateSaddledFlag", "m_324195_"), "()V");
    }

    static void updateSaddledFlag(const jobject& obj) {
                
       const auto methodID = methodID_updateSaddledFlag();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_onInventoryChanged() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "containerChanged", "method_5453", "onInventoryChanged", "m_5757_"), "(Lbqk;)V");
    }

    static void onInventoryChanged(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onInventoryChanged();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_damage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "hurt", "method_5643", "damage", "m_6469_"), "(Lbrk;F)Z");
    }

    static jboolean damage(const jobject& obj, const jobject& arg0, const jfloat& arg1) {
                
       const auto methodID = methodID_damage();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_shouldAmbientStand() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gl", "canPerformRearing", "method_45349", "shouldAmbientStand", "m_245259_"), "()Z");
    }

    static jboolean shouldAmbientStand(const jobject& obj) {
                
       const auto methodID = methodID_shouldAmbientStand();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getEatSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gm", "getEatingSound", "method_28368", "getEatSound", "m_7872_"), "()Lavo;");
    }

    static jobject getEatSound(const jobject& obj) {
                
       const auto methodID = methodID_getEatSound();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getAngrySound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gJ", "getAngrySound", "method_6747", "getAngrySound", "m_7871_"), "()Lavo;");
    }

    static jobject getAngrySound(const jobject& obj) {
                
       const auto methodID = methodID_getAngrySound();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_playStepSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "playStepSound", "method_5712", "playStepSound", "m_7355_"), "(Ljd;Ldtc;)V");
    }

    static void playStepSound(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_playStepSound();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_isWooden() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "isWoodSoundType", "method_49996", "isWooden", "m_278175_"), "(Ldnm;)Z");
    }

    static jboolean isWooden(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_isWooden();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_playWalkSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "playGallopSound", "method_6761", "playWalkSound", "m_5877_"), "(Ldnm;)V");
    }

    static void playWalkSound(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_playWalkSound();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_createBaseHorseAttributes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("gK", "createBaseHorseAttributes", "method_26899", "createBaseHorseAttributes", "m_30627_"), "()Lbuv$a;");
    }

    static jobject createBaseHorseAttributes() {
       const auto clazz = self();
       const auto methodID = methodID_createBaseHorseAttributes();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_getLimitPerChunk() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("fN", "getMaxSpawnClusterSize", "method_5945", "getLimitPerChunk", "m_5792_"), "()I");
    }

    static jint getLimitPerChunk(const jobject& obj) {
                
       const auto methodID = methodID_getLimitPerChunk();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getMaxTemper() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gL", "getMaxTemper", "method_6755", "getMaxTemper", "m_7555_"), "()I");
    }

    static jint getMaxTemper(const jobject& obj) {
                
       const auto methodID = methodID_getMaxTemper();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getSoundVolume() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("fa", "getSoundVolume", "method_6107", "getSoundVolume", "m_6121_"), "()F");
    }

    static jfloat getSoundVolume(const jobject& obj) {
                
       const auto methodID = methodID_getSoundVolume();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID_getMinAmbientSoundDelay() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("R", "getAmbientSoundInterval", "method_5970", "getMinAmbientSoundDelay", "m_8100_"), "()I");
    }

    static jint getMinAmbientSoundDelay(const jobject& obj) {
                
       const auto methodID = methodID_getMinAmbientSoundDelay();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_openInventory() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "openCustomInventoryScreen", "method_6722", "openInventory", "m_213583_"), "(Lcmx;)V");
    }

    static void openInventory(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_openInventory();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_interactHorse() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "fedFood", "method_30009", "interactHorse", "m_30580_"), "(Lcmx;Lcuq;)Lbqr;");
    }

    static jobject interactHorse(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_interactHorse();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_receiveFood() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "handleEating", "method_6742", "receiveFood", "m_5994_"), "(Lcmx;Lcuq;)Z");
    }

    static jboolean receiveFood(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_receiveFood();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_putPlayerOnBack() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "doPlayerRide", "method_6726", "putPlayerOnBack", "m_6835_"), "(Lcmx;)V");
    }

    static void putPlayerOnBack(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_putPlayerOnBack();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isImmobile() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("fc", "isImmobile", "method_6062", "isImmobile", "m_6107_"), "()Z");
    }

    static jboolean isImmobile(const jobject& obj) {
                
       const auto methodID = methodID_isImmobile();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isBreedingItem() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("o", "isFood", "method_6481", "isBreedingItem", "m_6898_"), "(Lcuq;)Z");
    }

    static jboolean isBreedingItem(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_isBreedingItem();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_wagTail() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("t", "moveTail", "method_6759", "wagTail", "m_30611_"), "()V");
    }

    static void wagTail(const jobject& obj) {
                
       const auto methodID = methodID_wagTail();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_dropInventory() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ez", "dropEquipment", "method_16078", "dropInventory", "m_5907_"), "()V");
    }

    static void dropInventory(const jobject& obj) {
                
       const auto methodID = methodID_dropInventory();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_tickMovement() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("m_", "aiStep", "method_6007", "tickMovement", "m_8107_"), "()V");
    }

    static void tickMovement(const jobject& obj) {
                
       const auto methodID = methodID_tickMovement();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_walkToParent() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gM", "followMommy", "method_6746", "walkToParent", "m_7567_"), "()V");
    }

    static void walkToParent(const jobject& obj) {
                
       const auto methodID = methodID_walkToParent();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_eatsGrass() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gN", "canEatGrass", "method_6762", "eatsGrass", "m_7559_"), "()Z");
    }

    static jboolean eatsGrass(const jobject& obj) {
                
       const auto methodID = methodID_eatsGrass();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_tick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("l", "tick", "method_5773", "tick", "m_8119_"), "()V");
    }

    static void tick(const jobject& obj) {
                
       const auto methodID = methodID_tick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_interactMob() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "mobInteract", "method_5992", "interactMob", "m_6071_"), "(Lcmx;Lbqq;)Lbqr;");
    }

    static jobject interactMob(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_interactMob();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_setEating() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("x", "openMouth", "method_6738", "setEating", "m_30612_"), "()V");
    }

    static void setEating(const jobject& obj) {
                
       const auto methodID = methodID_setEating();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_setEatingGrass() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("B", "setEating", "method_6740", "setEatingGrass", "m_30661_"), "(Z)V");
    }

    static void setEatingGrass(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setEatingGrass();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setAngry() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("C", "setStanding", "method_6737", "setAngry", "m_30665_"), "(Z)V");
    }

    static void setAngry(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setAngry();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getAmbientStandSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gO", "getAmbientStandSound", "method_45376", "getAmbientStandSound", "m_247131_"), "()Lavo;");
    }

    static jobject getAmbientStandSound(const jobject& obj) {
                
       const auto methodID = methodID_getAmbientStandSound();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_updateAnger() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gP", "standIfPossible", "method_6748", "updateAnger", "m_247525_"), "()V");
    }

    static void updateAnger(const jobject& obj) {
                
       const auto methodID = methodID_updateAnger();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_playAngrySound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gQ", "makeMad", "method_6757", "playAngrySound", "m_7564_"), "()V");
    }

    static void playAngrySound(const jobject& obj) {
                
       const auto methodID = methodID_playAngrySound();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_bondWithPlayer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "tameWithName", "method_6752", "bondWithPlayer", "m_30637_"), "(Lcmx;)Z");
    }

    static jboolean bondWithPlayer(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_bondWithPlayer();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_tickControlled() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "tickRidden", "method_49481", "tickControlled", "m_274498_"), "(Lcmx;Lexc;)V");
    }

    static void tickControlled(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_tickControlled();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getControlledRotation() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("j", "getRiddenRotation", "method_49489", "getControlledRotation", "m_274391_"), "(Lbtn;)Lexb;");
    }

    static jobject getControlledRotation(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getControlledRotation();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getControlledMovementInput() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getRiddenInput", "method_49482", "getControlledMovementInput", "m_274312_"), "(Lcmx;Lexc;)Lexc;");
    }

    static jobject getControlledMovementInput(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_getControlledMovementInput();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getSaddledSpeed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "getRiddenSpeed", "method_49485", "getSaddledSpeed", "m_245547_"), "(Lcmx;)F");
    }

    static jfloat getSaddledSpeed(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getSaddledSpeed();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_jump() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "executeRidersJump", "method_45343", "jump", "m_245980_"), "(FLexc;)V");
    }

    static void jump(const jobject& obj, const jfloat& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_jump();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_playJumpSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gR", "playJumpSound", "method_6723", "playJumpSound", "m_7486_"), "()V");
    }

    static void playJumpSound(const jobject& obj) {
                
       const auto methodID = methodID_playJumpSound();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_writeCustomDataToNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "addAdditionalSaveData", "method_5652", "writeCustomDataToNbt", "m_7380_"), "(Lub;)V");
    }

    static void writeCustomDataToNbt(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_writeCustomDataToNbt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_readCustomDataFromNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "readAdditionalSaveData", "method_5749", "readCustomDataFromNbt", "m_7378_"), "(Lub;)V");
    }

    static void readCustomDataFromNbt(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_readCustomDataFromNbt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_canBreedWith() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "canMate", "method_6474", "canBreedWith", "m_7848_"), "(Lcfe;)Z");
    }

    static jboolean canBreedWith(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_canBreedWith();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_canBreed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gS", "canParent", "method_6734", "canBreed", "m_30628_"), "()Z");
    }

    static jboolean canBreed(const jobject& obj) {
                
       const auto methodID = methodID_canBreed();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_createChild() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getBreedOffspring", "method_5613", "createChild", "m_142606_"), "(Laqu;Lbsl;)Lbsl;");
    }

    static jobject createChild(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_createChild();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_setChildAttributes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setOffspringAttributes", "method_6743", "setChildAttributes", "m_149508_"), "(Lbsl;Lchi;)V");
    }

    static void setChildAttributes(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_setChildAttributes();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_setChildAttribute() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setOffspringAttribute", "method_49124", "setChildAttribute", "m_272015_"), "(Lbsl;Lchi;Ljm;DD)V");
    }

    static void setChildAttribute(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jdouble& arg3, const jdouble& arg4) {
                
       const auto methodID = methodID_setChildAttribute();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_calculateAttributeBaseValue() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "createOffspringAttribute", "method_49123", "calculateAttributeBaseValue", "m_271715_"), "(DDDDLayw;)D");
    }

    static jdouble calculateAttributeBaseValue(const jdouble& arg0, const jdouble& arg1, const jdouble& arg2, const jdouble& arg3, const jobject& arg4) {
       const auto clazz = self();
       const auto methodID = methodID_calculateAttributeBaseValue();
       return MinecraftSDK::env->CallStaticDoubleMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_getEatingGrassAnimationProgress() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("H", "getEatAnim", "method_6739", "getEatingGrassAnimationProgress", "m_30663_"), "(F)F");
    }

    static jfloat getEatingGrassAnimationProgress(const jobject& obj, const jfloat& arg0) {
                
       const auto methodID = methodID_getEatingGrassAnimationProgress();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getAngryAnimationProgress() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("I", "getStandAnim", "method_6767", "getAngryAnimationProgress", "m_30667_"), "(F)F");
    }

    static jfloat getAngryAnimationProgress(const jobject& obj, const jfloat& arg0) {
                
       const auto methodID = methodID_getAngryAnimationProgress();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getEatingAnimationProgress() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("J", "getMouthAnim", "method_6772", "getEatingAnimationProgress", "m_30533_"), "(F)F");
    }

    static jfloat getEatingAnimationProgress(const jobject& obj, const jfloat& arg0) {
                
       const auto methodID = methodID_getEatingAnimationProgress();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setJumpStrength() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "onPlayerJump", "method_6154", "setJumpStrength", "m_7888_"), "(I)V");
    }

    static void setJumpStrength(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_setJumpStrength();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_canJump() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "canJump", "method_6153", "canJump", "m_7132_"), "()Z");
    }

    static jboolean canJump(const jobject& obj) {
                
       const auto methodID = methodID_canJump();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_startJumping() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "handleStartJump", "method_6155", "startJumping", "m_7199_"), "(I)V");
    }

    static void startJumping(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_startJumping();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_stopJumping() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "handleStopJump", "method_6156", "stopJumping", "m_8012_"), "()V");
    }

    static void stopJumping(const jobject& obj) {
                
       const auto methodID = methodID_stopJumping();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_spawnPlayerReactionParticles() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("D", "spawnTamingParticles", "method_6760", "spawnPlayerReactionParticles", "m_30669_"), "(Z)V");
    }

    static void spawnPlayerReactionParticles(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_spawnPlayerReactionParticles();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_handleStatus() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "handleEntityEvent", "method_5711", "handleStatus", "m_7822_"), "(B)V");
    }

    static void handleStatus(const jobject& obj, const jbyte& arg0) {
                
       const auto methodID = methodID_handleStatus();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_updatePassengerPosition() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "positionRider", "method_5865", "updatePassengerPosition", "m_19956_"), "(Lbsr;Lbsr$a;)V");
    }

    static void updatePassengerPosition(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_updatePassengerPosition();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getChildHealthBonus() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "generateMaxHealth", "method_6754", "getChildHealthBonus", "m_271722_"), "(Ljava/util/function/IntUnaryOperator;)F");
    }

    static jfloat getChildHealthBonus(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getChildHealthBonus();
       return MinecraftSDK::env->CallStaticFloatMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getChildJumpStrengthBonus() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "generateJumpStrength", "method_6774", "getChildJumpStrengthBonus", "m_272017_"), "(Ljava/util/function/DoubleSupplier;)D");
    }

    static jdouble getChildJumpStrengthBonus(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getChildJumpStrengthBonus();
       return MinecraftSDK::env->CallStaticDoubleMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getChildMovementSpeedBonus() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "generateSpeed", "method_6728", "getChildMovementSpeedBonus", "m_271981_"), "(Ljava/util/function/DoubleSupplier;)D");
    }

    static jdouble getChildMovementSpeedBonus(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getChildMovementSpeedBonus();
       return MinecraftSDK::env->CallStaticDoubleMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_isClimbing() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("p_", "onClimbable", "method_6101", "isClimbing", "m_6147_"), "()Z");
    }

    static jboolean isClimbing(const jobject& obj) {
                
       const auto methodID = methodID_isClimbing();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getStackReference() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a_", "getSlot", "method_32318", "getStackReference", "m_141942_"), "(I)Lbug;");
    }

    static jobject getStackReference(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_getStackReference();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getControllingPassenger() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("cQ", "getControllingPassenger", "method_5642", "getControllingPassenger", "m_6688_"), "()Lbtn;");
    }

    static jobject getControllingPassenger(const jobject& obj) {
                
       const auto methodID = methodID_getControllingPassenger();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_locateSafeDismountingPos() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getDismountLocationInDirection", "method_27930", "locateSafeDismountingPos", "m_30561_"), "(Lexc;Lbtn;)Lexc;");
    }

    static jobject locateSafeDismountingPos(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_locateSafeDismountingPos();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_updatePassengerForDismount() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getDismountLocationForPassenger", "method_24829", "updatePassengerForDismount", "m_7688_"), "(Lbtn;)Lexc;");
    }

    static jobject updatePassengerForDismount(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_updatePassengerForDismount();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_initAttributes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "randomizeAttributes", "method_6001", "initAttributes", "m_214179_"), "(Layw;)V");
    }

    static void initAttributes(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_initAttributes();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_initialize() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "finalizeSpawn", "method_5943", "initialize", "m_6518_"), "(Lddl;Lbqp;Lbtr;Lbuh;)Lbuh;");
    }

    static jobject initialize(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_initialize();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_areInventoriesDifferent() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "hasInventoryChanged", "method_33338", "areInventoriesDifferent", "m_149511_"), "(Lbqk;)Z");
    }

    static jboolean areInventoriesDifferent(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_areInventoriesDifferent();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getMinAmbientStandDelay() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gT", "getAmbientStandInterval", "method_45377", "getMinAmbientStandDelay", "m_247558_"), "()I");
    }

    static jint getMinAmbientStandDelay(const jobject& obj) {
                
       const auto methodID = methodID_getMinAmbientStandDelay();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getPassengerAttachmentPos() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getPassengerAttachmentPoint", "method_52533", "getPassengerAttachmentPos", "m_293035_"), "(Lbsr;Lbsu;F)Lexc;");
    }

    static jobject getPassengerAttachmentPos(const jobject& obj, const jobject& arg0, const jobject& arg1, const jfloat& arg2) {
                
       const auto methodID = methodID_getPassengerAttachmentPos();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_getInventory() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gU", "getBodyArmorAccess", "method_56680", "getInventory", "m_322868_"), "()Lbqk;");
    }

    static jobject getInventory(const jobject& obj) {
                
       const auto methodID = methodID_getInventory();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getInventoryColumns() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("af_", "getInventoryColumns", "method_6702", "getInventoryColumns", "m_7488_"), "()I");
    }

    static jint getInventoryColumns(const jobject& obj) {
                
       const auto methodID = methodID_getInventoryColumns();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_ENTITY_PASSIVE_ABSTRACTHORSEENTITY_HPP