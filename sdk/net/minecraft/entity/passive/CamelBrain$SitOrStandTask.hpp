// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ENTITY_PASSIVE_CAMELBRAIN$SITORSTANDTASK_HPP
#define NET_MINECRAFT_ENTITY_PASSIVE_CAMELBRAIN$SITORSTANDTASK_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.entity.passive.CamelBrain$SitOrStandTask
 * Remapped: cgw$b
 */
namespace CamelBrain$SitOrStandTask {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("cgw$b", "net/minecraft/world/entity/animal/camel/CamelAi$RandomSitting", "net/minecraft/class_7691$class_7693", "net/minecraft/entity/passive/CamelBrain$SitOrStandTask", "net/minecraft/src/C_243515_$C_243407_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.entity.passive.CamelBrain$SitOrStandTask#lastPoseTickDelta
    static jint get_field_lastPoseTickDelta(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "minimalPoseTicks", "field_40160", "lastPoseTickDelta", "f_244022_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.CamelBrain$SitOrStandTask#lastPoseTickDelta
    static void set_field_lastPoseTickDelta(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "minimalPoseTicks", "field_40160", "lastPoseTickDelta", "f_244022_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    static jmethodID methodID_shouldRun() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "checkExtraStartConditions", "method_45371", "shouldRun", "m_6114_"), "(Laqu;Lcgv;)Z");
    }

    static jboolean shouldRun(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_shouldRun();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_run() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "start", "method_45372", "run", "m_6735_"), "(Laqu;Lcgv;J)V");
    }

    static void run(const jobject& obj, const jobject& arg0, const jobject& arg1, const jlong& arg2) {
                
       const auto methodID = methodID_run();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
};

#endif // NET_MINECRAFT_ENTITY_PASSIVE_CAMELBRAIN$SITORSTANDTASK_HPP