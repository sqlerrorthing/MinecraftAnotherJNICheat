// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ENTITY_PASSIVE_FROGENTITY$FROGSWIMNAVIGATION_HPP
#define NET_MINECRAFT_ENTITY_PASSIVE_FROGENTITY$FROGSWIMNAVIGATION_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.entity.passive.FrogEntity$FrogSwimNavigation
 * Remapped: cgy$c
 */
namespace FrogEntity$FrogSwimNavigation {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("cgy$c", "net/minecraft/world/entity/animal/frog/Frog$FrogPathNavigation", "net/minecraft/class_7102$class_7105", "net/minecraft/entity/passive/FrogEntity$FrogSwimNavigation", "net/minecraft/src/C_213038_$C_213041_"));
        }
        return cachedClass;
    };

    static jmethodID methodID_canJumpToNext() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "canCutCorner", "method_48158", "canJumpToNext", "m_264193_"), "(Lepv;)Z");
    }

    static jboolean canJumpToNext(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_canJumpToNext();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_createPathNodeNavigator() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "createPathFinder", "method_6336", "createPathNodeNavigator", "m_5532_"), "(I)Lepu;");
    }

    static jobject createPathNodeNavigator(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_createPathNodeNavigator();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_ENTITY_PASSIVE_FROGENTITY$FROGSWIMNAVIGATION_HPP