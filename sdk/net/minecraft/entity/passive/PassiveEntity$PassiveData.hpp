// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ENTITY_PASSIVE_PASSIVEENTITY$PASSIVEDATA_HPP
#define NET_MINECRAFT_ENTITY_PASSIVE_PASSIVEENTITY$PASSIVEDATA_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.entity.passive.PassiveEntity$PassiveData
 * Remapped: bsl$a
 */
namespace PassiveEntity$PassiveData {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("bsl$a", "net/minecraft/world/entity/AgeableMob$AgeableMobGroupData", "net/minecraft/class_1296$class_4697", "net/minecraft/entity/passive/PassiveEntity$PassiveData", "net/minecraft/src/C_141062_$C_141063_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.entity.passive.PassiveEntity$PassiveData#spawnCount
    static jint get_field_spawnCount(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "groupSize", "field_20684", "spawnCount", "f_146767_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.PassiveEntity$PassiveData#spawnCount
    static void set_field_spawnCount(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "groupSize", "field_20684", "spawnCount", "f_146767_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.passive.PassiveEntity$PassiveData#babyAllowed
    static jboolean get_field_babyAllowed(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "shouldSpawnBaby", "field_20685", "babyAllowed", "f_146768_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.PassiveEntity$PassiveData#babyAllowed
    static void set_field_babyAllowed(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "shouldSpawnBaby", "field_20685", "babyAllowed", "f_146768_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.passive.PassiveEntity$PassiveData#babyChance
    static jfloat get_field_babyChance(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "babySpawnChance", "field_20686", "babyChance", "f_146769_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.passive.PassiveEntity$PassiveData#babyChance
    static void set_field_babyChance(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "babySpawnChance", "field_20686", "babyChance", "f_146769_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    static jmethodID methodID_getSpawnedCount() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getGroupSize", "method_22432", "getSpawnedCount", "m_146777_"), "()I");
    }

    static jint getSpawnedCount(const jobject& obj) {
                
       const auto methodID = methodID_getSpawnedCount();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_countSpawned() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "increaseGroupSizeByOne", "method_22435", "countSpawned", "m_146778_"), "()V");
    }

    static void countSpawned(const jobject& obj) {
                
       const auto methodID = methodID_countSpawned();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_canSpawnBaby() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "isShouldSpawnBaby", "method_22436", "canSpawnBaby", "m_146779_"), "()Z");
    }

    static jboolean canSpawnBaby(const jobject& obj) {
                
       const auto methodID = methodID_canSpawnBaby();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getBabyChance() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getBabySpawnChance", "method_22437", "getBabyChance", "m_146780_"), "()F");
    }

    static jfloat getBabyChance(const jobject& obj) {
                
       const auto methodID = methodID_getBabyChance();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_ENTITY_PASSIVE_PASSIVEENTITY$PASSIVEDATA_HPP