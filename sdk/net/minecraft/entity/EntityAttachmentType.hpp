// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ENTITY_ENTITYATTACHMENTTYPE_HPP
#define NET_MINECRAFT_ENTITY_ENTITYATTACHMENTTYPE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.entity.EntityAttachmentType
 * Remapped: bss
 */
namespace EntityAttachmentType {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("bss", "net/minecraft/world/entity/EntityAttachment", "net/minecraft/class_9064", "net/minecraft/entity/EntityAttachmentType", "net/minecraft/src/C_313489_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.entity.EntityAttachmentType#PASSENGER
    [[maybe_unused]] static jobject get_field_PASSENGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "PASSENGER", "field_47743", "PASSENGER", "PASSENGER"), "Lbss;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityAttachmentType#PASSENGER
    [[maybe_unused]] static void set_field_PASSENGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "PASSENGER", "field_47743", "PASSENGER", "PASSENGER"), "Lbss;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityAttachmentType#VEHICLE
    [[maybe_unused]] static jobject get_field_VEHICLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "VEHICLE", "field_47744", "VEHICLE", "VEHICLE"), "Lbss;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityAttachmentType#VEHICLE
    [[maybe_unused]] static void set_field_VEHICLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "VEHICLE", "field_47744", "VEHICLE", "VEHICLE"), "Lbss;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityAttachmentType#NAME_TAG
    [[maybe_unused]] static jobject get_field_NAME_TAG() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "NAME_TAG", "field_47745", "NAME_TAG", "NAME_TAG"), "Lbss;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityAttachmentType#NAME_TAG
    [[maybe_unused]] static void set_field_NAME_TAG(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "NAME_TAG", "field_47745", "NAME_TAG", "NAME_TAG"), "Lbss;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityAttachmentType#WARDEN_CHEST
    [[maybe_unused]] static jobject get_field_WARDEN_CHEST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "WARDEN_CHEST", "field_48320", "WARDEN_CHEST", "WARDEN_CHEST"), "Lbss;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityAttachmentType#WARDEN_CHEST
    [[maybe_unused]] static void set_field_WARDEN_CHEST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "WARDEN_CHEST", "field_48320", "WARDEN_CHEST", "WARDEN_CHEST"), "Lbss;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.entity.EntityAttachmentType#point
    static jobject get_field_point(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "fallback", "field_47746", "point", "f_315804_"), "Lbss$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.EntityAttachmentType#point
    static void set_field_point(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "fallback", "field_47746", "point", "f_315804_"), "Lbss$a;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_values() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("values", "values", "values", "values", "values"), "()[Lbss;");
    }

    static jobject values() {
       const auto clazz = self();
       const auto methodID = methodID_values();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_valueOf() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("valueOf", "valueOf", "valueOf", "valueOf", "valueOf"), "(Ljava/lang/String;)Lbss;");
    }

    static jobject valueOf(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_valueOf();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_createPoint() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "createFallbackPoints", "method_55670", "createPoint", "m_323391_"), "(FF)Ljava/util/List;");
    }

    static jobject createPoint(const jobject& obj, const jfloat& arg0, const jfloat& arg1) {
                
       const auto methodID = methodID_createPoint();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_ENTITY_ENTITYATTACHMENTTYPE_HPP