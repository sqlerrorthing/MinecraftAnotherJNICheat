// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ENTITY_BOSS_WITHERENTITY_HPP
#define NET_MINECRAFT_ENTITY_BOSS_WITHERENTITY_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.entity.boss.WitherEntity
 * Remapped: ciu
 */
namespace WitherEntity {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("ciu", "net/minecraft/world/entity/boss/wither/WitherBoss", "net/minecraft/class_1528", "net/minecraft/entity/boss/WitherEntity", "net/minecraft/src/C_964_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.entity.boss.WitherEntity#TRACKED_ENTITY_ID_1
    [[maybe_unused]] static jobject get_field_TRACKED_ENTITY_ID_1() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "DATA_TARGET_A", "field_7088", "TRACKED_ENTITY_ID_1", "f_31420_"), "Lajw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.boss.WitherEntity#TRACKED_ENTITY_ID_1
    [[maybe_unused]] static void set_field_TRACKED_ENTITY_ID_1(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "DATA_TARGET_A", "field_7088", "TRACKED_ENTITY_ID_1", "f_31420_"), "Lajw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.boss.WitherEntity#TRACKED_ENTITY_ID_2
    [[maybe_unused]] static jobject get_field_TRACKED_ENTITY_ID_2() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "DATA_TARGET_B", "field_7090", "TRACKED_ENTITY_ID_2", "f_31433_"), "Lajw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.boss.WitherEntity#TRACKED_ENTITY_ID_2
    [[maybe_unused]] static void set_field_TRACKED_ENTITY_ID_2(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "DATA_TARGET_B", "field_7090", "TRACKED_ENTITY_ID_2", "f_31433_"), "Lajw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.boss.WitherEntity#TRACKED_ENTITY_ID_3
    [[maybe_unused]] static jobject get_field_TRACKED_ENTITY_ID_3() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "DATA_TARGET_C", "field_7089", "TRACKED_ENTITY_ID_3", "f_31434_"), "Lajw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.boss.WitherEntity#TRACKED_ENTITY_ID_3
    [[maybe_unused]] static void set_field_TRACKED_ENTITY_ID_3(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "DATA_TARGET_C", "field_7089", "TRACKED_ENTITY_ID_3", "f_31434_"), "Lajw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.boss.WitherEntity#TRACKED_ENTITY_IDS
    [[maybe_unused]] static jobject get_field_TRACKED_ENTITY_IDS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "DATA_TARGETS", "field_7087", "TRACKED_ENTITY_IDS", "f_31421_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.boss.WitherEntity#TRACKED_ENTITY_IDS
    [[maybe_unused]] static void set_field_TRACKED_ENTITY_IDS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "DATA_TARGETS", "field_7087", "TRACKED_ENTITY_IDS", "f_31421_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.boss.WitherEntity#INVUL_TIMER
    [[maybe_unused]] static jobject get_field_INVUL_TIMER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cc", "DATA_ID_INV", "field_7085", "INVUL_TIMER", "f_31422_"), "Lajw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.boss.WitherEntity#INVUL_TIMER
    [[maybe_unused]] static void set_field_INVUL_TIMER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cc", "DATA_ID_INV", "field_7085", "INVUL_TIMER", "f_31422_"), "Lajw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.boss.WitherEntity#DEFAULT_INVUL_TIMER
    [[maybe_unused]] static jint get_field_DEFAULT_INVUL_TIMER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cd", "INVULNERABLE_TICKS", "field_30441", "DEFAULT_INVUL_TIMER", "f_149587_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.boss.WitherEntity#DEFAULT_INVUL_TIMER
    [[maybe_unused]] static void set_field_DEFAULT_INVUL_TIMER(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cd", "INVULNERABLE_TICKS", "field_30441", "DEFAULT_INVUL_TIMER", "f_149587_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.entity.boss.WitherEntity#sideHeadPitches
    static jfloat get_field_sideHeadPitches(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ce", "xRotHeads", "field_7084", "sideHeadPitches", "f_31423_"), "[F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.boss.WitherEntity#sideHeadPitches
    static void set_field_sideHeadPitches(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ce", "xRotHeads", "field_7084", "sideHeadPitches", "f_31423_"), "[F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.boss.WitherEntity#sideHeadYaws
    static jfloat get_field_sideHeadYaws(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cf", "yRotHeads", "field_7083", "sideHeadYaws", "f_31424_"), "[F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.boss.WitherEntity#sideHeadYaws
    static void set_field_sideHeadYaws(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cf", "yRotHeads", "field_7083", "sideHeadYaws", "f_31424_"), "[F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.boss.WitherEntity#prevSideHeadPitches
    static jfloat get_field_prevSideHeadPitches(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cg", "xRotOHeads", "field_7095", "prevSideHeadPitches", "f_31425_"), "[F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.boss.WitherEntity#prevSideHeadPitches
    static void set_field_prevSideHeadPitches(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cg", "xRotOHeads", "field_7095", "prevSideHeadPitches", "f_31425_"), "[F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.boss.WitherEntity#prevSideHeadYaws
    static jfloat get_field_prevSideHeadYaws(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ch", "yRotOHeads", "field_7094", "prevSideHeadYaws", "f_31426_"), "[F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.boss.WitherEntity#prevSideHeadYaws
    static void set_field_prevSideHeadYaws(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ch", "yRotOHeads", "field_7094", "prevSideHeadYaws", "f_31426_"), "[F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.boss.WitherEntity#skullCooldowns
    static jint get_field_skullCooldowns(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ci", "nextHeadUpdate", "field_7091", "skullCooldowns", "f_31427_"), "[I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.boss.WitherEntity#skullCooldowns
    static void set_field_skullCooldowns(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ci", "nextHeadUpdate", "field_7091", "skullCooldowns", "f_31427_"), "[I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.boss.WitherEntity#chargedSkullCooldowns
    static jint get_field_chargedSkullCooldowns(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cj", "idleHeadUpdates", "field_7092", "chargedSkullCooldowns", "f_31428_"), "[I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.boss.WitherEntity#chargedSkullCooldowns
    static void set_field_chargedSkullCooldowns(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cj", "idleHeadUpdates", "field_7092", "chargedSkullCooldowns", "f_31428_"), "[I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.boss.WitherEntity#blockBreakingCooldown
    static jint get_field_blockBreakingCooldown(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ck", "destroyBlocksTick", "field_7082", "blockBreakingCooldown", "f_31429_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.boss.WitherEntity#blockBreakingCooldown
    static void set_field_blockBreakingCooldown(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ck", "destroyBlocksTick", "field_7082", "blockBreakingCooldown", "f_31429_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.boss.WitherEntity#bossBar
    static jobject get_field_bossBar(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cl", "bossEvent", "field_7093", "bossBar", "f_31430_"), "Laqr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.boss.WitherEntity#bossBar
    static void set_field_bossBar(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cl", "bossEvent", "field_7093", "bossBar", "f_31430_"), "Laqr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.boss.WitherEntity#CAN_ATTACK_PREDICATE
    [[maybe_unused]] static jobject get_field_CAN_ATTACK_PREDICATE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cm", "LIVING_ENTITY_SELECTOR", "field_7086", "CAN_ATTACK_PREDICATE", "f_31431_"), "Ljava/util/function/Predicate;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.boss.WitherEntity#CAN_ATTACK_PREDICATE
    [[maybe_unused]] static void set_field_CAN_ATTACK_PREDICATE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cm", "LIVING_ENTITY_SELECTOR", "field_7086", "CAN_ATTACK_PREDICATE", "f_31431_"), "Ljava/util/function/Predicate;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.boss.WitherEntity#HEAD_TARGET_PREDICATE
    [[maybe_unused]] static jobject get_field_HEAD_TARGET_PREDICATE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cn", "TARGETING_CONDITIONS", "field_18125", "HEAD_TARGET_PREDICATE", "f_31432_"), "Lcef;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.boss.WitherEntity#HEAD_TARGET_PREDICATE
    [[maybe_unused]] static void set_field_HEAD_TARGET_PREDICATE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cn", "TARGETING_CONDITIONS", "field_18125", "HEAD_TARGET_PREDICATE", "f_31432_"), "Lcef;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_createNavigation() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "createNavigation", "method_5965", "createNavigation", "m_6037_"), "(Ldcw;)Lcda;");
    }

    static jobject createNavigation(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_createNavigation();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_initGoals() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("B", "registerGoals", "method_5959", "initGoals", "m_8099_"), "()V");
    }

    static void initGoals(const jobject& obj) {
                
       const auto methodID = methodID_initGoals();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_initDataTracker() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "defineSynchedData", "method_5693", "initDataTracker", "m_8097_"), "(Laka$a;)V");
    }

    static void initDataTracker(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_initDataTracker();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_writeCustomDataToNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "addAdditionalSaveData", "method_5652", "writeCustomDataToNbt", "m_7380_"), "(Lub;)V");
    }

    static void writeCustomDataToNbt(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_writeCustomDataToNbt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_readCustomDataFromNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "readAdditionalSaveData", "method_5749", "readCustomDataFromNbt", "m_7378_"), "(Lub;)V");
    }

    static void readCustomDataFromNbt(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_readCustomDataFromNbt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setCustomName() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "setCustomName", "method_5665", "setCustomName", "m_6593_"), "(Lwz;)V");
    }

    static void setCustomName(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setCustomName();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getAmbientSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("v", "getAmbientSound", "method_5994", "getAmbientSound", "m_7515_"), "()Lavo;");
    }

    static jobject getAmbientSound(const jobject& obj) {
                
       const auto methodID = methodID_getAmbientSound();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getHurtSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getHurtSound", "method_6011", "getHurtSound", "m_7975_"), "(Lbrk;)Lavo;");
    }

    static jobject getHurtSound(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getHurtSound();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getDeathSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("n_", "getDeathSound", "method_6002", "getDeathSound", "m_5592_"), "()Lavo;");
    }

    static jobject getDeathSound(const jobject& obj) {
                
       const auto methodID = methodID_getDeathSound();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_tickMovement() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("m_", "aiStep", "method_6007", "tickMovement", "m_8107_"), "()V");
    }

    static void tickMovement(const jobject& obj) {
                
       const auto methodID = methodID_tickMovement();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_mobTick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ab", "customServerAiStep", "method_5958", "mobTick", "m_8024_"), "()V");
    }

    static void mobTick(const jobject& obj) {
                
       const auto methodID = methodID_mobTick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_canDestroy() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "canDestroy", "method_6883", "canDestroy", "m_31491_"), "(Ldtc;)Z");
    }

    static jboolean canDestroy(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_canDestroy();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_onSummoned() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("s", "makeInvulnerable", "method_6885", "onSummoned", "m_31506_"), "()V");
    }

    static void onSummoned(const jobject& obj) {
                
       const auto methodID = methodID_onSummoned();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_slowMovement() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "makeStuckInBlock", "method_5844", "slowMovement", "m_7601_"), "(Ldtc;Lexc;)V");
    }

    static void slowMovement(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_slowMovement();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_onStartedTrackingBy() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "startSeenByPlayer", "method_5837", "onStartedTrackingBy", "m_6457_"), "(Laqv;)V");
    }

    static void onStartedTrackingBy(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onStartedTrackingBy();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_onStoppedTrackingBy() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "stopSeenByPlayer", "method_5742", "onStoppedTrackingBy", "m_6452_"), "(Laqv;)V");
    }

    static void onStoppedTrackingBy(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onStoppedTrackingBy();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getHeadX() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("u", "getHeadX", "method_6874", "getHeadX", "m_31514_"), "(I)D");
    }

    static jdouble getHeadX(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_getHeadX();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getHeadY() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("v", "getHeadY", "method_6880", "getHeadY", "m_31516_"), "(I)D");
    }

    static jdouble getHeadY(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_getHeadY();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getHeadZ() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("w", "getHeadZ", "method_6881", "getHeadZ", "m_31518_"), "(I)D");
    }

    static jdouble getHeadZ(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_getHeadZ();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getNextAngle() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "rotlerp", "method_6886", "getNextAngle", "m_31442_"), "(FFF)F");
    }

    static jfloat getNextAngle(const jobject& obj, const jfloat& arg0, const jfloat& arg1, const jfloat& arg2) {
                
       const auto methodID = methodID_getNextAngle();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_shootSkullAt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "performRangedAttack", "method_6878", "shootSkullAt", "m_31457_"), "(ILbtn;)V");
    }

    static void shootSkullAt(const jobject& obj, const jint& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_shootSkullAt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__shootSkullAt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "performRangedAttack", "method_6877", "shootSkullAt", "m_31448_"), "(IDDDZ)V");
    }

    static void _shootSkullAt(const jobject& obj, const jint& arg0, const jdouble& arg1, const jdouble& arg2, const jdouble& arg3, const jboolean& arg4) {
                
       const auto methodID = methodID__shootSkullAt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_shootAt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "performRangedAttack", "method_7105", "shootAt", "m_6504_"), "(Lbtn;F)V");
    }

    static void shootAt(const jobject& obj, const jobject& arg0, const jfloat& arg1) {
                
       const auto methodID = methodID_shootAt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_damage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "hurt", "method_5643", "damage", "m_6469_"), "(Lbrk;F)Z");
    }

    static jboolean damage(const jobject& obj, const jobject& arg0, const jfloat& arg1) {
                
       const auto methodID = methodID_damage();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_dropEquipment() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "dropCustomDeathLoot", "method_6099", "dropEquipment", "m_7472_"), "(Laqu;Lbrk;Z)V");
    }

    static void dropEquipment(const jobject& obj, const jobject& arg0, const jobject& arg1, const jboolean& arg2) {
                
       const auto methodID = methodID_dropEquipment();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_checkDespawn() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("dA", "checkDespawn", "method_5982", "checkDespawn", "m_6043_"), "()V");
    }

    static void checkDespawn(const jobject& obj) {
                
       const auto methodID = methodID_checkDespawn();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_addStatusEffect() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "addEffect", "method_37222", "addStatusEffect", "m_147207_"), "(Lbrz;Lbsr;)Z");
    }

    static jboolean addStatusEffect(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_addStatusEffect();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_createWitherAttributes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("t", "createAttributes", "method_26904", "createWitherAttributes", "m_31501_"), "()Lbuv$a;");
    }

    static jobject createWitherAttributes() {
       const auto clazz = self();
       const auto methodID = methodID_createWitherAttributes();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_getHeadYaw() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getHeadYRot", "method_6879", "getHeadYaw", "m_31446_"), "(I)F");
    }

    static jfloat getHeadYaw(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_getHeadYaw();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getHeadPitch() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getHeadXRot", "method_6887", "getHeadPitch", "m_31480_"), "(I)F");
    }

    static jfloat getHeadPitch(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_getHeadPitch();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getInvulnerableTimer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("x", "getInvulnerableTicks", "method_6884", "getInvulnerableTimer", "m_31502_"), "()I");
    }

    static jint getInvulnerableTimer(const jobject& obj) {
                
       const auto methodID = methodID_getInvulnerableTimer();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_setInvulTimer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("s", "setInvulnerableTicks", "method_6875", "setInvulTimer", "m_31510_"), "(I)V");
    }

    static void setInvulTimer(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_setInvulTimer();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getTrackedEntityId() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("t", "getAlternativeTarget", "method_6882", "getTrackedEntityId", "m_31512_"), "(I)I");
    }

    static jint getTrackedEntityId(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_getTrackedEntityId();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setTrackedEntityId() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setAlternativeTarget", "method_6876", "setTrackedEntityId", "m_31454_"), "(II)V");
    }

    static void setTrackedEntityId(const jobject& obj, const jint& arg0, const jint& arg1) {
                
       const auto methodID = methodID_setTrackedEntityId();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_shouldRenderOverlay() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "isPowered", "method_6872", "shouldRenderOverlay", "m_7090_"), "()Z");
    }

    static jboolean shouldRenderOverlay(const jobject& obj) {
                
       const auto methodID = methodID_shouldRenderOverlay();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_canStartRiding() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("o", "canRide", "method_5860", "canStartRiding", "m_7341_"), "(Lbsr;)Z");
    }

    static jboolean canStartRiding(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_canStartRiding();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_canUsePortals() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("o", "canUsePortal", "method_5822", "canUsePortals", "m_31145_"), "(Z)Z");
    }

    static jboolean canUsePortals(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_canUsePortals();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_canHaveStatusEffect() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "canBeAffected", "method_6049", "canHaveStatusEffect", "m_7301_"), "(Lbrz;)Z");
    }

    static jboolean canHaveStatusEffect(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_canHaveStatusEffect();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_ENTITY_BOSS_WITHERENTITY_HPP