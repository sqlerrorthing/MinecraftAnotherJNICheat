// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ENTITY_LIVINGENTITY_HPP
#define NET_MINECRAFT_ENTITY_LIVINGENTITY_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.entity.LivingEntity
 * Remapped: btn
 */
namespace LivingEntity {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("btn", "net/minecraft/world/entity/LivingEntity", "net/minecraft/class_1309", "net/minecraft/entity/LivingEntity", "net/minecraft/src/C_524_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.entity.LivingEntity#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "LOGGER", "field_36332", "LOGGER", "f_201943_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.LivingEntity#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "LOGGER", "field_36332", "LOGGER", "f_201943_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.LivingEntity#ACTIVE_EFFECTS_NBT_KEY
    [[maybe_unused]] static jobject get_field_ACTIVE_EFFECTS_NBT_KEY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "TAG_ACTIVE_EFFECTS", "field_45740", "ACTIVE_EFFECTS_NBT_KEY", "f_290660_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.LivingEntity#ACTIVE_EFFECTS_NBT_KEY
    [[maybe_unused]] static void set_field_ACTIVE_EFFECTS_NBT_KEY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "TAG_ACTIVE_EFFECTS", "field_45740", "ACTIVE_EFFECTS_NBT_KEY", "f_290660_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.LivingEntity#POWDER_SNOW_SPEED_MODIFIER_ID
    [[maybe_unused]] static jobject get_field_POWDER_SNOW_SPEED_MODIFIER_ID() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "SPEED_MODIFIER_POWDER_SNOW_ID", "field_27859", "POWDER_SNOW_SPEED_MODIFIER_ID", "f_336700_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.LivingEntity#POWDER_SNOW_SPEED_MODIFIER_ID
    [[maybe_unused]] static void set_field_POWDER_SNOW_SPEED_MODIFIER_ID(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "SPEED_MODIFIER_POWDER_SNOW_ID", "field_27859", "POWDER_SNOW_SPEED_MODIFIER_ID", "f_336700_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.LivingEntity#SPRINTING_SPEED_MODIFIER_ID
    [[maybe_unused]] static jobject get_field_SPRINTING_SPEED_MODIFIER_ID() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "SPRINTING_MODIFIER_ID", "field_51996", "SPRINTING_SPEED_MODIFIER_ID", "f_337462_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.LivingEntity#SPRINTING_SPEED_MODIFIER_ID
    [[maybe_unused]] static void set_field_SPRINTING_SPEED_MODIFIER_ID(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "SPRINTING_MODIFIER_ID", "field_51996", "SPRINTING_SPEED_MODIFIER_ID", "f_337462_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.LivingEntity#SPRINTING_SPEED_BOOST
    [[maybe_unused]] static jobject get_field_SPRINTING_SPEED_BOOST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bH", "SPEED_MODIFIER_SPRINTING", "field_6231", "SPRINTING_SPEED_BOOST", "f_20960_"), "Lbuu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.LivingEntity#SPRINTING_SPEED_BOOST
    [[maybe_unused]] static void set_field_SPRINTING_SPEED_BOOST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bH", "SPEED_MODIFIER_SPRINTING", "field_6231", "SPRINTING_SPEED_BOOST", "f_20960_"), "Lbuu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.LivingEntity#field_30069
    [[maybe_unused]] static jint get_field_field_30069() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "HAND_SLOTS", "field_30069", "field_30069", "f_147166_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.LivingEntity#field_30069
    [[maybe_unused]] static void set_field_field_30069(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "HAND_SLOTS", "field_30069", "field_30069", "f_147166_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.LivingEntity#field_30070
    [[maybe_unused]] static jint get_field_field_30070() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "ARMOR_SLOTS", "field_30070", "field_30070", "f_147167_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.LivingEntity#field_30070
    [[maybe_unused]] static void set_field_field_30070(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "ARMOR_SLOTS", "field_30070", "field_30070", "f_147167_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.LivingEntity#EQUIPMENT_SLOT_ID
    [[maybe_unused]] static jint get_field_EQUIPMENT_SLOT_ID() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "EQUIPMENT_SLOT_OFFSET", "field_30071", "EQUIPMENT_SLOT_ID", "f_147168_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.LivingEntity#EQUIPMENT_SLOT_ID
    [[maybe_unused]] static void set_field_EQUIPMENT_SLOT_ID(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "EQUIPMENT_SLOT_OFFSET", "field_30071", "EQUIPMENT_SLOT_ID", "f_147168_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.LivingEntity#field_30072
    [[maybe_unused]] static jint get_field_field_30072() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "ARMOR_SLOT_OFFSET", "field_30072", "field_30072", "f_147169_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.LivingEntity#field_30072
    [[maybe_unused]] static void set_field_field_30072(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "ARMOR_SLOT_OFFSET", "field_30072", "field_30072", "f_147169_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.LivingEntity#field_48827
    [[maybe_unused]] static jint get_field_field_48827() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "BODY_ARMOR_OFFSET", "field_48827", "field_48827", "f_316361_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.LivingEntity#field_48827
    [[maybe_unused]] static void set_field_field_48827(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "BODY_ARMOR_OFFSET", "field_48827", "field_48827", "f_316361_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.LivingEntity#GLOWING_FLAG
    [[maybe_unused]] static jint get_field_GLOWING_FLAG() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "SWING_DURATION", "field_30073", "GLOWING_FLAG", "f_147170_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.LivingEntity#GLOWING_FLAG
    [[maybe_unused]] static void set_field_GLOWING_FLAG(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "SWING_DURATION", "field_30073", "GLOWING_FLAG", "f_147170_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.LivingEntity#field_30074
    [[maybe_unused]] static jint get_field_field_30074() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "PLAYER_HURT_EXPERIENCE_TIME", "field_30074", "field_30074", "f_147171_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.LivingEntity#field_30074
    [[maybe_unused]] static void set_field_field_30074(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "PLAYER_HURT_EXPERIENCE_TIME", "field_30074", "field_30074", "f_147171_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.LivingEntity#field_30078
    [[maybe_unused]] static jint get_field_field_30078() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bI", "DAMAGE_SOURCE_TIMEOUT", "field_30078", "field_30078", "f_147178_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.LivingEntity#field_30078
    [[maybe_unused]] static void set_field_field_30078(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bI", "DAMAGE_SOURCE_TIMEOUT", "field_30078", "field_30078", "f_147178_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.LivingEntity#field_30075
    [[maybe_unused]] static jdouble get_field_field_30075() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "MIN_MOVEMENT_DISTANCE", "field_30075", "field_30075", "f_147172_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticDoubleField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.LivingEntity#field_30075
    [[maybe_unused]] static void set_field_field_30075(const jdouble &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "MIN_MOVEMENT_DISTANCE", "field_30075", "field_30075", "f_147172_"), "D");
        return MinecraftSDK::env->SetStaticDoubleField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.LivingEntity#GRAVITY
    [[maybe_unused]] static jdouble get_field_GRAVITY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "DEFAULT_BASE_GRAVITY", "field_30076", "GRAVITY", "f_147173_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticDoubleField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.LivingEntity#GRAVITY
    [[maybe_unused]] static void set_field_GRAVITY(const jdouble &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "DEFAULT_BASE_GRAVITY", "field_30076", "GRAVITY", "f_147173_"), "D");
        return MinecraftSDK::env->SetStaticDoubleField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.LivingEntity#DEATH_TICKS
    [[maybe_unused]] static jint get_field_DEATH_TICKS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "DEATH_DURATION", "field_30077", "DEATH_TICKS", "f_147174_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.LivingEntity#DEATH_TICKS
    [[maybe_unused]] static void set_field_DEATH_TICKS(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "DEATH_DURATION", "field_30077", "DEATH_TICKS", "f_147174_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.LivingEntity#field_30080
    [[maybe_unused]] static jint get_field_field_30080() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bJ", "TICKS_PER_ELYTRA_FREE_FALL_EVENT", "field_30080", "field_30080", "f_147180_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.LivingEntity#field_30080
    [[maybe_unused]] static void set_field_field_30080(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bJ", "TICKS_PER_ELYTRA_FREE_FALL_EVENT", "field_30080", "field_30080", "f_147180_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.LivingEntity#field_30081
    [[maybe_unused]] static jint get_field_field_30081() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bK", "FREE_FALL_EVENTS_PER_ELYTRA_BREAK", "field_30081", "field_30081", "f_147181_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.LivingEntity#field_30081
    [[maybe_unused]] static void set_field_field_30081(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bK", "FREE_FALL_EVENTS_PER_ELYTRA_BREAK", "field_30081", "field_30081", "f_147181_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.LivingEntity#field_30063
    [[maybe_unused]] static jint get_field_field_30063() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "USE_ITEM_INTERVAL", "field_30063", "field_30063", "f_147175_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.LivingEntity#field_30063
    [[maybe_unused]] static void set_field_field_30063(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "USE_ITEM_INTERVAL", "field_30063", "field_30063", "f_147175_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.LivingEntity#field_44874
    [[maybe_unused]] static jfloat get_field_field_44874() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "BASE_JUMP_POWER", "field_44874", "field_44874", "f_286963_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.LivingEntity#field_44874
    [[maybe_unused]] static void set_field_field_44874(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "BASE_JUMP_POWER", "field_44874", "field_44874", "f_286963_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.LivingEntity#MAX_ENTITY_VIEWING_DISTANCE
    [[maybe_unused]] static jdouble get_field_MAX_ENTITY_VIEWING_DISTANCE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bL", "MAX_LINE_OF_SIGHT_TEST_RANGE", "field_33908", "MAX_ENTITY_VIEWING_DISTANCE", "f_147182_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticDoubleField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.LivingEntity#MAX_ENTITY_VIEWING_DISTANCE
    [[maybe_unused]] static void set_field_MAX_ENTITY_VIEWING_DISTANCE(const jdouble &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bL", "MAX_LINE_OF_SIGHT_TEST_RANGE", "field_33908", "MAX_ENTITY_VIEWING_DISTANCE", "f_147182_"), "D");
        return MinecraftSDK::env->SetStaticDoubleField(clazz, fieldID, value);
    };

    // getter for static protected field net.minecraft.entity.LivingEntity#USING_ITEM_FLAG
    [[maybe_unused]] static jint get_field_USING_ITEM_FLAG() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "LIVING_ENTITY_FLAG_IS_USING", "field_30064", "USING_ITEM_FLAG", "f_147176_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static protected field net.minecraft.entity.LivingEntity#USING_ITEM_FLAG
    [[maybe_unused]] static void set_field_USING_ITEM_FLAG(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "LIVING_ENTITY_FLAG_IS_USING", "field_30064", "USING_ITEM_FLAG", "f_147176_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static protected field net.minecraft.entity.LivingEntity#OFF_HAND_ACTIVE_FLAG
    [[maybe_unused]] static jint get_field_OFF_HAND_ACTIVE_FLAG() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "LIVING_ENTITY_FLAG_OFF_HAND", "field_30065", "OFF_HAND_ACTIVE_FLAG", "f_147177_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static protected field net.minecraft.entity.LivingEntity#OFF_HAND_ACTIVE_FLAG
    [[maybe_unused]] static void set_field_OFF_HAND_ACTIVE_FLAG(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "LIVING_ENTITY_FLAG_OFF_HAND", "field_30065", "OFF_HAND_ACTIVE_FLAG", "f_147177_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static protected field net.minecraft.entity.LivingEntity#USING_RIPTIDE_FLAG
    [[maybe_unused]] static jint get_field_USING_RIPTIDE_FLAG() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aD", "LIVING_ENTITY_FLAG_SPIN_ATTACK", "field_30066", "USING_RIPTIDE_FLAG", "f_147163_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static protected field net.minecraft.entity.LivingEntity#USING_RIPTIDE_FLAG
    [[maybe_unused]] static void set_field_USING_RIPTIDE_FLAG(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aD", "LIVING_ENTITY_FLAG_SPIN_ATTACK", "field_30066", "USING_RIPTIDE_FLAG", "f_147163_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static protected field net.minecraft.entity.LivingEntity#LIVING_FLAGS
    [[maybe_unused]] static jobject get_field_LIVING_FLAGS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aE", "DATA_LIVING_ENTITY_FLAGS", "field_6257", "LIVING_FLAGS", "f_20909_"), "Lajw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static protected field net.minecraft.entity.LivingEntity#LIVING_FLAGS
    [[maybe_unused]] static void set_field_LIVING_FLAGS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aE", "DATA_LIVING_ENTITY_FLAGS", "field_6257", "LIVING_FLAGS", "f_20909_"), "Lajw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.LivingEntity#HEALTH
    [[maybe_unused]] static jobject get_field_HEALTH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bM", "DATA_HEALTH_ID", "field_6247", "HEALTH", "f_20961_"), "Lajw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.LivingEntity#HEALTH
    [[maybe_unused]] static void set_field_HEALTH(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bM", "DATA_HEALTH_ID", "field_6247", "HEALTH", "f_20961_"), "Lajw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.LivingEntity#POTION_SWIRLS
    [[maybe_unused]] static jobject get_field_POTION_SWIRLS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bN", "DATA_EFFECT_PARTICLES", "field_49792", "POTION_SWIRLS", "f_314048_"), "Lajw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.LivingEntity#POTION_SWIRLS
    [[maybe_unused]] static void set_field_POTION_SWIRLS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bN", "DATA_EFFECT_PARTICLES", "field_49792", "POTION_SWIRLS", "f_314048_"), "Lajw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.LivingEntity#POTION_SWIRLS_AMBIENT
    [[maybe_unused]] static jobject get_field_POTION_SWIRLS_AMBIENT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bO", "DATA_EFFECT_AMBIENCE_ID", "field_6214", "POTION_SWIRLS_AMBIENT", "f_20963_"), "Lajw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.LivingEntity#POTION_SWIRLS_AMBIENT
    [[maybe_unused]] static void set_field_POTION_SWIRLS_AMBIENT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bO", "DATA_EFFECT_AMBIENCE_ID", "field_6214", "POTION_SWIRLS_AMBIENT", "f_20963_"), "Lajw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.LivingEntity#STUCK_ARROW_COUNT
    [[maybe_unused]] static jobject get_field_STUCK_ARROW_COUNT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bP", "DATA_ARROW_COUNT_ID", "field_6219", "STUCK_ARROW_COUNT", "f_20940_"), "Lajw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.LivingEntity#STUCK_ARROW_COUNT
    [[maybe_unused]] static void set_field_STUCK_ARROW_COUNT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bP", "DATA_ARROW_COUNT_ID", "field_6219", "STUCK_ARROW_COUNT", "f_20940_"), "Lajw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.LivingEntity#STINGER_COUNT
    [[maybe_unused]] static jobject get_field_STINGER_COUNT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bQ", "DATA_STINGER_COUNT_ID", "field_20348", "STINGER_COUNT", "f_20941_"), "Lajw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.LivingEntity#STINGER_COUNT
    [[maybe_unused]] static void set_field_STINGER_COUNT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bQ", "DATA_STINGER_COUNT_ID", "field_20348", "STINGER_COUNT", "f_20941_"), "Lajw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.LivingEntity#SLEEPING_POSITION
    [[maybe_unused]] static jobject get_field_SLEEPING_POSITION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bR", "SLEEPING_POS_ID", "field_18073", "SLEEPING_POSITION", "f_20942_"), "Lajw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.LivingEntity#SLEEPING_POSITION
    [[maybe_unused]] static void set_field_SLEEPING_POSITION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bR", "SLEEPING_POS_ID", "field_18073", "SLEEPING_POSITION", "f_20942_"), "Lajw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.LivingEntity#field_49793
    [[maybe_unused]] static jint get_field_field_49793() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bS", "PARTICLE_FREQUENCY_WHEN_INVISIBLE", "field_49793", "field_49793", "f_315520_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.LivingEntity#field_49793
    [[maybe_unused]] static void set_field_field_49793(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bS", "PARTICLE_FREQUENCY_WHEN_INVISIBLE", "field_49793", "field_49793", "f_315520_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static protected field net.minecraft.entity.LivingEntity#SLEEPING_DIMENSIONS
    [[maybe_unused]] static jobject get_field_SLEEPING_DIMENSIONS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aF", "SLEEPING_DIMENSIONS", "field_18072", "SLEEPING_DIMENSIONS", "f_20910_"), "Lbsu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static protected field net.minecraft.entity.LivingEntity#SLEEPING_DIMENSIONS
    [[maybe_unused]] static void set_field_SLEEPING_DIMENSIONS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aF", "SLEEPING_DIMENSIONS", "field_18072", "SLEEPING_DIMENSIONS", "f_20910_"), "Lbsu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.LivingEntity#BABY_SCALE_FACTOR
    [[maybe_unused]] static jfloat get_field_BABY_SCALE_FACTOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aG", "EXTRA_RENDER_CULLING_SIZE_WITH_BIG_HAT", "field_30068", "BABY_SCALE_FACTOR", "f_147165_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.LivingEntity#BABY_SCALE_FACTOR
    [[maybe_unused]] static void set_field_BABY_SCALE_FACTOR(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aG", "EXTRA_RENDER_CULLING_SIZE_WITH_BIG_HAT", "field_30068", "BABY_SCALE_FACTOR", "f_147165_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.LivingEntity#field_47756
    [[maybe_unused]] static jfloat get_field_field_47756() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aH", "DEFAULT_BABY_SCALE", "field_47756", "field_47756", "f_316528_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.LivingEntity#field_47756
    [[maybe_unused]] static void set_field_field_47756(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aH", "DEFAULT_BABY_SCALE", "field_47756", "field_47756", "f_316528_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.LivingEntity#field_49972
    [[maybe_unused]] static jfloat get_field_field_49972() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bT", "ITEM_USE_EFFECT_START_FRACTION", "field_49972", "field_49972", "f_316303_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.LivingEntity#field_49972
    [[maybe_unused]] static void set_field_field_49972(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bT", "ITEM_USE_EFFECT_START_FRACTION", "field_49972", "field_49972", "f_316303_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.LivingEntity#ATTRIBUTES_NBT_KEY
    [[maybe_unused]] static jobject get_field_ATTRIBUTES_NBT_KEY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aI", "ATTRIBUTES_FIELD", "field_51995", "ATTRIBUTES_NBT_KEY", "f_337042_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.LivingEntity#ATTRIBUTES_NBT_KEY
    [[maybe_unused]] static void set_field_ATTRIBUTES_NBT_KEY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aI", "ATTRIBUTES_FIELD", "field_51995", "ATTRIBUTES_NBT_KEY", "f_337042_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.entity.LivingEntity#attributes
    static jobject get_field_attributes(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bU", "attributes", "field_6260", "attributes", "f_20943_"), "Lbut;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.LivingEntity#attributes
    static void set_field_attributes(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bU", "attributes", "field_6260", "attributes", "f_20943_"), "Lbut;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.LivingEntity#damageTracker
    static jobject get_field_damageTracker(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bV", "combatTracker", "field_6256", "damageTracker", "f_20944_"), "Lbrh;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.LivingEntity#damageTracker
    static void set_field_damageTracker(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bV", "combatTracker", "field_6256", "damageTracker", "f_20944_"), "Lbrh;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.LivingEntity#activeStatusEffects
    static jobject get_field_activeStatusEffects(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bW", "activeEffects", "field_6280", "activeStatusEffects", "f_20945_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.LivingEntity#activeStatusEffects
    static void set_field_activeStatusEffects(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bW", "activeEffects", "field_6280", "activeStatusEffects", "f_20945_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.LivingEntity#syncedHandStacks
    static jobject get_field_syncedHandStacks(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bX", "lastHandItemStacks", "field_6234", "syncedHandStacks", "f_20946_"), "Ljv;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.LivingEntity#syncedHandStacks
    static void set_field_syncedHandStacks(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bX", "lastHandItemStacks", "field_6234", "syncedHandStacks", "f_20946_"), "Ljv;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.LivingEntity#syncedArmorStacks
    static jobject get_field_syncedArmorStacks(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bY", "lastArmorItemStacks", "field_6248", "syncedArmorStacks", "f_20947_"), "Ljv;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.LivingEntity#syncedArmorStacks
    static void set_field_syncedArmorStacks(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bY", "lastArmorItemStacks", "field_6248", "syncedArmorStacks", "f_20947_"), "Ljv;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.LivingEntity#syncedBodyArmorStack
    static jobject get_field_syncedBodyArmorStack(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bZ", "lastBodyItemStack", "field_48826", "syncedBodyArmorStack", "f_316156_"), "Lcuq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.LivingEntity#syncedBodyArmorStack
    static void set_field_syncedBodyArmorStack(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bZ", "lastBodyItemStack", "field_48826", "syncedBodyArmorStack", "f_316156_"), "Lcuq;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.entity.LivingEntity#handSwinging
    static jboolean get_field_handSwinging(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aJ", "swinging", "field_6252", "handSwinging", "f_20911_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static public field net.minecraft.entity.LivingEntity#handSwinging
    static void set_field_handSwinging(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aJ", "swinging", "field_6252", "handSwinging", "f_20911_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.LivingEntity#noDrag
    static jboolean get_field_noDrag(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ca", "discardFriction", "field_30082", "noDrag", "f_147183_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.LivingEntity#noDrag
    static void set_field_noDrag(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ca", "discardFriction", "field_30082", "noDrag", "f_147183_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.entity.LivingEntity#preferredHand
    static jobject get_field_preferredHand(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aK", "swingingArm", "field_6266", "preferredHand", "f_20912_"), "Lbqq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.entity.LivingEntity#preferredHand
    static void set_field_preferredHand(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aK", "swingingArm", "field_6266", "preferredHand", "f_20912_"), "Lbqq;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.entity.LivingEntity#handSwingTicks
    static jint get_field_handSwingTicks(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aL", "swingTime", "field_6279", "handSwingTicks", "f_20913_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static public field net.minecraft.entity.LivingEntity#handSwingTicks
    static void set_field_handSwingTicks(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aL", "swingTime", "field_6279", "handSwingTicks", "f_20913_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.entity.LivingEntity#stuckArrowTimer
    static jint get_field_stuckArrowTimer(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aM", "removeArrowTime", "field_6218", "stuckArrowTimer", "f_20914_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static public field net.minecraft.entity.LivingEntity#stuckArrowTimer
    static void set_field_stuckArrowTimer(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aM", "removeArrowTime", "field_6218", "stuckArrowTimer", "f_20914_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.entity.LivingEntity#stuckStingerTimer
    static jint get_field_stuckStingerTimer(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aN", "removeStingerTime", "field_20347", "stuckStingerTimer", "f_20915_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static public field net.minecraft.entity.LivingEntity#stuckStingerTimer
    static void set_field_stuckStingerTimer(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aN", "removeStingerTime", "field_20347", "stuckStingerTimer", "f_20915_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.entity.LivingEntity#hurtTime
    static jint get_field_hurtTime(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aO", "hurtTime", "field_6235", "hurtTime", "f_20916_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static public field net.minecraft.entity.LivingEntity#hurtTime
    static void set_field_hurtTime(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aO", "hurtTime", "field_6235", "hurtTime", "f_20916_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.entity.LivingEntity#maxHurtTime
    static jint get_field_maxHurtTime(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aP", "hurtDuration", "field_6254", "maxHurtTime", "f_20917_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static public field net.minecraft.entity.LivingEntity#maxHurtTime
    static void set_field_maxHurtTime(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aP", "hurtDuration", "field_6254", "maxHurtTime", "f_20917_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.entity.LivingEntity#deathTime
    static jint get_field_deathTime(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aQ", "deathTime", "field_6213", "deathTime", "f_20919_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static public field net.minecraft.entity.LivingEntity#deathTime
    static void set_field_deathTime(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aQ", "deathTime", "field_6213", "deathTime", "f_20919_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.entity.LivingEntity#lastHandSwingProgress
    static jfloat get_field_lastHandSwingProgress(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aR", "oAttackAnim", "field_6229", "lastHandSwingProgress", "f_20920_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static public field net.minecraft.entity.LivingEntity#lastHandSwingProgress
    static void set_field_lastHandSwingProgress(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aR", "oAttackAnim", "field_6229", "lastHandSwingProgress", "f_20920_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.entity.LivingEntity#handSwingProgress
    static jfloat get_field_handSwingProgress(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aS", "attackAnim", "field_6251", "handSwingProgress", "f_20921_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static public field net.minecraft.entity.LivingEntity#handSwingProgress
    static void set_field_handSwingProgress(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aS", "attackAnim", "field_6251", "handSwingProgress", "f_20921_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.entity.LivingEntity#lastAttackedTicks
    static jint get_field_lastAttackedTicks(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aT", "attackStrengthTicker", "field_6273", "lastAttackedTicks", "f_20922_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.entity.LivingEntity#lastAttackedTicks
    static void set_field_lastAttackedTicks(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aT", "attackStrengthTicker", "field_6273", "lastAttackedTicks", "f_20922_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.entity.LivingEntity#limbAnimator
    static jobject get_field_limbAnimator(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aU", "walkAnimation", "field_42108", "limbAnimator", "f_267362_"), "Lbup;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.entity.LivingEntity#limbAnimator
    static void set_field_limbAnimator(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aU", "walkAnimation", "field_42108", "limbAnimator", "f_267362_"), "Lbup;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.entity.LivingEntity#defaultMaxHealth
    static jint get_field_defaultMaxHealth(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aV", "invulnerableDuration", "field_6269", "defaultMaxHealth", "f_20926_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static public field net.minecraft.entity.LivingEntity#defaultMaxHealth
    static void set_field_defaultMaxHealth(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aV", "invulnerableDuration", "field_6269", "defaultMaxHealth", "f_20926_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.entity.LivingEntity#randomLargeSeed
    static jfloat get_field_randomLargeSeed(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aW", "timeOffs", "field_6244", "randomLargeSeed", "f_20927_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static public field net.minecraft.entity.LivingEntity#randomLargeSeed
    static void set_field_randomLargeSeed(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aW", "timeOffs", "field_6244", "randomLargeSeed", "f_20927_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.entity.LivingEntity#randomSmallSeed
    static jfloat get_field_randomSmallSeed(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aX", "rotA", "field_6262", "randomSmallSeed", "f_20928_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static public field net.minecraft.entity.LivingEntity#randomSmallSeed
    static void set_field_randomSmallSeed(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aX", "rotA", "field_6262", "randomSmallSeed", "f_20928_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.entity.LivingEntity#bodyYaw
    static jfloat get_field_bodyYaw(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aY", "yBodyRot", "field_6283", "bodyYaw", "f_20883_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static public field net.minecraft.entity.LivingEntity#bodyYaw
    static void set_field_bodyYaw(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aY", "yBodyRot", "field_6283", "bodyYaw", "f_20883_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.entity.LivingEntity#prevBodyYaw
    static jfloat get_field_prevBodyYaw(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aZ", "yBodyRotO", "field_6220", "prevBodyYaw", "f_20884_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static public field net.minecraft.entity.LivingEntity#prevBodyYaw
    static void set_field_prevBodyYaw(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aZ", "yBodyRotO", "field_6220", "prevBodyYaw", "f_20884_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.entity.LivingEntity#headYaw
    static jfloat get_field_headYaw(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ba", "yHeadRot", "field_6241", "headYaw", "f_20885_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static public field net.minecraft.entity.LivingEntity#headYaw
    static void set_field_headYaw(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ba", "yHeadRot", "field_6241", "headYaw", "f_20885_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.entity.LivingEntity#prevHeadYaw
    static jfloat get_field_prevHeadYaw(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bb", "yHeadRotO", "field_6259", "prevHeadYaw", "f_20886_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static public field net.minecraft.entity.LivingEntity#prevHeadYaw
    static void set_field_prevHeadYaw(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bb", "yHeadRotO", "field_6259", "prevHeadYaw", "f_20886_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.entity.LivingEntity#attackingPlayer
    static jobject get_field_attackingPlayer(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bc", "lastHurtByPlayer", "field_6258", "attackingPlayer", "f_20888_"), "Lcmx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.entity.LivingEntity#attackingPlayer
    static void set_field_attackingPlayer(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bc", "lastHurtByPlayer", "field_6258", "attackingPlayer", "f_20888_"), "Lcmx;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.entity.LivingEntity#playerHitTimer
    static jint get_field_playerHitTimer(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bd", "lastHurtByPlayerTime", "field_6238", "playerHitTimer", "f_20889_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.entity.LivingEntity#playerHitTimer
    static void set_field_playerHitTimer(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bd", "lastHurtByPlayerTime", "field_6238", "playerHitTimer", "f_20889_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.entity.LivingEntity#dead
    static jboolean get_field_dead(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("be", "dead", "field_6272", "dead", "f_20890_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.entity.LivingEntity#dead
    static void set_field_dead(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("be", "dead", "field_6272", "dead", "f_20890_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.entity.LivingEntity#despawnCounter
    static jint get_field_despawnCounter(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bf", "noActionTime", "field_6278", "despawnCounter", "f_20891_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.entity.LivingEntity#despawnCounter
    static void set_field_despawnCounter(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bf", "noActionTime", "field_6278", "despawnCounter", "f_20891_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.entity.LivingEntity#prevStepBobbingAmount
    static jfloat get_field_prevStepBobbingAmount(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bg", "oRun", "field_6217", "prevStepBobbingAmount", "f_20892_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.entity.LivingEntity#prevStepBobbingAmount
    static void set_field_prevStepBobbingAmount(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bg", "oRun", "field_6217", "prevStepBobbingAmount", "f_20892_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.entity.LivingEntity#stepBobbingAmount
    static jfloat get_field_stepBobbingAmount(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bh", "run", "field_6233", "stepBobbingAmount", "f_20893_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.entity.LivingEntity#stepBobbingAmount
    static void set_field_stepBobbingAmount(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bh", "run", "field_6233", "stepBobbingAmount", "f_20893_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.entity.LivingEntity#lookDirection
    static jfloat get_field_lookDirection(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bi", "animStep", "field_6255", "lookDirection", "f_20894_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.entity.LivingEntity#lookDirection
    static void set_field_lookDirection(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bi", "animStep", "field_6255", "lookDirection", "f_20894_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.entity.LivingEntity#prevLookDirection
    static jfloat get_field_prevLookDirection(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bj", "animStepO", "field_6275", "prevLookDirection", "f_20895_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.entity.LivingEntity#prevLookDirection
    static void set_field_prevLookDirection(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bj", "animStepO", "field_6275", "prevLookDirection", "f_20895_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.entity.LivingEntity#field_6215
    static jfloat get_field_field_6215(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bk", "rotOffs", "field_6215", "field_6215", "f_20896_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.entity.LivingEntity#field_6215
    static void set_field_field_6215(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bk", "rotOffs", "field_6215", "field_6215", "f_20896_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.entity.LivingEntity#scoreAmount
    static jint get_field_scoreAmount(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bl", "deathScore", "field_6232", "scoreAmount", "f_20897_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.entity.LivingEntity#scoreAmount
    static void set_field_scoreAmount(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bl", "deathScore", "field_6232", "scoreAmount", "f_20897_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.entity.LivingEntity#lastDamageTaken
    static jfloat get_field_lastDamageTaken(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bm", "lastHurt", "field_6253", "lastDamageTaken", "f_20898_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.entity.LivingEntity#lastDamageTaken
    static void set_field_lastDamageTaken(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bm", "lastHurt", "field_6253", "lastDamageTaken", "f_20898_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.entity.LivingEntity#jumping
    static jboolean get_field_jumping(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bn", "jumping", "field_6282", "jumping", "f_20899_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.entity.LivingEntity#jumping
    static void set_field_jumping(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bn", "jumping", "field_6282", "jumping", "f_20899_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.entity.LivingEntity#sidewaysSpeed
    static jfloat get_field_sidewaysSpeed(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bo", "xxa", "field_6212", "sidewaysSpeed", "f_20900_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static public field net.minecraft.entity.LivingEntity#sidewaysSpeed
    static void set_field_sidewaysSpeed(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bo", "xxa", "field_6212", "sidewaysSpeed", "f_20900_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.entity.LivingEntity#upwardSpeed
    static jfloat get_field_upwardSpeed(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bp", "yya", "field_6227", "upwardSpeed", "f_20901_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static public field net.minecraft.entity.LivingEntity#upwardSpeed
    static void set_field_upwardSpeed(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bp", "yya", "field_6227", "upwardSpeed", "f_20901_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.entity.LivingEntity#forwardSpeed
    static jfloat get_field_forwardSpeed(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bq", "zza", "field_6250", "forwardSpeed", "f_20902_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static public field net.minecraft.entity.LivingEntity#forwardSpeed
    static void set_field_forwardSpeed(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bq", "zza", "field_6250", "forwardSpeed", "f_20902_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.entity.LivingEntity#bodyTrackingIncrements
    static jint get_field_bodyTrackingIncrements(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("br", "lerpSteps", "field_6210", "bodyTrackingIncrements", "f_20903_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.entity.LivingEntity#bodyTrackingIncrements
    static void set_field_bodyTrackingIncrements(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("br", "lerpSteps", "field_6210", "bodyTrackingIncrements", "f_20903_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.entity.LivingEntity#serverX
    static jdouble get_field_serverX(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bs", "lerpX", "field_6224", "serverX", "f_20904_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetDoubleField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.entity.LivingEntity#serverX
    static void set_field_serverX(const jobject &obj, const jdouble &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bs", "lerpX", "field_6224", "serverX", "f_20904_"), "D");
        return MinecraftSDK::env->SetDoubleField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.entity.LivingEntity#serverY
    static jdouble get_field_serverY(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bt", "lerpY", "field_6245", "serverY", "f_20905_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetDoubleField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.entity.LivingEntity#serverY
    static void set_field_serverY(const jobject &obj, const jdouble &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bt", "lerpY", "field_6245", "serverY", "f_20905_"), "D");
        return MinecraftSDK::env->SetDoubleField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.entity.LivingEntity#serverZ
    static jdouble get_field_serverZ(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bu", "lerpZ", "field_6263", "serverZ", "f_20906_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetDoubleField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.entity.LivingEntity#serverZ
    static void set_field_serverZ(const jobject &obj, const jdouble &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bu", "lerpZ", "field_6263", "serverZ", "f_20906_"), "D");
        return MinecraftSDK::env->SetDoubleField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.entity.LivingEntity#serverYaw
    static jdouble get_field_serverYaw(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bv", "lerpYRot", "field_6284", "serverYaw", "f_20907_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetDoubleField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.entity.LivingEntity#serverYaw
    static void set_field_serverYaw(const jobject &obj, const jdouble &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bv", "lerpYRot", "field_6284", "serverYaw", "f_20907_"), "D");
        return MinecraftSDK::env->SetDoubleField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.entity.LivingEntity#serverPitch
    static jdouble get_field_serverPitch(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bw", "lerpXRot", "field_6221", "serverPitch", "f_20908_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetDoubleField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.entity.LivingEntity#serverPitch
    static void set_field_serverPitch(const jobject &obj, const jdouble &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bw", "lerpXRot", "field_6221", "serverPitch", "f_20908_"), "D");
        return MinecraftSDK::env->SetDoubleField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.entity.LivingEntity#serverHeadYaw
    static jdouble get_field_serverHeadYaw(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bx", "lerpYHeadRot", "field_45123", "serverHeadYaw", "f_291034_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetDoubleField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.entity.LivingEntity#serverHeadYaw
    static void set_field_serverHeadYaw(const jobject &obj, const jdouble &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bx", "lerpYHeadRot", "field_45123", "serverHeadYaw", "f_291034_"), "D");
        return MinecraftSDK::env->SetDoubleField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.entity.LivingEntity#headTrackingIncrements
    static jint get_field_headTrackingIncrements(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("by", "lerpHeadSteps", "field_6265", "headTrackingIncrements", "f_20934_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.entity.LivingEntity#headTrackingIncrements
    static void set_field_headTrackingIncrements(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("by", "lerpHeadSteps", "field_6265", "headTrackingIncrements", "f_20934_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.LivingEntity#effectsChanged
    static jboolean get_field_effectsChanged(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cb", "effectsDirty", "field_6285", "effectsChanged", "f_20948_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.LivingEntity#effectsChanged
    static void set_field_effectsChanged(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cb", "effectsDirty", "field_6285", "effectsChanged", "f_20948_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.LivingEntity#attacker
    static jobject get_field_attacker(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cc", "lastHurtByMob", "field_6274", "attacker", "f_20949_"), "Lbtn;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.LivingEntity#attacker
    static void set_field_attacker(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cc", "lastHurtByMob", "field_6274", "attacker", "f_20949_"), "Lbtn;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.LivingEntity#lastAttackedTime
    static jint get_field_lastAttackedTime(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cd", "lastHurtByMobTimestamp", "field_6230", "lastAttackedTime", "f_20950_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.LivingEntity#lastAttackedTime
    static void set_field_lastAttackedTime(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cd", "lastHurtByMobTimestamp", "field_6230", "lastAttackedTime", "f_20950_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.LivingEntity#attacking
    static jobject get_field_attacking(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ce", "lastHurtMob", "field_6236", "attacking", "f_20951_"), "Lbtn;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.LivingEntity#attacking
    static void set_field_attacking(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ce", "lastHurtMob", "field_6236", "attacking", "f_20951_"), "Lbtn;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.LivingEntity#lastAttackTime
    static jint get_field_lastAttackTime(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cf", "lastHurtMobTimestamp", "field_6270", "lastAttackTime", "f_20952_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.LivingEntity#lastAttackTime
    static void set_field_lastAttackTime(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cf", "lastHurtMobTimestamp", "field_6270", "lastAttackTime", "f_20952_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.LivingEntity#movementSpeed
    static jfloat get_field_movementSpeed(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cg", "speed", "field_6287", "movementSpeed", "f_20953_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.LivingEntity#movementSpeed
    static void set_field_movementSpeed(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cg", "speed", "field_6287", "movementSpeed", "f_20953_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.LivingEntity#jumpingCooldown
    static jint get_field_jumpingCooldown(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ch", "noJumpDelay", "field_6228", "jumpingCooldown", "f_20954_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.LivingEntity#jumpingCooldown
    static void set_field_jumpingCooldown(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ch", "noJumpDelay", "field_6228", "jumpingCooldown", "f_20954_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.LivingEntity#absorptionAmount
    static jfloat get_field_absorptionAmount(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ci", "absorptionAmount", "field_6246", "absorptionAmount", "f_20955_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.LivingEntity#absorptionAmount
    static void set_field_absorptionAmount(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ci", "absorptionAmount", "field_6246", "absorptionAmount", "f_20955_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.entity.LivingEntity#activeItemStack
    static jobject get_field_activeItemStack(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bz", "useItem", "field_6277", "activeItemStack", "f_20935_"), "Lcuq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.entity.LivingEntity#activeItemStack
    static void set_field_activeItemStack(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bz", "useItem", "field_6277", "activeItemStack", "f_20935_"), "Lcuq;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.entity.LivingEntity#itemUseTimeLeft
    static jint get_field_itemUseTimeLeft(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bA", "useItemRemaining", "field_6222", "itemUseTimeLeft", "f_20936_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.entity.LivingEntity#itemUseTimeLeft
    static void set_field_itemUseTimeLeft(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bA", "useItemRemaining", "field_6222", "itemUseTimeLeft", "f_20936_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.entity.LivingEntity#fallFlyingTicks
    static jint get_field_fallFlyingTicks(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bB", "fallFlyTicks", "field_6239", "fallFlyingTicks", "f_20937_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.entity.LivingEntity#fallFlyingTicks
    static void set_field_fallFlyingTicks(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bB", "fallFlyTicks", "field_6239", "fallFlyingTicks", "f_20937_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.LivingEntity#lastBlockPos
    static jobject get_field_lastBlockPos(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cj", "lastPos", "field_6268", "lastBlockPos", "f_20956_"), "Ljd;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.LivingEntity#lastBlockPos
    static void set_field_lastBlockPos(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cj", "lastPos", "field_6268", "lastBlockPos", "f_20956_"), "Ljd;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.LivingEntity#climbingPos
    static jobject get_field_climbingPos(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ck", "lastClimbablePos", "field_22418", "climbingPos", "f_20957_"), "Ljava/util/Optional;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.LivingEntity#climbingPos
    static void set_field_climbingPos(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ck", "lastClimbablePos", "field_22418", "climbingPos", "f_20957_"), "Ljava/util/Optional;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.LivingEntity#lastDamageSource
    static jobject get_field_lastDamageSource(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cl", "lastDamageSource", "field_6276", "lastDamageSource", "f_20958_"), "Lbrk;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.LivingEntity#lastDamageSource
    static void set_field_lastDamageSource(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cl", "lastDamageSource", "field_6276", "lastDamageSource", "f_20958_"), "Lbrk;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.LivingEntity#lastDamageTime
    static jlong get_field_lastDamageTime(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cm", "lastDamageStamp", "field_6226", "lastDamageTime", "f_20930_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.LivingEntity#lastDamageTime
    static void set_field_lastDamageTime(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cm", "lastDamageStamp", "field_6226", "lastDamageTime", "f_20930_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.entity.LivingEntity#riptideTicks
    static jint get_field_riptideTicks(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bC", "autoSpinAttackTicks", "field_6261", "riptideTicks", "f_20938_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.entity.LivingEntity#riptideTicks
    static void set_field_riptideTicks(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bC", "autoSpinAttackTicks", "field_6261", "riptideTicks", "f_20938_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.entity.LivingEntity#riptideAttackDamage
    static jfloat get_field_riptideAttackDamage(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bD", "autoSpinAttackDmg", "field_51569", "riptideAttackDamage", "f_336815_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.entity.LivingEntity#riptideAttackDamage
    static void set_field_riptideAttackDamage(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bD", "autoSpinAttackDmg", "field_51569", "riptideAttackDamage", "f_336815_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.entity.LivingEntity#riptideStack
    static jobject get_field_riptideStack(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bE", "autoSpinAttackItemStack", "field_51570", "riptideStack", "f_337007_"), "Lcuq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.entity.LivingEntity#riptideStack
    static void set_field_riptideStack(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bE", "autoSpinAttackItemStack", "field_51570", "riptideStack", "f_337007_"), "Lcuq;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.LivingEntity#leaningPitch
    static jfloat get_field_leaningPitch(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cn", "swimAmount", "field_6243", "leaningPitch", "f_20931_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.LivingEntity#leaningPitch
    static void set_field_leaningPitch(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cn", "swimAmount", "field_6243", "leaningPitch", "f_20931_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.LivingEntity#lastLeaningPitch
    static jfloat get_field_lastLeaningPitch(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("co", "swimAmountO", "field_6264", "lastLeaningPitch", "f_20932_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.LivingEntity#lastLeaningPitch
    static void set_field_lastLeaningPitch(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("co", "swimAmountO", "field_6264", "lastLeaningPitch", "f_20932_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.entity.LivingEntity#brain
    static jobject get_field_brain(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bF", "brain", "field_18321", "brain", "f_20939_"), "Lbuq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.entity.LivingEntity#brain
    static void set_field_brain(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bF", "brain", "field_18321", "brain", "f_20939_"), "Lbuq;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.LivingEntity#experienceDroppingDisabled
    static jboolean get_field_experienceDroppingDisabled(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cp", "skipDropExperience", "field_37421", "experienceDroppingDisabled", "f_217034_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.LivingEntity#experienceDroppingDisabled
    static void set_field_experienceDroppingDisabled(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cp", "skipDropExperience", "field_37421", "experienceDroppingDisabled", "f_217034_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.LivingEntity#locationBasedEnchantmentEffects
    static jobject get_field_locationBasedEnchantmentEffects(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cq", "activeLocationDependentEnchantments", "field_51571", "locationBasedEnchantmentEffects", "f_337389_"), "Lit/unimi/dsi/fastutil/objects/Reference2ObjectMap;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.LivingEntity#locationBasedEnchantmentEffects
    static void set_field_locationBasedEnchantmentEffects(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cq", "activeLocationDependentEnchantments", "field_51571", "locationBasedEnchantmentEffects", "f_337389_"), "Lit/unimi/dsi/fastutil/objects/Reference2ObjectMap;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.entity.LivingEntity#prevScale
    static jfloat get_field_prevScale(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bG", "appliedScale", "field_47757", "prevScale", "f_315093_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.entity.LivingEntity#prevScale
    static void set_field_prevScale(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bG", "appliedScale", "field_47757", "prevScale", "f_315093_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    static jmethodID methodID_getBrain() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("dT", "getBrain", "method_18868", "getBrain", "m_6274_"), "()Lbuq;");
    }

    static jobject getBrain(const jobject& obj) {
                
       const auto methodID = methodID_getBrain();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_createBrainProfile() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("dU", "brainProvider", "method_28306", "createBrainProfile", "m_5490_"), "()Lbuq$b;");
    }

    static jobject createBrainProfile(const jobject& obj) {
                
       const auto methodID = methodID_createBrainProfile();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_deserializeBrain() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "makeBrain", "method_18867", "deserializeBrain", "m_8075_"), "(Lcom/mojang/serialization/Dynamic;)Lbuq;");
    }

    static jobject deserializeBrain(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_deserializeBrain();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_kill() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ap", "kill", "method_5768", "kill", "m_6074_"), "()V");
    }

    static void kill(const jobject& obj) {
                
       const auto methodID = methodID_kill();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_canTarget() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "canAttackType", "method_5973", "canTarget", "m_6549_"), "(Lbsx;)Z");
    }

    static jboolean canTarget(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_canTarget();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_initDataTracker() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "defineSynchedData", "method_5693", "initDataTracker", "m_8097_"), "(Laka$a;)V");
    }

    static void initDataTracker(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_initDataTracker();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_createLivingAttributes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("dV", "createLivingAttributes", "method_26827", "createLivingAttributes", "m_21183_"), "()Lbuv$a;");
    }

    static jobject createLivingAttributes() {
       const auto clazz = self();
       const auto methodID = methodID_createLivingAttributes();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_fall() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "checkFallDamage", "method_5623", "fall", "m_7840_"), "(DZLdtc;Ljd;)V");
    }

    static void fall(const jobject& obj, const jdouble& arg0, const jboolean& arg1, const jobject& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_fall();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_canBreatheInWater() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("dW", "canBreatheUnderwater", "method_6094", "canBreatheInWater", "m_6040_"), "()Z");
    }

    static jboolean canBreatheInWater(const jobject& obj) {
                
       const auto methodID = methodID_canBreatheInWater();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getLeaningPitch() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getSwimAmount", "method_6024", "getLeaningPitch", "m_20998_"), "(F)F");
    }

    static jfloat getLeaningPitch(const jobject& obj, const jfloat& arg0) {
                
       const auto methodID = methodID_getLeaningPitch();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_hasLandedInFluid() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("dX", "hasLandedInLiquid", "method_59925", "hasLandedInFluid", "m_339712_"), "()Z");
    }

    static jboolean hasLandedInFluid(const jobject& obj) {
                
       const auto methodID = methodID_hasLandedInFluid();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_baseTick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aw", "baseTick", "method_5670", "baseTick", "m_6075_"), "()V");
    }

    static void baseTick(const jobject& obj) {
                
       const auto methodID = methodID_baseTick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getVelocityMultiplier() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aO", "getBlockSpeedFactor", "method_23326", "getVelocityMultiplier", "m_6041_"), "()F");
    }

    static jfloat getVelocityMultiplier(const jobject& obj) {
                
       const auto methodID = methodID_getVelocityMultiplier();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID_removePowderSnowSlow() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("dY", "removeFrost", "method_32324", "removePowderSnowSlow", "m_147225_"), "()V");
    }

    static void removePowderSnowSlow(const jobject& obj) {
                
       const auto methodID = methodID_removePowderSnowSlow();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_addPowderSnowSlowIfNeeded() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("dZ", "tryAddFrost", "method_32325", "addPowderSnowSlowIfNeeded", "m_147226_"), "()V");
    }

    static void addPowderSnowSlowIfNeeded(const jobject& obj) {
                
       const auto methodID = methodID_addPowderSnowSlowIfNeeded();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_applyMovementEffects() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "onChangedBlock", "method_6126", "applyMovementEffects", "m_5806_"), "(Laqu;Ljd;)V");
    }

    static void applyMovementEffects(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_applyMovementEffects();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_isBaby() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("o_", "isBaby", "method_6109", "isBaby", "m_6162_"), "()Z");
    }

    static jboolean isBaby(const jobject& obj) {
                
       const auto methodID = methodID_isBaby();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getScaleFactor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ea", "getAgeScale", "method_17825", "getScaleFactor", "m_320705_"), "()F");
    }

    static jfloat getScaleFactor(const jobject& obj) {
                
       const auto methodID = methodID_getScaleFactor();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID_getScale() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("eb", "getScale", "method_55693", "getScale", "m_6134_"), "()F");
    }

    static jfloat getScale(const jobject& obj) {
                
       const auto methodID = methodID_getScale();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID_clampScale() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "sanitizeScale", "method_56077", "clampScale", "m_319572_"), "(F)F");
    }

    static jfloat clampScale(const jobject& obj, const jfloat& arg0) {
                
       const auto methodID = methodID_clampScale();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_shouldSwimInFluids() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ec", "isAffectedByFluids", "method_29920", "shouldSwimInFluids", "m_6129_"), "()Z");
    }

    static jboolean shouldSwimInFluids(const jobject& obj) {
                
       const auto methodID = methodID_shouldSwimInFluids();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_updatePostDeath() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ed", "tickDeath", "method_6108", "updatePostDeath", "m_6153_"), "()V");
    }

    static void updatePostDeath(const jobject& obj) {
                
       const auto methodID = methodID_updatePostDeath();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_shouldDropXp() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ee", "shouldDropExperience", "method_6054", "shouldDropXp", "m_6149_"), "()Z");
    }

    static jboolean shouldDropXp(const jobject& obj) {
                
       const auto methodID = methodID_shouldDropXp();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_shouldDropLoot() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ef", "shouldDropLoot", "method_27071", "shouldDropLoot", "m_6125_"), "()Z");
    }

    static jboolean shouldDropLoot(const jobject& obj) {
                
       const auto methodID = methodID_shouldDropLoot();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getNextAirUnderwater() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("m", "decreaseAirSupply", "method_6130", "getNextAirUnderwater", "m_7302_"), "(I)I");
    }

    static jint getNextAirUnderwater(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_getNextAirUnderwater();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getNextAirOnLand() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("n", "increaseAirSupply", "method_6064", "getNextAirOnLand", "m_7305_"), "(I)I");
    }

    static jint getNextAirOnLand(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_getNextAirOnLand();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getXpToDrop() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getExperienceReward", "method_59923", "getXpToDrop", "m_339042_"), "(Laqu;Lbsr;)I");
    }

    static jint getXpToDrop(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_getXpToDrop();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__getXpToDrop() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("eg", "getBaseExperienceReward", "method_6110", "getXpToDrop", "m_213860_"), "()I");
    }

    static jint _getXpToDrop(const jobject& obj) {
                
       const auto methodID = methodID__getXpToDrop();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_shouldAlwaysDropXp() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("eh", "isAlwaysExperienceDropper", "method_6071", "shouldAlwaysDropXp", "m_6124_"), "()Z");
    }

    static jboolean shouldAlwaysDropXp(const jobject& obj) {
                
       const auto methodID = methodID_shouldAlwaysDropXp();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getAttacker() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ei", "getLastHurtByMob", "method_6065", "getAttacker", "m_21188_"), "()Lbtn;");
    }

    static jobject getAttacker(const jobject& obj) {
                
       const auto methodID = methodID_getAttacker();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getLastAttacker() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("Y_", "getLastAttacker", "method_49107", "getLastAttacker", "m_271686_"), "()Lbtn;");
    }

    static jobject getLastAttacker(const jobject& obj) {
                
       const auto methodID = methodID_getLastAttacker();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getLastAttackedTime() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ej", "getLastHurtByMobTimestamp", "method_6117", "getLastAttackedTime", "m_21213_"), "()I");
    }

    static jint getLastAttackedTime(const jobject& obj) {
                
       const auto methodID = methodID_getLastAttackedTime();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_setAttacking() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "setLastHurtByPlayer", "method_29505", "setAttacking", "m_6598_"), "(Lcmx;)V");
    }

    static void setAttacking(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setAttacking();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setAttacker() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setLastHurtByMob", "method_6015", "setAttacker", "m_6703_"), "(Lbtn;)V");
    }

    static void setAttacker(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setAttacker();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getAttacking() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ek", "getLastHurtMob", "method_6052", "getAttacking", "m_21214_"), "()Lbtn;");
    }

    static jobject getAttacking(const jobject& obj) {
                
       const auto methodID = methodID_getAttacking();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getLastAttackTime() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("el", "getLastHurtMobTimestamp", "method_6083", "getLastAttackTime", "m_21215_"), "()I");
    }

    static jint getLastAttackTime(const jobject& obj) {
                
       const auto methodID = methodID_getLastAttackTime();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_onAttacking() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("A", "setLastHurtMob", "method_6114", "onAttacking", "m_21335_"), "(Lbsr;)V");
    }

    static void onAttacking(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onAttacking();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getDespawnCounter() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("em", "getNoActionTime", "method_6131", "getDespawnCounter", "m_21216_"), "()I");
    }

    static jint getDespawnCounter(const jobject& obj) {
                
       const auto methodID = methodID_getDespawnCounter();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_setDespawnCounter() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("o", "setNoActionTime", "method_16826", "setDespawnCounter", "m_21310_"), "(I)V");
    }

    static void setDespawnCounter(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_setDespawnCounter();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_hasNoDrag() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("en", "shouldDiscardFriction", "method_35053", "hasNoDrag", "m_147223_"), "()Z");
    }

    static jboolean hasNoDrag(const jobject& obj) {
                
       const auto methodID = methodID_hasNoDrag();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_setNoDrag() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("r", "setDiscardFriction", "method_35054", "setNoDrag", "m_147244_"), "(Z)V");
    }

    static void setNoDrag(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setNoDrag();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isArmorSlot() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "doesEmitEquipEvent", "method_44201", "isArmorSlot", "m_213772_"), "(Lbsy;)Z");
    }

    static jboolean isArmorSlot(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_isArmorSlot();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_onEquipStack() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "onEquipItem", "method_6116", "onEquipStack", "m_238392_"), "(Lbsy;Lcuq;Lcuq;)V");
    }

    static void onEquipStack(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_onEquipStack();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_remove() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "remove", "method_5650", "remove", "m_142687_"), "(Lbsr$c;)V");
    }

    static void remove(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_remove();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_onRemoval() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "triggerOnDeathMobEffects", "method_60699", "onRemoval", "m_339636_"), "(Lbsr$c;)V");
    }

    static void onRemoval(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onRemoval();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_writeCustomDataToNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "addAdditionalSaveData", "method_5652", "writeCustomDataToNbt", "m_7380_"), "(Lub;)V");
    }

    static void writeCustomDataToNbt(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_writeCustomDataToNbt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_readCustomDataFromNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "readAdditionalSaveData", "method_5749", "readCustomDataFromNbt", "m_7378_"), "(Lub;)V");
    }

    static void readCustomDataFromNbt(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_readCustomDataFromNbt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_tickStatusEffects() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("eo", "tickEffects", "method_6050", "tickStatusEffects", "m_21217_"), "()V");
    }

    static void tickStatusEffects(const jobject& obj) {
                
       const auto methodID = methodID_tickStatusEffects();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_updatePotionVisibility() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("K", "updateInvisibilityStatus", "method_6027", "updatePotionVisibility", "m_8034_"), "()V");
    }

    static void updatePotionVisibility(const jobject& obj) {
                
       const auto methodID = methodID_updatePotionVisibility();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_updatePotionSwirls() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("s", "updateSynchronizedMobEffectParticles", "method_58150", "updatePotionSwirls", "m_323815_"), "()V");
    }

    static void updatePotionSwirls(const jobject& obj) {
                
       const auto methodID = methodID_updatePotionSwirls();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_updateGlowing() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("v", "updateGlowingStatus", "method_36362", "updateGlowing", "m_147239_"), "()V");
    }

    static void updateGlowing(const jobject& obj) {
                
       const auto methodID = methodID_updateGlowing();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getAttackDistanceScalingFactor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("B", "getVisibilityPercent", "method_18390", "getAttackDistanceScalingFactor", "m_20968_"), "(Lbsr;)D");
    }

    static jdouble getAttackDistanceScalingFactor(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getAttackDistanceScalingFactor();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__canTarget() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "canAttack", "method_18395", "canTarget", "m_6779_"), "(Lbtn;)Z");
    }

    static jboolean _canTarget(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__canTarget();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isTarget() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "canAttack", "method_18391", "isTarget", "m_21040_"), "(Lbtn;Lcef;)Z");
    }

    static jboolean isTarget(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_isTarget();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_canTakeDamage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ep", "canBeSeenAsEnemy", "method_33190", "canTakeDamage", "m_142066_"), "()Z");
    }

    static jboolean canTakeDamage(const jobject& obj) {
                
       const auto methodID = methodID_canTakeDamage();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isPartOfGame() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("eq", "canBeSeenByAnyone", "method_36608", "isPartOfGame", "m_142065_"), "()Z");
    }

    static jboolean isPartOfGame(const jobject& obj) {
                
       const auto methodID = methodID_isPartOfGame();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_containsOnlyAmbientEffects() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "areAllEffectsAmbient", "method_6089", "containsOnlyAmbientEffects", "m_21179_"), "(Ljava/util/Collection;)Z");
    }

    static jboolean containsOnlyAmbientEffects(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_containsOnlyAmbientEffects();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_clearPotionSwirls() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("er", "removeEffectParticles", "method_6069", "clearPotionSwirls", "m_21218_"), "()V");
    }

    static void clearPotionSwirls(const jobject& obj) {
                
       const auto methodID = methodID_clearPotionSwirls();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_clearStatusEffects() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("es", "removeAllEffects", "method_6012", "clearStatusEffects", "m_21219_"), "()Z");
    }

    static jboolean clearStatusEffects(const jobject& obj) {
                
       const auto methodID = methodID_clearStatusEffects();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getStatusEffects() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("et", "getActiveEffects", "method_6026", "getStatusEffects", "m_21220_"), "()Ljava/util/Collection;");
    }

    static jobject getStatusEffects(const jobject& obj) {
                
       const auto methodID = methodID_getStatusEffects();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getActiveStatusEffects() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("eu", "getActiveEffectsMap", "method_6088", "getActiveStatusEffects", "m_21221_"), "()Ljava/util/Map;");
    }

    static jobject getActiveStatusEffects(const jobject& obj) {
                
       const auto methodID = methodID_getActiveStatusEffects();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_hasStatusEffect() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "hasEffect", "method_6059", "hasStatusEffect", "m_21023_"), "(Ljm;)Z");
    }

    static jboolean hasStatusEffect(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_hasStatusEffect();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getStatusEffect() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getEffect", "method_6112", "getStatusEffect", "m_21124_"), "(Ljm;)Lbrz;");
    }

    static jobject getStatusEffect(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getStatusEffect();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_addStatusEffect() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "addEffect", "method_6092", "addStatusEffect", "m_7292_"), "(Lbrz;)Z");
    }

    static jboolean addStatusEffect(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_addStatusEffect();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__addStatusEffect() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "addEffect", "method_37222", "addStatusEffect", "m_147207_"), "(Lbrz;Lbsr;)Z");
    }

    static jboolean _addStatusEffect(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID__addStatusEffect();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_canHaveStatusEffect() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "canBeAffected", "method_6049", "canHaveStatusEffect", "m_7301_"), "(Lbrz;)Z");
    }

    static jboolean canHaveStatusEffect(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_canHaveStatusEffect();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setStatusEffect() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "forceAddEffect", "method_26082", "setStatusEffect", "m_147215_"), "(Lbrz;Lbsr;)V");
    }

    static void setStatusEffect(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_setStatusEffect();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_hasInvertedHealingAndHarm() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ev", "isInvertedHealAndHarm", "method_5999", "hasInvertedHealingAndHarm", "m_21222_"), "()Z");
    }

    static jboolean hasInvertedHealingAndHarm(const jobject& obj) {
                
       const auto methodID = methodID_hasInvertedHealingAndHarm();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_removeStatusEffectInternal() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "removeEffectNoUpdate", "method_6111", "removeStatusEffectInternal", "m_6234_"), "(Ljm;)Lbrz;");
    }

    static jobject removeStatusEffectInternal(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_removeStatusEffectInternal();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_removeStatusEffect() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "removeEffect", "method_6016", "removeStatusEffect", "m_21195_"), "(Ljm;)Z");
    }

    static jboolean removeStatusEffect(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_removeStatusEffect();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_onStatusEffectApplied() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "onEffectAdded", "method_6020", "onStatusEffectApplied", "m_142540_"), "(Lbrz;Lbsr;)V");
    }

    static void onStatusEffectApplied(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_onStatusEffectApplied();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_sendEffectToControllingPlayer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "sendEffectToPassengers", "method_52197", "sendEffectToControllingPlayer", "m_289605_"), "(Lbrz;)V");
    }

    static void sendEffectToControllingPlayer(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_sendEffectToControllingPlayer();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_onStatusEffectUpgraded() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "onEffectUpdated", "method_6009", "onStatusEffectUpgraded", "m_141973_"), "(Lbrz;ZLbsr;)V");
    }

    static void onStatusEffectUpgraded(const jobject& obj, const jobject& arg0, const jboolean& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_onStatusEffectUpgraded();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_onStatusEffectRemoved() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "onEffectRemoved", "method_6129", "onStatusEffectRemoved", "m_7285_"), "(Lbrz;)V");
    }

    static void onStatusEffectRemoved(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onStatusEffectRemoved();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_updateAttributes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("B", "refreshDirtyAttributes", "method_52543", "updateAttributes", "m_292733_"), "()V");
    }

    static void updateAttributes(const jobject& obj) {
                
       const auto methodID = methodID_updateAttributes();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_updateAttribute() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("i", "onAttributeUpdated", "method_52540", "updateAttribute", "m_292989_"), "(Ljm;)V");
    }

    static void updateAttribute(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_updateAttribute();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_heal() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "heal", "method_6025", "heal", "m_5634_"), "(F)V");
    }

    static void heal(const jobject& obj, const jfloat& arg0) {
                
       const auto methodID = methodID_heal();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getHealth() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ew", "getHealth", "method_6032", "getHealth", "m_21223_"), "()F");
    }

    static jfloat getHealth(const jobject& obj) {
                
       const auto methodID = methodID_getHealth();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID_setHealth() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("v", "setHealth", "method_6033", "setHealth", "m_21153_"), "(F)V");
    }

    static void setHealth(const jobject& obj, const jfloat& arg0) {
                
       const auto methodID = methodID_setHealth();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isDead() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ex", "isDeadOrDying", "method_29504", "isDead", "m_21224_"), "()Z");
    }

    static jboolean isDead(const jobject& obj) {
                
       const auto methodID = methodID_isDead();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_damage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "hurt", "method_5643", "damage", "m_6469_"), "(Lbrk;F)Z");
    }

    static jboolean damage(const jobject& obj, const jobject& arg0, const jfloat& arg1) {
                
       const auto methodID = methodID_damage();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_takeShieldHit() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "blockUsingShield", "method_6090", "takeShieldHit", "m_6728_"), "(Lbtn;)V");
    }

    static void takeShieldHit(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_takeShieldHit();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_knockback() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "blockedByShield", "method_6060", "knockback", "m_6731_"), "(Lbtn;)V");
    }

    static void knockback(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_knockback();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_tryUseTotem() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "checkTotemDeathProtection", "method_6095", "tryUseTotem", "m_21262_"), "(Lbrk;)Z");
    }

    static jboolean tryUseTotem(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_tryUseTotem();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getRecentDamageSource() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ey", "getLastDamageSource", "method_6081", "getRecentDamageSource", "m_21225_"), "()Lbrk;");
    }

    static jobject getRecentDamageSource(const jobject& obj) {
                
       const auto methodID = methodID_getRecentDamageSource();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_playHurtSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "playHurtSound", "method_6013", "playHurtSound", "m_6677_"), "(Lbrk;)V");
    }

    static void playHurtSound(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_playHurtSound();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_playSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "makeSound", "method_56078", "playSound", "m_323137_"), "(Lavo;)V");
    }

    static void playSound(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_playSound();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_blockedByShield() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "isDamageSourceBlocked", "method_6061", "blockedByShield", "m_21275_"), "(Lbrk;)Z");
    }

    static jboolean blockedByShield(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_blockedByShield();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_playEquipmentBreakEffects() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("i", "breakItem", "method_6045", "playEquipmentBreakEffects", "m_21278_"), "(Lcuq;)V");
    }

    static void playEquipmentBreakEffects(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_playEquipmentBreakEffects();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_onDeath() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "die", "method_6078", "onDeath", "m_6667_"), "(Lbrk;)V");
    }

    static void onDeath(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onDeath();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_onKilledBy() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "createWitherRose", "method_23733", "onKilledBy", "m_21268_"), "(Lbtn;)V");
    }

    static void onKilledBy(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onKilledBy();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_drop() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "dropAllDeathLoot", "method_16080", "drop", "m_6668_"), "(Laqu;Lbrk;)V");
    }

    static void drop(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_drop();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_dropInventory() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ez", "dropEquipment", "method_16078", "dropInventory", "m_5907_"), "()V");
    }

    static void dropInventory(const jobject& obj) {
                
       const auto methodID = methodID_dropInventory();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_dropXp() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("C", "dropExperience", "method_23883", "dropXp", "m_21226_"), "(Lbsr;)V");
    }

    static void dropXp(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_dropXp();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_dropEquipment() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "dropCustomDeathLoot", "method_6099", "dropEquipment", "m_7472_"), "(Laqu;Lbrk;Z)V");
    }

    static void dropEquipment(const jobject& obj, const jobject& arg0, const jobject& arg1, const jboolean& arg2) {
                
       const auto methodID = methodID_dropEquipment();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_getLootTable() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("eA", "getLootTable", "method_5989", "getLootTable", "m_5743_"), "()Lakq;");
    }

    static jobject getLootTable(const jobject& obj) {
                
       const auto methodID = methodID_getLootTable();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getLootTableSeed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("eB", "getLootTableSeed", "method_51851", "getLootTableSeed", "m_287233_"), "()J");
    }

    static jlong getLootTableSeed(const jobject& obj) {
                
       const auto methodID = methodID_getLootTableSeed();
       return MinecraftSDK::env->CallLongMethod(obj, methodID);
    };
    
    static jmethodID methodID_getKnockbackAgainst() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getKnockback", "method_59924", "getKnockbackAgainst", "m_338419_"), "(Lbsr;Lbrk;)F");
    }

    static jfloat getKnockbackAgainst(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_getKnockbackAgainst();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_dropLoot() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "dropFromLootTable", "method_16077", "dropLoot", "m_7625_"), "(Lbrk;Z)V");
    }

    static void dropLoot(const jobject& obj, const jobject& arg0, const jboolean& arg1) {
                
       const auto methodID = methodID_dropLoot();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_takeKnockback() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("p", "knockback", "method_6005", "takeKnockback", "m_147240_"), "(DDD)V");
    }

    static void takeKnockback(const jobject& obj, const jdouble& arg0, const jdouble& arg1, const jdouble& arg2) {
                
       const auto methodID = methodID_takeKnockback();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_tiltScreen() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "indicateDamage", "method_48761", "tiltScreen", "m_269405_"), "(DD)V");
    }

    static void tiltScreen(const jobject& obj, const jdouble& arg0, const jdouble& arg1) {
                
       const auto methodID = methodID_tiltScreen();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getHurtSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getHurtSound", "method_6011", "getHurtSound", "m_7975_"), "(Lbrk;)Lavo;");
    }

    static jobject getHurtSound(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getHurtSound();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getDeathSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("n_", "getDeathSound", "method_6002", "getDeathSound", "m_5592_"), "()Lavo;");
    }

    static jobject getDeathSound(const jobject& obj) {
                
       const auto methodID = methodID_getDeathSound();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getFallSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("r", "getFallDamageSound", "method_6041", "getFallSound", "m_5896_"), "(I)Lavo;");
    }

    static jobject getFallSound(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_getFallSound();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_disableExperienceDropping() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("eC", "skipDropExperience", "method_41329", "disableExperienceDropping", "m_217045_"), "()V");
    }

    static void disableExperienceDropping(const jobject& obj) {
                
       const auto methodID = methodID_disableExperienceDropping();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_isExperienceDroppingDisabled() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("eD", "wasExperienceConsumed", "method_41330", "isExperienceDroppingDisabled", "m_217046_"), "()Z");
    }

    static jboolean isExperienceDroppingDisabled(const jobject& obj) {
                
       const auto methodID = methodID_isExperienceDroppingDisabled();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getDamageTiltYaw() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("eE", "getHurtDir", "method_48157", "getDamageTiltYaw", "m_264297_"), "()F");
    }

    static jfloat getDamageTiltYaw(const jobject& obj) {
                
       const auto methodID = methodID_getDamageTiltYaw();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID_getHitbox() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("eF", "getHitbox", "method_53510", "getHitbox", "m_293919_"), "()Lewx;");
    }

    static jobject getHitbox(const jobject& obj) {
                
       const auto methodID = methodID_getHitbox();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getLocationBasedEnchantmentEffects() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("eG", "activeLocationDependentEnchantments", "method_59926", "getLocationBasedEnchantmentEffects", "m_339201_"), "()Ljava/util/Map;");
    }

    static jobject getLocationBasedEnchantmentEffects(const jobject& obj) {
                
       const auto methodID = methodID_getLocationBasedEnchantmentEffects();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getFallSounds() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("eH", "getFallSounds", "method_39760", "getFallSounds", "m_196493_"), "()Lbtn$a;");
    }

    static jobject getFallSounds(const jobject& obj) {
                
       const auto methodID = methodID_getFallSounds();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getDrinkSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getDrinkingSound", "method_18807", "getDrinkSound", "m_7838_"), "(Lcuq;)Lavo;");
    }

    static jobject getDrinkSound(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getDrinkSound();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getEatSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getEatingSound", "method_18869", "getEatSound", "m_7866_"), "(Lcuq;)Lavo;");
    }

    static jobject getEatSound(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getEatSound();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getClimbingPos() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("eI", "getLastClimbablePos", "method_24832", "getClimbingPos", "m_21227_"), "()Ljava/util/Optional;");
    }

    static jobject getClimbingPos(const jobject& obj) {
                
       const auto methodID = methodID_getClimbingPos();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_isClimbing() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("p_", "onClimbable", "method_6101", "isClimbing", "m_6147_"), "()Z");
    }

    static jboolean isClimbing(const jobject& obj) {
                
       const auto methodID = methodID_isClimbing();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_canEnterTrapdoor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "trapdoorUsableAsLadder", "method_6077", "canEnterTrapdoor", "m_21176_"), "(Ljd;Ldtc;)Z");
    }

    static jboolean canEnterTrapdoor(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_canEnterTrapdoor();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_isAlive() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("bE", "isAlive", "method_5805", "isAlive", "m_6084_"), "()Z");
    }

    static jboolean isAlive(const jobject& obj) {
                
       const auto methodID = methodID_isAlive();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getSafeFallDistance() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("cx", "getMaxFallDistance", "method_5850", "getSafeFallDistance", "m_6056_"), "()I");
    }

    static jint getSafeFallDistance(const jobject& obj) {
                
       const auto methodID = methodID_getSafeFallDistance();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID__getSafeFallDistance() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("w", "getComfortableFallDistance", "method_56993", "getSafeFallDistance", "m_320747_"), "(F)I");
    }

    static jint _getSafeFallDistance(const jobject& obj, const jfloat& arg0) {
                
       const auto methodID = methodID__getSafeFallDistance();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_handleFallDamage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "causeFallDamage", "method_5747", "handleFallDamage", "m_142535_"), "(FFLbrk;)Z");
    }

    static jboolean handleFallDamage(const jobject& obj, const jfloat& arg0, const jfloat& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_handleFallDamage();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_computeFallDamage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "calculateFallDamage", "method_23329", "computeFallDamage", "m_5639_"), "(FF)I");
    }

    static jint computeFallDamage(const jobject& obj, const jfloat& arg0, const jfloat& arg1) {
                
       const auto methodID = methodID_computeFallDamage();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_playBlockFallSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("eJ", "playBlockFallSound", "method_23328", "playBlockFallSound", "m_21229_"), "()V");
    }

    static void playBlockFallSound(const jobject& obj) {
                
       const auto methodID = methodID_playBlockFallSound();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_animateDamage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("n", "animateHurt", "method_5879", "animateDamage", "m_6053_"), "(F)V");
    }

    static void animateDamage(const jobject& obj, const jfloat& arg0) {
                
       const auto methodID = methodID_animateDamage();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getArmor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("eK", "getArmorValue", "method_6096", "getArmor", "m_21230_"), "()I");
    }

    static jint getArmor(const jobject& obj) {
                
       const auto methodID = methodID_getArmor();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_damageArmor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "hurtArmor", "method_6105", "damageArmor", "m_6472_"), "(Lbrk;F)V");
    }

    static void damageArmor(const jobject& obj, const jobject& arg0, const jfloat& arg1) {
                
       const auto methodID = methodID_damageArmor();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_damageHelmet() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "hurtHelmet", "method_36977", "damageHelmet", "m_142642_"), "(Lbrk;F)V");
    }

    static void damageHelmet(const jobject& obj, const jobject& arg0, const jfloat& arg1) {
                
       const auto methodID = methodID_damageHelmet();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_damageShield() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("x", "hurtCurrentlyUsedShield", "method_6056", "damageShield", "m_7909_"), "(F)V");
    }

    static void damageShield(const jobject& obj, const jfloat& arg0) {
                
       const auto methodID = methodID_damageShield();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_damageEquipment() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "doHurtEquipment", "method_57292", "damageEquipment", "m_318635_"), "(Lbrk;F[Lbsy;)V");
    }

    static void damageEquipment(const jobject& obj, const jobject& arg0, const jfloat& arg1, const jarray& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_damageEquipment();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_applyArmorToDamage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getDamageAfterArmorAbsorb", "method_6132", "applyArmorToDamage", "m_21161_"), "(Lbrk;F)F");
    }

    static jfloat applyArmorToDamage(const jobject& obj, const jobject& arg0, const jfloat& arg1) {
                
       const auto methodID = methodID_applyArmorToDamage();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_modifyAppliedDamage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "getDamageAfterMagicAbsorb", "method_6036", "modifyAppliedDamage", "m_6515_"), "(Lbrk;F)F");
    }

    static jfloat modifyAppliedDamage(const jobject& obj, const jobject& arg0, const jfloat& arg1) {
                
       const auto methodID = methodID_modifyAppliedDamage();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_applyDamage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "actuallyHurt", "method_6074", "applyDamage", "m_6475_"), "(Lbrk;F)V");
    }

    static void applyDamage(const jobject& obj, const jobject& arg0, const jfloat& arg1) {
                
       const auto methodID = methodID_applyDamage();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getDamageTracker() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("eL", "getCombatTracker", "method_6066", "getDamageTracker", "m_21231_"), "()Lbrh;");
    }

    static jobject getDamageTracker(const jobject& obj) {
                
       const auto methodID = methodID_getDamageTracker();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getPrimeAdversary() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("eM", "getKillCredit", "method_6124", "getPrimeAdversary", "m_21232_"), "()Lbtn;");
    }

    static jobject getPrimeAdversary(const jobject& obj) {
                
       const auto methodID = methodID_getPrimeAdversary();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getMaxHealth() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("eN", "getMaxHealth", "method_6063", "getMaxHealth", "m_21233_"), "()F");
    }

    static jfloat getMaxHealth(const jobject& obj) {
                
       const auto methodID = methodID_getMaxHealth();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID_getMaxAbsorption() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("eO", "getMaxAbsorption", "method_52541", "getMaxAbsorption", "m_293050_"), "()F");
    }

    static jfloat getMaxAbsorption(const jobject& obj) {
                
       const auto methodID = methodID_getMaxAbsorption();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID_getStuckArrowCount() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("eP", "getArrowCount", "method_6022", "getStuckArrowCount", "m_21234_"), "()I");
    }

    static jint getStuckArrowCount(const jobject& obj) {
                
       const auto methodID = methodID_getStuckArrowCount();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_setStuckArrowCount() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("p", "setArrowCount", "method_6097", "setStuckArrowCount", "m_21317_"), "(I)V");
    }

    static void setStuckArrowCount(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_setStuckArrowCount();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getStingerCount() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("eQ", "getStingerCount", "method_21753", "getStingerCount", "m_21235_"), "()I");
    }

    static jint getStingerCount(const jobject& obj) {
                
       const auto methodID = methodID_getStingerCount();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_setStingerCount() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("q", "setStingerCount", "method_21755", "setStingerCount", "m_21321_"), "(I)V");
    }

    static void setStingerCount(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_setStingerCount();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getHandSwingDuration() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("C", "getCurrentSwingDuration", "method_6028", "getHandSwingDuration", "m_21304_"), "()I");
    }

    static jint getHandSwingDuration(const jobject& obj) {
                
       const auto methodID = methodID_getHandSwingDuration();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_swingHand() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "swing", "method_6104", "swingHand", "m_6674_"), "(Lbqq;)V");
    }

    static void swingHand(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_swingHand();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__swingHand() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "swing", "method_23667", "swingHand", "m_21011_"), "(Lbqq;Z)V");
    }

    static void _swingHand(const jobject& obj, const jobject& arg0, const jboolean& arg1) {
                
       const auto methodID = methodID__swingHand();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_onDamaged() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "handleDamageEvent", "method_48922", "onDamaged", "m_269138_"), "(Lbrk;)V");
    }

    static void onDamaged(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onDamaged();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_handleStatus() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "handleEntityEvent", "method_5711", "handleStatus", "m_7822_"), "(B)V");
    }

    static void handleStatus(const jobject& obj, const jbyte& arg0) {
                
       const auto methodID = methodID_handleStatus();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_addDeathParticles() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("D", "makePoofParticles", "method_36549", "addDeathParticles", "m_147246_"), "()V");
    }

    static void addDeathParticles(const jobject& obj) {
                
       const auto methodID = methodID_addDeathParticles();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_swapHandStacks() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("E", "swapHandItems", "method_30127", "swapHandStacks", "m_21312_"), "()V");
    }

    static void swapHandStacks(const jobject& obj) {
                
       const auto methodID = methodID_swapHandStacks();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_tickInVoid() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aE", "onBelowWorld", "method_5825", "tickInVoid", "m_6088_"), "()V");
    }

    static void tickInVoid(const jobject& obj) {
                
       const auto methodID = methodID_tickInVoid();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_tickHandSwing() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("eR", "updateSwingTime", "method_6119", "tickHandSwing", "m_21203_"), "()V");
    }

    static void tickHandSwing(const jobject& obj) {
                
       const auto methodID = methodID_tickHandSwing();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getAttributeInstance() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "getAttribute", "method_5996", "getAttributeInstance", "m_21051_"), "(Ljm;)Lbus;");
    }

    static jobject getAttributeInstance(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getAttributeInstance();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getAttributeValue() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "getAttributeValue", "method_45325", "getAttributeValue", "m_246858_"), "(Ljm;)D");
    }

    static jdouble getAttributeValue(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getAttributeValue();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getAttributeBaseValue() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "getAttributeBaseValue", "method_45326", "getAttributeBaseValue", "m_245892_"), "(Ljm;)D");
    }

    static jdouble getAttributeBaseValue(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getAttributeBaseValue();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getAttributes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("eS", "getAttributes", "method_6127", "getAttributes", "m_21204_"), "()Lbut;");
    }

    static jobject getAttributes(const jobject& obj) {
                
       const auto methodID = methodID_getAttributes();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getMainHandStack() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("eT", "getMainHandItem", "method_6047", "getMainHandStack", "m_21205_"), "()Lcuq;");
    }

    static jobject getMainHandStack(const jobject& obj) {
       const auto methodID = methodID_getMainHandStack();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getOffHandStack() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("eU", "getOffhandItem", "method_6079", "getOffHandStack", "m_21206_"), "()Lcuq;");
    }

    static jobject getOffHandStack(const jobject& obj) {
                
       const auto methodID = methodID_getOffHandStack();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getWeaponStack() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("dS", "getWeaponItem", "method_59958", "getWeaponStack", "m_338776_"), "()Lcuq;");
    }

    static jobject getWeaponStack(const jobject& obj) {
                
       const auto methodID = methodID_getWeaponStack();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_isHolding() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "isHolding", "method_24518", "isHolding", "m_21055_"), "(Lcul;)Z");
    }

    static jboolean isHolding(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_isHolding();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__isHolding() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "isHolding", "method_24520", "isHolding", "m_21093_"), "(Ljava/util/function/Predicate;)Z");
    }

    static jboolean _isHolding(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__isHolding();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getStackInHand() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getItemInHand", "method_5998", "getStackInHand", "m_21120_"), "(Lbqq;)Lcuq;");
    }

    static jobject getStackInHand(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getStackInHand();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setStackInHand() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setItemInHand", "method_6122", "setStackInHand", "m_21008_"), "(Lbqq;Lcuq;)V");
    }

    static void setStackInHand(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_setStackInHand();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_hasStackEquipped() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "hasItemInSlot", "method_6084", "hasStackEquipped", "m_21033_"), "(Lbsy;)Z");
    }

    static jboolean hasStackEquipped(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_hasStackEquipped();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_canUseSlot() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "canUseSlot", "method_56991", "canUseSlot", "m_30729_"), "(Lbsy;)Z");
    }

    static jboolean canUseSlot(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_canUseSlot();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getArmorItems() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("eV", "getArmorSlots", "method_5661", "getArmorItems", "m_21151_"), "()Ljava/lang/Iterable;");
    }

    static jobject getArmorItems(const jobject& obj) {
                
       const auto methodID = methodID_getArmorItems();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getEquippedStack() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getItemBySlot", "method_6118", "getEquippedStack", "m_6844_"), "(Lbsy;)Lcuq;");
    }

    static jobject getEquippedStack(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getEquippedStack();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_equipStack() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setItemSlot", "method_5673", "equipStack", "m_21035_"), "(Lbsy;Lcuq;)V");
    }

    static void equipStack(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_equipStack();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getHandItems() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("eW", "getHandSlots", "method_5877", "getHandItems", "m_21487_"), "()Ljava/lang/Iterable;");
    }

    static jobject getHandItems(const jobject& obj) {
                
       const auto methodID = methodID_getHandItems();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getAllArmorItems() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("eX", "getArmorAndBodyArmorSlots", "method_56674", "getAllArmorItems", "m_322068_"), "()Ljava/lang/Iterable;");
    }

    static jobject getAllArmorItems(const jobject& obj) {
                
       const auto methodID = methodID_getAllArmorItems();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getEquippedItems() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("eY", "getAllSlots", "method_56675", "getEquippedItems", "m_323629_"), "()Ljava/lang/Iterable;");
    }

    static jobject getEquippedItems(const jobject& obj) {
                
       const auto methodID = methodID_getEquippedItems();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_processEquippedStack() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "verifyEquippedItem", "method_37410", "processEquippedStack", "m_181122_"), "(Lcuq;)V");
    }

    static void processEquippedStack(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_processEquippedStack();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getArmorVisibility() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("eZ", "getArmorCoverPercentage", "method_18396", "getArmorVisibility", "m_21207_"), "()F");
    }

    static jfloat getArmorVisibility(const jobject& obj) {
                
       const auto methodID = methodID_getArmorVisibility();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID_setSprinting() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "setSprinting", "method_5728", "setSprinting", "m_6858_"), "(Z)V");
    }

    static void setSprinting(const jobject& obj, const jboolean& arg0) {
       const auto methodID = methodID_setSprinting();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getSoundVolume() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("fa", "getSoundVolume", "method_6107", "getSoundVolume", "m_6121_"), "()F");
    }

    static jfloat getSoundVolume(const jobject& obj) {
                
       const auto methodID = methodID_getSoundVolume();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID_getSoundPitch() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("fb", "getVoicePitch", "method_6017", "getSoundPitch", "m_6100_"), "()F");
    }

    static jfloat getSoundPitch(const jobject& obj) {
                
       const auto methodID = methodID_getSoundPitch();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID_isImmobile() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("fc", "isImmobile", "method_6062", "isImmobile", "m_6107_"), "()Z");
    }

    static jboolean isImmobile(const jobject& obj) {
                
       const auto methodID = methodID_isImmobile();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_pushAwayFrom() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "push", "method_5697", "pushAwayFrom", "m_7334_"), "(Lbsr;)V");
    }

    static void pushAwayFrom(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_pushAwayFrom();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_onDismounted() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "dismountVehicle", "method_6038", "onDismounted", "m_21028_"), "(Lbsr;)V");
    }

    static void onDismounted(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onDismounted();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_shouldRenderName() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("cF", "shouldShowName", "method_5733", "shouldRenderName", "m_6052_"), "()Z");
    }

    static jboolean shouldRenderName(const jobject& obj) {
                
       const auto methodID = methodID_shouldRenderName();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getJumpVelocity() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("fd", "getJumpPower", "method_6106", "getJumpVelocity", "m_6118_"), "()F");
    }

    static jfloat getJumpVelocity(const jobject& obj) {
                
       const auto methodID = methodID_getJumpVelocity();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID__getJumpVelocity() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("y", "getJumpPower", "method_56994", "getJumpVelocity", "m_320700_"), "(F)F");
    }

    static jfloat _getJumpVelocity(const jobject& obj, const jfloat& arg0) {
                
       const auto methodID = methodID__getJumpVelocity();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getJumpBoostVelocityModifier() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("fe", "getJumpBoostPower", "method_37416", "getJumpBoostVelocityModifier", "m_285755_"), "()F");
    }

    static jfloat getJumpBoostVelocityModifier(const jobject& obj) {
                
       const auto methodID = methodID_getJumpBoostVelocityModifier();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID_jump() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ff", "jumpFromGround", "method_6043", "jump", "m_6135_"), "()V");
    }

    static void jump(const jobject& obj) {
                
       const auto methodID = methodID_jump();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_knockDownwards() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("fg", "goDownInWater", "method_6093", "knockDownwards", "m_21208_"), "()V");
    }

    static void knockDownwards(const jobject& obj) {
                
       const auto methodID = methodID_knockDownwards();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_swimUpward() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "jumpInLiquid", "method_6010", "swimUpward", "m_203347_"), "(Lawu;)V");
    }

    static void swimUpward(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_swimUpward();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getBaseMovementSpeedMultiplier() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("fh", "getWaterSlowDown", "method_6120", "getBaseMovementSpeedMultiplier", "m_6108_"), "()F");
    }

    static jfloat getBaseMovementSpeedMultiplier(const jobject& obj) {
                
       const auto methodID = methodID_getBaseMovementSpeedMultiplier();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID_canWalkOnFluid() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "canStandOnFluid", "method_26319", "canWalkOnFluid", "m_203441_"), "(Lepe;)Z");
    }

    static jboolean canWalkOnFluid(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_canWalkOnFluid();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getGravity() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aZ", "getDefaultGravity", "method_7490", "getGravity", "m_319564_"), "()D");
    }

    static jdouble getGravity(const jobject& obj) {
                
       const auto methodID = methodID_getGravity();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID);
    };
    
    static jmethodID methodID_travel() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "travel", "method_6091", "travel", "m_7023_"), "(Lexc;)V");
    }

    static void travel(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_travel();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_travelControlled() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "travelRidden", "method_49483", "travelControlled", "m_274466_"), "(Lcmx;Lexc;)V");
    }

    static void travelControlled(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_travelControlled();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_tickControlled() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "tickRidden", "method_49481", "tickControlled", "m_274498_"), "(Lcmx;Lexc;)V");
    }

    static void tickControlled(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_tickControlled();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getControlledMovementInput() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getRiddenInput", "method_49482", "getControlledMovementInput", "m_274312_"), "(Lcmx;Lexc;)Lexc;");
    }

    static jobject getControlledMovementInput(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_getControlledMovementInput();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getSaddledSpeed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "getRiddenSpeed", "method_49485", "getSaddledSpeed", "m_245547_"), "(Lcmx;)F");
    }

    static jfloat getSaddledSpeed(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getSaddledSpeed();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_updateLimbs() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("s", "calculateEntityAnimation", "method_29242", "updateLimbs", "m_267651_"), "(Z)V");
    }

    static void updateLimbs(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_updateLimbs();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__updateLimbs() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("z", "updateWalkAnimation", "method_48565", "updateLimbs", "m_267689_"), "(F)V");
    }

    static void _updateLimbs(const jobject& obj, const jfloat& arg0) {
                
       const auto methodID = methodID__updateLimbs();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_applyMovementInput() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "handleRelativeFrictionAndCalculateMovement", "method_26318", "applyMovementInput", "m_21074_"), "(Lexc;F)Lexc;");
    }

    static jobject applyMovementInput(const jobject& obj, const jobject& arg0, const jfloat& arg1) {
                
       const auto methodID = methodID_applyMovementInput();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_applyFluidMovingSpeed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getFluidFallingAdjustedMovement", "method_26317", "applyFluidMovingSpeed", "m_20994_"), "(DZLexc;)Lexc;");
    }

    static jobject applyFluidMovingSpeed(const jobject& obj, const jdouble& arg0, const jboolean& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_applyFluidMovingSpeed();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_applyClimbingSpeed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "handleOnClimbable", "method_18801", "applyClimbingSpeed", "m_21297_"), "(Lexc;)Lexc;");
    }

    static jobject applyClimbingSpeed(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_applyClimbingSpeed();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getMovementSpeed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("E", "getFrictionInfluencedSpeed", "method_18802", "getMovementSpeed", "m_21330_"), "(F)F");
    }

    static jfloat getMovementSpeed(const jobject& obj, const jfloat& arg0) {
                
       const auto methodID = methodID_getMovementSpeed();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getOffGroundSpeed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("fi", "getFlyingSpeed", "method_49484", "getOffGroundSpeed", "m_274460_"), "()F");
    }

    static jfloat getOffGroundSpeed(const jobject& obj) {
                
       const auto methodID = methodID_getOffGroundSpeed();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID__getMovementSpeed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("fj", "getSpeed", "method_6029", "getMovementSpeed", "m_6113_"), "()F");
    }

    static jfloat _getMovementSpeed(const jobject& obj) {
                
       const auto methodID = methodID__getMovementSpeed();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID_setMovementSpeed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("A", "setSpeed", "method_6125", "setMovementSpeed", "m_7910_"), "(F)V");
    }

    static void setMovementSpeed(const jobject& obj, const jfloat& arg0) {
                
       const auto methodID = methodID_setMovementSpeed();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_tryAttack() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("D", "doHurtTarget", "method_6121", "tryAttack", "m_7327_"), "(Lbsr;)Z");
    }

    static jboolean tryAttack(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_tryAttack();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_tick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("l", "tick", "method_5773", "tick", "m_8119_"), "()V");
    }

    static void tick(const jobject& obj) {
                
       const auto methodID = methodID_tick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_sendEquipmentChanges() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("F", "detectEquipmentUpdates", "method_30128", "sendEquipmentChanges", "m_21315_"), "()V");
    }

    static void sendEquipmentChanges(const jobject& obj) {
                
       const auto methodID = methodID_sendEquipmentChanges();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getEquipmentChanges() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("H", "collectEquipmentChanges", "method_30129", "getEquipmentChanges", "m_21319_"), "()Ljava/util/Map;");
    }

    static jobject getEquipmentChanges(const jobject& obj) {
                
       const auto methodID = methodID_getEquipmentChanges();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_areItemsDifferent() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "equipmentHasChanged", "method_45324", "areItemsDifferent", "m_246525_"), "(Lcuq;Lcuq;)Z");
    }

    static jboolean areItemsDifferent(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_areItemsDifferent();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_checkHandStackSwap() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "handleHandSwap", "method_30121", "checkHandStackSwap", "m_21091_"), "(Ljava/util/Map;)V");
    }

    static void checkHandStackSwap(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_checkHandStackSwap();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__sendEquipmentChanges() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "handleEquipmentChanges", "method_30123", "sendEquipmentChanges", "m_21142_"), "(Ljava/util/Map;)V");
    }

    static void _sendEquipmentChanges(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__sendEquipmentChanges();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getSyncedArmorStack() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "getLastArmorItem", "method_30125", "getSyncedArmorStack", "m_21198_"), "(Lbsy;)Lcuq;");
    }

    static jobject getSyncedArmorStack(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getSyncedArmorStack();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setSyncedArmorStack() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "setLastArmorItem", "method_30122", "setSyncedArmorStack", "m_21128_"), "(Lbsy;Lcuq;)V");
    }

    static void setSyncedArmorStack(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_setSyncedArmorStack();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getSyncedHandStack() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "getLastHandItem", "method_30126", "getSyncedHandStack", "m_21244_"), "(Lbsy;)Lcuq;");
    }

    static jobject getSyncedHandStack(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getSyncedHandStack();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setSyncedHandStack() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "setLastHandItem", "method_30124", "setSyncedHandStack", "m_21168_"), "(Lbsy;Lcuq;)V");
    }

    static void setSyncedHandStack(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_setSyncedHandStack();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_turnHead() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "tickHeadTurn", "method_6031", "turnHead", "m_5632_"), "(FF)F");
    }

    static jfloat turnHead(const jobject& obj, const jfloat& arg0, const jfloat& arg1) {
                
       const auto methodID = methodID_turnHead();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getMaxRelativeHeadRotation() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("fk", "getMaxHeadRotationRelativeToBody", "method_53964", "getMaxRelativeHeadRotation", "m_307017_"), "()F");
    }

    static jfloat getMaxRelativeHeadRotation(const jobject& obj) {
                
       const auto methodID = methodID_getMaxRelativeHeadRotation();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID_tickMovement() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("m_", "aiStep", "method_6007", "tickMovement", "m_8107_"), "()V");
    }

    static void tickMovement(const jobject& obj) {
                
       const auto methodID = methodID_tickMovement();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_hurtByWater() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("fl", "isSensitiveToWater", "method_29503", "hurtByWater", "m_6126_"), "()Z");
    }

    static jboolean hurtByWater(const jobject& obj) {
                
       const auto methodID = methodID_hurtByWater();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_tickFallFlying() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("I", "updateFallFlying", "method_6053", "tickFallFlying", "m_21323_"), "()V");
    }

    static void tickFallFlying(const jobject& obj) {
                
       const auto methodID = methodID_tickFallFlying();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_tickNewAi() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("fm", "serverAiStep", "method_6023", "tickNewAi", "m_6140_"), "()V");
    }

    static void tickNewAi(const jobject& obj) {
                
       const auto methodID = methodID_tickNewAi();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_tickCramming() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("r", "pushEntities", "method_6070", "tickCramming", "m_6138_"), "()V");
    }

    static void tickCramming(const jobject& obj) {
                
       const auto methodID = methodID_tickCramming();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_tickRiptide() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "checkAutoSpinAttack", "method_6035", "tickRiptide", "m_21071_"), "(Lewx;Lewx;)V");
    }

    static void tickRiptide(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_tickRiptide();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_pushAway() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("E", "doPush", "method_6087", "pushAway", "m_7324_"), "(Lbsr;)V");
    }

    static void pushAway(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_pushAway();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_attackLivingEntity() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "doAutoAttackOnTouch", "method_5997", "attackLivingEntity", "m_6727_"), "(Lbtn;)V");
    }

    static void attackLivingEntity(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_attackLivingEntity();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isUsingRiptide() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("fn", "isAutoSpinAttack", "method_6123", "isUsingRiptide", "m_21209_"), "()Z");
    }

    static jboolean isUsingRiptide(const jobject& obj) {
                
       const auto methodID = methodID_isUsingRiptide();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_stopRiding() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ad", "stopRiding", "method_5848", "stopRiding", "m_8127_"), "()V");
    }

    static void stopRiding(const jobject& obj) {
                
       const auto methodID = methodID_stopRiding();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_tickRiding() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("u", "rideTick", "method_5842", "tickRiding", "m_6083_"), "()V");
    }

    static void tickRiding(const jobject& obj) {
                
       const auto methodID = methodID_tickRiding();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_updateTrackedPositionAndAngles() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "lerpTo", "method_5759", "updateTrackedPositionAndAngles", "m_6453_"), "(DDDFFI)V");
    }

    static void updateTrackedPositionAndAngles(const jobject& obj, const jdouble& arg0, const jdouble& arg1, const jdouble& arg2, const jfloat& arg3, const jfloat& arg4, const jint& arg5) {
                
       const auto methodID = methodID_updateTrackedPositionAndAngles();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5);
    };
    
    static jmethodID methodID_getLerpTargetX() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c_", "lerpTargetX", "method_53830", "getLerpTargetX", "m_293268_"), "()D");
    }

    static jdouble getLerpTargetX(const jobject& obj) {
                
       const auto methodID = methodID_getLerpTargetX();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID);
    };
    
    static jmethodID methodID_getLerpTargetY() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d_", "lerpTargetY", "method_53827", "getLerpTargetY", "m_293950_"), "()D");
    }

    static jdouble getLerpTargetY(const jobject& obj) {
                
       const auto methodID = methodID_getLerpTargetY();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID);
    };
    
    static jmethodID methodID_getLerpTargetZ() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("P_", "lerpTargetZ", "method_53828", "getLerpTargetZ", "m_292720_"), "()D");
    }

    static jdouble getLerpTargetZ(const jobject& obj) {
                
       const auto methodID = methodID_getLerpTargetZ();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID);
    };
    
    static jmethodID methodID_getLerpTargetPitch() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("Q_", "lerpTargetXRot", "method_53829", "getLerpTargetPitch", "m_293123_"), "()F");
    }

    static jfloat getLerpTargetPitch(const jobject& obj) {
                
       const auto methodID = methodID_getLerpTargetPitch();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID_getLerpTargetYaw() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e_", "lerpTargetYRot", "method_53831", "getLerpTargetYaw", "m_293582_"), "()F");
    }

    static jfloat getLerpTargetYaw(const jobject& obj) {
                
       const auto methodID = methodID_getLerpTargetYaw();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID_updateTrackedHeadRotation() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "lerpHeadTo", "method_5683", "updateTrackedHeadRotation", "m_6541_"), "(FI)V");
    }

    static void updateTrackedHeadRotation(const jobject& obj, const jfloat& arg0, const jint& arg1) {
                
       const auto methodID = methodID_updateTrackedHeadRotation();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_setJumping() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("t", "setJumping", "method_6100", "setJumping", "m_6862_"), "(Z)V");
    }

    static void setJumping(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setJumping();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_triggerItemPickedUpByEntityCriteria() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "onItemPickup", "method_29499", "triggerItemPickedUpByEntityCriteria", "m_21053_"), "(Lcjh;)V");
    }

    static void triggerItemPickedUpByEntityCriteria(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_triggerItemPickedUpByEntityCriteria();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_sendPickup() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "take", "method_6103", "sendPickup", "m_7938_"), "(Lbsr;I)V");
    }

    static void sendPickup(const jobject& obj, const jobject& arg0, const jint& arg1) {
                
       const auto methodID = methodID_sendPickup();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_canSee() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("F", "hasLineOfSight", "method_6057", "canSee", "m_142582_"), "(Lbsr;)Z");
    }

    static jboolean canSee(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_canSee();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getYaw() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("i", "getViewYRot", "method_5705", "getYaw", "m_5675_"), "(F)F");
    }

    static jfloat getYaw(const jobject& obj, const jfloat& arg0) {
                
       const auto methodID = methodID_getYaw();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getHandSwingProgress() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("B", "getAttackAnim", "method_6055", "getHandSwingProgress", "m_21324_"), "(F)F");
    }

    static jfloat getHandSwingProgress(const jobject& obj, const jfloat& arg0) {
                
       const auto methodID = methodID_getHandSwingProgress();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_canHit() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("bA", "isPickable", "method_5863", "canHit", "m_6087_"), "()Z");
    }

    static jboolean canHit(const jobject& obj) {
                
       const auto methodID = methodID_canHit();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isPushable() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("bB", "isPushable", "method_5810", "isPushable", "m_6094_"), "()Z");
    }

    static jboolean isPushable(const jobject& obj) {
                
       const auto methodID = methodID_isPushable();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getHeadYaw() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ct", "getYHeadRot", "method_5791", "getHeadYaw", "m_6080_"), "()F");
    }

    static jfloat getHeadYaw(const jobject& obj) {
                
       const auto methodID = methodID_getHeadYaw();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID_setHeadYaw() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("o", "setYHeadRot", "method_5847", "setHeadYaw", "m_5616_"), "(F)V");
    }

    static void setHeadYaw(const jobject& obj, const jfloat& arg0) {
                
       const auto methodID = methodID_setHeadYaw();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setBodyYaw() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("p", "setYBodyRot", "method_5636", "setBodyYaw", "m_5618_"), "(F)V");
    }

    static void setBodyYaw(const jobject& obj, const jfloat& arg0) {
                
       const auto methodID = methodID_setBodyYaw();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_positionInPortal() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getRelativePortalPosition", "method_30633", "positionInPortal", "m_7643_"), "(Lji$a;Ll$a;)Lexc;");
    }

    static jobject positionInPortal(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_positionInPortal();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__positionInPortal() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("k", "resetForwardDirectionOfRelativePortalPosition", "method_31079", "positionInPortal", "m_21289_"), "(Lexc;)Lexc;");
    }

    static jobject _positionInPortal(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID__positionInPortal();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getAbsorptionAmount() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("fo", "getAbsorptionAmount", "method_6067", "getAbsorptionAmount", "m_6103_"), "()F");
    }

    static jfloat getAbsorptionAmount(const jobject& obj) {
                
       const auto methodID = methodID_getAbsorptionAmount();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID_setAbsorptionAmount() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("C", "setAbsorptionAmount", "method_6073", "setAbsorptionAmount", "m_7911_"), "(F)V");
    }

    static void setAbsorptionAmount(const jobject& obj, const jfloat& arg0) {
                
       const auto methodID = methodID_setAbsorptionAmount();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setAbsorptionAmountUnclamped() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("D", "internalSetAbsorptionAmount", "method_52544", "setAbsorptionAmountUnclamped", "m_292637_"), "(F)V");
    }

    static void setAbsorptionAmountUnclamped(const jobject& obj, const jfloat& arg0) {
                
       const auto methodID = methodID_setAbsorptionAmountUnclamped();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_enterCombat() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f_", "onEnterCombat", "method_6000", "enterCombat", "m_8108_"), "()V");
    }

    static void enterCombat(const jobject& obj) {
                
       const auto methodID = methodID_enterCombat();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_endCombat() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g_", "onLeaveCombat", "method_6044", "endCombat", "m_8098_"), "()V");
    }

    static void endCombat(const jobject& obj) {
                
       const auto methodID = methodID_endCombat();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_markEffectsDirty() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("fp", "updateEffectVisibility", "method_6008", "markEffectsDirty", "m_21210_"), "()V");
    }

    static void markEffectsDirty(const jobject& obj) {
                
       const auto methodID = methodID_markEffectsDirty();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getMainArm() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("fq", "getMainArm", "method_6068", "getMainArm", "m_5737_"), "()Lbtg;");
    }

    static jobject getMainArm(const jobject& obj) {
                
       const auto methodID = methodID_getMainArm();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_isUsingItem() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("fr", "isUsingItem", "method_6115", "isUsingItem", "m_6117_"), "()Z");
    }

    static jboolean isUsingItem(const jobject& obj) {
                
       const auto methodID = methodID_isUsingItem();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getActiveHand() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("fs", "getUsedItemHand", "method_6058", "getActiveHand", "m_7655_"), "()Lbqq;");
    }

    static jobject getActiveHand(const jobject& obj) {
                
       const auto methodID = methodID_getActiveHand();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_tickActiveItemStack() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("J", "updatingUsingItem", "method_6076", "tickActiveItemStack", "m_21329_"), "()V");
    }

    static void tickActiveItemStack(const jobject& obj) {
                
       const auto methodID = methodID_tickActiveItemStack();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_tickItemStackUsage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "updateUsingItem", "method_37119", "tickItemStackUsage", "m_142106_"), "(Lcuq;)V");
    }

    static void tickItemStackUsage(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_tickItemStackUsage();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_shouldSpawnConsumptionEffects() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("L", "shouldTriggerItemUseEffects", "method_22382", "shouldSpawnConsumptionEffects", "m_21332_"), "()Z");
    }

    static jboolean shouldSpawnConsumptionEffects(const jobject& obj) {
                
       const auto methodID = methodID_shouldSpawnConsumptionEffects();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_updateLeaningPitch() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("N", "updateSwimAmount", "method_6072", "updateLeaningPitch", "m_21333_"), "()V");
    }

    static void updateLeaningPitch(const jobject& obj) {
                
       const auto methodID = methodID_updateLeaningPitch();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_setLivingFlag() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "setLivingEntityFlag", "method_6085", "setLivingFlag", "m_21155_"), "(IZ)V");
    }

    static void setLivingFlag(const jobject& obj, const jint& arg0, const jboolean& arg1) {
                
       const auto methodID = methodID_setLivingFlag();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_setCurrentHand() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "startUsingItem", "method_6019", "setCurrentHand", "m_6672_"), "(Lbqq;)V");
    }

    static void setCurrentHand(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setCurrentHand();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_onTrackedDataSet() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "onSyncedDataUpdated", "method_5674", "onTrackedDataSet", "m_7350_"), "(Lajw;)V");
    }

    static void onTrackedDataSet(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onTrackedDataSet();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_lookAt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "lookAt", "method_5702", "lookAt", "m_7618_"), "(Lff$a;Lexc;)V");
    }

    static void lookAt(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_lookAt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_lerpYaw() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("r", "getPreciseBodyRotation", "method_60951", "lerpYaw", "m_339180_"), "(F)F");
    }

    static jfloat lerpYaw(const jobject& obj, const jfloat& arg0) {
                
       const auto methodID = methodID_lerpYaw();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_spawnConsumptionEffects() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "triggerItemUseEffects", "method_6098", "spawnConsumptionEffects", "m_21137_"), "(Lcuq;I)V");
    }

    static void spawnConsumptionEffects(const jobject& obj, const jobject& arg0, const jint& arg1) {
                
       const auto methodID = methodID_spawnConsumptionEffects();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_spawnItemParticles() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "spawnItemParticles", "method_6037", "spawnItemParticles", "m_21060_"), "(Lcuq;I)V");
    }

    static void spawnItemParticles(const jobject& obj, const jobject& arg0, const jint& arg1) {
                
       const auto methodID = methodID_spawnItemParticles();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_consumeItem() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("L_", "completeUsingItem", "method_6040", "consumeItem", "m_8095_"), "()V");
    }

    static void consumeItem(const jobject& obj) {
                
       const auto methodID = methodID_consumeItem();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getActiveItem() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ft", "getUseItem", "method_6030", "getActiveItem", "m_21211_"), "()Lcuq;");
    }

    static jobject getActiveItem(const jobject& obj) {
                
       const auto methodID = methodID_getActiveItem();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getItemUseTimeLeft() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("fu", "getUseItemRemainingTicks", "method_6014", "getItemUseTimeLeft", "m_21212_"), "()I");
    }

    static jint getItemUseTimeLeft(const jobject& obj) {
                
       const auto methodID = methodID_getItemUseTimeLeft();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getItemUseTime() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("fv", "getTicksUsingItem", "method_6048", "getItemUseTime", "m_21252_"), "()I");
    }

    static jint getItemUseTime(const jobject& obj) {
                
       const auto methodID = methodID_getItemUseTime();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_stopUsingItem() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("fw", "releaseUsingItem", "method_6075", "stopUsingItem", "m_21253_"), "()V");
    }

    static void stopUsingItem(const jobject& obj) {
                
       const auto methodID = methodID_stopUsingItem();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_clearActiveItem() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("fx", "stopUsingItem", "method_6021", "clearActiveItem", "m_5810_"), "()V");
    }

    static void clearActiveItem(const jobject& obj) {
                
       const auto methodID = methodID_clearActiveItem();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_isBlocking() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("fy", "isBlocking", "method_6039", "isBlocking", "m_21254_"), "()Z");
    }

    static jboolean isBlocking(const jobject& obj) {
                
       const auto methodID = methodID_isBlocking();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isHoldingOntoLadder() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("fz", "isSuppressingSlidingDownLadder", "method_21754", "isHoldingOntoLadder", "m_5791_"), "()Z");
    }

    static jboolean isHoldingOntoLadder(const jobject& obj) {
                
       const auto methodID = methodID_isHoldingOntoLadder();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isFallFlying() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("fA", "isFallFlying", "method_6128", "isFallFlying", "m_21255_"), "()Z");
    }

    static jboolean isFallFlying(const jobject& obj) {
                
       const auto methodID = methodID_isFallFlying();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isInSwimmingPose() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ce", "isVisuallySwimming", "method_20232", "isInSwimmingPose", "m_6067_"), "()Z");
    }

    static jboolean isInSwimmingPose(const jobject& obj) {
                
       const auto methodID = methodID_isInSwimmingPose();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getFallFlyingTicks() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("fB", "getFallFlyingTicks", "method_6003", "getFallFlyingTicks", "m_21256_"), "()I");
    }

    static jint getFallFlyingTicks(const jobject& obj) {
                
       const auto methodID = methodID_getFallFlyingTicks();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_teleport() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "randomTeleport", "method_6082", "teleport", "m_20984_"), "(DDDZ)Z");
    }

    static jboolean teleport(const jobject& obj, const jdouble& arg0, const jdouble& arg1, const jdouble& arg2, const jboolean& arg3) {
                
       const auto methodID = methodID_teleport();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_isAffectedBySplashPotions() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("fC", "isAffectedByPotions", "method_6086", "isAffectedBySplashPotions", "m_5801_"), "()Z");
    }

    static jboolean isAffectedBySplashPotions(const jobject& obj) {
                
       const auto methodID = methodID_isAffectedBySplashPotions();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isMobOrPlayer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("fD", "attackable", "method_6102", "isMobOrPlayer", "m_5789_"), "()Z");
    }

    static jboolean isMobOrPlayer(const jobject& obj) {
                
       const auto methodID = methodID_isMobOrPlayer();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_setNearbySongPlaying() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setRecordPlayingNearby", "method_6006", "setNearbySongPlaying", "m_6818_"), "(Ljd;Z)V");
    }

    static void setNearbySongPlaying(const jobject& obj, const jobject& arg0, const jboolean& arg1) {
                
       const auto methodID = methodID_setNearbySongPlaying();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_canEquip() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "canTakeItem", "method_18397", "canEquip", "m_7066_"), "(Lcuq;)Z");
    }

    static jboolean canEquip(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_canEquip();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getDimensions() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getDimensions", "method_18377", "getDimensions", "m_6972_"), "(Lbua;)Lbsu;");
    }

    static jobject getDimensions(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getDimensions();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getBaseDimensions() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "getDefaultDimensions", "method_55694", "getBaseDimensions", "m_31586_"), "(Lbua;)Lbsu;");
    }

    static jobject getBaseDimensions(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getBaseDimensions();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getPoses() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("fE", "getDismountPoses", "method_24831", "getPoses", "m_7431_"), "()Lcom/google/common/collect/ImmutableList;");
    }

    static jobject getPoses(const jobject& obj) {
                
       const auto methodID = methodID_getPoses();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getBoundingBox() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "getLocalBoundsForPose", "method_24833", "getBoundingBox", "m_21270_"), "(Lbua;)Lewx;");
    }

    static jobject getBoundingBox(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getBoundingBox();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_wouldNotSuffocateInPose() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "wouldNotSuffocateAtTargetPose", "method_52542", "wouldNotSuffocateInPose", "m_293305_"), "(Lbua;)Z");
    }

    static jboolean wouldNotSuffocateInPose(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_wouldNotSuffocateInPose();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_canUsePortals() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("o", "canUsePortal", "method_5822", "canUsePortals", "m_31145_"), "(Z)Z");
    }

    static jboolean canUsePortals(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_canUsePortals();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getSleepingPosition() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("fF", "getSleepingPos", "method_18398", "getSleepingPosition", "m_21257_"), "()Ljava/util/Optional;");
    }

    static jobject getSleepingPosition(const jobject& obj) {
                
       const auto methodID = methodID_getSleepingPosition();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_setSleepingPosition() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "setSleepingPos", "method_18402", "setSleepingPosition", "m_21250_"), "(Ljd;)V");
    }

    static void setSleepingPosition(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setSleepingPosition();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_clearSleepingPosition() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("fG", "clearSleepingPos", "method_18399", "clearSleepingPosition", "m_21258_"), "()V");
    }

    static void clearSleepingPosition(const jobject& obj) {
                
       const auto methodID = methodID_clearSleepingPosition();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_isSleeping() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("fH", "isSleeping", "method_6113", "isSleeping", "m_5803_"), "()Z");
    }

    static jboolean isSleeping(const jobject& obj) {
                
       const auto methodID = methodID_isSleeping();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_sleep() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "startSleeping", "method_18403", "sleep", "m_5802_"), "(Ljd;)V");
    }

    static void sleep(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_sleep();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setPositionInBed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setPosToBed", "method_18392", "setPositionInBed", "m_21080_"), "(Ljd;)V");
    }

    static void setPositionInBed(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setPositionInBed();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isSleepingInBed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("O", "checkBedExists", "method_18406", "isSleepingInBed", "m_21334_"), "()Z");
    }

    static jboolean isSleepingInBed(const jobject& obj) {
                
       const auto methodID = methodID_isSleepingInBed();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_wakeUp() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("fI", "stopSleeping", "method_18400", "wakeUp", "m_5796_"), "()V");
    }

    static void wakeUp(const jobject& obj) {
                
       const auto methodID = methodID_wakeUp();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getSleepingDirection() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("fJ", "getBedOrientation", "method_18401", "getSleepingDirection", "m_21259_"), "()Lji;");
    }

    static jobject getSleepingDirection(const jobject& obj) {
                
       const auto methodID = methodID_getSleepingDirection();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_isInsideWall() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("bF", "isInWall", "method_5757", "isInsideWall", "m_5830_"), "()Z");
    }

    static jboolean isInsideWall(const jobject& obj) {
                
       const auto methodID = methodID_isInsideWall();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getProjectileType() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "getProjectile", "method_18808", "getProjectileType", "m_6298_"), "(Lcuq;)Lcuq;");
    }

    static jobject getProjectileType(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getProjectileType();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_tryEatFood() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "eat", "method_60492", "tryEatFood", "m_5584_"), "(Ldcw;Lcuq;)Lcuq;");
    }

    static jobject tryEatFood(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_tryEatFood();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_eatFood() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "eat", "method_18866", "eatFood", "m_36184_"), "(Ldcw;Lcuq;Lcpr;)Lcuq;");
    }

    static jobject eatFood(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_eatFood();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_applyFoodEffects() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "addEatEffect", "method_18865", "applyFoodEffects", "m_21236_"), "(Lcpr;)V");
    }

    static void applyFoodEffects(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_applyFoodEffects();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getEquipmentBreakStatus() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("g", "entityEventForEquipmentBreak", "method_20237", "getEquipmentBreakStatus", "m_21266_"), "(Lbsy;)B");
    }

    static jbyte getEquipmentBreakStatus(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getEquipmentBreakStatus();
       return MinecraftSDK::env->CallStaticByteMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_sendEquipmentBreakStatus() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "onEquippedItemBroken", "method_20235", "sendEquipmentBreakStatus", "m_339593_"), "(Lcul;Lbsy;)V");
    }

    static void sendEquipmentBreakStatus(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_sendEquipmentBreakStatus();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getSlotForHand() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("d", "getSlotForHand", "method_56079", "getSlotForHand", "m_322775_"), "(Lbqq;)Lbsy;");
    }

    static jobject getSlotForHand(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getSlotForHand();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getVisibilityBoundingBox() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h_", "getBoundingBoxForCulling", "method_5830", "getVisibilityBoundingBox", "m_6921_"), "()Lewx;");
    }

    static jobject getVisibilityBoundingBox(const jobject& obj) {
                
       const auto methodID = methodID_getVisibilityBoundingBox();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getPreferredEquipmentSlot() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "getEquipmentSlotForItem", "method_32326", "getPreferredEquipmentSlot", "m_147233_"), "(Lcuq;)Lbsy;");
    }

    static jobject getPreferredEquipmentSlot(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getPreferredEquipmentSlot();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getStackReference() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "createEquipmentSlotAccess", "method_32321", "getStackReference", "m_147195_"), "(Lbtn;Lbsy;)Lbug;");
    }

    static jobject getStackReference(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_getStackReference();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getEquipmentSlot() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("s", "getEquipmentSlot", "method_32322", "getEquipmentSlot", "m_147211_"), "(I)Lbsy;");
    }

    static jobject getEquipmentSlot(const jint& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getEquipmentSlot();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID__getStackReference() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a_", "getSlot", "method_32318", "getStackReference", "m_141942_"), "(I)Lbug;");
    }

    static jobject _getStackReference(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID__getStackReference();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_canFreeze() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("dC", "canFreeze", "method_32316", "canFreeze", "m_142079_"), "()Z");
    }

    static jboolean canFreeze(const jobject& obj) {
                
       const auto methodID = methodID_canFreeze();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isGlowing() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ch", "isCurrentlyGlowing", "method_5851", "isGlowing", "m_142038_"), "()Z");
    }

    static jboolean isGlowing(const jobject& obj) {
                
       const auto methodID = methodID_isGlowing();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getBodyYaw() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("dF", "getVisualRotationYInDegrees", "method_43078", "getBodyYaw", "m_213816_"), "()F");
    }

    static jfloat getBodyYaw(const jobject& obj) {
                
       const auto methodID = methodID_getBodyYaw();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID_onSpawnPacket() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "recreateFromPacket", "method_31471", "onSpawnPacket", "m_141965_"), "(Labv;)V");
    }

    static void onSpawnPacket(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onSpawnPacket();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_disablesShield() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("fK", "canDisableShield", "method_42149", "disablesShield", "m_213824_"), "()Z");
    }

    static jboolean disablesShield(const jobject& obj) {
                
       const auto methodID = methodID_disablesShield();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getStepHeight() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("dI", "maxUpStep", "method_49476", "getStepHeight", "m_274421_"), "()F");
    }

    static jfloat getStepHeight(const jobject& obj) {
                
       const auto methodID = methodID_getStepHeight();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID_getPassengerRidingPos() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("m", "getPassengerRidingPosition", "method_52538", "getPassengerRidingPos", "m_292590_"), "(Lbsr;)Lexc;");
    }

    static jobject getPassengerRidingPos(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getPassengerRidingPos();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_lerpHeadYaw() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "lerpHeadRotationStep", "method_52539", "lerpHeadYaw", "m_295933_"), "(ID)V");
    }

    static void lerpHeadYaw(const jobject& obj, const jint& arg0, const jdouble& arg1) {
                
       const auto methodID = methodID_lerpHeadYaw();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_setOnFireForTicks() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "igniteForTicks", "method_56073", "setOnFireForTicks", "m_319006_"), "(I)V");
    }

    static void setOnFireForTicks(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_setOnFireForTicks();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isInCreativeMode() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("fL", "hasInfiniteMaterials", "method_56992", "isInCreativeMode", "m_322042_"), "()Z");
    }

    static jboolean isInCreativeMode(const jobject& obj) {
                
       const auto methodID = methodID_isInCreativeMode();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isInvulnerableTo() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "isInvulnerableTo", "method_5679", "isInvulnerableTo", "m_6673_"), "(Lbrk;)Z");
    }

    static jboolean isInvulnerableTo(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_isInvulnerableTo();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_ENTITY_LIVINGENTITY_HPP