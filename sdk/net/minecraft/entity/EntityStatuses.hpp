// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ENTITY_ENTITYSTATUSES_HPP
#define NET_MINECRAFT_ENTITY_ENTITYSTATUSES_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.entity.EntityStatuses
 * Remapped: bsv
 */
namespace EntityStatuses {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("bsv", "net/minecraft/world/entity/EntityEvent", "net/minecraft/class_6024", "net/minecraft/entity/EntityStatuses", "net/minecraft/src/C_141066_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.entity.EntityStatuses#ADD_SPRINTING_PARTICLES_OR_RESET_SPAWNER_MINECART_SPAWN_DELAY
    [[maybe_unused]] static jbyte get_field_ADD_SPRINTING_PARTICLES_OR_RESET_SPAWNER_MINECART_SPAWN_DELAY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "JUMP", "field_30021", "ADD_SPRINTING_PARTICLES_OR_RESET_SPAWNER_MINECART_SPAWN_DELAY", "f_146997_"), "B");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticByteField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityStatuses#ADD_SPRINTING_PARTICLES_OR_RESET_SPAWNER_MINECART_SPAWN_DELAY
    [[maybe_unused]] static void set_field_ADD_SPRINTING_PARTICLES_OR_RESET_SPAWNER_MINECART_SPAWN_DELAY(const jbyte &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "JUMP", "field_30021", "ADD_SPRINTING_PARTICLES_OR_RESET_SPAWNER_MINECART_SPAWN_DELAY", "f_146997_"), "B");
        return MinecraftSDK::env->SetStaticByteField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityStatuses#PLAY_DEATH_SOUND_OR_ADD_PROJECTILE_HIT_PARTICLES
    [[maybe_unused]] static jbyte get_field_PLAY_DEATH_SOUND_OR_ADD_PROJECTILE_HIT_PARTICLES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "DEATH", "field_30028", "PLAY_DEATH_SOUND_OR_ADD_PROJECTILE_HIT_PARTICLES", "f_147007_"), "B");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticByteField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityStatuses#PLAY_DEATH_SOUND_OR_ADD_PROJECTILE_HIT_PARTICLES
    [[maybe_unused]] static void set_field_PLAY_DEATH_SOUND_OR_ADD_PROJECTILE_HIT_PARTICLES(const jbyte &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "DEATH", "field_30028", "PLAY_DEATH_SOUND_OR_ADD_PROJECTILE_HIT_PARTICLES", "f_147007_"), "B");
        return MinecraftSDK::env->SetStaticByteField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityStatuses#PLAY_ATTACK_SOUND
    [[maybe_unused]] static jbyte get_field_PLAY_ATTACK_SOUND() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "START_ATTACKING", "field_30029", "PLAY_ATTACK_SOUND", "f_147008_"), "B");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticByteField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityStatuses#PLAY_ATTACK_SOUND
    [[maybe_unused]] static void set_field_PLAY_ATTACK_SOUND(const jbyte &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "START_ATTACKING", "field_30029", "PLAY_ATTACK_SOUND", "f_147008_"), "B");
        return MinecraftSDK::env->SetStaticByteField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityStatuses#field_30030
    [[maybe_unused]] static jbyte get_field_field_30030() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "STOP_ATTACKING", "field_30030", "field_30030", "f_147009_"), "B");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticByteField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityStatuses#field_30030
    [[maybe_unused]] static void set_field_field_30030(const jbyte &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "STOP_ATTACKING", "field_30030", "field_30030", "f_147009_"), "B");
        return MinecraftSDK::env->SetStaticByteField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityStatuses#ADD_NEGATIVE_PLAYER_REACTION_PARTICLES
    [[maybe_unused]] static jbyte get_field_ADD_NEGATIVE_PLAYER_REACTION_PARTICLES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "TAMING_FAILED", "field_30031", "ADD_NEGATIVE_PLAYER_REACTION_PARTICLES", "f_147010_"), "B");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticByteField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityStatuses#ADD_NEGATIVE_PLAYER_REACTION_PARTICLES
    [[maybe_unused]] static void set_field_ADD_NEGATIVE_PLAYER_REACTION_PARTICLES(const jbyte &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "TAMING_FAILED", "field_30031", "ADD_NEGATIVE_PLAYER_REACTION_PARTICLES", "f_147010_"), "B");
        return MinecraftSDK::env->SetStaticByteField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityStatuses#ADD_POSITIVE_PLAYER_REACTION_PARTICLES
    [[maybe_unused]] static jbyte get_field_ADD_POSITIVE_PLAYER_REACTION_PARTICLES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "TAMING_SUCCEEDED", "field_30032", "ADD_POSITIVE_PLAYER_REACTION_PARTICLES", "f_147011_"), "B");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticByteField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityStatuses#ADD_POSITIVE_PLAYER_REACTION_PARTICLES
    [[maybe_unused]] static void set_field_ADD_POSITIVE_PLAYER_REACTION_PARTICLES(const jbyte &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "TAMING_SUCCEEDED", "field_30032", "ADD_POSITIVE_PLAYER_REACTION_PARTICLES", "f_147011_"), "B");
        return MinecraftSDK::env->SetStaticByteField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityStatuses#SHAKE_OFF_WATER
    [[maybe_unused]] static jbyte get_field_SHAKE_OFF_WATER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "SHAKE_WETNESS", "field_30033", "SHAKE_OFF_WATER", "f_147012_"), "B");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticByteField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityStatuses#SHAKE_OFF_WATER
    [[maybe_unused]] static void set_field_SHAKE_OFF_WATER(const jbyte &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "SHAKE_WETNESS", "field_30033", "SHAKE_OFF_WATER", "f_147012_"), "B");
        return MinecraftSDK::env->SetStaticByteField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityStatuses#CONSUME_ITEM
    [[maybe_unused]] static jbyte get_field_CONSUME_ITEM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "USE_ITEM_COMPLETE", "field_30034", "CONSUME_ITEM", "f_147013_"), "B");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticByteField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityStatuses#CONSUME_ITEM
    [[maybe_unused]] static void set_field_CONSUME_ITEM(const jbyte &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "USE_ITEM_COMPLETE", "field_30034", "CONSUME_ITEM", "f_147013_"), "B");
        return MinecraftSDK::env->SetStaticByteField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityStatuses#SET_SHEEP_EAT_GRASS_TIMER_OR_PRIME_TNT_MINECART
    [[maybe_unused]] static jbyte get_field_SET_SHEEP_EAT_GRASS_TIMER_OR_PRIME_TNT_MINECART() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "EAT_GRASS", "field_30035", "SET_SHEEP_EAT_GRASS_TIMER_OR_PRIME_TNT_MINECART", "f_147014_"), "B");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticByteField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityStatuses#SET_SHEEP_EAT_GRASS_TIMER_OR_PRIME_TNT_MINECART
    [[maybe_unused]] static void set_field_SET_SHEEP_EAT_GRASS_TIMER_OR_PRIME_TNT_MINECART(const jbyte &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "EAT_GRASS", "field_30035", "SET_SHEEP_EAT_GRASS_TIMER_OR_PRIME_TNT_MINECART", "f_147014_"), "B");
        return MinecraftSDK::env->SetStaticByteField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityStatuses#LOOK_AT_VILLAGER
    [[maybe_unused]] static jbyte get_field_LOOK_AT_VILLAGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "OFFER_FLOWER", "field_30036", "LOOK_AT_VILLAGER", "f_147015_"), "B");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticByteField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityStatuses#LOOK_AT_VILLAGER
    [[maybe_unused]] static void set_field_LOOK_AT_VILLAGER(const jbyte &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "OFFER_FLOWER", "field_30036", "LOOK_AT_VILLAGER", "f_147015_"), "B");
        return MinecraftSDK::env->SetStaticByteField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityStatuses#ADD_VILLAGER_HEART_PARTICLES
    [[maybe_unused]] static jbyte get_field_ADD_VILLAGER_HEART_PARTICLES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "LOVE_HEARTS", "field_30037", "ADD_VILLAGER_HEART_PARTICLES", "f_147016_"), "B");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticByteField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityStatuses#ADD_VILLAGER_HEART_PARTICLES
    [[maybe_unused]] static void set_field_ADD_VILLAGER_HEART_PARTICLES(const jbyte &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "LOVE_HEARTS", "field_30037", "ADD_VILLAGER_HEART_PARTICLES", "f_147016_"), "B");
        return MinecraftSDK::env->SetStaticByteField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityStatuses#ADD_VILLAGER_ANGRY_PARTICLES
    [[maybe_unused]] static jbyte get_field_ADD_VILLAGER_ANGRY_PARTICLES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "VILLAGER_ANGRY", "field_30038", "ADD_VILLAGER_ANGRY_PARTICLES", "f_147017_"), "B");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticByteField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityStatuses#ADD_VILLAGER_ANGRY_PARTICLES
    [[maybe_unused]] static void set_field_ADD_VILLAGER_ANGRY_PARTICLES(const jbyte &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "VILLAGER_ANGRY", "field_30038", "ADD_VILLAGER_ANGRY_PARTICLES", "f_147017_"), "B");
        return MinecraftSDK::env->SetStaticByteField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityStatuses#ADD_VILLAGER_HAPPY_PARTICLES
    [[maybe_unused]] static jbyte get_field_ADD_VILLAGER_HAPPY_PARTICLES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "VILLAGER_HAPPY", "field_30039", "ADD_VILLAGER_HAPPY_PARTICLES", "f_147018_"), "B");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticByteField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityStatuses#ADD_VILLAGER_HAPPY_PARTICLES
    [[maybe_unused]] static void set_field_ADD_VILLAGER_HAPPY_PARTICLES(const jbyte &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "VILLAGER_HAPPY", "field_30039", "ADD_VILLAGER_HAPPY_PARTICLES", "f_147018_"), "B");
        return MinecraftSDK::env->SetStaticByteField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityStatuses#ADD_WITCH_PARTICLES
    [[maybe_unused]] static jbyte get_field_ADD_WITCH_PARTICLES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "WITCH_HAT_MAGIC", "field_30040", "ADD_WITCH_PARTICLES", "f_147019_"), "B");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticByteField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityStatuses#ADD_WITCH_PARTICLES
    [[maybe_unused]] static void set_field_ADD_WITCH_PARTICLES(const jbyte &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "WITCH_HAT_MAGIC", "field_30040", "ADD_WITCH_PARTICLES", "f_147019_"), "B");
        return MinecraftSDK::env->SetStaticByteField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityStatuses#PLAY_CURE_ZOMBIE_VILLAGER_SOUND
    [[maybe_unused]] static jbyte get_field_PLAY_CURE_ZOMBIE_VILLAGER_SOUND() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "ZOMBIE_CONVERTING", "field_30041", "PLAY_CURE_ZOMBIE_VILLAGER_SOUND", "f_147020_"), "B");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticByteField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityStatuses#PLAY_CURE_ZOMBIE_VILLAGER_SOUND
    [[maybe_unused]] static void set_field_PLAY_CURE_ZOMBIE_VILLAGER_SOUND(const jbyte &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "ZOMBIE_CONVERTING", "field_30041", "PLAY_CURE_ZOMBIE_VILLAGER_SOUND", "f_147020_"), "B");
        return MinecraftSDK::env->SetStaticByteField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityStatuses#EXPLODE_FIREWORK_CLIENT
    [[maybe_unused]] static jbyte get_field_EXPLODE_FIREWORK_CLIENT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "FIREWORKS_EXPLODE", "field_30042", "EXPLODE_FIREWORK_CLIENT", "f_147021_"), "B");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticByteField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityStatuses#EXPLODE_FIREWORK_CLIENT
    [[maybe_unused]] static void set_field_EXPLODE_FIREWORK_CLIENT(const jbyte &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "FIREWORKS_EXPLODE", "field_30042", "EXPLODE_FIREWORK_CLIENT", "f_147021_"), "B");
        return MinecraftSDK::env->SetStaticByteField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityStatuses#ADD_BREEDING_PARTICLES
    [[maybe_unused]] static jbyte get_field_ADD_BREEDING_PARTICLES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "IN_LOVE_HEARTS", "field_30043", "ADD_BREEDING_PARTICLES", "f_147022_"), "B");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticByteField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityStatuses#ADD_BREEDING_PARTICLES
    [[maybe_unused]] static void set_field_ADD_BREEDING_PARTICLES(const jbyte &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "IN_LOVE_HEARTS", "field_30043", "ADD_BREEDING_PARTICLES", "f_147022_"), "B");
        return MinecraftSDK::env->SetStaticByteField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityStatuses#RESET_SQUID_THRUST_TIMER
    [[maybe_unused]] static jbyte get_field_RESET_SQUID_THRUST_TIMER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "SQUID_ANIM_SYNCH", "field_30044", "RESET_SQUID_THRUST_TIMER", "f_147023_"), "B");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticByteField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityStatuses#RESET_SQUID_THRUST_TIMER
    [[maybe_unused]] static void set_field_RESET_SQUID_THRUST_TIMER(const jbyte &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "SQUID_ANIM_SYNCH", "field_30044", "RESET_SQUID_THRUST_TIMER", "f_147023_"), "B");
        return MinecraftSDK::env->SetStaticByteField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityStatuses#PLAY_SPAWN_EFFECTS
    [[maybe_unused]] static jbyte get_field_PLAY_SPAWN_EFFECTS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "SILVERFISH_MERGE_ANIM", "field_30045", "PLAY_SPAWN_EFFECTS", "f_147024_"), "B");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticByteField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityStatuses#PLAY_SPAWN_EFFECTS
    [[maybe_unused]] static void set_field_PLAY_SPAWN_EFFECTS(const jbyte &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "SILVERFISH_MERGE_ANIM", "field_30045", "PLAY_SPAWN_EFFECTS", "f_147024_"), "B");
        return MinecraftSDK::env->SetStaticByteField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityStatuses#PLAY_GUARDIAN_ATTACK_SOUND
    [[maybe_unused]] static jbyte get_field_PLAY_GUARDIAN_ATTACK_SOUND() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "GUARDIAN_ATTACK_SOUND", "field_30046", "PLAY_GUARDIAN_ATTACK_SOUND", "f_147025_"), "B");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticByteField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityStatuses#PLAY_GUARDIAN_ATTACK_SOUND
    [[maybe_unused]] static void set_field_PLAY_GUARDIAN_ATTACK_SOUND(const jbyte &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "GUARDIAN_ATTACK_SOUND", "field_30046", "PLAY_GUARDIAN_ATTACK_SOUND", "f_147025_"), "B");
        return MinecraftSDK::env->SetStaticByteField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityStatuses#USE_REDUCED_DEBUG_INFO
    [[maybe_unused]] static jbyte get_field_USE_REDUCED_DEBUG_INFO() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "REDUCED_DEBUG_INFO", "field_30047", "USE_REDUCED_DEBUG_INFO", "f_147026_"), "B");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticByteField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityStatuses#USE_REDUCED_DEBUG_INFO
    [[maybe_unused]] static void set_field_USE_REDUCED_DEBUG_INFO(const jbyte &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "REDUCED_DEBUG_INFO", "field_30047", "USE_REDUCED_DEBUG_INFO", "f_147026_"), "B");
        return MinecraftSDK::env->SetStaticByteField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityStatuses#USE_FULL_DEBUG_INFO
    [[maybe_unused]] static jbyte get_field_USE_FULL_DEBUG_INFO() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "FULL_DEBUG_INFO", "field_30048", "USE_FULL_DEBUG_INFO", "f_147027_"), "B");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticByteField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityStatuses#USE_FULL_DEBUG_INFO
    [[maybe_unused]] static void set_field_USE_FULL_DEBUG_INFO(const jbyte &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "FULL_DEBUG_INFO", "field_30048", "USE_FULL_DEBUG_INFO", "f_147027_"), "B");
        return MinecraftSDK::env->SetStaticByteField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityStatuses#SET_OP_LEVEL_0
    [[maybe_unused]] static jbyte get_field_SET_OP_LEVEL_0() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "PERMISSION_LEVEL_ALL", "field_30049", "SET_OP_LEVEL_0", "f_147028_"), "B");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticByteField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityStatuses#SET_OP_LEVEL_0
    [[maybe_unused]] static void set_field_SET_OP_LEVEL_0(const jbyte &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "PERMISSION_LEVEL_ALL", "field_30049", "SET_OP_LEVEL_0", "f_147028_"), "B");
        return MinecraftSDK::env->SetStaticByteField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityStatuses#SET_OP_LEVEL_1
    [[maybe_unused]] static jbyte get_field_SET_OP_LEVEL_1() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "PERMISSION_LEVEL_MODERATORS", "field_30050", "SET_OP_LEVEL_1", "f_147029_"), "B");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticByteField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityStatuses#SET_OP_LEVEL_1
    [[maybe_unused]] static void set_field_SET_OP_LEVEL_1(const jbyte &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "PERMISSION_LEVEL_MODERATORS", "field_30050", "SET_OP_LEVEL_1", "f_147029_"), "B");
        return MinecraftSDK::env->SetStaticByteField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityStatuses#SET_OP_LEVEL_2
    [[maybe_unused]] static jbyte get_field_SET_OP_LEVEL_2() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("y", "PERMISSION_LEVEL_GAMEMASTERS", "field_30051", "SET_OP_LEVEL_2", "f_147030_"), "B");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticByteField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityStatuses#SET_OP_LEVEL_2
    [[maybe_unused]] static void set_field_SET_OP_LEVEL_2(const jbyte &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("y", "PERMISSION_LEVEL_GAMEMASTERS", "field_30051", "SET_OP_LEVEL_2", "f_147030_"), "B");
        return MinecraftSDK::env->SetStaticByteField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityStatuses#SET_OP_LEVEL_3
    [[maybe_unused]] static jbyte get_field_SET_OP_LEVEL_3() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("z", "PERMISSION_LEVEL_ADMINS", "field_29995", "SET_OP_LEVEL_3", "f_146971_"), "B");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticByteField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityStatuses#SET_OP_LEVEL_3
    [[maybe_unused]] static void set_field_SET_OP_LEVEL_3(const jbyte &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("z", "PERMISSION_LEVEL_ADMINS", "field_29995", "SET_OP_LEVEL_3", "f_146971_"), "B");
        return MinecraftSDK::env->SetStaticByteField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityStatuses#SET_OP_LEVEL_4
    [[maybe_unused]] static jbyte get_field_SET_OP_LEVEL_4() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("A", "PERMISSION_LEVEL_OWNERS", "field_29996", "SET_OP_LEVEL_4", "f_146972_"), "B");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticByteField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityStatuses#SET_OP_LEVEL_4
    [[maybe_unused]] static void set_field_SET_OP_LEVEL_4(const jbyte &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("A", "PERMISSION_LEVEL_OWNERS", "field_29996", "SET_OP_LEVEL_4", "f_146972_"), "B");
        return MinecraftSDK::env->SetStaticByteField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityStatuses#BLOCK_WITH_SHIELD
    [[maybe_unused]] static jbyte get_field_BLOCK_WITH_SHIELD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("B", "ATTACK_BLOCKED", "field_29997", "BLOCK_WITH_SHIELD", "f_146973_"), "B");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticByteField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityStatuses#BLOCK_WITH_SHIELD
    [[maybe_unused]] static void set_field_BLOCK_WITH_SHIELD(const jbyte &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("B", "ATTACK_BLOCKED", "field_29997", "BLOCK_WITH_SHIELD", "f_146973_"), "B");
        return MinecraftSDK::env->SetStaticByteField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityStatuses#BREAK_SHIELD
    [[maybe_unused]] static jbyte get_field_BREAK_SHIELD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("C", "SHIELD_DISABLED", "field_29998", "BREAK_SHIELD", "f_146974_"), "B");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticByteField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityStatuses#BREAK_SHIELD
    [[maybe_unused]] static void set_field_BREAK_SHIELD(const jbyte &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("C", "SHIELD_DISABLED", "field_29998", "BREAK_SHIELD", "f_146974_"), "B");
        return MinecraftSDK::env->SetStaticByteField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityStatuses#PULL_HOOKED_ENTITY
    [[maybe_unused]] static jbyte get_field_PULL_HOOKED_ENTITY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("D", "FISHING_ROD_REEL_IN", "field_29999", "PULL_HOOKED_ENTITY", "f_146975_"), "B");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticByteField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityStatuses#PULL_HOOKED_ENTITY
    [[maybe_unused]] static void set_field_PULL_HOOKED_ENTITY(const jbyte &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("D", "FISHING_ROD_REEL_IN", "field_29999", "PULL_HOOKED_ENTITY", "f_146975_"), "B");
        return MinecraftSDK::env->SetStaticByteField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityStatuses#HIT_ARMOR_STAND
    [[maybe_unused]] static jbyte get_field_HIT_ARMOR_STAND() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("E", "ARMORSTAND_WOBBLE", "field_30000", "HIT_ARMOR_STAND", "f_146976_"), "B");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticByteField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityStatuses#HIT_ARMOR_STAND
    [[maybe_unused]] static void set_field_HIT_ARMOR_STAND(const jbyte &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("E", "ARMORSTAND_WOBBLE", "field_30000", "HIT_ARMOR_STAND", "f_146976_"), "B");
        return MinecraftSDK::env->SetStaticByteField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityStatuses#STOP_LOOKING_AT_VILLAGER
    [[maybe_unused]] static jbyte get_field_STOP_LOOKING_AT_VILLAGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("F", "STOP_OFFER_FLOWER", "field_30002", "STOP_LOOKING_AT_VILLAGER", "f_146978_"), "B");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticByteField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityStatuses#STOP_LOOKING_AT_VILLAGER
    [[maybe_unused]] static void set_field_STOP_LOOKING_AT_VILLAGER(const jbyte &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("F", "STOP_OFFER_FLOWER", "field_30002", "STOP_LOOKING_AT_VILLAGER", "f_146978_"), "B");
        return MinecraftSDK::env->SetStaticByteField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityStatuses#USE_TOTEM_OF_UNDYING
    [[maybe_unused]] static jbyte get_field_USE_TOTEM_OF_UNDYING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("G", "TALISMAN_ACTIVATE", "field_30003", "USE_TOTEM_OF_UNDYING", "f_146979_"), "B");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticByteField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityStatuses#USE_TOTEM_OF_UNDYING
    [[maybe_unused]] static void set_field_USE_TOTEM_OF_UNDYING(const jbyte &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("G", "TALISMAN_ACTIVATE", "field_30003", "USE_TOTEM_OF_UNDYING", "f_146979_"), "B");
        return MinecraftSDK::env->SetStaticByteField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityStatuses#ADD_DOLPHIN_HAPPY_VILLAGER_PARTICLES
    [[maybe_unused]] static jbyte get_field_ADD_DOLPHIN_HAPPY_VILLAGER_PARTICLES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("H", "DOLPHIN_LOOKING_FOR_TREASURE", "field_30006", "ADD_DOLPHIN_HAPPY_VILLAGER_PARTICLES", "f_146982_"), "B");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticByteField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityStatuses#ADD_DOLPHIN_HAPPY_VILLAGER_PARTICLES
    [[maybe_unused]] static void set_field_ADD_DOLPHIN_HAPPY_VILLAGER_PARTICLES(const jbyte &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("H", "DOLPHIN_LOOKING_FOR_TREASURE", "field_30006", "ADD_DOLPHIN_HAPPY_VILLAGER_PARTICLES", "f_146982_"), "B");
        return MinecraftSDK::env->SetStaticByteField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityStatuses#STUN_RAVAGER
    [[maybe_unused]] static jbyte get_field_STUN_RAVAGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("I", "RAVAGER_STUNNED", "field_30007", "STUN_RAVAGER", "f_146983_"), "B");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticByteField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityStatuses#STUN_RAVAGER
    [[maybe_unused]] static void set_field_STUN_RAVAGER(const jbyte &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("I", "RAVAGER_STUNNED", "field_30007", "STUN_RAVAGER", "f_146983_"), "B");
        return MinecraftSDK::env->SetStaticByteField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityStatuses#TAME_OCELOT_FAILED
    [[maybe_unused]] static jbyte get_field_TAME_OCELOT_FAILED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("J", "TRUSTING_FAILED", "field_30008", "TAME_OCELOT_FAILED", "f_146984_"), "B");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticByteField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityStatuses#TAME_OCELOT_FAILED
    [[maybe_unused]] static void set_field_TAME_OCELOT_FAILED(const jbyte &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("J", "TRUSTING_FAILED", "field_30008", "TAME_OCELOT_FAILED", "f_146984_"), "B");
        return MinecraftSDK::env->SetStaticByteField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityStatuses#TAME_OCELOT_SUCCESS
    [[maybe_unused]] static jbyte get_field_TAME_OCELOT_SUCCESS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("K", "TRUSTING_SUCCEEDED", "field_30009", "TAME_OCELOT_SUCCESS", "f_146985_"), "B");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticByteField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityStatuses#TAME_OCELOT_SUCCESS
    [[maybe_unused]] static void set_field_TAME_OCELOT_SUCCESS(const jbyte &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("K", "TRUSTING_SUCCEEDED", "field_30009", "TAME_OCELOT_SUCCESS", "f_146985_"), "B");
        return MinecraftSDK::env->SetStaticByteField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityStatuses#ADD_SPLASH_PARTICLES
    [[maybe_unused]] static jbyte get_field_ADD_SPLASH_PARTICLES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("L", "VILLAGER_SWEAT", "field_30010", "ADD_SPLASH_PARTICLES", "f_146986_"), "B");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticByteField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityStatuses#ADD_SPLASH_PARTICLES
    [[maybe_unused]] static void set_field_ADD_SPLASH_PARTICLES(const jbyte &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("L", "VILLAGER_SWEAT", "field_30010", "ADD_SPLASH_PARTICLES", "f_146986_"), "B");
        return MinecraftSDK::env->SetStaticByteField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityStatuses#CREATE_EATING_PARTICLES
    [[maybe_unused]] static jbyte get_field_CREATE_EATING_PARTICLES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("M", "FOX_EAT", "field_30013", "CREATE_EATING_PARTICLES", "f_146989_"), "B");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticByteField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityStatuses#CREATE_EATING_PARTICLES
    [[maybe_unused]] static void set_field_CREATE_EATING_PARTICLES(const jbyte &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("M", "FOX_EAT", "field_30013", "CREATE_EATING_PARTICLES", "f_146989_"), "B");
        return MinecraftSDK::env->SetStaticByteField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityStatuses#ADD_PORTAL_PARTICLES
    [[maybe_unused]] static jbyte get_field_ADD_PORTAL_PARTICLES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("N", "TELEPORT", "field_30014", "ADD_PORTAL_PARTICLES", "f_146990_"), "B");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticByteField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityStatuses#ADD_PORTAL_PARTICLES
    [[maybe_unused]] static void set_field_ADD_PORTAL_PARTICLES(const jbyte &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("N", "TELEPORT", "field_30014", "ADD_PORTAL_PARTICLES", "f_146990_"), "B");
        return MinecraftSDK::env->SetStaticByteField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityStatuses#BREAK_MAINHAND
    [[maybe_unused]] static jbyte get_field_BREAK_MAINHAND() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("O", "MAINHAND_BREAK", "field_30015", "BREAK_MAINHAND", "f_146991_"), "B");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticByteField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityStatuses#BREAK_MAINHAND
    [[maybe_unused]] static void set_field_BREAK_MAINHAND(const jbyte &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("O", "MAINHAND_BREAK", "field_30015", "BREAK_MAINHAND", "f_146991_"), "B");
        return MinecraftSDK::env->SetStaticByteField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityStatuses#BREAK_OFFHAND
    [[maybe_unused]] static jbyte get_field_BREAK_OFFHAND() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("P", "OFFHAND_BREAK", "field_30016", "BREAK_OFFHAND", "f_146992_"), "B");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticByteField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityStatuses#BREAK_OFFHAND
    [[maybe_unused]] static void set_field_BREAK_OFFHAND(const jbyte &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("P", "OFFHAND_BREAK", "field_30016", "BREAK_OFFHAND", "f_146992_"), "B");
        return MinecraftSDK::env->SetStaticByteField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityStatuses#BREAK_HEAD
    [[maybe_unused]] static jbyte get_field_BREAK_HEAD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Q", "HEAD_BREAK", "field_30017", "BREAK_HEAD", "f_146993_"), "B");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticByteField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityStatuses#BREAK_HEAD
    [[maybe_unused]] static void set_field_BREAK_HEAD(const jbyte &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Q", "HEAD_BREAK", "field_30017", "BREAK_HEAD", "f_146993_"), "B");
        return MinecraftSDK::env->SetStaticByteField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityStatuses#BREAK_CHEST
    [[maybe_unused]] static jbyte get_field_BREAK_CHEST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("R", "CHEST_BREAK", "field_30018", "BREAK_CHEST", "f_146994_"), "B");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticByteField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityStatuses#BREAK_CHEST
    [[maybe_unused]] static void set_field_BREAK_CHEST(const jbyte &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("R", "CHEST_BREAK", "field_30018", "BREAK_CHEST", "f_146994_"), "B");
        return MinecraftSDK::env->SetStaticByteField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityStatuses#BREAK_LEGS
    [[maybe_unused]] static jbyte get_field_BREAK_LEGS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("S", "LEGS_BREAK", "field_30019", "BREAK_LEGS", "f_146995_"), "B");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticByteField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityStatuses#BREAK_LEGS
    [[maybe_unused]] static void set_field_BREAK_LEGS(const jbyte &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("S", "LEGS_BREAK", "field_30019", "BREAK_LEGS", "f_146995_"), "B");
        return MinecraftSDK::env->SetStaticByteField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityStatuses#BREAK_FEET
    [[maybe_unused]] static jbyte get_field_BREAK_FEET() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("T", "FEET_BREAK", "field_30020", "BREAK_FEET", "f_146996_"), "B");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticByteField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityStatuses#BREAK_FEET
    [[maybe_unused]] static void set_field_BREAK_FEET(const jbyte &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("T", "FEET_BREAK", "field_30020", "BREAK_FEET", "f_146996_"), "B");
        return MinecraftSDK::env->SetStaticByteField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityStatuses#DRIP_HONEY
    [[maybe_unused]] static jbyte get_field_DRIP_HONEY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("U", "HONEY_SLIDE", "field_30022", "DRIP_HONEY", "f_146998_"), "B");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticByteField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityStatuses#DRIP_HONEY
    [[maybe_unused]] static void set_field_DRIP_HONEY(const jbyte &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("U", "HONEY_SLIDE", "field_30022", "DRIP_HONEY", "f_146998_"), "B");
        return MinecraftSDK::env->SetStaticByteField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityStatuses#DRIP_RICH_HONEY
    [[maybe_unused]] static jbyte get_field_DRIP_RICH_HONEY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("V", "HONEY_JUMP", "field_30023", "DRIP_RICH_HONEY", "f_146999_"), "B");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticByteField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityStatuses#DRIP_RICH_HONEY
    [[maybe_unused]] static void set_field_DRIP_RICH_HONEY(const jbyte &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("V", "HONEY_JUMP", "field_30023", "DRIP_RICH_HONEY", "f_146999_"), "B");
        return MinecraftSDK::env->SetStaticByteField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityStatuses#SWAP_HANDS
    [[maybe_unused]] static jbyte get_field_SWAP_HANDS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("W", "SWAP_HANDS", "field_30024", "SWAP_HANDS", "f_147000_"), "B");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticByteField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityStatuses#SWAP_HANDS
    [[maybe_unused]] static void set_field_SWAP_HANDS(const jbyte &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("W", "SWAP_HANDS", "field_30024", "SWAP_HANDS", "f_147000_"), "B");
        return MinecraftSDK::env->SetStaticByteField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityStatuses#RESET_WOLF_SHAKE
    [[maybe_unused]] static jbyte get_field_RESET_WOLF_SHAKE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("X", "CANCEL_SHAKE_WETNESS", "field_30025", "RESET_WOLF_SHAKE", "f_147001_"), "B");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticByteField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityStatuses#RESET_WOLF_SHAKE
    [[maybe_unused]] static void set_field_RESET_WOLF_SHAKE(const jbyte &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("X", "CANCEL_SHAKE_WETNESS", "field_30025", "RESET_WOLF_SHAKE", "f_147001_"), "B");
        return MinecraftSDK::env->SetStaticByteField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityStatuses#PREPARE_RAM
    [[maybe_unused]] static jbyte get_field_PREPARE_RAM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Y", "START_RAM", "field_33454", "PREPARE_RAM", "f_147003_"), "B");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticByteField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityStatuses#PREPARE_RAM
    [[maybe_unused]] static void set_field_PREPARE_RAM(const jbyte &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Y", "START_RAM", "field_33454", "PREPARE_RAM", "f_147003_"), "B");
        return MinecraftSDK::env->SetStaticByteField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityStatuses#FINISH_RAM
    [[maybe_unused]] static jbyte get_field_FINISH_RAM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Z", "END_RAM", "field_33455", "FINISH_RAM", "f_147004_"), "B");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticByteField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityStatuses#FINISH_RAM
    [[maybe_unused]] static void set_field_FINISH_RAM(const jbyte &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Z", "END_RAM", "field_33455", "FINISH_RAM", "f_147004_"), "B");
        return MinecraftSDK::env->SetStaticByteField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityStatuses#ADD_DEATH_PARTICLES
    [[maybe_unused]] static jbyte get_field_ADD_DEATH_PARTICLES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aa", "POOF", "field_33691", "ADD_DEATH_PARTICLES", "f_147005_"), "B");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticByteField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityStatuses#ADD_DEATH_PARTICLES
    [[maybe_unused]] static void set_field_ADD_DEATH_PARTICLES(const jbyte &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aa", "POOF", "field_33691", "ADD_DEATH_PARTICLES", "f_147005_"), "B");
        return MinecraftSDK::env->SetStaticByteField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityStatuses#EARS_TWITCH
    [[maybe_unused]] static jbyte get_field_EARS_TWITCH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ab", "TENDRILS_SHIVER", "field_38094", "EARS_TWITCH", "f_217010_"), "B");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticByteField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityStatuses#EARS_TWITCH
    [[maybe_unused]] static void set_field_EARS_TWITCH(const jbyte &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ab", "TENDRILS_SHIVER", "field_38094", "EARS_TWITCH", "f_217010_"), "B");
        return MinecraftSDK::env->SetStaticByteField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityStatuses#SONIC_BOOM
    [[maybe_unused]] static jbyte get_field_SONIC_BOOM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ac", "SONIC_CHARGE", "field_38847", "SONIC_BOOM", "f_217011_"), "B");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticByteField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityStatuses#SONIC_BOOM
    [[maybe_unused]] static void set_field_SONIC_BOOM(const jbyte &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ac", "SONIC_CHARGE", "field_38847", "SONIC_BOOM", "f_217011_"), "B");
        return MinecraftSDK::env->SetStaticByteField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityStatuses#START_DIGGING
    [[maybe_unused]] static jbyte get_field_START_DIGGING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ad", "SNIFFER_DIGGING_SOUND", "field_42621", "START_DIGGING", "f_271335_"), "B");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticByteField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityStatuses#START_DIGGING
    [[maybe_unused]] static void set_field_START_DIGGING(const jbyte &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ad", "SNIFFER_DIGGING_SOUND", "field_42621", "START_DIGGING", "f_271335_"), "B");
        return MinecraftSDK::env->SetStaticByteField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityStatuses#PEEKING
    [[maybe_unused]] static jbyte get_field_PEEKING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ae", "ARMADILLO_PEEK", "field_49074", "PEEKING", "f_316225_"), "B");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticByteField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityStatuses#PEEKING
    [[maybe_unused]] static void set_field_PEEKING(const jbyte &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ae", "ARMADILLO_PEEK", "field_49074", "PEEKING", "f_316225_"), "B");
        return MinecraftSDK::env->SetStaticByteField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityStatuses#BREAK_BODY
    [[maybe_unused]] static jbyte get_field_BREAK_BODY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("af", "BODY_BREAK", "field_49215", "BREAK_BODY", "f_315538_"), "B");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticByteField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityStatuses#BREAK_BODY
    [[maybe_unused]] static void set_field_BREAK_BODY(const jbyte &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("af", "BODY_BREAK", "field_49215", "BREAK_BODY", "f_315538_"), "B");
        return MinecraftSDK::env->SetStaticByteField(clazz, fieldID, value);
    };

};

#endif // NET_MINECRAFT_ENTITY_ENTITYSTATUSES_HPP