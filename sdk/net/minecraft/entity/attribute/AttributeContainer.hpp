// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ENTITY_ATTRIBUTE_ATTRIBUTECONTAINER_HPP
#define NET_MINECRAFT_ENTITY_ATTRIBUTE_ATTRIBUTECONTAINER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.entity.attribute.AttributeContainer
 * Remapped: but
 */
namespace AttributeContainer {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("but", "net/minecraft/world/entity/ai/attributes/AttributeMap", "net/minecraft/class_5131", "net/minecraft/entity/attribute/AttributeContainer", "net/minecraft/src/C_554_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.entity.attribute.AttributeContainer#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LOGGER", "field_23708", "LOGGER", "f_22138_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.attribute.AttributeContainer#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LOGGER", "field_23708", "LOGGER", "f_22138_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.entity.attribute.AttributeContainer#custom
    static jobject get_field_custom(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "attributes", "field_23709", "custom", "f_22139_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.attribute.AttributeContainer#custom
    static void set_field_custom(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "attributes", "field_23709", "custom", "f_22139_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.attribute.AttributeContainer#tracked
    static jobject get_field_tracked(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "attributesToSync", "field_51889", "tracked", "f_337611_"), "Ljava/util/Set;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.attribute.AttributeContainer#tracked
    static void set_field_tracked(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "attributesToSync", "field_51889", "tracked", "f_337611_"), "Ljava/util/Set;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.attribute.AttributeContainer#pendingUpdate
    static jobject get_field_pendingUpdate(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "attributesToUpdate", "field_51890", "pendingUpdate", "f_336629_"), "Ljava/util/Set;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.attribute.AttributeContainer#pendingUpdate
    static void set_field_pendingUpdate(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "attributesToUpdate", "field_51890", "pendingUpdate", "f_336629_"), "Ljava/util/Set;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.attribute.AttributeContainer#fallback
    static jobject get_field_fallback(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "supplier", "field_23711", "fallback", "f_22141_"), "Lbuv;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.attribute.AttributeContainer#fallback
    static void set_field_fallback(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "supplier", "field_23711", "fallback", "f_22141_"), "Lbuv;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_updateTrackedStatus() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "onAttributeModified", "method_26845", "updateTrackedStatus", "m_22157_"), "(Lbus;)V");
    }

    static void updateTrackedStatus(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_updateTrackedStatus();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getTracked() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getAttributesToSync", "method_60497", "getTracked", "m_340581_"), "()Ljava/util/Set;");
    }

    static jobject getTracked(const jobject& obj) {
                
       const auto methodID = methodID_getTracked();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getPendingUpdate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getAttributesToUpdate", "method_60498", "getPendingUpdate", "m_338778_"), "()Ljava/util/Set;");
    }

    static jobject getPendingUpdate(const jobject& obj) {
                
       const auto methodID = methodID_getPendingUpdate();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getAttributesToSend() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getSyncableAttributes", "method_26851", "getAttributesToSend", "m_22170_"), "()Ljava/util/Collection;");
    }

    static jobject getAttributesToSend(const jobject& obj) {
                
       const auto methodID = methodID_getAttributesToSend();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getCustomInstance() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getInstance", "method_45329", "getCustomInstance", "m_246600_"), "(Ljm;)Lbus;");
    }

    static jobject getCustomInstance(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getCustomInstance();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_hasAttribute() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "hasAttribute", "method_45331", "hasAttribute", "m_247503_"), "(Ljm;)Z");
    }

    static jboolean hasAttribute(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_hasAttribute();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_hasModifierForAttribute() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "hasModifier", "method_45330", "hasModifierForAttribute", "m_245160_"), "(Ljm;Lakr;)Z");
    }

    static jboolean hasModifierForAttribute(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_hasModifierForAttribute();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getValue() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getValue", "method_26852", "getValue", "m_22181_"), "(Ljm;)D");
    }

    static jdouble getValue(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getValue();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getBaseValue() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getBaseValue", "method_26856", "getBaseValue", "m_22185_"), "(Ljm;)D");
    }

    static jdouble getBaseValue(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getBaseValue();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getModifierValue() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getModifierValue", "method_45332", "getModifierValue", "m_246117_"), "(Ljm;Lakr;)D");
    }

    static jdouble getModifierValue(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_getModifierValue();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_addTemporaryModifiers() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "addTransientAttributeModifiers", "method_59932", "addTemporaryModifiers", "m_338988_"), "(Lcom/google/common/collect/Multimap;)V");
    }

    static void addTemporaryModifiers(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_addTemporaryModifiers();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_removeModifiers() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "removeAttributeModifiers", "method_59935", "removeModifiers", "m_338497_"), "(Lcom/google/common/collect/Multimap;)V");
    }

    static void removeModifiers(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_removeModifiers();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setFrom() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "assignAllValues", "method_26846", "setFrom", "m_22159_"), "(Lbut;)V");
    }

    static void setFrom(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setFrom();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setBaseFrom() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "assignBaseValues", "method_60614", "setBaseFrom", "m_339388_"), "(Lbut;)V");
    }

    static void setBaseFrom(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setBaseFrom();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_toNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "save", "method_26855", "toNbt", "m_22180_"), "()Luh;");
    }

    static jobject toNbt(const jobject& obj) {
                
       const auto methodID = methodID_toNbt();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_readNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "load", "method_26850", "readNbt", "m_22168_"), "(Luh;)V");
    }

    static void readNbt(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_readNbt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_ENTITY_ATTRIBUTE_ATTRIBUTECONTAINER_HPP