// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ENTITY_ATTRIBUTE_CLAMPEDENTITYATTRIBUTE_HPP
#define NET_MINECRAFT_ENTITY_ATTRIBUTE_CLAMPEDENTITYATTRIBUTE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.entity.attribute.ClampedEntityAttribute
 * Remapped: buy
 */
namespace ClampedEntityAttribute {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("buy", "net/minecraft/world/entity/ai/attributes/RangedAttribute", "net/minecraft/class_1329", "net/minecraft/entity/attribute/ClampedEntityAttribute", "net/minecraft/src/C_561_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.entity.attribute.ClampedEntityAttribute#minValue
    static jdouble get_field_minValue(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "minValue", "field_6353", "minValue", "f_22307_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetDoubleField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.attribute.ClampedEntityAttribute#minValue
    static void set_field_minValue(const jobject &obj, const jdouble &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "minValue", "field_6353", "minValue", "f_22307_"), "D");
        return MinecraftSDK::env->SetDoubleField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.attribute.ClampedEntityAttribute#maxValue
    static jdouble get_field_maxValue(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "maxValue", "field_6351", "maxValue", "f_22308_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetDoubleField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.attribute.ClampedEntityAttribute#maxValue
    static void set_field_maxValue(const jobject &obj, const jdouble &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "maxValue", "field_6351", "maxValue", "f_22308_"), "D");
        return MinecraftSDK::env->SetDoubleField(obj, fieldID, value);
    };

    static jmethodID methodID_getMinValue() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getMinValue", "method_35061", "getMinValue", "m_147361_"), "()D");
    }

    static jdouble getMinValue(const jobject& obj) {
                
       const auto methodID = methodID_getMinValue();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID);
    };
    
    static jmethodID methodID_getMaxValue() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "getMaxValue", "method_35062", "getMaxValue", "m_147362_"), "()D");
    }

    static jdouble getMaxValue(const jobject& obj) {
                
       const auto methodID = methodID_getMaxValue();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID);
    };
    
    static jmethodID methodID_clamp() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "sanitizeValue", "method_6165", "clamp", "m_6740_"), "(D)D");
    }

    static jdouble clamp(const jobject& obj, const jdouble& arg0) {
                
       const auto methodID = methodID_clamp();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_ENTITY_ATTRIBUTE_CLAMPEDENTITYATTRIBUTE_HPP