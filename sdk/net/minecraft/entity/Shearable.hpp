// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ENTITY_SHEARABLE_HPP
#define NET_MINECRAFT_ENTITY_SHEARABLE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.entity.Shearable
 * Remapped: buf
 */
namespace Shearable {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("buf", "net/minecraft/world/entity/Shearable", "net/minecraft/class_5147", "net/minecraft/entity/Shearable", "net/minecraft/src/C_541_"));
        }
        return cachedClass;
    };

    static jmethodID methodID_sheared() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "shear", "method_6636", "sheared", "m_5851_"), "(Lavq;)V");
    }

    static void sheared(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_sheared();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isShearable() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "readyForShearing", "method_27072", "isShearable", "m_6220_"), "()Z");
    }

    static jboolean isShearable(const jobject& obj) {
                
       const auto methodID = methodID_isShearable();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_ENTITY_SHEARABLE_HPP