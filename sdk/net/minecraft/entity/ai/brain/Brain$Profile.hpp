// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ENTITY_AI_BRAIN_BRAIN$PROFILE_HPP
#define NET_MINECRAFT_ENTITY_AI_BRAIN_BRAIN$PROFILE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.entity.ai.brain.Brain$Profile
 * Remapped: buq$b
 */
namespace Brain$Profile {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("buq$b", "net/minecraft/world/entity/ai/Brain$Provider", "net/minecraft/class_4095$class_5303", "net/minecraft/entity/ai/brain/Brain$Profile", "net/minecraft/src/C_548_$C_551_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.entity.ai.brain.Brain$Profile#memoryModules
    static jobject get_field_memoryModules(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "memoryTypes", "field_24663", "memoryModules", "f_22062_"), "Ljava/util/Collection;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.ai.brain.Brain$Profile#memoryModules
    static void set_field_memoryModules(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "memoryTypes", "field_24663", "memoryModules", "f_22062_"), "Ljava/util/Collection;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.ai.brain.Brain$Profile#sensors
    static jobject get_field_sensors(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "sensorTypes", "field_24664", "sensors", "f_22063_"), "Ljava/util/Collection;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.ai.brain.Brain$Profile#sensors
    static void set_field_sensors(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "sensorTypes", "field_24664", "sensors", "f_22063_"), "Ljava/util/Collection;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.ai.brain.Brain$Profile#codec
    static jobject get_field_codec(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "codec", "field_24665", "codec", "f_22064_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.ai.brain.Brain$Profile#codec
    static void set_field_codec(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "codec", "field_24665", "codec", "f_22064_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_deserialize() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "makeBrain", "method_28335", "deserialize", "m_22073_"), "(Lcom/mojang/serialization/Dynamic;)Lbuq;");
    }

    static jobject deserialize(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_deserialize();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_ENTITY_AI_BRAIN_BRAIN$PROFILE_HPP