// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ENTITY_AI_BRAIN_MEMORYMODULETYPE_HPP
#define NET_MINECRAFT_ENTITY_AI_BRAIN_MEMORYMODULETYPE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.entity.ai.brain.MemoryModuleType
 * Remapped: ccs
 */
namespace MemoryModuleType {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("ccs", "net/minecraft/world/entity/ai/memory/MemoryModuleType", "net/minecraft/class_4140", "net/minecraft/entity/ai/brain/MemoryModuleType", "net/minecraft/src/C_753_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#DUMMY
    [[maybe_unused]] static jobject get_field_DUMMY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "DUMMY", "field_18437", "DUMMY", "f_26349_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#DUMMY
    [[maybe_unused]] static void set_field_DUMMY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "DUMMY", "field_18437", "DUMMY", "f_26349_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#HOME
    [[maybe_unused]] static jobject get_field_HOME() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "HOME", "field_18438", "HOME", "f_26359_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#HOME
    [[maybe_unused]] static void set_field_HOME(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "HOME", "field_18438", "HOME", "f_26359_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#JOB_SITE
    [[maybe_unused]] static jobject get_field_JOB_SITE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "JOB_SITE", "field_18439", "JOB_SITE", "f_26360_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#JOB_SITE
    [[maybe_unused]] static void set_field_JOB_SITE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "JOB_SITE", "field_18439", "JOB_SITE", "f_26360_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#POTENTIAL_JOB_SITE
    [[maybe_unused]] static jobject get_field_POTENTIAL_JOB_SITE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "POTENTIAL_JOB_SITE", "field_25160", "POTENTIAL_JOB_SITE", "f_26361_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#POTENTIAL_JOB_SITE
    [[maybe_unused]] static void set_field_POTENTIAL_JOB_SITE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "POTENTIAL_JOB_SITE", "field_25160", "POTENTIAL_JOB_SITE", "f_26361_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#MEETING_POINT
    [[maybe_unused]] static jobject get_field_MEETING_POINT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "MEETING_POINT", "field_18440", "MEETING_POINT", "f_26362_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#MEETING_POINT
    [[maybe_unused]] static void set_field_MEETING_POINT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "MEETING_POINT", "field_18440", "MEETING_POINT", "f_26362_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#SECONDARY_JOB_SITE
    [[maybe_unused]] static jobject get_field_SECONDARY_JOB_SITE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "SECONDARY_JOB_SITE", "field_18873", "SECONDARY_JOB_SITE", "f_26363_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#SECONDARY_JOB_SITE
    [[maybe_unused]] static void set_field_SECONDARY_JOB_SITE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "SECONDARY_JOB_SITE", "field_18873", "SECONDARY_JOB_SITE", "f_26363_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#MOBS
    [[maybe_unused]] static jobject get_field_MOBS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "NEAREST_LIVING_ENTITIES", "field_18441", "MOBS", "f_148204_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#MOBS
    [[maybe_unused]] static void set_field_MOBS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "NEAREST_LIVING_ENTITIES", "field_18441", "MOBS", "f_148204_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#VISIBLE_MOBS
    [[maybe_unused]] static jobject get_field_VISIBLE_MOBS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "NEAREST_VISIBLE_LIVING_ENTITIES", "field_18442", "VISIBLE_MOBS", "f_148205_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#VISIBLE_MOBS
    [[maybe_unused]] static void set_field_VISIBLE_MOBS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "NEAREST_VISIBLE_LIVING_ENTITIES", "field_18442", "VISIBLE_MOBS", "f_148205_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#VISIBLE_VILLAGER_BABIES
    [[maybe_unused]] static jobject get_field_VISIBLE_VILLAGER_BABIES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "VISIBLE_VILLAGER_BABIES", "field_19006", "VISIBLE_VILLAGER_BABIES", "f_26366_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#VISIBLE_VILLAGER_BABIES
    [[maybe_unused]] static void set_field_VISIBLE_VILLAGER_BABIES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "VISIBLE_VILLAGER_BABIES", "field_19006", "VISIBLE_VILLAGER_BABIES", "f_26366_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#NEAREST_PLAYERS
    [[maybe_unused]] static jobject get_field_NEAREST_PLAYERS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "NEAREST_PLAYERS", "field_18443", "NEAREST_PLAYERS", "f_26367_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#NEAREST_PLAYERS
    [[maybe_unused]] static void set_field_NEAREST_PLAYERS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "NEAREST_PLAYERS", "field_18443", "NEAREST_PLAYERS", "f_26367_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#NEAREST_VISIBLE_PLAYER
    [[maybe_unused]] static jobject get_field_NEAREST_VISIBLE_PLAYER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "NEAREST_VISIBLE_PLAYER", "field_18444", "NEAREST_VISIBLE_PLAYER", "f_26368_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#NEAREST_VISIBLE_PLAYER
    [[maybe_unused]] static void set_field_NEAREST_VISIBLE_PLAYER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "NEAREST_VISIBLE_PLAYER", "field_18444", "NEAREST_VISIBLE_PLAYER", "f_26368_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#NEAREST_VISIBLE_TARGETABLE_PLAYER
    [[maybe_unused]] static jobject get_field_NEAREST_VISIBLE_TARGETABLE_PLAYER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "NEAREST_VISIBLE_ATTACKABLE_PLAYER", "field_22354", "NEAREST_VISIBLE_TARGETABLE_PLAYER", "f_148206_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#NEAREST_VISIBLE_TARGETABLE_PLAYER
    [[maybe_unused]] static void set_field_NEAREST_VISIBLE_TARGETABLE_PLAYER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "NEAREST_VISIBLE_ATTACKABLE_PLAYER", "field_22354", "NEAREST_VISIBLE_TARGETABLE_PLAYER", "f_148206_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#WALK_TARGET
    [[maybe_unused]] static jobject get_field_WALK_TARGET() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "WALK_TARGET", "field_18445", "WALK_TARGET", "f_26370_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#WALK_TARGET
    [[maybe_unused]] static void set_field_WALK_TARGET(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "WALK_TARGET", "field_18445", "WALK_TARGET", "f_26370_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#LOOK_TARGET
    [[maybe_unused]] static jobject get_field_LOOK_TARGET() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "LOOK_TARGET", "field_18446", "LOOK_TARGET", "f_26371_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#LOOK_TARGET
    [[maybe_unused]] static void set_field_LOOK_TARGET(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "LOOK_TARGET", "field_18446", "LOOK_TARGET", "f_26371_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#ATTACK_TARGET
    [[maybe_unused]] static jobject get_field_ATTACK_TARGET() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "ATTACK_TARGET", "field_22355", "ATTACK_TARGET", "f_26372_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#ATTACK_TARGET
    [[maybe_unused]] static void set_field_ATTACK_TARGET(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "ATTACK_TARGET", "field_22355", "ATTACK_TARGET", "f_26372_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#ATTACK_COOLING_DOWN
    [[maybe_unused]] static jobject get_field_ATTACK_COOLING_DOWN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "ATTACK_COOLING_DOWN", "field_22475", "ATTACK_COOLING_DOWN", "f_26373_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#ATTACK_COOLING_DOWN
    [[maybe_unused]] static void set_field_ATTACK_COOLING_DOWN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "ATTACK_COOLING_DOWN", "field_22475", "ATTACK_COOLING_DOWN", "f_26373_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#INTERACTION_TARGET
    [[maybe_unused]] static jobject get_field_INTERACTION_TARGET() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "INTERACTION_TARGET", "field_18447", "INTERACTION_TARGET", "f_26374_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#INTERACTION_TARGET
    [[maybe_unused]] static void set_field_INTERACTION_TARGET(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "INTERACTION_TARGET", "field_18447", "INTERACTION_TARGET", "f_26374_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#BREED_TARGET
    [[maybe_unused]] static jobject get_field_BREED_TARGET() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "BREED_TARGET", "field_18448", "BREED_TARGET", "f_26375_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#BREED_TARGET
    [[maybe_unused]] static void set_field_BREED_TARGET(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "BREED_TARGET", "field_18448", "BREED_TARGET", "f_26375_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#RIDE_TARGET
    [[maybe_unused]] static jobject get_field_RIDE_TARGET() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "RIDE_TARGET", "field_22356", "RIDE_TARGET", "f_26376_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#RIDE_TARGET
    [[maybe_unused]] static void set_field_RIDE_TARGET(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "RIDE_TARGET", "field_22356", "RIDE_TARGET", "f_26376_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#PATH
    [[maybe_unused]] static jobject get_field_PATH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "PATH", "field_18449", "PATH", "f_26377_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#PATH
    [[maybe_unused]] static void set_field_PATH(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "PATH", "field_18449", "PATH", "f_26377_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#INTERACTABLE_DOORS
    [[maybe_unused]] static jobject get_field_INTERACTABLE_DOORS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "INTERACTABLE_DOORS", "field_18450", "INTERACTABLE_DOORS", "f_26378_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#INTERACTABLE_DOORS
    [[maybe_unused]] static void set_field_INTERACTABLE_DOORS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "INTERACTABLE_DOORS", "field_18450", "INTERACTABLE_DOORS", "f_26378_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#DOORS_TO_CLOSE
    [[maybe_unused]] static jobject get_field_DOORS_TO_CLOSE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "DOORS_TO_CLOSE", "field_26389", "DOORS_TO_CLOSE", "f_26379_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#DOORS_TO_CLOSE
    [[maybe_unused]] static void set_field_DOORS_TO_CLOSE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "DOORS_TO_CLOSE", "field_26389", "DOORS_TO_CLOSE", "f_26379_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#NEAREST_BED
    [[maybe_unused]] static jobject get_field_NEAREST_BED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "NEAREST_BED", "field_19007", "NEAREST_BED", "f_26380_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#NEAREST_BED
    [[maybe_unused]] static void set_field_NEAREST_BED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "NEAREST_BED", "field_19007", "NEAREST_BED", "f_26380_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#HURT_BY
    [[maybe_unused]] static jobject get_field_HURT_BY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "HURT_BY", "field_18451", "HURT_BY", "f_26381_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#HURT_BY
    [[maybe_unused]] static void set_field_HURT_BY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "HURT_BY", "field_18451", "HURT_BY", "f_26381_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#HURT_BY_ENTITY
    [[maybe_unused]] static jobject get_field_HURT_BY_ENTITY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("y", "HURT_BY_ENTITY", "field_18452", "HURT_BY_ENTITY", "f_26382_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#HURT_BY_ENTITY
    [[maybe_unused]] static void set_field_HURT_BY_ENTITY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("y", "HURT_BY_ENTITY", "field_18452", "HURT_BY_ENTITY", "f_26382_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#AVOID_TARGET
    [[maybe_unused]] static jobject get_field_AVOID_TARGET() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("z", "AVOID_TARGET", "field_22357", "AVOID_TARGET", "f_26383_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#AVOID_TARGET
    [[maybe_unused]] static void set_field_AVOID_TARGET(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("z", "AVOID_TARGET", "field_22357", "AVOID_TARGET", "f_26383_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#NEAREST_HOSTILE
    [[maybe_unused]] static jobject get_field_NEAREST_HOSTILE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("A", "NEAREST_HOSTILE", "field_18453", "NEAREST_HOSTILE", "f_26323_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#NEAREST_HOSTILE
    [[maybe_unused]] static void set_field_NEAREST_HOSTILE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("A", "NEAREST_HOSTILE", "field_18453", "NEAREST_HOSTILE", "f_26323_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#NEAREST_ATTACKABLE
    [[maybe_unused]] static jobject get_field_NEAREST_ATTACKABLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("B", "NEAREST_ATTACKABLE", "field_30243", "NEAREST_ATTACKABLE", "f_148194_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#NEAREST_ATTACKABLE
    [[maybe_unused]] static void set_field_NEAREST_ATTACKABLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("B", "NEAREST_ATTACKABLE", "field_30243", "NEAREST_ATTACKABLE", "f_148194_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#HIDING_PLACE
    [[maybe_unused]] static jobject get_field_HIDING_PLACE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("C", "HIDING_PLACE", "field_19008", "HIDING_PLACE", "f_26324_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#HIDING_PLACE
    [[maybe_unused]] static void set_field_HIDING_PLACE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("C", "HIDING_PLACE", "field_19008", "HIDING_PLACE", "f_26324_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#HEARD_BELL_TIME
    [[maybe_unused]] static jobject get_field_HEARD_BELL_TIME() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("D", "HEARD_BELL_TIME", "field_19009", "HEARD_BELL_TIME", "f_26325_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#HEARD_BELL_TIME
    [[maybe_unused]] static void set_field_HEARD_BELL_TIME(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("D", "HEARD_BELL_TIME", "field_19009", "HEARD_BELL_TIME", "f_26325_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#CANT_REACH_WALK_TARGET_SINCE
    [[maybe_unused]] static jobject get_field_CANT_REACH_WALK_TARGET_SINCE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("E", "CANT_REACH_WALK_TARGET_SINCE", "field_19293", "CANT_REACH_WALK_TARGET_SINCE", "f_26326_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#CANT_REACH_WALK_TARGET_SINCE
    [[maybe_unused]] static void set_field_CANT_REACH_WALK_TARGET_SINCE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("E", "CANT_REACH_WALK_TARGET_SINCE", "field_19293", "CANT_REACH_WALK_TARGET_SINCE", "f_26326_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#GOLEM_DETECTED_RECENTLY
    [[maybe_unused]] static jobject get_field_GOLEM_DETECTED_RECENTLY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("F", "GOLEM_DETECTED_RECENTLY", "field_25754", "GOLEM_DETECTED_RECENTLY", "f_26327_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#GOLEM_DETECTED_RECENTLY
    [[maybe_unused]] static void set_field_GOLEM_DETECTED_RECENTLY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("F", "GOLEM_DETECTED_RECENTLY", "field_25754", "GOLEM_DETECTED_RECENTLY", "f_26327_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#DANGER_DETECTED_RECENTLY
    [[maybe_unused]] static jobject get_field_DANGER_DETECTED_RECENTLY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("G", "DANGER_DETECTED_RECENTLY", "field_47762", "DANGER_DETECTED_RECENTLY", "f_315790_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#DANGER_DETECTED_RECENTLY
    [[maybe_unused]] static void set_field_DANGER_DETECTED_RECENTLY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("G", "DANGER_DETECTED_RECENTLY", "field_47762", "DANGER_DETECTED_RECENTLY", "f_315790_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#LAST_SLEPT
    [[maybe_unused]] static jobject get_field_LAST_SLEPT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("H", "LAST_SLEPT", "field_19385", "LAST_SLEPT", "f_26328_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#LAST_SLEPT
    [[maybe_unused]] static void set_field_LAST_SLEPT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("H", "LAST_SLEPT", "field_19385", "LAST_SLEPT", "f_26328_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#LAST_WOKEN
    [[maybe_unused]] static jobject get_field_LAST_WOKEN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("I", "LAST_WOKEN", "field_20616", "LAST_WOKEN", "f_26329_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#LAST_WOKEN
    [[maybe_unused]] static void set_field_LAST_WOKEN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("I", "LAST_WOKEN", "field_20616", "LAST_WOKEN", "f_26329_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#LAST_WORKED_AT_POI
    [[maybe_unused]] static jobject get_field_LAST_WORKED_AT_POI() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("J", "LAST_WORKED_AT_POI", "field_19386", "LAST_WORKED_AT_POI", "f_26330_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#LAST_WORKED_AT_POI
    [[maybe_unused]] static void set_field_LAST_WORKED_AT_POI(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("J", "LAST_WORKED_AT_POI", "field_19386", "LAST_WORKED_AT_POI", "f_26330_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#NEAREST_VISIBLE_ADULT
    [[maybe_unused]] static jobject get_field_NEAREST_VISIBLE_ADULT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("K", "NEAREST_VISIBLE_ADULT", "field_25359", "NEAREST_VISIBLE_ADULT", "f_26331_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#NEAREST_VISIBLE_ADULT
    [[maybe_unused]] static void set_field_NEAREST_VISIBLE_ADULT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("K", "NEAREST_VISIBLE_ADULT", "field_25359", "NEAREST_VISIBLE_ADULT", "f_26331_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#NEAREST_VISIBLE_WANTED_ITEM
    [[maybe_unused]] static jobject get_field_NEAREST_VISIBLE_WANTED_ITEM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("L", "NEAREST_VISIBLE_WANTED_ITEM", "field_22332", "NEAREST_VISIBLE_WANTED_ITEM", "f_26332_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#NEAREST_VISIBLE_WANTED_ITEM
    [[maybe_unused]] static void set_field_NEAREST_VISIBLE_WANTED_ITEM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("L", "NEAREST_VISIBLE_WANTED_ITEM", "field_22332", "NEAREST_VISIBLE_WANTED_ITEM", "f_26332_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#NEAREST_VISIBLE_NEMESIS
    [[maybe_unused]] static jobject get_field_NEAREST_VISIBLE_NEMESIS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("M", "NEAREST_VISIBLE_NEMESIS", "field_25360", "NEAREST_VISIBLE_NEMESIS", "f_26333_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#NEAREST_VISIBLE_NEMESIS
    [[maybe_unused]] static void set_field_NEAREST_VISIBLE_NEMESIS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("M", "NEAREST_VISIBLE_NEMESIS", "field_25360", "NEAREST_VISIBLE_NEMESIS", "f_26333_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#PLAY_DEAD_TICKS
    [[maybe_unused]] static jobject get_field_PLAY_DEAD_TICKS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("N", "PLAY_DEAD_TICKS", "field_28324", "PLAY_DEAD_TICKS", "f_148195_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#PLAY_DEAD_TICKS
    [[maybe_unused]] static void set_field_PLAY_DEAD_TICKS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("N", "PLAY_DEAD_TICKS", "field_28324", "PLAY_DEAD_TICKS", "f_148195_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#TEMPTING_PLAYER
    [[maybe_unused]] static jobject get_field_TEMPTING_PLAYER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("O", "TEMPTING_PLAYER", "field_28325", "TEMPTING_PLAYER", "f_148196_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#TEMPTING_PLAYER
    [[maybe_unused]] static void set_field_TEMPTING_PLAYER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("O", "TEMPTING_PLAYER", "field_28325", "TEMPTING_PLAYER", "f_148196_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#TEMPTATION_COOLDOWN_TICKS
    [[maybe_unused]] static jobject get_field_TEMPTATION_COOLDOWN_TICKS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("P", "TEMPTATION_COOLDOWN_TICKS", "field_28326", "TEMPTATION_COOLDOWN_TICKS", "f_148197_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#TEMPTATION_COOLDOWN_TICKS
    [[maybe_unused]] static void set_field_TEMPTATION_COOLDOWN_TICKS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("P", "TEMPTATION_COOLDOWN_TICKS", "field_28326", "TEMPTATION_COOLDOWN_TICKS", "f_148197_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#GAZE_COOLDOWN_TICKS
    [[maybe_unused]] static jobject get_field_GAZE_COOLDOWN_TICKS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Q", "GAZE_COOLDOWN_TICKS", "field_40127", "GAZE_COOLDOWN_TICKS", "f_244205_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#GAZE_COOLDOWN_TICKS
    [[maybe_unused]] static void set_field_GAZE_COOLDOWN_TICKS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Q", "GAZE_COOLDOWN_TICKS", "field_40127", "GAZE_COOLDOWN_TICKS", "f_244205_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#IS_TEMPTED
    [[maybe_unused]] static jobject get_field_IS_TEMPTED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("R", "IS_TEMPTED", "field_28327", "IS_TEMPTED", "f_148198_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#IS_TEMPTED
    [[maybe_unused]] static void set_field_IS_TEMPTED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("R", "IS_TEMPTED", "field_28327", "IS_TEMPTED", "f_148198_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#LONG_JUMP_COOLING_DOWN
    [[maybe_unused]] static jobject get_field_LONG_JUMP_COOLING_DOWN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("S", "LONG_JUMP_COOLDOWN_TICKS", "field_30244", "LONG_JUMP_COOLING_DOWN", "f_148199_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#LONG_JUMP_COOLING_DOWN
    [[maybe_unused]] static void set_field_LONG_JUMP_COOLING_DOWN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("S", "LONG_JUMP_COOLDOWN_TICKS", "field_30244", "LONG_JUMP_COOLING_DOWN", "f_148199_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#LONG_JUMP_MID_JUMP
    [[maybe_unused]] static jobject get_field_LONG_JUMP_MID_JUMP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("T", "LONG_JUMP_MID_JUMP", "field_30245", "LONG_JUMP_MID_JUMP", "f_148200_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#LONG_JUMP_MID_JUMP
    [[maybe_unused]] static void set_field_LONG_JUMP_MID_JUMP(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("T", "LONG_JUMP_MID_JUMP", "field_30245", "LONG_JUMP_MID_JUMP", "f_148200_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#HAS_HUNTING_COOLDOWN
    [[maybe_unused]] static jobject get_field_HAS_HUNTING_COOLDOWN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("U", "HAS_HUNTING_COOLDOWN", "field_30246", "HAS_HUNTING_COOLDOWN", "f_148201_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#HAS_HUNTING_COOLDOWN
    [[maybe_unused]] static void set_field_HAS_HUNTING_COOLDOWN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("U", "HAS_HUNTING_COOLDOWN", "field_30246", "HAS_HUNTING_COOLDOWN", "f_148201_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#RAM_COOLDOWN_TICKS
    [[maybe_unused]] static jobject get_field_RAM_COOLDOWN_TICKS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("V", "RAM_COOLDOWN_TICKS", "field_33483", "RAM_COOLDOWN_TICKS", "f_148202_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#RAM_COOLDOWN_TICKS
    [[maybe_unused]] static void set_field_RAM_COOLDOWN_TICKS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("V", "RAM_COOLDOWN_TICKS", "field_33483", "RAM_COOLDOWN_TICKS", "f_148202_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#RAM_TARGET
    [[maybe_unused]] static jobject get_field_RAM_TARGET() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("W", "RAM_TARGET", "field_33484", "RAM_TARGET", "f_148203_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#RAM_TARGET
    [[maybe_unused]] static void set_field_RAM_TARGET(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("W", "RAM_TARGET", "field_33484", "RAM_TARGET", "f_148203_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#IS_IN_WATER
    [[maybe_unused]] static jobject get_field_IS_IN_WATER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("X", "IS_IN_WATER", "field_37442", "IS_IN_WATER", "f_217766_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#IS_IN_WATER
    [[maybe_unused]] static void set_field_IS_IN_WATER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("X", "IS_IN_WATER", "field_37442", "IS_IN_WATER", "f_217766_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#IS_PREGNANT
    [[maybe_unused]] static jobject get_field_IS_PREGNANT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Y", "IS_PREGNANT", "field_37443", "IS_PREGNANT", "f_217767_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#IS_PREGNANT
    [[maybe_unused]] static void set_field_IS_PREGNANT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Y", "IS_PREGNANT", "field_37443", "IS_PREGNANT", "f_217767_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#IS_PANICKING
    [[maybe_unused]] static jobject get_field_IS_PANICKING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Z", "IS_PANICKING", "field_39408", "IS_PANICKING", "f_217768_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#IS_PANICKING
    [[maybe_unused]] static void set_field_IS_PANICKING(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Z", "IS_PANICKING", "field_39408", "IS_PANICKING", "f_217768_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#UNREACHABLE_TONGUE_TARGETS
    [[maybe_unused]] static jobject get_field_UNREACHABLE_TONGUE_TARGETS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aa", "UNREACHABLE_TONGUE_TARGETS", "field_39450", "UNREACHABLE_TONGUE_TARGETS", "f_238182_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#UNREACHABLE_TONGUE_TARGETS
    [[maybe_unused]] static void set_field_UNREACHABLE_TONGUE_TARGETS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aa", "UNREACHABLE_TONGUE_TARGETS", "field_39450", "UNREACHABLE_TONGUE_TARGETS", "f_238182_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#ANGRY_AT
    [[maybe_unused]] static jobject get_field_ANGRY_AT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ab", "ANGRY_AT", "field_22333", "ANGRY_AT", "f_26334_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#ANGRY_AT
    [[maybe_unused]] static void set_field_ANGRY_AT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ab", "ANGRY_AT", "field_22333", "ANGRY_AT", "f_26334_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#UNIVERSAL_ANGER
    [[maybe_unused]] static jobject get_field_UNIVERSAL_ANGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ac", "UNIVERSAL_ANGER", "field_25361", "UNIVERSAL_ANGER", "f_26335_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#UNIVERSAL_ANGER
    [[maybe_unused]] static void set_field_UNIVERSAL_ANGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ac", "UNIVERSAL_ANGER", "field_25361", "UNIVERSAL_ANGER", "f_26335_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#ADMIRING_ITEM
    [[maybe_unused]] static jobject get_field_ADMIRING_ITEM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ad", "ADMIRING_ITEM", "field_22334", "ADMIRING_ITEM", "f_26336_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#ADMIRING_ITEM
    [[maybe_unused]] static void set_field_ADMIRING_ITEM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ad", "ADMIRING_ITEM", "field_22334", "ADMIRING_ITEM", "f_26336_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#TIME_TRYING_TO_REACH_ADMIRE_ITEM
    [[maybe_unused]] static jobject get_field_TIME_TRYING_TO_REACH_ADMIRE_ITEM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ae", "TIME_TRYING_TO_REACH_ADMIRE_ITEM", "field_25813", "TIME_TRYING_TO_REACH_ADMIRE_ITEM", "f_26337_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#TIME_TRYING_TO_REACH_ADMIRE_ITEM
    [[maybe_unused]] static void set_field_TIME_TRYING_TO_REACH_ADMIRE_ITEM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ae", "TIME_TRYING_TO_REACH_ADMIRE_ITEM", "field_25813", "TIME_TRYING_TO_REACH_ADMIRE_ITEM", "f_26337_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#DISABLE_WALK_TO_ADMIRE_ITEM
    [[maybe_unused]] static jobject get_field_DISABLE_WALK_TO_ADMIRE_ITEM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("af", "DISABLE_WALK_TO_ADMIRE_ITEM", "field_25814", "DISABLE_WALK_TO_ADMIRE_ITEM", "f_26338_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#DISABLE_WALK_TO_ADMIRE_ITEM
    [[maybe_unused]] static void set_field_DISABLE_WALK_TO_ADMIRE_ITEM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("af", "DISABLE_WALK_TO_ADMIRE_ITEM", "field_25814", "DISABLE_WALK_TO_ADMIRE_ITEM", "f_26338_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#ADMIRING_DISABLED
    [[maybe_unused]] static jobject get_field_ADMIRING_DISABLED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ag", "ADMIRING_DISABLED", "field_22473", "ADMIRING_DISABLED", "f_26339_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#ADMIRING_DISABLED
    [[maybe_unused]] static void set_field_ADMIRING_DISABLED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ag", "ADMIRING_DISABLED", "field_22473", "ADMIRING_DISABLED", "f_26339_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#HUNTED_RECENTLY
    [[maybe_unused]] static jobject get_field_HUNTED_RECENTLY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ah", "HUNTED_RECENTLY", "field_22336", "HUNTED_RECENTLY", "f_26340_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#HUNTED_RECENTLY
    [[maybe_unused]] static void set_field_HUNTED_RECENTLY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ah", "HUNTED_RECENTLY", "field_22336", "HUNTED_RECENTLY", "f_26340_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#CELEBRATE_LOCATION
    [[maybe_unused]] static jobject get_field_CELEBRATE_LOCATION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ai", "CELEBRATE_LOCATION", "field_22337", "CELEBRATE_LOCATION", "f_26341_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#CELEBRATE_LOCATION
    [[maybe_unused]] static void set_field_CELEBRATE_LOCATION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ai", "CELEBRATE_LOCATION", "field_22337", "CELEBRATE_LOCATION", "f_26341_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#DANCING
    [[maybe_unused]] static jobject get_field_DANCING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aj", "DANCING", "field_25159", "DANCING", "f_26342_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#DANCING
    [[maybe_unused]] static void set_field_DANCING(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aj", "DANCING", "field_25159", "DANCING", "f_26342_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#NEAREST_VISIBLE_HUNTABLE_HOGLIN
    [[maybe_unused]] static jobject get_field_NEAREST_VISIBLE_HUNTABLE_HOGLIN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ak", "NEAREST_VISIBLE_HUNTABLE_HOGLIN", "field_22339", "NEAREST_VISIBLE_HUNTABLE_HOGLIN", "f_26343_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#NEAREST_VISIBLE_HUNTABLE_HOGLIN
    [[maybe_unused]] static void set_field_NEAREST_VISIBLE_HUNTABLE_HOGLIN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ak", "NEAREST_VISIBLE_HUNTABLE_HOGLIN", "field_22339", "NEAREST_VISIBLE_HUNTABLE_HOGLIN", "f_26343_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#NEAREST_VISIBLE_BABY_HOGLIN
    [[maybe_unused]] static jobject get_field_NEAREST_VISIBLE_BABY_HOGLIN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("al", "NEAREST_VISIBLE_BABY_HOGLIN", "field_22340", "NEAREST_VISIBLE_BABY_HOGLIN", "f_26344_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#NEAREST_VISIBLE_BABY_HOGLIN
    [[maybe_unused]] static void set_field_NEAREST_VISIBLE_BABY_HOGLIN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("al", "NEAREST_VISIBLE_BABY_HOGLIN", "field_22340", "NEAREST_VISIBLE_BABY_HOGLIN", "f_26344_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#NEAREST_TARGETABLE_PLAYER_NOT_WEARING_GOLD
    [[maybe_unused]] static jobject get_field_NEAREST_TARGETABLE_PLAYER_NOT_WEARING_GOLD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("am", "NEAREST_TARGETABLE_PLAYER_NOT_WEARING_GOLD", "field_22342", "NEAREST_TARGETABLE_PLAYER_NOT_WEARING_GOLD", "f_26345_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#NEAREST_TARGETABLE_PLAYER_NOT_WEARING_GOLD
    [[maybe_unused]] static void set_field_NEAREST_TARGETABLE_PLAYER_NOT_WEARING_GOLD(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("am", "NEAREST_TARGETABLE_PLAYER_NOT_WEARING_GOLD", "field_22342", "NEAREST_TARGETABLE_PLAYER_NOT_WEARING_GOLD", "f_26345_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#NEARBY_ADULT_PIGLINS
    [[maybe_unused]] static jobject get_field_NEARBY_ADULT_PIGLINS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("an", "NEARBY_ADULT_PIGLINS", "field_25755", "NEARBY_ADULT_PIGLINS", "f_26346_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#NEARBY_ADULT_PIGLINS
    [[maybe_unused]] static void set_field_NEARBY_ADULT_PIGLINS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("an", "NEARBY_ADULT_PIGLINS", "field_25755", "NEARBY_ADULT_PIGLINS", "f_26346_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#NEAREST_VISIBLE_ADULT_PIGLINS
    [[maybe_unused]] static jobject get_field_NEAREST_VISIBLE_ADULT_PIGLINS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ao", "NEAREST_VISIBLE_ADULT_PIGLINS", "field_22343", "NEAREST_VISIBLE_ADULT_PIGLINS", "f_26347_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#NEAREST_VISIBLE_ADULT_PIGLINS
    [[maybe_unused]] static void set_field_NEAREST_VISIBLE_ADULT_PIGLINS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ao", "NEAREST_VISIBLE_ADULT_PIGLINS", "field_22343", "NEAREST_VISIBLE_ADULT_PIGLINS", "f_26347_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#NEAREST_VISIBLE_ADULT_HOGLINS
    [[maybe_unused]] static jobject get_field_NEAREST_VISIBLE_ADULT_HOGLINS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ap", "NEAREST_VISIBLE_ADULT_HOGLINS", "field_22344", "NEAREST_VISIBLE_ADULT_HOGLINS", "f_26348_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#NEAREST_VISIBLE_ADULT_HOGLINS
    [[maybe_unused]] static void set_field_NEAREST_VISIBLE_ADULT_HOGLINS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ap", "NEAREST_VISIBLE_ADULT_HOGLINS", "field_22344", "NEAREST_VISIBLE_ADULT_HOGLINS", "f_26348_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#NEAREST_VISIBLE_ADULT_PIGLIN
    [[maybe_unused]] static jobject get_field_NEAREST_VISIBLE_ADULT_PIGLIN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aq", "NEAREST_VISIBLE_ADULT_PIGLIN", "field_22345", "NEAREST_VISIBLE_ADULT_PIGLIN", "f_26350_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#NEAREST_VISIBLE_ADULT_PIGLIN
    [[maybe_unused]] static void set_field_NEAREST_VISIBLE_ADULT_PIGLIN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aq", "NEAREST_VISIBLE_ADULT_PIGLIN", "field_22345", "NEAREST_VISIBLE_ADULT_PIGLIN", "f_26350_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#NEAREST_VISIBLE_ZOMBIFIED
    [[maybe_unused]] static jobject get_field_NEAREST_VISIBLE_ZOMBIFIED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ar", "NEAREST_VISIBLE_ZOMBIFIED", "field_22346", "NEAREST_VISIBLE_ZOMBIFIED", "f_26351_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#NEAREST_VISIBLE_ZOMBIFIED
    [[maybe_unused]] static void set_field_NEAREST_VISIBLE_ZOMBIFIED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ar", "NEAREST_VISIBLE_ZOMBIFIED", "field_22346", "NEAREST_VISIBLE_ZOMBIFIED", "f_26351_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#VISIBLE_ADULT_PIGLIN_COUNT
    [[maybe_unused]] static jobject get_field_VISIBLE_ADULT_PIGLIN_COUNT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("as", "VISIBLE_ADULT_PIGLIN_COUNT", "field_22347", "VISIBLE_ADULT_PIGLIN_COUNT", "f_26352_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#VISIBLE_ADULT_PIGLIN_COUNT
    [[maybe_unused]] static void set_field_VISIBLE_ADULT_PIGLIN_COUNT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("as", "VISIBLE_ADULT_PIGLIN_COUNT", "field_22347", "VISIBLE_ADULT_PIGLIN_COUNT", "f_26352_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#VISIBLE_ADULT_HOGLIN_COUNT
    [[maybe_unused]] static jobject get_field_VISIBLE_ADULT_HOGLIN_COUNT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("at", "VISIBLE_ADULT_HOGLIN_COUNT", "field_22348", "VISIBLE_ADULT_HOGLIN_COUNT", "f_26353_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#VISIBLE_ADULT_HOGLIN_COUNT
    [[maybe_unused]] static void set_field_VISIBLE_ADULT_HOGLIN_COUNT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("at", "VISIBLE_ADULT_HOGLIN_COUNT", "field_22348", "VISIBLE_ADULT_HOGLIN_COUNT", "f_26353_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#NEAREST_PLAYER_HOLDING_WANTED_ITEM
    [[maybe_unused]] static jobject get_field_NEAREST_PLAYER_HOLDING_WANTED_ITEM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("au", "NEAREST_PLAYER_HOLDING_WANTED_ITEM", "field_22349", "NEAREST_PLAYER_HOLDING_WANTED_ITEM", "f_26354_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#NEAREST_PLAYER_HOLDING_WANTED_ITEM
    [[maybe_unused]] static void set_field_NEAREST_PLAYER_HOLDING_WANTED_ITEM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("au", "NEAREST_PLAYER_HOLDING_WANTED_ITEM", "field_22349", "NEAREST_PLAYER_HOLDING_WANTED_ITEM", "f_26354_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#ATE_RECENTLY
    [[maybe_unused]] static jobject get_field_ATE_RECENTLY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("av", "ATE_RECENTLY", "field_22350", "ATE_RECENTLY", "f_26355_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#ATE_RECENTLY
    [[maybe_unused]] static void set_field_ATE_RECENTLY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("av", "ATE_RECENTLY", "field_22350", "ATE_RECENTLY", "f_26355_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#NEAREST_REPELLENT
    [[maybe_unused]] static jobject get_field_NEAREST_REPELLENT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aw", "NEAREST_REPELLENT", "field_22474", "NEAREST_REPELLENT", "f_26356_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#NEAREST_REPELLENT
    [[maybe_unused]] static void set_field_NEAREST_REPELLENT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aw", "NEAREST_REPELLENT", "field_22474", "NEAREST_REPELLENT", "f_26356_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#PACIFIED
    [[maybe_unused]] static jobject get_field_PACIFIED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ax", "PACIFIED", "field_22353", "PACIFIED", "f_26357_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#PACIFIED
    [[maybe_unused]] static void set_field_PACIFIED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ax", "PACIFIED", "field_22353", "PACIFIED", "f_26357_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#ROAR_TARGET
    [[maybe_unused]] static jobject get_field_ROAR_TARGET() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ay", "ROAR_TARGET", "field_38108", "ROAR_TARGET", "f_217782_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#ROAR_TARGET
    [[maybe_unused]] static void set_field_ROAR_TARGET(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ay", "ROAR_TARGET", "field_38108", "ROAR_TARGET", "f_217782_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#DISTURBANCE_LOCATION
    [[maybe_unused]] static jobject get_field_DISTURBANCE_LOCATION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("az", "DISTURBANCE_LOCATION", "field_38109", "DISTURBANCE_LOCATION", "f_217783_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#DISTURBANCE_LOCATION
    [[maybe_unused]] static void set_field_DISTURBANCE_LOCATION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("az", "DISTURBANCE_LOCATION", "field_38109", "DISTURBANCE_LOCATION", "f_217783_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#RECENT_PROJECTILE
    [[maybe_unused]] static jobject get_field_RECENT_PROJECTILE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aA", "RECENT_PROJECTILE", "field_38110", "RECENT_PROJECTILE", "f_217784_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#RECENT_PROJECTILE
    [[maybe_unused]] static void set_field_RECENT_PROJECTILE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aA", "RECENT_PROJECTILE", "field_38110", "RECENT_PROJECTILE", "f_217784_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#IS_SNIFFING
    [[maybe_unused]] static jobject get_field_IS_SNIFFING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aB", "IS_SNIFFING", "field_38111", "IS_SNIFFING", "f_217785_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#IS_SNIFFING
    [[maybe_unused]] static void set_field_IS_SNIFFING(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aB", "IS_SNIFFING", "field_38111", "IS_SNIFFING", "f_217785_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#IS_EMERGING
    [[maybe_unused]] static jobject get_field_IS_EMERGING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aC", "IS_EMERGING", "field_38112", "IS_EMERGING", "f_217786_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#IS_EMERGING
    [[maybe_unused]] static void set_field_IS_EMERGING(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aC", "IS_EMERGING", "field_38112", "IS_EMERGING", "f_217786_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#ROAR_SOUND_DELAY
    [[maybe_unused]] static jobject get_field_ROAR_SOUND_DELAY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aD", "ROAR_SOUND_DELAY", "field_38113", "ROAR_SOUND_DELAY", "f_217769_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#ROAR_SOUND_DELAY
    [[maybe_unused]] static void set_field_ROAR_SOUND_DELAY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aD", "ROAR_SOUND_DELAY", "field_38113", "ROAR_SOUND_DELAY", "f_217769_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#DIG_COOLDOWN
    [[maybe_unused]] static jobject get_field_DIG_COOLDOWN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aE", "DIG_COOLDOWN", "field_38103", "DIG_COOLDOWN", "f_217770_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#DIG_COOLDOWN
    [[maybe_unused]] static void set_field_DIG_COOLDOWN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aE", "DIG_COOLDOWN", "field_38103", "DIG_COOLDOWN", "f_217770_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#ROAR_SOUND_COOLDOWN
    [[maybe_unused]] static jobject get_field_ROAR_SOUND_COOLDOWN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aF", "ROAR_SOUND_COOLDOWN", "field_38104", "ROAR_SOUND_COOLDOWN", "f_217771_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#ROAR_SOUND_COOLDOWN
    [[maybe_unused]] static void set_field_ROAR_SOUND_COOLDOWN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aF", "ROAR_SOUND_COOLDOWN", "field_38104", "ROAR_SOUND_COOLDOWN", "f_217771_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#SNIFF_COOLDOWN
    [[maybe_unused]] static jobject get_field_SNIFF_COOLDOWN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aG", "SNIFF_COOLDOWN", "field_38105", "SNIFF_COOLDOWN", "f_217772_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#SNIFF_COOLDOWN
    [[maybe_unused]] static void set_field_SNIFF_COOLDOWN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aG", "SNIFF_COOLDOWN", "field_38105", "SNIFF_COOLDOWN", "f_217772_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#TOUCH_COOLDOWN
    [[maybe_unused]] static jobject get_field_TOUCH_COOLDOWN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aH", "TOUCH_COOLDOWN", "field_38106", "TOUCH_COOLDOWN", "f_217773_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#TOUCH_COOLDOWN
    [[maybe_unused]] static void set_field_TOUCH_COOLDOWN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aH", "TOUCH_COOLDOWN", "field_38106", "TOUCH_COOLDOWN", "f_217773_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#VIBRATION_COOLDOWN
    [[maybe_unused]] static jobject get_field_VIBRATION_COOLDOWN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aI", "VIBRATION_COOLDOWN", "field_38107", "VIBRATION_COOLDOWN", "f_217774_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#VIBRATION_COOLDOWN
    [[maybe_unused]] static void set_field_VIBRATION_COOLDOWN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aI", "VIBRATION_COOLDOWN", "field_38107", "VIBRATION_COOLDOWN", "f_217774_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#SONIC_BOOM_COOLDOWN
    [[maybe_unused]] static jobject get_field_SONIC_BOOM_COOLDOWN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aJ", "SONIC_BOOM_COOLDOWN", "field_38856", "SONIC_BOOM_COOLDOWN", "f_217775_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#SONIC_BOOM_COOLDOWN
    [[maybe_unused]] static void set_field_SONIC_BOOM_COOLDOWN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aJ", "SONIC_BOOM_COOLDOWN", "field_38856", "SONIC_BOOM_COOLDOWN", "f_217775_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#SONIC_BOOM_SOUND_COOLDOWN
    [[maybe_unused]] static jobject get_field_SONIC_BOOM_SOUND_COOLDOWN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aK", "SONIC_BOOM_SOUND_COOLDOWN", "field_38857", "SONIC_BOOM_SOUND_COOLDOWN", "f_217776_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#SONIC_BOOM_SOUND_COOLDOWN
    [[maybe_unused]] static void set_field_SONIC_BOOM_SOUND_COOLDOWN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aK", "SONIC_BOOM_SOUND_COOLDOWN", "field_38857", "SONIC_BOOM_SOUND_COOLDOWN", "f_217776_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#SONIC_BOOM_SOUND_DELAY
    [[maybe_unused]] static jobject get_field_SONIC_BOOM_SOUND_DELAY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aL", "SONIC_BOOM_SOUND_DELAY", "field_38858", "SONIC_BOOM_SOUND_DELAY", "f_217777_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#SONIC_BOOM_SOUND_DELAY
    [[maybe_unused]] static void set_field_SONIC_BOOM_SOUND_DELAY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aL", "SONIC_BOOM_SOUND_DELAY", "field_38858", "SONIC_BOOM_SOUND_DELAY", "f_217777_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#LIKED_PLAYER
    [[maybe_unused]] static jobject get_field_LIKED_PLAYER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aM", "LIKED_PLAYER", "field_38394", "LIKED_PLAYER", "f_217778_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#LIKED_PLAYER
    [[maybe_unused]] static void set_field_LIKED_PLAYER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aM", "LIKED_PLAYER", "field_38394", "LIKED_PLAYER", "f_217778_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#LIKED_NOTEBLOCK
    [[maybe_unused]] static jobject get_field_LIKED_NOTEBLOCK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aN", "LIKED_NOTEBLOCK_POSITION", "field_38395", "LIKED_NOTEBLOCK", "f_217779_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#LIKED_NOTEBLOCK
    [[maybe_unused]] static void set_field_LIKED_NOTEBLOCK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aN", "LIKED_NOTEBLOCK_POSITION", "field_38395", "LIKED_NOTEBLOCK", "f_217779_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#LIKED_NOTEBLOCK_COOLDOWN_TICKS
    [[maybe_unused]] static jobject get_field_LIKED_NOTEBLOCK_COOLDOWN_TICKS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aO", "LIKED_NOTEBLOCK_COOLDOWN_TICKS", "field_38396", "LIKED_NOTEBLOCK_COOLDOWN_TICKS", "f_217780_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#LIKED_NOTEBLOCK_COOLDOWN_TICKS
    [[maybe_unused]] static void set_field_LIKED_NOTEBLOCK_COOLDOWN_TICKS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aO", "LIKED_NOTEBLOCK_COOLDOWN_TICKS", "field_38396", "LIKED_NOTEBLOCK_COOLDOWN_TICKS", "f_217780_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#ITEM_PICKUP_COOLDOWN_TICKS
    [[maybe_unused]] static jobject get_field_ITEM_PICKUP_COOLDOWN_TICKS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aP", "ITEM_PICKUP_COOLDOWN_TICKS", "field_38397", "ITEM_PICKUP_COOLDOWN_TICKS", "f_217781_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#ITEM_PICKUP_COOLDOWN_TICKS
    [[maybe_unused]] static void set_field_ITEM_PICKUP_COOLDOWN_TICKS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aP", "ITEM_PICKUP_COOLDOWN_TICKS", "field_38397", "ITEM_PICKUP_COOLDOWN_TICKS", "f_217781_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#SNIFFER_EXPLORED_POSITIONS
    [[maybe_unused]] static jobject get_field_SNIFFER_EXPLORED_POSITIONS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aQ", "SNIFFER_EXPLORED_POSITIONS", "field_42637", "SNIFFER_EXPLORED_POSITIONS", "f_271415_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#SNIFFER_EXPLORED_POSITIONS
    [[maybe_unused]] static void set_field_SNIFFER_EXPLORED_POSITIONS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aQ", "SNIFFER_EXPLORED_POSITIONS", "field_42637", "SNIFFER_EXPLORED_POSITIONS", "f_271415_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#SNIFFER_SNIFFING_TARGET
    [[maybe_unused]] static jobject get_field_SNIFFER_SNIFFING_TARGET() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aR", "SNIFFER_SNIFFING_TARGET", "field_42638", "SNIFFER_SNIFFING_TARGET", "f_271134_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#SNIFFER_SNIFFING_TARGET
    [[maybe_unused]] static void set_field_SNIFFER_SNIFFING_TARGET(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aR", "SNIFFER_SNIFFING_TARGET", "field_42638", "SNIFFER_SNIFFING_TARGET", "f_271134_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#SNIFFER_DIGGING
    [[maybe_unused]] static jobject get_field_SNIFFER_DIGGING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aS", "SNIFFER_DIGGING", "field_42639", "SNIFFER_DIGGING", "f_271280_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#SNIFFER_DIGGING
    [[maybe_unused]] static void set_field_SNIFFER_DIGGING(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aS", "SNIFFER_DIGGING", "field_42639", "SNIFFER_DIGGING", "f_271280_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#SNIFFER_HAPPY
    [[maybe_unused]] static jobject get_field_SNIFFER_HAPPY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aT", "SNIFFER_HAPPY", "field_42640", "SNIFFER_HAPPY", "f_271087_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#SNIFFER_HAPPY
    [[maybe_unused]] static void set_field_SNIFFER_HAPPY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aT", "SNIFFER_HAPPY", "field_42640", "SNIFFER_HAPPY", "f_271087_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#BREEZE_JUMP_COOLDOWN
    [[maybe_unused]] static jobject get_field_BREEZE_JUMP_COOLDOWN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aU", "BREEZE_JUMP_COOLDOWN", "field_47252", "BREEZE_JUMP_COOLDOWN", "f_303679_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#BREEZE_JUMP_COOLDOWN
    [[maybe_unused]] static void set_field_BREEZE_JUMP_COOLDOWN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aU", "BREEZE_JUMP_COOLDOWN", "field_47252", "BREEZE_JUMP_COOLDOWN", "f_303679_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#BREEZE_SHOOT
    [[maybe_unused]] static jobject get_field_BREEZE_SHOOT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aV", "BREEZE_SHOOT", "field_47253", "BREEZE_SHOOT", "f_302834_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#BREEZE_SHOOT
    [[maybe_unused]] static void set_field_BREEZE_SHOOT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aV", "BREEZE_SHOOT", "field_47253", "BREEZE_SHOOT", "f_302834_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#BREEZE_SHOOT_CHARGING
    [[maybe_unused]] static jobject get_field_BREEZE_SHOOT_CHARGING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aW", "BREEZE_SHOOT_CHARGING", "field_47254", "BREEZE_SHOOT_CHARGING", "f_303467_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#BREEZE_SHOOT_CHARGING
    [[maybe_unused]] static void set_field_BREEZE_SHOOT_CHARGING(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aW", "BREEZE_SHOOT_CHARGING", "field_47254", "BREEZE_SHOOT_CHARGING", "f_303467_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#BREEZE_SHOOT_RECOVER
    [[maybe_unused]] static jobject get_field_BREEZE_SHOOT_RECOVER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aX", "BREEZE_SHOOT_RECOVERING", "field_47255", "BREEZE_SHOOT_RECOVER", "f_302770_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#BREEZE_SHOOT_RECOVER
    [[maybe_unused]] static void set_field_BREEZE_SHOOT_RECOVER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aX", "BREEZE_SHOOT_RECOVERING", "field_47255", "BREEZE_SHOOT_RECOVER", "f_302770_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#BREEZE_SHOOT_COOLDOWN
    [[maybe_unused]] static jobject get_field_BREEZE_SHOOT_COOLDOWN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aY", "BREEZE_SHOOT_COOLDOWN", "field_47256", "BREEZE_SHOOT_COOLDOWN", "f_302656_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#BREEZE_SHOOT_COOLDOWN
    [[maybe_unused]] static void set_field_BREEZE_SHOOT_COOLDOWN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aY", "BREEZE_SHOOT_COOLDOWN", "field_47256", "BREEZE_SHOOT_COOLDOWN", "f_302656_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#BREEZE_JUMP_INHALING
    [[maybe_unused]] static jobject get_field_BREEZE_JUMP_INHALING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aZ", "BREEZE_JUMP_INHALING", "field_47257", "BREEZE_JUMP_INHALING", "f_302823_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#BREEZE_JUMP_INHALING
    [[maybe_unused]] static void set_field_BREEZE_JUMP_INHALING(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aZ", "BREEZE_JUMP_INHALING", "field_47257", "BREEZE_JUMP_INHALING", "f_302823_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#BREEZE_JUMP_TARGET
    [[maybe_unused]] static jobject get_field_BREEZE_JUMP_TARGET() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ba", "BREEZE_JUMP_TARGET", "field_47258", "BREEZE_JUMP_TARGET", "f_303370_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#BREEZE_JUMP_TARGET
    [[maybe_unused]] static void set_field_BREEZE_JUMP_TARGET(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ba", "BREEZE_JUMP_TARGET", "field_47258", "BREEZE_JUMP_TARGET", "f_303370_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#BREEZE_LEAVING_WATER
    [[maybe_unused]] static jobject get_field_BREEZE_LEAVING_WATER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bb", "BREEZE_LEAVING_WATER", "field_47763", "BREEZE_LEAVING_WATER", "f_315858_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.MemoryModuleType#BREEZE_LEAVING_WATER
    [[maybe_unused]] static void set_field_BREEZE_LEAVING_WATER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bb", "BREEZE_LEAVING_WATER", "field_47763", "BREEZE_LEAVING_WATER", "f_315858_"), "Lccs;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.entity.ai.brain.MemoryModuleType#codec
    static jobject get_field_codec(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bc", "codec", "field_24668", "codec", "f_26358_"), "Ljava/util/Optional;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.ai.brain.MemoryModuleType#codec
    static void set_field_codec(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bc", "codec", "field_24668", "codec", "f_26358_"), "Ljava/util/Optional;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_getCodec() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getCodec", "method_19093", "getCodec", "m_26387_"), "()Ljava/util/Optional;");
    }

    static jobject getCodec(const jobject& obj) {
                
       const auto methodID = methodID_getCodec();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_register() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "register", "method_19092", "register", "m_26390_"), "(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lccs;");
    }

    static jobject register(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_register();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__register() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "register", "method_20738", "register", "m_26388_"), "(Ljava/lang/String;)Lccs;");
    }

    static jobject _register(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID__register();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_ENTITY_AI_BRAIN_MEMORYMODULETYPE_HPP