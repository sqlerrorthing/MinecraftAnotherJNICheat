// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ENTITY_AI_BRAIN_SENSOR_NEARESTVISIBLELIVINGENTITYSENSOR_HPP
#define NET_MINECRAFT_ENTITY_AI_BRAIN_SENSOR_NEARESTVISIBLELIVINGENTITYSENSOR_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.entity.ai.brain.sensor.NearestVisibleLivingEntitySensor
 * Remapped: cds
 */
namespace NearestVisibleLivingEntitySensor {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("cds", "net/minecraft/world/entity/ai/sensing/NearestVisibleLivingEntitySensor", "net/minecraft/class_6045", "net/minecraft/entity/ai/brain/sensor/NearestVisibleLivingEntitySensor", "net/minecraft/src/C_141105_"));
        }
        return cachedClass;
    };

    static jmethodID methodID_matches() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "isMatchingEntity", "method_35148", "matches", "m_142628_"), "(Lbtn;Lbtn;)Z");
    }

    static jboolean matches(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_matches();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getOutputMemoryModule() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getMemory", "method_35150", "getOutputMemoryModule", "m_142149_"), "()Lccs;");
    }

    static jobject getOutputMemoryModule(const jobject& obj) {
                
       const auto methodID = methodID_getOutputMemoryModule();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getOutputMemoryModules() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "requires", "method_19099", "getOutputMemoryModules", "m_7163_"), "()Ljava/util/Set;");
    }

    static jobject getOutputMemoryModules(const jobject& obj) {
                
       const auto methodID = methodID_getOutputMemoryModules();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_sense() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "doTick", "method_19101", "sense", "m_5578_"), "(Laqu;Lbtn;)V");
    }

    static void sense(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_sense();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getNearestVisibleLivingEntity() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getNearestEntity", "method_35151", "getNearestVisibleLivingEntity", "m_148297_"), "(Lbtn;)Ljava/util/Optional;");
    }

    static jobject getNearestVisibleLivingEntity(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getNearestVisibleLivingEntity();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getVisibleLivingEntities() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getVisibleEntities", "method_35147", "getVisibleLivingEntities", "m_148290_"), "(Lbtn;)Ljava/util/Optional;");
    }

    static jobject getVisibleLivingEntities(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getVisibleLivingEntities();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_ENTITY_AI_BRAIN_SENSOR_NEARESTVISIBLELIVINGENTITYSENSOR_HPP