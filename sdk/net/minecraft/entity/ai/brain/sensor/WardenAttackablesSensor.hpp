// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ENTITY_AI_BRAIN_SENSOR_WARDENATTACKABLESSENSOR_HPP
#define NET_MINECRAFT_ENTITY_AI_BRAIN_SENSOR_WARDENATTACKABLESSENSOR_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.entity.ai.brain.sensor.WardenAttackablesSensor
 * Remapped: ced
 */
namespace WardenAttackablesSensor {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("ced", "net/minecraft/world/entity/ai/sensing/WardenEntitySensor", "net/minecraft/class_7252", "net/minecraft/entity/ai/brain/sensor/WardenAttackablesSensor", "net/minecraft/src/C_213031_"));
        }
        return cachedClass;
    };

    static jmethodID methodID_getOutputMemoryModules() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "requires", "method_19099", "getOutputMemoryModules", "m_7163_"), "()Ljava/util/Set;");
    }

    static jobject getOutputMemoryModules(const jobject& obj) {
                
       const auto methodID = methodID_getOutputMemoryModules();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_sense() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "doTick", "method_43083", "sense", "m_5578_"), "(Laqu;Lcmb;)V");
    }

    static void sense(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_sense();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_findNearestTarget() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getClosest", "method_43086", "findNearestTarget", "m_217842_"), "(Lcmb;Ljava/util/function/Predicate;)Ljava/util/Optional;");
    }

    static jobject findNearestTarget(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_findNearestTarget();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getHorizontalExpansion() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "radiusXZ", "method_43081", "getHorizontalExpansion", "m_214020_"), "()I");
    }

    static jint getHorizontalExpansion(const jobject& obj) {
                
       const auto methodID = methodID_getHorizontalExpansion();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getHeightExpansion() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "radiusY", "method_43082", "getHeightExpansion", "m_214019_"), "()I");
    }

    static jint getHeightExpansion(const jobject& obj) {
                
       const auto methodID = methodID_getHeightExpansion();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_ENTITY_AI_BRAIN_SENSOR_WARDENATTACKABLESSENSOR_HPP