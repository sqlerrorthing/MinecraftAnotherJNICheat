// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ENTITY_AI_BRAIN_SENSOR_SENSORTYPE_HPP
#define NET_MINECRAFT_ENTITY_AI_BRAIN_SENSOR_SENSORTYPE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.entity.ai.brain.sensor.SensorType
 * Remapped: cdz
 */
namespace SensorType {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("cdz", "net/minecraft/world/entity/ai/sensing/SensorType", "net/minecraft/class_4149", "net/minecraft/entity/ai/brain/sensor/SensorType", "net/minecraft/src/C_777_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.entity.ai.brain.sensor.SensorType#DUMMY
    [[maybe_unused]] static jobject get_field_DUMMY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "DUMMY", "field_18465", "DUMMY", "f_26809_"), "Lcdz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.sensor.SensorType#DUMMY
    [[maybe_unused]] static void set_field_DUMMY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "DUMMY", "field_18465", "DUMMY", "f_26809_"), "Lcdz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.sensor.SensorType#NEAREST_ITEMS
    [[maybe_unused]] static jobject get_field_NEAREST_ITEMS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "NEAREST_ITEMS", "field_22358", "NEAREST_ITEMS", "f_26810_"), "Lcdz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.sensor.SensorType#NEAREST_ITEMS
    [[maybe_unused]] static void set_field_NEAREST_ITEMS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "NEAREST_ITEMS", "field_22358", "NEAREST_ITEMS", "f_26810_"), "Lcdz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.sensor.SensorType#NEAREST_LIVING_ENTITIES
    [[maybe_unused]] static jobject get_field_NEAREST_LIVING_ENTITIES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "NEAREST_LIVING_ENTITIES", "field_18466", "NEAREST_LIVING_ENTITIES", "f_26811_"), "Lcdz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.sensor.SensorType#NEAREST_LIVING_ENTITIES
    [[maybe_unused]] static void set_field_NEAREST_LIVING_ENTITIES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "NEAREST_LIVING_ENTITIES", "field_18466", "NEAREST_LIVING_ENTITIES", "f_26811_"), "Lcdz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.sensor.SensorType#NEAREST_PLAYERS
    [[maybe_unused]] static jobject get_field_NEAREST_PLAYERS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "NEAREST_PLAYERS", "field_18467", "NEAREST_PLAYERS", "f_26812_"), "Lcdz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.sensor.SensorType#NEAREST_PLAYERS
    [[maybe_unused]] static void set_field_NEAREST_PLAYERS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "NEAREST_PLAYERS", "field_18467", "NEAREST_PLAYERS", "f_26812_"), "Lcdz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.sensor.SensorType#NEAREST_BED
    [[maybe_unused]] static jobject get_field_NEAREST_BED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "NEAREST_BED", "field_19010", "NEAREST_BED", "f_26813_"), "Lcdz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.sensor.SensorType#NEAREST_BED
    [[maybe_unused]] static void set_field_NEAREST_BED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "NEAREST_BED", "field_19010", "NEAREST_BED", "f_26813_"), "Lcdz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.sensor.SensorType#HURT_BY
    [[maybe_unused]] static jobject get_field_HURT_BY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "HURT_BY", "field_18469", "HURT_BY", "f_26814_"), "Lcdz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.sensor.SensorType#HURT_BY
    [[maybe_unused]] static void set_field_HURT_BY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "HURT_BY", "field_18469", "HURT_BY", "f_26814_"), "Lcdz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.sensor.SensorType#VILLAGER_HOSTILES
    [[maybe_unused]] static jobject get_field_VILLAGER_HOSTILES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "VILLAGER_HOSTILES", "field_18470", "VILLAGER_HOSTILES", "f_26815_"), "Lcdz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.sensor.SensorType#VILLAGER_HOSTILES
    [[maybe_unused]] static void set_field_VILLAGER_HOSTILES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "VILLAGER_HOSTILES", "field_18470", "VILLAGER_HOSTILES", "f_26815_"), "Lcdz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.sensor.SensorType#VILLAGER_BABIES
    [[maybe_unused]] static jobject get_field_VILLAGER_BABIES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "VILLAGER_BABIES", "field_19011", "VILLAGER_BABIES", "f_26816_"), "Lcdz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.sensor.SensorType#VILLAGER_BABIES
    [[maybe_unused]] static void set_field_VILLAGER_BABIES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "VILLAGER_BABIES", "field_19011", "VILLAGER_BABIES", "f_26816_"), "Lcdz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.sensor.SensorType#SECONDARY_POIS
    [[maybe_unused]] static jobject get_field_SECONDARY_POIS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "SECONDARY_POIS", "field_18875", "SECONDARY_POIS", "f_26817_"), "Lcdz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.sensor.SensorType#SECONDARY_POIS
    [[maybe_unused]] static void set_field_SECONDARY_POIS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "SECONDARY_POIS", "field_18875", "SECONDARY_POIS", "f_26817_"), "Lcdz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.sensor.SensorType#GOLEM_DETECTED
    [[maybe_unused]] static jobject get_field_GOLEM_DETECTED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "GOLEM_DETECTED", "field_25756", "GOLEM_DETECTED", "f_26818_"), "Lcdz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.sensor.SensorType#GOLEM_DETECTED
    [[maybe_unused]] static void set_field_GOLEM_DETECTED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "GOLEM_DETECTED", "field_25756", "GOLEM_DETECTED", "f_26818_"), "Lcdz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.sensor.SensorType#ARMADILLO_SCARE_DETECTED
    [[maybe_unused]] static jobject get_field_ARMADILLO_SCARE_DETECTED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "ARMADILLO_SCARE_DETECTED", "field_47768", "ARMADILLO_SCARE_DETECTED", "f_315808_"), "Lcdz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.sensor.SensorType#ARMADILLO_SCARE_DETECTED
    [[maybe_unused]] static void set_field_ARMADILLO_SCARE_DETECTED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "ARMADILLO_SCARE_DETECTED", "field_47768", "ARMADILLO_SCARE_DETECTED", "f_315808_"), "Lcdz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.sensor.SensorType#PIGLIN_SPECIFIC_SENSOR
    [[maybe_unused]] static jobject get_field_PIGLIN_SPECIFIC_SENSOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "PIGLIN_SPECIFIC_SENSOR", "field_22359", "PIGLIN_SPECIFIC_SENSOR", "f_26819_"), "Lcdz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.sensor.SensorType#PIGLIN_SPECIFIC_SENSOR
    [[maybe_unused]] static void set_field_PIGLIN_SPECIFIC_SENSOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "PIGLIN_SPECIFIC_SENSOR", "field_22359", "PIGLIN_SPECIFIC_SENSOR", "f_26819_"), "Lcdz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.sensor.SensorType#PIGLIN_BRUTE_SPECIFIC_SENSOR
    [[maybe_unused]] static jobject get_field_PIGLIN_BRUTE_SPECIFIC_SENSOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "PIGLIN_BRUTE_SPECIFIC_SENSOR", "field_25757", "PIGLIN_BRUTE_SPECIFIC_SENSOR", "f_26820_"), "Lcdz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.sensor.SensorType#PIGLIN_BRUTE_SPECIFIC_SENSOR
    [[maybe_unused]] static void set_field_PIGLIN_BRUTE_SPECIFIC_SENSOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "PIGLIN_BRUTE_SPECIFIC_SENSOR", "field_25757", "PIGLIN_BRUTE_SPECIFIC_SENSOR", "f_26820_"), "Lcdz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.sensor.SensorType#HOGLIN_SPECIFIC_SENSOR
    [[maybe_unused]] static jobject get_field_HOGLIN_SPECIFIC_SENSOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "HOGLIN_SPECIFIC_SENSOR", "field_22360", "HOGLIN_SPECIFIC_SENSOR", "f_26821_"), "Lcdz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.sensor.SensorType#HOGLIN_SPECIFIC_SENSOR
    [[maybe_unused]] static void set_field_HOGLIN_SPECIFIC_SENSOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "HOGLIN_SPECIFIC_SENSOR", "field_22360", "HOGLIN_SPECIFIC_SENSOR", "f_26821_"), "Lcdz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.sensor.SensorType#NEAREST_ADULT
    [[maybe_unused]] static jobject get_field_NEAREST_ADULT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "NEAREST_ADULT", "field_25362", "NEAREST_ADULT", "f_26822_"), "Lcdz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.sensor.SensorType#NEAREST_ADULT
    [[maybe_unused]] static void set_field_NEAREST_ADULT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "NEAREST_ADULT", "field_25362", "NEAREST_ADULT", "f_26822_"), "Lcdz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.sensor.SensorType#AXOLOTL_ATTACKABLES
    [[maybe_unused]] static jobject get_field_AXOLOTL_ATTACKABLES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "AXOLOTL_ATTACKABLES", "field_30260", "AXOLOTL_ATTACKABLES", "f_148315_"), "Lcdz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.sensor.SensorType#AXOLOTL_ATTACKABLES
    [[maybe_unused]] static void set_field_AXOLOTL_ATTACKABLES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "AXOLOTL_ATTACKABLES", "field_30260", "AXOLOTL_ATTACKABLES", "f_148315_"), "Lcdz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.sensor.SensorType#AXOLOTL_TEMPTATIONS
    [[maybe_unused]] static jobject get_field_AXOLOTL_TEMPTATIONS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "AXOLOTL_TEMPTATIONS", "field_28329", "AXOLOTL_TEMPTATIONS", "f_148316_"), "Lcdz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.sensor.SensorType#AXOLOTL_TEMPTATIONS
    [[maybe_unused]] static void set_field_AXOLOTL_TEMPTATIONS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "AXOLOTL_TEMPTATIONS", "field_28329", "AXOLOTL_TEMPTATIONS", "f_148316_"), "Lcdz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.sensor.SensorType#GOAT_TEMPTATIONS
    [[maybe_unused]] static jobject get_field_GOAT_TEMPTATIONS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "GOAT_TEMPTATIONS", "field_30261", "GOAT_TEMPTATIONS", "f_148317_"), "Lcdz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.sensor.SensorType#GOAT_TEMPTATIONS
    [[maybe_unused]] static void set_field_GOAT_TEMPTATIONS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "GOAT_TEMPTATIONS", "field_30261", "GOAT_TEMPTATIONS", "f_148317_"), "Lcdz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.sensor.SensorType#FROG_TEMPTATIONS
    [[maybe_unused]] static jobject get_field_FROG_TEMPTATIONS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "FROG_TEMPTATIONS", "field_37445", "FROG_TEMPTATIONS", "f_217822_"), "Lcdz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.sensor.SensorType#FROG_TEMPTATIONS
    [[maybe_unused]] static void set_field_FROG_TEMPTATIONS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "FROG_TEMPTATIONS", "field_37445", "FROG_TEMPTATIONS", "f_217822_"), "Lcdz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.sensor.SensorType#CAMEL_TEMPTATIONS
    [[maybe_unused]] static jobject get_field_CAMEL_TEMPTATIONS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "CAMEL_TEMPTATIONS", "field_40128", "CAMEL_TEMPTATIONS", "f_243995_"), "Lcdz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.sensor.SensorType#CAMEL_TEMPTATIONS
    [[maybe_unused]] static void set_field_CAMEL_TEMPTATIONS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "CAMEL_TEMPTATIONS", "field_40128", "CAMEL_TEMPTATIONS", "f_243995_"), "Lcdz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.sensor.SensorType#ARMADILLO_TEMPTATIONS
    [[maybe_unused]] static jobject get_field_ARMADILLO_TEMPTATIONS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "ARMADILLO_TEMPTATIONS", "field_47769", "ARMADILLO_TEMPTATIONS", "f_316993_"), "Lcdz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.sensor.SensorType#ARMADILLO_TEMPTATIONS
    [[maybe_unused]] static void set_field_ARMADILLO_TEMPTATIONS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "ARMADILLO_TEMPTATIONS", "field_47769", "ARMADILLO_TEMPTATIONS", "f_316993_"), "Lcdz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.sensor.SensorType#FROG_ATTACKABLES
    [[maybe_unused]] static jobject get_field_FROG_ATTACKABLES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "FROG_ATTACKABLES", "field_37446", "FROG_ATTACKABLES", "f_217823_"), "Lcdz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.sensor.SensorType#FROG_ATTACKABLES
    [[maybe_unused]] static void set_field_FROG_ATTACKABLES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "FROG_ATTACKABLES", "field_37446", "FROG_ATTACKABLES", "f_217823_"), "Lcdz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.sensor.SensorType#IS_IN_WATER
    [[maybe_unused]] static jobject get_field_IS_IN_WATER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "IS_IN_WATER", "field_37447", "IS_IN_WATER", "f_217824_"), "Lcdz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.sensor.SensorType#IS_IN_WATER
    [[maybe_unused]] static void set_field_IS_IN_WATER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "IS_IN_WATER", "field_37447", "IS_IN_WATER", "f_217824_"), "Lcdz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.sensor.SensorType#WARDEN_ENTITY_SENSOR
    [[maybe_unused]] static jobject get_field_WARDEN_ENTITY_SENSOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "WARDEN_ENTITY_SENSOR", "field_38114", "WARDEN_ENTITY_SENSOR", "f_217825_"), "Lcdz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.sensor.SensorType#WARDEN_ENTITY_SENSOR
    [[maybe_unused]] static void set_field_WARDEN_ENTITY_SENSOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "WARDEN_ENTITY_SENSOR", "field_38114", "WARDEN_ENTITY_SENSOR", "f_217825_"), "Lcdz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.sensor.SensorType#SNIFFER_TEMPTATIONS
    [[maybe_unused]] static jobject get_field_SNIFFER_TEMPTATIONS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("y", "SNIFFER_TEMPTATIONS", "field_44475", "SNIFFER_TEMPTATIONS", "f_278390_"), "Lcdz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.sensor.SensorType#SNIFFER_TEMPTATIONS
    [[maybe_unused]] static void set_field_SNIFFER_TEMPTATIONS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("y", "SNIFFER_TEMPTATIONS", "field_44475", "SNIFFER_TEMPTATIONS", "f_278390_"), "Lcdz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.sensor.SensorType#BREEZE_ATTACK_ENTITY_SENSOR
    [[maybe_unused]] static jobject get_field_BREEZE_ATTACK_ENTITY_SENSOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("z", "BREEZE_ATTACK_ENTITY_SENSOR", "field_47261", "BREEZE_ATTACK_ENTITY_SENSOR", "f_302610_"), "Lcdz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.sensor.SensorType#BREEZE_ATTACK_ENTITY_SENSOR
    [[maybe_unused]] static void set_field_BREEZE_ATTACK_ENTITY_SENSOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("z", "BREEZE_ATTACK_ENTITY_SENSOR", "field_47261", "BREEZE_ATTACK_ENTITY_SENSOR", "f_302610_"), "Lcdz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.entity.ai.brain.sensor.SensorType#factory
    static jobject get_field_factory(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("A", "factory", "field_18471", "factory", "f_26823_"), "Ljava/util/function/Supplier;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.ai.brain.sensor.SensorType#factory
    static void set_field_factory(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("A", "factory", "field_18471", "factory", "f_26823_"), "Ljava/util/function/Supplier;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_create() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "create", "method_19102", "create", "m_26827_"), "()Lcdy;");
    }

    static jobject create(const jobject& obj) {
                
       const auto methodID = methodID_create();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_register() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "register", "method_19103", "register", "m_26828_"), "(Ljava/lang/String;Ljava/util/function/Supplier;)Lcdz;");
    }

    static jobject register(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_register();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_ENTITY_AI_BRAIN_SENSOR_SENSORTYPE_HPP