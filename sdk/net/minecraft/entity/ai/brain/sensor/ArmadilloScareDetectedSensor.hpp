// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ENTITY_AI_BRAIN_SENSOR_ARMADILLOSCAREDETECTEDSENSOR_HPP
#define NET_MINECRAFT_ENTITY_AI_BRAIN_SENSOR_ARMADILLOSCAREDETECTEDSENSOR_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.entity.ai.brain.sensor.ArmadilloScareDetectedSensor
 * Remapped: cdo
 */
namespace ArmadilloScareDetectedSensor {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("cdo", "net/minecraft/world/entity/ai/sensing/MobSensor", "net/minecraft/class_9068", "net/minecraft/entity/ai/brain/sensor/ArmadilloScareDetectedSensor", "net/minecraft/src/C_313422_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.entity.ai.brain.sensor.ArmadilloScareDetectedSensor#threateningEntityPredicate
    static jobject get_field_threateningEntityPredicate(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "mobTest", "field_47764", "threateningEntityPredicate", "f_316153_"), "Ljava/util/function/BiPredicate;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.ai.brain.sensor.ArmadilloScareDetectedSensor#threateningEntityPredicate
    static void set_field_threateningEntityPredicate(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "mobTest", "field_47764", "threateningEntityPredicate", "f_316153_"), "Ljava/util/function/BiPredicate;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.ai.brain.sensor.ArmadilloScareDetectedSensor#canRollUpPredicate
    static jobject get_field_canRollUpPredicate(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "readyTest", "field_47765", "canRollUpPredicate", "f_314543_"), "Ljava/util/function/Predicate;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.ai.brain.sensor.ArmadilloScareDetectedSensor#canRollUpPredicate
    static void set_field_canRollUpPredicate(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "readyTest", "field_47765", "canRollUpPredicate", "f_314543_"), "Ljava/util/function/Predicate;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.ai.brain.sensor.ArmadilloScareDetectedSensor#memoryModuleType
    static jobject get_field_memoryModuleType(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "toSet", "field_47766", "memoryModuleType", "f_315603_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.ai.brain.sensor.ArmadilloScareDetectedSensor#memoryModuleType
    static void set_field_memoryModuleType(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "toSet", "field_47766", "memoryModuleType", "f_315603_"), "Lccs;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.ai.brain.sensor.ArmadilloScareDetectedSensor#expiry
    static jint get_field_expiry(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "memoryTimeToLive", "field_47767", "expiry", "f_316537_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.ai.brain.sensor.ArmadilloScareDetectedSensor#expiry
    static void set_field_expiry(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "memoryTimeToLive", "field_47767", "expiry", "f_316537_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    static jmethodID methodID_sense() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "doTick", "method_19101", "sense", "m_5578_"), "(Laqu;Lbtn;)V");
    }

    static void sense(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_sense();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getOutputMemoryModules() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "requires", "method_19099", "getOutputMemoryModules", "m_7163_"), "()Ljava/util/Set;");
    }

    static jobject getOutputMemoryModules(const jobject& obj) {
                
       const auto methodID = methodID_getOutputMemoryModules();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_tryDetectThreat() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "checkForMobsNearby", "method_55702", "tryDetectThreat", "m_321981_"), "(Lbtn;)V");
    }

    static void tryDetectThreat(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_tryDetectThreat();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_onDetected() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "mobDetected", "method_55704", "onDetected", "m_323189_"), "(Lbtn;)V");
    }

    static void onDetected(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onDetected();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_clear() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "clearMemory", "method_55705", "clear", "m_320330_"), "(Lbtn;)V");
    }

    static void clear(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_clear();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_ENTITY_AI_BRAIN_SENSOR_ARMADILLOSCAREDETECTEDSENSOR_HPP