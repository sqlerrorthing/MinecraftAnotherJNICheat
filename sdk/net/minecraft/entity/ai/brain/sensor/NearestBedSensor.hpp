// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ENTITY_AI_BRAIN_SENSOR_NEARESTBEDSENSOR_HPP
#define NET_MINECRAFT_ENTITY_AI_BRAIN_SENSOR_NEARESTBEDSENSOR_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.entity.ai.brain.sensor.NearestBedSensor
 * Remapped: cdp
 */
namespace NearestBedSensor {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("cdp", "net/minecraft/world/entity/ai/sensing/NearestBedSensor", "net/minecraft/class_4256", "net/minecraft/entity/ai/brain/sensor/NearestBedSensor", "net/minecraft/src/C_766_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.entity.ai.brain.sensor.NearestBedSensor#REMEMBER_TIME
    [[maybe_unused]] static jint get_field_REMEMBER_TIME() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CACHE_TIMEOUT", "field_30251", "REMEMBER_TIME", "f_148279_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.ai.brain.sensor.NearestBedSensor#REMEMBER_TIME
    [[maybe_unused]] static void set_field_REMEMBER_TIME(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CACHE_TIMEOUT", "field_30251", "REMEMBER_TIME", "f_148279_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.ai.brain.sensor.NearestBedSensor#MAX_TRIES
    [[maybe_unused]] static jint get_field_MAX_TRIES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "BATCH_SIZE", "field_30252", "MAX_TRIES", "f_148280_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.ai.brain.sensor.NearestBedSensor#MAX_TRIES
    [[maybe_unused]] static void set_field_MAX_TRIES(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "BATCH_SIZE", "field_30252", "MAX_TRIES", "f_148280_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.ai.brain.sensor.NearestBedSensor#MAX_EXPIRY_TIME
    [[maybe_unused]] static jint get_field_MAX_EXPIRY_TIME() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "RATE", "field_30253", "MAX_EXPIRY_TIME", "f_148281_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.ai.brain.sensor.NearestBedSensor#MAX_EXPIRY_TIME
    [[maybe_unused]] static void set_field_MAX_EXPIRY_TIME(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "RATE", "field_30253", "MAX_EXPIRY_TIME", "f_148281_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.entity.ai.brain.sensor.NearestBedSensor#positionToExpiryTime
    static jobject get_field_positionToExpiryTime(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "batchCache", "field_20295", "positionToExpiryTime", "f_26676_"), "Lit/unimi/dsi/fastutil/longs/Long2LongMap;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.ai.brain.sensor.NearestBedSensor#positionToExpiryTime
    static void set_field_positionToExpiryTime(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "batchCache", "field_20295", "positionToExpiryTime", "f_26676_"), "Lit/unimi/dsi/fastutil/longs/Long2LongMap;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.ai.brain.sensor.NearestBedSensor#tries
    static jint get_field_tries(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "triedCount", "field_20296", "tries", "f_26677_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.ai.brain.sensor.NearestBedSensor#tries
    static void set_field_tries(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "triedCount", "field_20296", "tries", "f_26677_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.ai.brain.sensor.NearestBedSensor#expiryTime
    static jlong get_field_expiryTime(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "lastUpdate", "field_20297", "expiryTime", "f_26678_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.ai.brain.sensor.NearestBedSensor#expiryTime
    static void set_field_expiryTime(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "lastUpdate", "field_20297", "expiryTime", "f_26678_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    static jmethodID methodID_getOutputMemoryModules() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "requires", "method_19099", "getOutputMemoryModules", "m_7163_"), "()Ljava/util/Set;");
    }

    static jobject getOutputMemoryModules(const jobject& obj) {
                
       const auto methodID = methodID_getOutputMemoryModules();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_sense() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "doTick", "method_21646", "sense", "m_5578_"), "(Laqu;Lbtp;)V");
    }

    static void sense(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_sense();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_ENTITY_AI_BRAIN_SENSOR_NEARESTBEDSENSOR_HPP