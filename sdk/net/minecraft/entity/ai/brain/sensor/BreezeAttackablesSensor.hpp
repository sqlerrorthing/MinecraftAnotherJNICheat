// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ENTITY_AI_BRAIN_SENSOR_BREEZEATTACKABLESSENSOR_HPP
#define NET_MINECRAFT_ENTITY_AI_BRAIN_SENSOR_BREEZEATTACKABLESSENSOR_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.entity.ai.brain.sensor.BreezeAttackablesSensor
 * Remapped: cdh
 */
namespace BreezeAttackablesSensor {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("cdh", "net/minecraft/world/entity/ai/sensing/BreezeAttackEntitySensor", "net/minecraft/class_8947", "net/minecraft/entity/ai/brain/sensor/BreezeAttackablesSensor", "net/minecraft/src/C_301968_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.entity.ai.brain.sensor.BreezeAttackablesSensor#RANGE
    [[maybe_unused]] static jint get_field_RANGE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "BREEZE_SENSOR_RADIUS", "field_47260", "RANGE", "f_302206_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.sensor.BreezeAttackablesSensor#RANGE
    [[maybe_unused]] static void set_field_RANGE(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "BREEZE_SENSOR_RADIUS", "field_47260", "RANGE", "f_302206_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    static jmethodID methodID_getOutputMemoryModules() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "requires", "method_19099", "getOutputMemoryModules", "m_7163_"), "()Ljava/util/Set;");
    }

    static jobject getOutputMemoryModules(const jobject& obj) {
                
       const auto methodID = methodID_getOutputMemoryModules();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_sense() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "doTick", "method_54993", "sense", "m_5578_"), "(Laqu;Lckz;)V");
    }

    static void sense(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_sense();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getHorizontalExpansion() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "radiusXZ", "method_43081", "getHorizontalExpansion", "m_214020_"), "()I");
    }

    static jint getHorizontalExpansion(const jobject& obj) {
                
       const auto methodID = methodID_getHorizontalExpansion();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getHeightExpansion() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "radiusY", "method_43082", "getHeightExpansion", "m_214019_"), "()I");
    }

    static jint getHeightExpansion(const jobject& obj) {
                
       const auto methodID = methodID_getHeightExpansion();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_ENTITY_AI_BRAIN_SENSOR_BREEZEATTACKABLESSENSOR_HPP