// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ENTITY_AI_BRAIN_TASK_FORGETATTACKTARGETTASK_HPP
#define NET_MINECRAFT_ENTITY_AI_BRAIN_TASK_FORGETATTACKTARGETTASK_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.entity.ai.brain.task.ForgetAttackTargetTask
 * Remapped: bxw
 */
namespace ForgetAttackTargetTask {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("bxw", "net/minecraft/world/entity/ai/behavior/StopAttackingIfTargetInvalid", "net/minecraft/class_4828", "net/minecraft/entity/ai/brain/task/ForgetAttackTargetTask", "net/minecraft/src/C_635_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.entity.ai.brain.task.ForgetAttackTargetTask#REMEMBER_TIME
    [[maybe_unused]] static jint get_field_REMEMBER_TIME() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "TIMEOUT_TO_GET_WITHIN_ATTACK_RANGE", "field_30177", "REMEMBER_TIME", "f_147978_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.ai.brain.task.ForgetAttackTargetTask#REMEMBER_TIME
    [[maybe_unused]] static void set_field_REMEMBER_TIME(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "TIMEOUT_TO_GET_WITHIN_ATTACK_RANGE", "field_30177", "REMEMBER_TIME", "f_147978_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    static jmethodID methodID_create() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "create", "method_47137", "create", "m_257940_"), "(Ljava/util/function/BiConsumer;)Lbvi;");
    }

    static jobject create(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_create();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID__create() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "create", "method_47138", "create", "m_257990_"), "(Ljava/util/function/Predicate;)Lbvi;");
    }

    static jobject _create(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID__create();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID___create() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "create", "method_47132", "create", "m_257822_"), "()Lbvi;");
    }

    static jobject __create() {
       const auto clazz = self();
       const auto methodID = methodID___create();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID____create() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "create", "method_47139", "create", "m_257811_"), "(Ljava/util/function/Predicate;Ljava/util/function/BiConsumer;Z)Lbvi;");
    }

    static jobject ___create(const jobject& arg0, const jobject& arg1, const jboolean& arg2) {
       const auto clazz = self();
       const auto methodID = methodID____create();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_cannotReachTarget() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "isTiredOfTryingToReachTarget", "method_24621", "cannotReachTarget", "m_258032_"), "(Lbtn;Ljava/util/Optional;)Z");
    }

    static jboolean cannotReachTarget(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_cannotReachTarget();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_ENTITY_AI_BRAIN_TASK_FORGETATTACKTARGETTASK_HPP