// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ENTITY_AI_BRAIN_TASK_GIVEGIFTSTOHEROTASK_HPP
#define NET_MINECRAFT_ENTITY_AI_BRAIN_TASK_GIVEGIFTSTOHEROTASK_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.entity.ai.brain.task.GiveGiftsToHeroTask
 * Remapped: bvw
 */
namespace GiveGiftsToHeroTask {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("bvw", "net/minecraft/world/entity/ai/behavior/GiveGiftToHero", "net/minecraft/class_4243", "net/minecraft/entity/ai/brain/task/GiveGiftsToHeroTask", "net/minecraft/src/C_589_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.entity.ai.brain.task.GiveGiftsToHeroTask#MAX_DISTANCE
    [[maybe_unused]] static jint get_field_MAX_DISTANCE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "THROW_GIFT_AT_DISTANCE", "field_30117", "MAX_DISTANCE", "f_147546_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.ai.brain.task.GiveGiftsToHeroTask#MAX_DISTANCE
    [[maybe_unused]] static void set_field_MAX_DISTANCE(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "THROW_GIFT_AT_DISTANCE", "field_30117", "MAX_DISTANCE", "f_147546_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.ai.brain.task.GiveGiftsToHeroTask#DEFAULT_DURATION
    [[maybe_unused]] static jint get_field_DEFAULT_DURATION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "MIN_TIME_BETWEEN_GIFTS", "field_30118", "DEFAULT_DURATION", "f_147547_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.ai.brain.task.GiveGiftsToHeroTask#DEFAULT_DURATION
    [[maybe_unused]] static void set_field_DEFAULT_DURATION(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "MIN_TIME_BETWEEN_GIFTS", "field_30118", "DEFAULT_DURATION", "f_147547_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.ai.brain.task.GiveGiftsToHeroTask#MAX_NEXT_GIFT_DELAY
    [[maybe_unused]] static jint get_field_MAX_NEXT_GIFT_DELAY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "MAX_TIME_BETWEEN_GIFTS", "field_30119", "MAX_NEXT_GIFT_DELAY", "f_147548_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.ai.brain.task.GiveGiftsToHeroTask#MAX_NEXT_GIFT_DELAY
    [[maybe_unused]] static void set_field_MAX_NEXT_GIFT_DELAY(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "MAX_TIME_BETWEEN_GIFTS", "field_30119", "MAX_NEXT_GIFT_DELAY", "f_147548_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.ai.brain.task.GiveGiftsToHeroTask#RUN_TIME
    [[maybe_unused]] static jint get_field_RUN_TIME() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "TIME_TO_DELAY_FOR_HEAD_TO_FINISH_TURNING", "field_30120", "RUN_TIME", "f_147549_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.ai.brain.task.GiveGiftsToHeroTask#RUN_TIME
    [[maybe_unused]] static void set_field_RUN_TIME(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "TIME_TO_DELAY_FOR_HEAD_TO_FINISH_TURNING", "field_30120", "RUN_TIME", "f_147549_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.ai.brain.task.GiveGiftsToHeroTask#GIFTS
    [[maybe_unused]] static jobject get_field_GIFTS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "GIFTS", "field_18984", "GIFTS", "f_147550_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.ai.brain.task.GiveGiftsToHeroTask#GIFTS
    [[maybe_unused]] static void set_field_GIFTS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "GIFTS", "field_18984", "GIFTS", "f_147550_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.ai.brain.task.GiveGiftsToHeroTask#WALK_SPEED
    [[maybe_unused]] static jfloat get_field_WALK_SPEED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "SPEED_MODIFIER", "field_30121", "WALK_SPEED", "f_147551_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.ai.brain.task.GiveGiftsToHeroTask#WALK_SPEED
    [[maybe_unused]] static void set_field_WALK_SPEED(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "SPEED_MODIFIER", "field_30121", "WALK_SPEED", "f_147551_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.entity.ai.brain.task.GiveGiftsToHeroTask#ticksLeft
    static jint get_field_ticksLeft(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "timeUntilNextGift", "field_18985", "ticksLeft", "f_22987_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.ai.brain.task.GiveGiftsToHeroTask#ticksLeft
    static void set_field_ticksLeft(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "timeUntilNextGift", "field_18985", "ticksLeft", "f_22987_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.ai.brain.task.GiveGiftsToHeroTask#done
    static jboolean get_field_done(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "giftGivenDuringThisRun", "field_18986", "done", "f_22988_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.ai.brain.task.GiveGiftsToHeroTask#done
    static void set_field_done(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "giftGivenDuringThisRun", "field_18986", "done", "f_22988_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.ai.brain.task.GiveGiftsToHeroTask#startTime
    static jlong get_field_startTime(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "timeSinceStart", "field_18987", "startTime", "f_22989_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.ai.brain.task.GiveGiftsToHeroTask#startTime
    static void set_field_startTime(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "timeSinceStart", "field_18987", "startTime", "f_22989_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    static jmethodID methodID_shouldRun() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "checkExtraStartConditions", "method_19962", "shouldRun", "m_6114_"), "(Laqu;Lcmk;)Z");
    }

    static jboolean shouldRun(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_shouldRun();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_run() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "start", "method_19963", "run", "m_6735_"), "(Laqu;Lcmk;J)V");
    }

    static void run(const jobject& obj, const jobject& arg0, const jobject& arg1, const jlong& arg2) {
                
       const auto methodID = methodID_run();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_shouldKeepRunning() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "canStillUse", "method_19965", "shouldKeepRunning", "m_6737_"), "(Laqu;Lcmk;J)Z");
    }

    static jboolean shouldKeepRunning(const jobject& obj, const jobject& arg0, const jobject& arg1, const jlong& arg2) {
                
       const auto methodID = methodID_shouldKeepRunning();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_keepRunning() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "tick", "method_19967", "keepRunning", "m_6725_"), "(Laqu;Lcmk;J)V");
    }

    static void keepRunning(const jobject& obj, const jobject& arg0, const jobject& arg1, const jlong& arg2) {
                
       const auto methodID = methodID_keepRunning();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_finishRunning() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "stop", "method_19968", "finishRunning", "m_6732_"), "(Laqu;Lcmk;J)V");
    }

    static void finishRunning(const jobject& obj, const jobject& arg0, const jobject& arg1, const jlong& arg2) {
                
       const auto methodID = methodID_finishRunning();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_giveGifts() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "throwGift", "method_19957", "giveGifts", "m_23011_"), "(Lcmk;Lbtn;)V");
    }

    static void giveGifts(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_giveGifts();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getGifts() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getItemToThrow", "method_19956", "getGifts", "m_23009_"), "(Lcmk;)Ljava/util/List;");
    }

    static jobject getGifts(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getGifts();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isNearestPlayerHero() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "isHeroVisible", "method_19964", "isNearestPlayerHero", "m_23029_"), "(Lcmk;)Z");
    }

    static jboolean isNearestPlayerHero(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_isNearestPlayerHero();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getNearestPlayerIfHero() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getNearestTargetableHero", "method_19966", "getNearestPlayerIfHero", "m_23039_"), "(Lcmk;)Ljava/util/Optional;");
    }

    static jobject getNearestPlayerIfHero(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getNearestPlayerIfHero();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isHero() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "isHero", "method_19959", "isHero", "m_23017_"), "(Lcmx;)Z");
    }

    static jboolean isHero(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_isHero();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isCloseEnough() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "isWithinThrowingDistance", "method_19958", "isCloseEnough", "m_23014_"), "(Lcmk;Lcmx;)Z");
    }

    static jboolean isCloseEnough(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_isCloseEnough();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getNextGiftDelay() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "calculateTimeUntilNextGift", "method_19961", "getNextGiftDelay", "m_22993_"), "(Laqu;)I");
    }

    static jint getNextGiftDelay(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getNextGiftDelay();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_ENTITY_AI_BRAIN_TASK_GIVEGIFTSTOHEROTASK_HPP