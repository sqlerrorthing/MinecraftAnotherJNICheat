// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ENTITY_AI_BRAIN_TASK_BREEZEMOVEMENTUTIL_HPP
#define NET_MINECRAFT_ENTITY_AI_BRAIN_TASK_BREEZEMOVEMENTUTIL_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.entity.ai.brain.task.BreezeMovementUtil
 * Remapped: clb
 */
namespace BreezeMovementUtil {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("clb", "net/minecraft/world/entity/monster/breeze/BreezeUtil", "net/minecraft/class_9075", "net/minecraft/entity/ai/brain/task/BreezeMovementUtil", "net/minecraft/src/C_313803_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.entity.ai.brain.task.BreezeMovementUtil#MAX_MOVE_DISTANCE
    [[maybe_unused]] static jdouble get_field_MAX_MOVE_DISTANCE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "MAX_LINE_OF_SIGHT_TEST_RANGE", "field_47817", "MAX_MOVE_DISTANCE", "f_315268_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticDoubleField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.ai.brain.task.BreezeMovementUtil#MAX_MOVE_DISTANCE
    [[maybe_unused]] static void set_field_MAX_MOVE_DISTANCE(const jdouble &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "MAX_LINE_OF_SIGHT_TEST_RANGE", "field_47817", "MAX_MOVE_DISTANCE", "f_315268_"), "D");
        return MinecraftSDK::env->SetStaticDoubleField(clazz, fieldID, value);
    };

    static jmethodID methodID_getRandomPosBehindTarget() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "randomPointBehindTarget", "method_55751", "getRandomPosBehindTarget", "m_318815_"), "(Lbtn;Layw;)Lexc;");
    }

    static jobject getRandomPosBehindTarget(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_getRandomPosBehindTarget();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_canMoveTo() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "hasLineOfSight", "method_55752", "canMoveTo", "m_320427_"), "(Lckz;Lexc;)Z");
    }

    static jboolean canMoveTo(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_canMoveTo();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_ENTITY_AI_BRAIN_TASK_BREEZEMOVEMENTUTIL_HPP