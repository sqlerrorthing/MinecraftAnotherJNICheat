// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ENTITY_AI_BRAIN_TASK_TEMPTTASK_HPP
#define NET_MINECRAFT_ENTITY_AI_BRAIN_TASK_TEMPTTASK_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.entity.ai.brain.task.TemptTask
 * Remapped: bvu
 */
namespace TemptTask {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("bvu", "net/minecraft/world/entity/ai/behavior/FollowTemptation", "net/minecraft/class_5754", "net/minecraft/entity/ai/brain/task/TemptTask", "net/minecraft/src/C_141080_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.entity.ai.brain.task.TemptTask#TEMPTATION_COOLDOWN_TICKS
    [[maybe_unused]] static jint get_field_TEMPTATION_COOLDOWN_TICKS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "TEMPTATION_COOLDOWN", "field_30115", "TEMPTATION_COOLDOWN_TICKS", "f_147482_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.task.TemptTask#TEMPTATION_COOLDOWN_TICKS
    [[maybe_unused]] static void set_field_TEMPTATION_COOLDOWN_TICKS(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "TEMPTATION_COOLDOWN", "field_30115", "TEMPTATION_COOLDOWN_TICKS", "f_147482_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.task.TemptTask#DEFAULT_STOP_DISTANCE
    [[maybe_unused]] static jdouble get_field_DEFAULT_STOP_DISTANCE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "DEFAULT_CLOSE_ENOUGH_DIST", "field_45125", "DEFAULT_STOP_DISTANCE", "f_291480_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticDoubleField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.task.TemptTask#DEFAULT_STOP_DISTANCE
    [[maybe_unused]] static void set_field_DEFAULT_STOP_DISTANCE(const jdouble &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "DEFAULT_CLOSE_ENOUGH_DIST", "field_45125", "DEFAULT_STOP_DISTANCE", "f_291480_"), "D");
        return MinecraftSDK::env->SetStaticDoubleField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.task.TemptTask#LARGE_ENTITY_STOP_DISTANCE
    [[maybe_unused]] static jdouble get_field_LARGE_ENTITY_STOP_DISTANCE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "BACKED_UP_CLOSE_ENOUGH_DIST", "field_45126", "LARGE_ENTITY_STOP_DISTANCE", "f_291714_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticDoubleField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.task.TemptTask#LARGE_ENTITY_STOP_DISTANCE
    [[maybe_unused]] static void set_field_LARGE_ENTITY_STOP_DISTANCE(const jdouble &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "BACKED_UP_CLOSE_ENOUGH_DIST", "field_45126", "LARGE_ENTITY_STOP_DISTANCE", "f_291714_"), "D");
        return MinecraftSDK::env->SetStaticDoubleField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.entity.ai.brain.task.TemptTask#speed
    static jobject get_field_speed(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "speedModifier", "field_28316", "speed", "f_147484_"), "Ljava/util/function/Function;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.ai.brain.task.TemptTask#speed
    static void set_field_speed(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "speedModifier", "field_28316", "speed", "f_147484_"), "Ljava/util/function/Function;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.ai.brain.task.TemptTask#stopDistanceGetter
    static jobject get_field_stopDistanceGetter(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "closeEnoughDistance", "field_44704", "stopDistanceGetter", "f_283928_"), "Ljava/util/function/Function;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.ai.brain.task.TemptTask#stopDistanceGetter
    static void set_field_stopDistanceGetter(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "closeEnoughDistance", "field_44704", "stopDistanceGetter", "f_283928_"), "Ljava/util/function/Function;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_getSpeed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getSpeedModifier", "method_33196", "getSpeed", "m_147497_"), "(Lbtw;)F");
    }

    static jfloat getSpeed(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getSpeed();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getTemptingPlayer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getTemptingPlayer", "method_33198", "getTemptingPlayer", "m_147508_"), "(Lbtw;)Ljava/util/Optional;");
    }

    static jobject getTemptingPlayer(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getTemptingPlayer();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isTimeLimitExceeded() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "timedOut", "method_18915", "isTimeLimitExceeded", "m_7773_"), "(J)Z");
    }

    static jboolean isTimeLimitExceeded(const jobject& obj, const jlong& arg0) {
                
       const auto methodID = methodID_isTimeLimitExceeded();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_shouldKeepRunning() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "canStillUse", "method_33195", "shouldKeepRunning", "m_6737_"), "(Laqu;Lbtw;J)Z");
    }

    static jboolean shouldKeepRunning(const jobject& obj, const jobject& arg0, const jobject& arg1, const jlong& arg2) {
                
       const auto methodID = methodID_shouldKeepRunning();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_run() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "start", "method_33197", "run", "m_6735_"), "(Laqu;Lbtw;J)V");
    }

    static void run(const jobject& obj, const jobject& arg0, const jobject& arg1, const jlong& arg2) {
                
       const auto methodID = methodID_run();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_finishRunning() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "stop", "method_33199", "finishRunning", "m_6732_"), "(Laqu;Lbtw;J)V");
    }

    static void finishRunning(const jobject& obj, const jobject& arg0, const jobject& arg1, const jlong& arg2) {
                
       const auto methodID = methodID_finishRunning();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_keepRunning() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "tick", "method_33200", "keepRunning", "m_6725_"), "(Laqu;Lbtw;J)V");
    }

    static void keepRunning(const jobject& obj, const jobject& arg0, const jobject& arg1, const jlong& arg2) {
                
       const auto methodID = methodID_keepRunning();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
};

#endif // NET_MINECRAFT_ENTITY_AI_BRAIN_TASK_TEMPTTASK_HPP