// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ENTITY_AI_BRAIN_TASK_STROLLTASK_HPP
#define NET_MINECRAFT_ENTITY_AI_BRAIN_TASK_STROLLTASK_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.entity.ai.brain.task.StrollTask
 * Remapped: bwz
 */
namespace StrollTask {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("bwz", "net/minecraft/world/entity/ai/behavior/RandomStroll", "net/minecraft/class_4818", "net/minecraft/entity/ai/brain/task/StrollTask", "net/minecraft/src/C_613_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.entity.ai.brain.task.StrollTask#DEFAULT_HORIZONTAL_RADIUS
    [[maybe_unused]] static jint get_field_DEFAULT_HORIZONTAL_RADIUS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "MAX_XZ_DIST", "field_30157", "DEFAULT_HORIZONTAL_RADIUS", "f_147849_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.ai.brain.task.StrollTask#DEFAULT_HORIZONTAL_RADIUS
    [[maybe_unused]] static void set_field_DEFAULT_HORIZONTAL_RADIUS(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "MAX_XZ_DIST", "field_30157", "DEFAULT_HORIZONTAL_RADIUS", "f_147849_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.ai.brain.task.StrollTask#DEFAULT_VERTICAL_RADIUS
    [[maybe_unused]] static jint get_field_DEFAULT_VERTICAL_RADIUS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "MAX_Y_DIST", "field_30158", "DEFAULT_VERTICAL_RADIUS", "f_147850_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.ai.brain.task.StrollTask#DEFAULT_VERTICAL_RADIUS
    [[maybe_unused]] static void set_field_DEFAULT_VERTICAL_RADIUS(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "MAX_Y_DIST", "field_30158", "DEFAULT_VERTICAL_RADIUS", "f_147850_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.ai.brain.task.StrollTask#RADII
    [[maybe_unused]] static jint get_field_RADII() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "SWIM_XY_DISTANCE_TIERS", "field_40995", "RADII", "f_256848_"), "[[I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.ai.brain.task.StrollTask#RADII
    [[maybe_unused]] static void set_field_RADII(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "SWIM_XY_DISTANCE_TIERS", "field_40995", "RADII", "f_256848_"), "[[I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    static jmethodID methodID_create() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "stroll", "method_47014", "create", "m_257965_"), "(F)Lbws;");
    }

    static jobject create(const jfloat& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_create();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID__create() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "stroll", "method_47018", "create", "m_257798_"), "(FZ)Lbws;");
    }

    static jobject _create(const jfloat& arg0, const jboolean& arg1) {
       const auto clazz = self();
       const auto methodID = methodID__create();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID___create() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "stroll", "method_47015", "create", "m_257960_"), "(FII)Lbvi;");
    }

    static jobject __create(const jfloat& arg0, const jint& arg1, const jint& arg2) {
       const auto clazz = self();
       const auto methodID = methodID___create();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_createSolidTargeting() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "fly", "method_47025", "createSolidTargeting", "m_257379_"), "(F)Lbvi;");
    }

    static jobject createSolidTargeting(const jfloat& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_createSolidTargeting();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_createDynamicRadius() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "swim", "method_47027", "createDynamicRadius", "m_257751_"), "(F)Lbvi;");
    }

    static jobject createDynamicRadius(const jfloat& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_createDynamicRadius();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID____create() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "strollFlyOrSwim", "method_47017", "create", "m_257629_"), "(FLjava/util/function/Function;Ljava/util/function/Predicate;)Lbws;");
    }

    static jobject ___create(const jfloat& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID____create();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_findTargetPos() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getTargetSwimPos", "method_47020", "findTargetPos", "m_257416_"), "(Lbtw;)Lexc;");
    }

    static jobject findTargetPos(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_findTargetPos();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID__findTargetPos() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getTargetFlyPos", "method_47021", "findTargetPos", "m_257997_"), "(Lbtw;II)Lexc;");
    }

    static jobject _findTargetPos(const jobject& arg0, const jint& arg1, const jint& arg2) {
       const auto clazz = self();
       const auto methodID = methodID__findTargetPos();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
};

#endif // NET_MINECRAFT_ENTITY_AI_BRAIN_TASK_STROLLTASK_HPP