// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ENTITY_AI_BRAIN_TASK_COMPOSITETASK$RUNMODE_HPP
#define NET_MINECRAFT_ENTITY_AI_BRAIN_TASK_COMPOSITETASK$RUNMODE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.entity.ai.brain.task.CompositeTask$RunMode
 * Remapped: bvv$b
 */
namespace CompositeTask$RunMode {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("bvv$b", "net/minecraft/world/entity/ai/behavior/GateBehavior$RunningPolicy", "net/minecraft/class_4103$class_4216", "net/minecraft/entity/ai/brain/task/CompositeTask$RunMode", "net/minecraft/src/C_583_$C_586_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.entity.ai.brain.task.CompositeTask$RunMode#RUN_ONE
    [[maybe_unused]] static jobject get_field_RUN_ONE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "RUN_ONE", "field_18855", "RUN_ONE", "RUN_ONE"), "Lbvv$b;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.task.CompositeTask$RunMode#RUN_ONE
    [[maybe_unused]] static void set_field_RUN_ONE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "RUN_ONE", "field_18855", "RUN_ONE", "RUN_ONE"), "Lbvv$b;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.task.CompositeTask$RunMode#TRY_ALL
    [[maybe_unused]] static jobject get_field_TRY_ALL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "TRY_ALL", "field_18856", "TRY_ALL", "TRY_ALL"), "Lbvv$b;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.task.CompositeTask$RunMode#TRY_ALL
    [[maybe_unused]] static void set_field_TRY_ALL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "TRY_ALL", "field_18856", "TRY_ALL", "TRY_ALL"), "Lbvv$b;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_values() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("values", "values", "values", "values", "values"), "()[Lbvv$b;");
    }

    static jobject values() {
       const auto clazz = self();
       const auto methodID = methodID_values();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_valueOf() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("valueOf", "valueOf", "valueOf", "valueOf", "valueOf"), "(Ljava/lang/String;)Lbvv$b;");
    }

    static jobject valueOf(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_valueOf();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_run() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "apply", "method_19559", "run", "m_142144_"), "(Ljava/util/stream/Stream;Laqu;Lbtn;J)V");
    }

    static void run(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jlong& arg3) {
                
       const auto methodID = methodID_run();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
};

#endif // NET_MINECRAFT_ENTITY_AI_BRAIN_TASK_COMPOSITETASK$RUNMODE_HPP