// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ENTITY_AI_BRAIN_TASK_TEMPTATIONCOOLDOWNTASK_HPP
#define NET_MINECRAFT_ENTITY_AI_BRAIN_TASK_TEMPTATIONCOOLDOWNTASK_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.entity.ai.brain.task.TemptationCooldownTask
 * Remapped: bvn
 */
namespace TemptationCooldownTask {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("bvn", "net/minecraft/world/entity/ai/behavior/CountDownCooldownTicks", "net/minecraft/class_5753", "net/minecraft/entity/ai/brain/task/TemptationCooldownTask", "net/minecraft/src/C_141079_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.entity.ai.brain.task.TemptationCooldownTask#moduleType
    static jobject get_field_moduleType(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "cooldownTicks", "field_30113", "moduleType", "f_147460_"), "Lccs;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.ai.brain.task.TemptationCooldownTask#moduleType
    static void set_field_moduleType(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "cooldownTicks", "field_30113", "moduleType", "f_147460_"), "Lccs;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_getTemptationCooldownTicks() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getCooldownTickMemory", "method_33194", "getTemptationCooldownTicks", "m_147465_"), "(Lbtn;)Ljava/util/Optional;");
    }

    static jobject getTemptationCooldownTicks(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getTemptationCooldownTicks();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isTimeLimitExceeded() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "timedOut", "method_18915", "isTimeLimitExceeded", "m_7773_"), "(J)Z");
    }

    static jboolean isTimeLimitExceeded(const jobject& obj, const jlong& arg0) {
                
       const auto methodID = methodID_isTimeLimitExceeded();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_shouldKeepRunning() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "canStillUse", "method_18927", "shouldKeepRunning", "m_6737_"), "(Laqu;Lbtn;J)Z");
    }

    static jboolean shouldKeepRunning(const jobject& obj, const jobject& arg0, const jobject& arg1, const jlong& arg2) {
                
       const auto methodID = methodID_shouldKeepRunning();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_keepRunning() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "tick", "method_18924", "keepRunning", "m_6725_"), "(Laqu;Lbtn;J)V");
    }

    static void keepRunning(const jobject& obj, const jobject& arg0, const jobject& arg1, const jlong& arg2) {
                
       const auto methodID = methodID_keepRunning();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_finishRunning() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "stop", "method_18926", "finishRunning", "m_6732_"), "(Laqu;Lbtn;J)V");
    }

    static void finishRunning(const jobject& obj, const jobject& arg0, const jobject& arg1, const jlong& arg2) {
                
       const auto methodID = methodID_finishRunning();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
};

#endif // NET_MINECRAFT_ENTITY_AI_BRAIN_TASK_TEMPTATIONCOOLDOWNTASK_HPP