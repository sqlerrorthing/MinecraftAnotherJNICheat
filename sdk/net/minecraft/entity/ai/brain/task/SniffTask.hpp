// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ENTITY_AI_BRAIN_TASK_SNIFFTASK_HPP
#define NET_MINECRAFT_ENTITY_AI_BRAIN_TASK_SNIFFTASK_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.entity.ai.brain.task.SniffTask
 * Remapped: bzg
 */
namespace SniffTask {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("bzg", "net/minecraft/world/entity/ai/behavior/warden/Sniffing", "net/minecraft/class_7251", "net/minecraft/entity/ai/brain/task/SniffTask", "net/minecraft/src/C_213024_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.entity.ai.brain.task.SniffTask#HORIZONTAL_RADIUS
    [[maybe_unused]] static jdouble get_field_HORIZONTAL_RADIUS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "ANGER_FROM_SNIFFING_MAX_DISTANCE_XZ", "field_38708", "HORIZONTAL_RADIUS", "f_217644_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticDoubleField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.ai.brain.task.SniffTask#HORIZONTAL_RADIUS
    [[maybe_unused]] static void set_field_HORIZONTAL_RADIUS(const jdouble &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "ANGER_FROM_SNIFFING_MAX_DISTANCE_XZ", "field_38708", "HORIZONTAL_RADIUS", "f_217644_"), "D");
        return MinecraftSDK::env->SetStaticDoubleField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.ai.brain.task.SniffTask#VERTICAL_RADIUS
    [[maybe_unused]] static jdouble get_field_VERTICAL_RADIUS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "ANGER_FROM_SNIFFING_MAX_DISTANCE_Y", "field_38848", "VERTICAL_RADIUS", "f_217645_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticDoubleField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.ai.brain.task.SniffTask#VERTICAL_RADIUS
    [[maybe_unused]] static void set_field_VERTICAL_RADIUS(const jdouble &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "ANGER_FROM_SNIFFING_MAX_DISTANCE_Y", "field_38848", "VERTICAL_RADIUS", "f_217645_"), "D");
        return MinecraftSDK::env->SetStaticDoubleField(clazz, fieldID, value);
    };

    static jmethodID methodID_shouldKeepRunning() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "canStillUse", "method_42158", "shouldKeepRunning", "m_6737_"), "(Laqu;Lcmb;J)Z");
    }

    static jboolean shouldKeepRunning(const jobject& obj, const jobject& arg0, const jobject& arg1, const jlong& arg2) {
                
       const auto methodID = methodID_shouldKeepRunning();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_run() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "start", "method_42160", "run", "m_6735_"), "(Laqu;Lcmb;J)V");
    }

    static void run(const jobject& obj, const jobject& arg0, const jobject& arg1, const jlong& arg2) {
                
       const auto methodID = methodID_run();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_finishRunning() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "stop", "method_42161", "finishRunning", "m_6732_"), "(Laqu;Lcmb;J)V");
    }

    static void finishRunning(const jobject& obj, const jobject& arg0, const jobject& arg1, const jlong& arg2) {
                
       const auto methodID = methodID_finishRunning();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
};

#endif // NET_MINECRAFT_ENTITY_AI_BRAIN_TASK_SNIFFTASK_HPP