// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ENTITY_AI_BRAIN_TASK_FROGEATENTITYTASK_HPP
#define NET_MINECRAFT_ENTITY_AI_BRAIN_TASK_FROGEATENTITYTASK_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.entity.ai.brain.task.FrogEatEntityTask
 * Remapped: cha
 */
namespace FrogEatEntityTask {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("cha", "net/minecraft/world/entity/animal/frog/ShootTongue", "net/minecraft/class_7108", "net/minecraft/entity/ai/brain/task/FrogEatEntityTask", "net/minecraft/src/C_213043_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.entity.ai.brain.task.FrogEatEntityTask#RUN_TIME
    [[maybe_unused]] static jint get_field_RUN_TIME() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "TIME_OUT_DURATION", "field_37479", "RUN_TIME", "f_218608_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.task.FrogEatEntityTask#RUN_TIME
    [[maybe_unused]] static void set_field_RUN_TIME(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "TIME_OUT_DURATION", "field_37479", "RUN_TIME", "f_218608_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.task.FrogEatEntityTask#CATCH_DURATION
    [[maybe_unused]] static jint get_field_CATCH_DURATION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "CATCH_ANIMATION_DURATION", "field_38414", "CATCH_DURATION", "f_218609_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.task.FrogEatEntityTask#CATCH_DURATION
    [[maybe_unused]] static void set_field_CATCH_DURATION(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "CATCH_ANIMATION_DURATION", "field_38414", "CATCH_DURATION", "f_218609_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.task.FrogEatEntityTask#EAT_DURATION
    [[maybe_unused]] static jint get_field_EAT_DURATION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "TONGUE_ANIMATION_DURATION", "field_37480", "EAT_DURATION", "f_218610_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.task.FrogEatEntityTask#EAT_DURATION
    [[maybe_unused]] static void set_field_EAT_DURATION(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "TONGUE_ANIMATION_DURATION", "field_37480", "EAT_DURATION", "f_218610_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.ai.brain.task.FrogEatEntityTask#MAX_DISTANCE
    [[maybe_unused]] static jfloat get_field_MAX_DISTANCE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "EATING_DISTANCE", "field_37481", "MAX_DISTANCE", "f_218611_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.ai.brain.task.FrogEatEntityTask#MAX_DISTANCE
    [[maybe_unused]] static void set_field_MAX_DISTANCE(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "EATING_DISTANCE", "field_37481", "MAX_DISTANCE", "f_218611_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.ai.brain.task.FrogEatEntityTask#VELOCITY_MULTIPLIER
    [[maybe_unused]] static jfloat get_field_VELOCITY_MULTIPLIER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "EATING_MOVEMENT_FACTOR", "field_37482", "VELOCITY_MULTIPLIER", "f_218612_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.ai.brain.task.FrogEatEntityTask#VELOCITY_MULTIPLIER
    [[maybe_unused]] static void set_field_VELOCITY_MULTIPLIER(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "EATING_MOVEMENT_FACTOR", "field_37482", "VELOCITY_MULTIPLIER", "f_218612_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.task.FrogEatEntityTask#UNREACHABLE_TONGUE_TARGETS_START_TIME
    [[maybe_unused]] static jint get_field_UNREACHABLE_TONGUE_TARGETS_START_TIME() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "UNREACHABLE_TONGUE_TARGETS_COOLDOWN_DURATION", "field_39452", "UNREACHABLE_TONGUE_TARGETS_START_TIME", "f_238166_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.task.FrogEatEntityTask#UNREACHABLE_TONGUE_TARGETS_START_TIME
    [[maybe_unused]] static void set_field_UNREACHABLE_TONGUE_TARGETS_START_TIME(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "UNREACHABLE_TONGUE_TARGETS_COOLDOWN_DURATION", "field_39452", "UNREACHABLE_TONGUE_TARGETS_START_TIME", "f_238166_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.brain.task.FrogEatEntityTask#MAX_UNREACHABLE_TONGUE_TARGETS
    [[maybe_unused]] static jint get_field_MAX_UNREACHABLE_TONGUE_TARGETS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "MAX_UNREACHBLE_TONGUE_TARGETS_IN_MEMORY", "field_39453", "MAX_UNREACHABLE_TONGUE_TARGETS", "f_238181_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.brain.task.FrogEatEntityTask#MAX_UNREACHABLE_TONGUE_TARGETS
    [[maybe_unused]] static void set_field_MAX_UNREACHABLE_TONGUE_TARGETS(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "MAX_UNREACHBLE_TONGUE_TARGETS_IN_MEMORY", "field_39453", "MAX_UNREACHABLE_TONGUE_TARGETS", "f_238181_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.entity.ai.brain.task.FrogEatEntityTask#eatTick
    static jint get_field_eatTick(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "eatAnimationTimer", "field_37483", "eatTick", "f_218613_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.ai.brain.task.FrogEatEntityTask#eatTick
    static void set_field_eatTick(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "eatAnimationTimer", "field_37483", "eatTick", "f_218613_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.ai.brain.task.FrogEatEntityTask#moveToTargetTick
    static jint get_field_moveToTargetTick(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "calculatePathCounter", "field_37484", "moveToTargetTick", "f_218614_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.ai.brain.task.FrogEatEntityTask#moveToTargetTick
    static void set_field_moveToTargetTick(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "calculatePathCounter", "field_37484", "moveToTargetTick", "f_218614_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.ai.brain.task.FrogEatEntityTask#tongueSound
    static jobject get_field_tongueSound(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "tongueSound", "field_37485", "tongueSound", "f_218615_"), "Lavo;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.ai.brain.task.FrogEatEntityTask#tongueSound
    static void set_field_tongueSound(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "tongueSound", "field_37485", "tongueSound", "f_218615_"), "Lavo;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.ai.brain.task.FrogEatEntityTask#eatSound
    static jobject get_field_eatSound(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "eatSound", "field_37486", "eatSound", "f_218616_"), "Lavo;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.ai.brain.task.FrogEatEntityTask#eatSound
    static void set_field_eatSound(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "eatSound", "field_37486", "eatSound", "f_218616_"), "Lavo;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.ai.brain.task.FrogEatEntityTask#targetPos
    static jobject get_field_targetPos(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "itemSpawnPos", "field_37487", "targetPos", "f_218617_"), "Lexc;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.ai.brain.task.FrogEatEntityTask#targetPos
    static void set_field_targetPos(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "itemSpawnPos", "field_37487", "targetPos", "f_218617_"), "Lexc;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.ai.brain.task.FrogEatEntityTask#phase
    static jobject get_field_phase(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("o", "state", "field_37489", "phase", "f_218618_"), "Lcha$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.ai.brain.task.FrogEatEntityTask#phase
    static void set_field_phase(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("o", "state", "field_37489", "phase", "f_218618_"), "Lcha$a;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_shouldRun() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "checkExtraStartConditions", "method_41384", "shouldRun", "m_6114_"), "(Laqu;Lcgy;)Z");
    }

    static jboolean shouldRun(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_shouldRun();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_shouldKeepRunning() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "canStillUse", "method_41385", "shouldKeepRunning", "m_6737_"), "(Laqu;Lcgy;J)Z");
    }

    static jboolean shouldKeepRunning(const jobject& obj, const jobject& arg0, const jobject& arg1, const jlong& arg2) {
                
       const auto methodID = methodID_shouldKeepRunning();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_run() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "start", "method_41387", "run", "m_6735_"), "(Laqu;Lcgy;J)V");
    }

    static void run(const jobject& obj, const jobject& arg0, const jobject& arg1, const jlong& arg2) {
                
       const auto methodID = methodID_run();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_finishRunning() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "stop", "method_41388", "finishRunning", "m_6732_"), "(Laqu;Lcgy;J)V");
    }

    static void finishRunning(const jobject& obj, const jobject& arg0, const jobject& arg1, const jlong& arg2) {
                
       const auto methodID = methodID_finishRunning();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_eat() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "eatEntity", "method_42667", "eat", "m_218640_"), "(Laqu;Lcgy;)V");
    }

    static void eat(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_eat();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_keepRunning() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "tick", "method_41389", "keepRunning", "m_6725_"), "(Laqu;Lcgy;J)V");
    }

    static void keepRunning(const jobject& obj, const jobject& arg0, const jobject& arg1, const jlong& arg2) {
                
       const auto methodID = methodID_keepRunning();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_isTargetReachable() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "canPathfindToTarget", "method_44332", "isTargetReachable", "m_238358_"), "(Lcgy;Lbtn;)Z");
    }

    static jboolean isTargetReachable(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_isTargetReachable();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_markTargetAsUnreachable() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "addUnreachableTargetToMemory", "method_44333", "markTargetAsUnreachable", "m_238443_"), "(Lcgy;Lbtn;)V");
    }

    static void markTargetAsUnreachable(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_markTargetAsUnreachable();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_ENTITY_AI_BRAIN_TASK_FROGEATENTITYTASK_HPP