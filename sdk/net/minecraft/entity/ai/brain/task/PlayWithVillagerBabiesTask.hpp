// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ENTITY_AI_BRAIN_TASK_PLAYWITHVILLAGERBABIESTASK_HPP
#define NET_MINECRAFT_ENTITY_AI_BRAIN_TASK_PLAYWITHVILLAGERBABIESTASK_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.entity.ai.brain.task.PlayWithVillagerBabiesTask
 * Remapped: bwt
 */
namespace PlayWithVillagerBabiesTask {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("bwt", "net/minecraft/world/entity/ai/behavior/PlayTagWithOtherKids", "net/minecraft/class_4218", "net/minecraft/entity/ai/brain/task/PlayWithVillagerBabiesTask", "net/minecraft/src/C_608_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.entity.ai.brain.task.PlayWithVillagerBabiesTask#HORIZONTAL_RANGE
    [[maybe_unused]] static jint get_field_HORIZONTAL_RANGE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "MAX_FLEE_XZ_DIST", "field_30151", "HORIZONTAL_RANGE", "f_147700_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.ai.brain.task.PlayWithVillagerBabiesTask#HORIZONTAL_RANGE
    [[maybe_unused]] static void set_field_HORIZONTAL_RANGE(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "MAX_FLEE_XZ_DIST", "field_30151", "HORIZONTAL_RANGE", "f_147700_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.ai.brain.task.PlayWithVillagerBabiesTask#VERTICAL_RANGE
    [[maybe_unused]] static jint get_field_VERTICAL_RANGE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "MAX_FLEE_Y_DIST", "field_30152", "VERTICAL_RANGE", "f_147701_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.ai.brain.task.PlayWithVillagerBabiesTask#VERTICAL_RANGE
    [[maybe_unused]] static void set_field_VERTICAL_RANGE(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "MAX_FLEE_Y_DIST", "field_30152", "VERTICAL_RANGE", "f_147701_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.ai.brain.task.PlayWithVillagerBabiesTask#WALK_SPEED
    [[maybe_unused]] static jfloat get_field_WALK_SPEED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "FLEE_SPEED_MODIFIER", "field_30153", "WALK_SPEED", "f_147702_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.ai.brain.task.PlayWithVillagerBabiesTask#WALK_SPEED
    [[maybe_unused]] static void set_field_WALK_SPEED(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "FLEE_SPEED_MODIFIER", "field_30153", "WALK_SPEED", "f_147702_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.ai.brain.task.PlayWithVillagerBabiesTask#PLAYING_WALK_SPEED
    [[maybe_unused]] static jfloat get_field_PLAYING_WALK_SPEED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "CHASE_SPEED_MODIFIER", "field_30154", "PLAYING_WALK_SPEED", "f_147703_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.ai.brain.task.PlayWithVillagerBabiesTask#PLAYING_WALK_SPEED
    [[maybe_unused]] static void set_field_PLAYING_WALK_SPEED(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "CHASE_SPEED_MODIFIER", "field_30154", "PLAYING_WALK_SPEED", "f_147703_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.ai.brain.task.PlayWithVillagerBabiesTask#MAX_BABY_INTERACTION_COUNT
    [[maybe_unused]] static jint get_field_MAX_BABY_INTERACTION_COUNT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "MAX_CHASERS_PER_TARGET", "field_30155", "MAX_BABY_INTERACTION_COUNT", "f_147704_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.ai.brain.task.PlayWithVillagerBabiesTask#MAX_BABY_INTERACTION_COUNT
    [[maybe_unused]] static void set_field_MAX_BABY_INTERACTION_COUNT(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "MAX_CHASERS_PER_TARGET", "field_30155", "MAX_BABY_INTERACTION_COUNT", "f_147704_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.ai.brain.task.PlayWithVillagerBabiesTask#RUN_CHANCE
    [[maybe_unused]] static jint get_field_RUN_CHANCE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "AVERAGE_WAIT_TIME_BETWEEN_RUNS", "field_30156", "RUN_CHANCE", "f_147705_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.ai.brain.task.PlayWithVillagerBabiesTask#RUN_CHANCE
    [[maybe_unused]] static void set_field_RUN_CHANCE(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "AVERAGE_WAIT_TIME_BETWEEN_RUNS", "field_30156", "RUN_CHANCE", "f_147705_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    static jmethodID methodID_create() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "create", "method_47000", "create", "m_257585_"), "()Lbvi;");
    }

    static jobject create() {
       const auto clazz = self();
       const auto methodID = methodID_create();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_setPlayTarget() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "chaseKid", "method_19580", "setPlayTarget", "m_257730_"), "(Lbyv;Lbyv;Lbyv;Lbtn;)V");
    }

    static void setPlayTarget(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_setPlayTarget();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_getLeastPopularBabyInteractionTarget() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "findSomeoneBeingChased", "method_19588", "getLeastPopularBabyInteractionTarget", "m_257810_"), "(Ljava/util/List;)Ljava/util/Optional;");
    }

    static jobject getLeastPopularBabyInteractionTarget(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getLeastPopularBabyInteractionTarget();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getBabyInteractionTargetCounts() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "checkHowManyChasersEachFriendHas", "method_19592", "getBabyInteractionTargetCounts", "m_257886_"), "(Ljava/util/List;)Ljava/util/Map;");
    }

    static jobject getBabyInteractionTargetCounts(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getBabyInteractionTargetCounts();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getInteractionTarget() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "whoAreYouChasing", "method_19576", "getInteractionTarget", "m_23639_"), "(Lbtn;)Lbtn;");
    }

    static jobject getInteractionTarget(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getInteractionTarget();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_hasInteractionTarget() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "isChasingSomeone", "method_19593", "hasInteractionTarget", "m_23667_"), "(Lbtn;)Z");
    }

    static jboolean hasInteractionTarget(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_hasInteractionTarget();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_isInteractionTargetOf() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "isFriendChasingMe", "method_19577", "isInteractionTargetOf", "m_23641_"), "(Lbtn;Lbtn;)Z");
    }

    static jboolean isInteractionTargetOf(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_isInteractionTargetOf();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_ENTITY_AI_BRAIN_TASK_PLAYWITHVILLAGERBABIESTASK_HPP