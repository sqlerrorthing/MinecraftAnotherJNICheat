// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ENTITY_AI_BRAIN_SCHEDULERULE_HPP
#define NET_MINECRAFT_ENTITY_AI_BRAIN_SCHEDULERULE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.entity.ai.brain.ScheduleRule
 * Remapped: cor
 */
namespace ScheduleRule {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("cor", "net/minecraft/world/entity/schedule/Timeline", "net/minecraft/class_4173", "net/minecraft/entity/ai/brain/ScheduleRule", "net/minecraft/src/C_1200_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.entity.ai.brain.ScheduleRule#entries
    static jobject get_field_entries(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "keyframes", "field_18612", "entries", "f_38055_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.ai.brain.ScheduleRule#entries
    static void set_field_entries(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "keyframes", "field_18612", "entries", "f_38055_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.ai.brain.ScheduleRule#prioritizedEntryIndex
    static jint get_field_prioritizedEntryIndex(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "previousIndex", "field_18613", "prioritizedEntryIndex", "f_38056_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.ai.brain.ScheduleRule#prioritizedEntryIndex
    static void set_field_prioritizedEntryIndex(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "previousIndex", "field_18613", "prioritizedEntryIndex", "f_38056_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    static jmethodID methodID_getEntries() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getKeyframes", "method_35214", "getEntries", "m_150246_"), "()Lcom/google/common/collect/ImmutableList;");
    }

    static jobject getEntries(const jobject& obj) {
                
       const auto methodID = methodID_getEntries();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_add() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "addKeyframe", "method_19227", "add", "m_38060_"), "(IF)Lcor;");
    }

    static jobject add(const jobject& obj, const jint& arg0, const jfloat& arg1) {
                
       const auto methodID = methodID_add();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__add() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "addKeyframes", "method_35215", "add", "m_150247_"), "(Ljava/util/Collection;)Lcor;");
    }

    static jobject _add(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__add();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_sort() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "sortAndDeduplicateKeyframes", "method_19229", "sort", "m_38066_"), "()V");
    }

    static void sort(const jobject& obj) {
                
       const auto methodID = methodID_sort();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getPriority() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getValueAt", "method_19226", "getPriority", "m_38058_"), "(I)F");
    }

    static jfloat getPriority(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_getPriority();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_ENTITY_AI_BRAIN_SCHEDULERULE_HPP