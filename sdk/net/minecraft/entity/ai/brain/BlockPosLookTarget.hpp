// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ENTITY_AI_BRAIN_BLOCKPOSLOOKTARGET_HPP
#define NET_MINECRAFT_ENTITY_AI_BRAIN_BLOCKPOSLOOKTARGET_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.entity.ai.brain.BlockPosLookTarget
 * Remapped: bvk
 */
namespace BlockPosLookTarget {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("bvk", "net/minecraft/world/entity/ai/behavior/BlockPosTracker", "net/minecraft/class_4099", "net/minecraft/entity/ai/brain/BlockPosLookTarget", "net/minecraft/src/C_572_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.entity.ai.brain.BlockPosLookTarget#blockPos
    static jobject get_field_blockPos(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "blockPos", "field_18340", "blockPos", "f_22673_"), "Ljd;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.ai.brain.BlockPosLookTarget#blockPos
    static void set_field_blockPos(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "blockPos", "field_18340", "blockPos", "f_22673_"), "Ljd;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.ai.brain.BlockPosLookTarget#pos
    static jobject get_field_pos(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "centerPosition", "field_18341", "pos", "f_22674_"), "Lexc;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.ai.brain.BlockPosLookTarget#pos
    static void set_field_pos(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "centerPosition", "field_18341", "pos", "f_22674_"), "Lexc;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_getPos() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "currentPosition", "method_18991", "getPos", "m_7024_"), "()Lexc;");
    }

    static jobject getPos(const jobject& obj) {
                
       const auto methodID = methodID_getPos();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getBlockPos() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "currentBlockPosition", "method_18989", "getBlockPos", "m_6675_"), "()Ljd;");
    }

    static jobject getBlockPos(const jobject& obj) {
                
       const auto methodID = methodID_getBlockPos();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_isSeenBy() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "isVisibleBy", "method_18990", "isSeenBy", "m_6826_"), "(Lbtn;)Z");
    }

    static jboolean isSeenBy(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_isSeenBy();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_ENTITY_AI_BRAIN_BLOCKPOSLOOKTARGET_HPP