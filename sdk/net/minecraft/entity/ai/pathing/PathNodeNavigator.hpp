// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ENTITY_AI_PATHING_PATHNODENAVIGATOR_HPP
#define NET_MINECRAFT_ENTITY_AI_PATHING_PATHNODENAVIGATOR_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.entity.ai.pathing.PathNodeNavigator
 * Remapped: epu
 */
namespace PathNodeNavigator {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("epu", "net/minecraft/world/level/pathfinder/PathFinder", "net/minecraft/class_13", "net/minecraft/entity/ai/pathing/PathNodeNavigator", "net/minecraft/src/C_2755_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.entity.ai.pathing.PathNodeNavigator#TARGET_DISTANCE_MULTIPLIER
    [[maybe_unused]] static jfloat get_field_TARGET_DISTANCE_MULTIPLIER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "FUDGING", "field_31807", "TARGET_DISTANCE_MULTIPLIER", "f_164714_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.ai.pathing.PathNodeNavigator#TARGET_DISTANCE_MULTIPLIER
    [[maybe_unused]] static void set_field_TARGET_DISTANCE_MULTIPLIER(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "FUDGING", "field_31807", "TARGET_DISTANCE_MULTIPLIER", "f_164714_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.entity.ai.pathing.PathNodeNavigator#successors
    static jobject get_field_successors(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "neighbors", "field_60", "successors", "f_77420_"), "[Lepq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.ai.pathing.PathNodeNavigator#successors
    static void set_field_successors(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "neighbors", "field_60", "successors", "f_77420_"), "[Lepq;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.ai.pathing.PathNodeNavigator#range
    static jint get_field_range(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "maxVisitedNodes", "field_18708", "range", "f_77421_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.ai.pathing.PathNodeNavigator#range
    static void set_field_range(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "maxVisitedNodes", "field_18708", "range", "f_77421_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.ai.pathing.PathNodeNavigator#pathNodeMaker
    static jobject get_field_pathNodeMaker(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "nodeEvaluator", "field_61", "pathNodeMaker", "f_77422_"), "Lepr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.ai.pathing.PathNodeNavigator#pathNodeMaker
    static void set_field_pathNodeMaker(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "nodeEvaluator", "field_61", "pathNodeMaker", "f_77422_"), "Lepr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.ai.pathing.PathNodeNavigator#field_31808
    [[maybe_unused]] static jboolean get_field_field_31808() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "DEBUG", "field_31808", "field_31808", "f_164715_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.ai.pathing.PathNodeNavigator#field_31808
    [[maybe_unused]] static void set_field_field_31808(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "DEBUG", "field_31808", "field_31808", "f_164715_"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.entity.ai.pathing.PathNodeNavigator#minHeap
    static jobject get_field_minHeap(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "openSet", "field_62", "minHeap", "f_77423_"), "Lepo;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.ai.pathing.PathNodeNavigator#minHeap
    static void set_field_minHeap(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "openSet", "field_62", "minHeap", "f_77423_"), "Lepo;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_findPathToAny() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "findPath", "method_52", "findPathToAny", "m_77427_"), "(Lddj;Lbtp;Ljava/util/Set;FIF)Leps;");
    }

    static jobject findPathToAny(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jfloat& arg3, const jint& arg4, const jfloat& arg5) {
                
       const auto methodID = methodID_findPathToAny();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5);
    };
    
    static jmethodID methodID__findPathToAny() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "findPath", "method_54", "findPathToAny", "m_164716_"), "(Lbnf;Lepq;Ljava/util/Map;FIF)Leps;");
    }

    static jobject _findPathToAny(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jfloat& arg3, const jint& arg4, const jfloat& arg5) {
                
       const auto methodID = methodID__findPathToAny();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5);
    };
    
    static jmethodID methodID_getDistance() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "distance", "method_44000", "getDistance", "m_214208_"), "(Lepq;Lepq;)F");
    }

    static jfloat getDistance(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_getDistance();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_calculateDistances() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getBestH", "method_21658", "calculateDistances", "m_77444_"), "(Lepq;Ljava/util/Set;)F");
    }

    static jfloat calculateDistances(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_calculateDistances();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_createPath() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "reconstructPath", "method_55", "createPath", "m_77434_"), "(Lepq;Ljd;Z)Leps;");
    }

    static jobject createPath(const jobject& obj, const jobject& arg0, const jobject& arg1, const jboolean& arg2) {
                
       const auto methodID = methodID_createPath();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
};

#endif // NET_MINECRAFT_ENTITY_AI_PATHING_PATHNODENAVIGATOR_HPP