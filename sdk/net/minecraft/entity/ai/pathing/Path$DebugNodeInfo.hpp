// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ENTITY_AI_PATHING_PATH$DEBUGNODEINFO_HPP
#define NET_MINECRAFT_ENTITY_AI_PATHING_PATH$DEBUGNODEINFO_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.entity.ai.pathing.Path$DebugNodeInfo
 * Remapped: eps$a
 */
namespace Path$DebugNodeInfo {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("eps$a", "net/minecraft/world/level/pathfinder/Path$DebugData", "net/minecraft/class_11$class_8644", "net/minecraft/entity/ai/pathing/Path$DebugNodeInfo", "net/minecraft/src/C_2753_$C_290290_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.entity.ai.pathing.Path$DebugNodeInfo#openSet
    static jobject get_field_openSet(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "openSet", "comp_1587", "openSet", "f_290399_"), "[Lepq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.ai.pathing.Path$DebugNodeInfo#openSet
    static void set_field_openSet(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "openSet", "comp_1587", "openSet", "f_290399_"), "[Lepq;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.ai.pathing.Path$DebugNodeInfo#closedSet
    static jobject get_field_closedSet(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "closedSet", "comp_1588", "closedSet", "f_290476_"), "[Lepq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.ai.pathing.Path$DebugNodeInfo#closedSet
    static void set_field_closedSet(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "closedSet", "comp_1588", "closedSet", "f_290476_"), "[Lepq;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.entity.ai.pathing.Path$DebugNodeInfo#targetNodes
    static jobject get_field_targetNodes(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "targetNodes", "comp_1589", "targetNodes", "f_290757_"), "Ljava/util/Set;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.entity.ai.pathing.Path$DebugNodeInfo#targetNodes
    static void set_field_targetNodes(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "targetNodes", "comp_1589", "targetNodes", "f_290757_"), "Ljava/util/Set;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_write() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "write", "method_52606", "write", "m_293323_"), "(Lvw;)V");
    }

    static void write(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_write();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_fromBuf() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "read", "method_52608", "fromBuf", "m_295095_"), "(Lvw;)Leps$a;");
    }

    static jobject fromBuf(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_fromBuf();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID__openSet() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "openSet", "comp_1587", "openSet", "f_290399_"), "()[Lepq;");
    }

    static jobject _openSet(const jobject& obj) {
                
       const auto methodID = methodID__openSet();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__closedSet() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "closedSet", "comp_1588", "closedSet", "f_290476_"), "()[Lepq;");
    }

    static jobject _closedSet(const jobject& obj) {
                
       const auto methodID = methodID__closedSet();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__targetNodes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "targetNodes", "comp_1589", "targetNodes", "f_290757_"), "()Ljava/util/Set;");
    }

    static jobject _targetNodes(const jobject& obj) {
                
       const auto methodID = methodID__targetNodes();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_ENTITY_AI_PATHING_PATH$DEBUGNODEINFO_HPP