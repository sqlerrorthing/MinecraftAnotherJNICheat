// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ENTITY_AI_PATHING_SPIDERNAVIGATION_HPP
#define NET_MINECRAFT_ENTITY_AI_PATHING_SPIDERNAVIGATION_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.entity.ai.pathing.SpiderNavigation
 * Remapped: cdb
 */
namespace SpiderNavigation {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("cdb", "net/minecraft/world/entity/ai/navigation/WallClimberNavigation", "net/minecraft/class_1410", "net/minecraft/entity/ai/pathing/SpiderNavigation", "net/minecraft/src/C_759_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.entity.ai.pathing.SpiderNavigation#targetPos
    static jobject get_field_targetPos(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("p", "pathToPosition", "field_6687", "targetPos", "f_26578_"), "Ljd;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.ai.pathing.SpiderNavigation#targetPos
    static void set_field_targetPos(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("p", "pathToPosition", "field_6687", "targetPos", "f_26578_"), "Ljd;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_findPathTo() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "createPath", "method_6348", "findPathTo", "m_7864_"), "(Ljd;I)Leps;");
    }

    static jobject findPathTo(const jobject& obj, const jobject& arg0, const jint& arg1) {
                
       const auto methodID = methodID_findPathTo();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__findPathTo() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "createPath", "method_6349", "findPathTo", "m_6570_"), "(Lbsr;I)Leps;");
    }

    static jobject _findPathTo(const jobject& obj, const jobject& arg0, const jint& arg1) {
                
       const auto methodID = methodID__findPathTo();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_startMovingTo() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "moveTo", "method_6335", "startMovingTo", "m_5624_"), "(Lbsr;D)Z");
    }

    static jboolean startMovingTo(const jobject& obj, const jobject& arg0, const jdouble& arg1) {
                
       const auto methodID = methodID_startMovingTo();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_tick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "tick", "method_6360", "tick", "m_7638_"), "()V");
    }

    static void tick(const jobject& obj) {
                
       const auto methodID = methodID_tick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_ENTITY_AI_PATHING_SPIDERNAVIGATION_HPP