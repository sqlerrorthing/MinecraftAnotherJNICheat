// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ENTITY_AI_PATHING_PATH_HPP
#define NET_MINECRAFT_ENTITY_AI_PATHING_PATH_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.entity.ai.pathing.Path
 * Remapped: eps
 */
namespace Path {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("eps", "net/minecraft/world/level/pathfinder/Path", "net/minecraft/class_11", "net/minecraft/entity/ai/pathing/Path", "net/minecraft/src/C_2753_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.entity.ai.pathing.Path#nodes
    static jobject get_field_nodes(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "nodes", "field_52", "nodes", "f_77362_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.ai.pathing.Path#nodes
    static void set_field_nodes(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "nodes", "field_52", "nodes", "f_77362_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.ai.pathing.Path#debugNodeInfos
    static jobject get_field_debugNodeInfos(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "debugData", "field_45155", "debugNodeInfos", "f_291003_"), "Leps$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.ai.pathing.Path#debugNodeInfos
    static void set_field_debugNodeInfos(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "debugData", "field_45155", "debugNodeInfos", "f_291003_"), "Leps$a;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.ai.pathing.Path#currentNodeIndex
    static jint get_field_currentNodeIndex(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "nextNodeIndex", "field_54", "currentNodeIndex", "f_77366_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.ai.pathing.Path#currentNodeIndex
    static void set_field_currentNodeIndex(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "nextNodeIndex", "field_54", "currentNodeIndex", "f_77366_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.ai.pathing.Path#target
    static jobject get_field_target(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "target", "field_20301", "target", "f_77367_"), "Ljd;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.ai.pathing.Path#target
    static void set_field_target(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "target", "field_20301", "target", "f_77367_"), "Ljd;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.ai.pathing.Path#manhattanDistanceFromTarget
    static jfloat get_field_manhattanDistanceFromTarget(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "distToTarget", "field_20302", "manhattanDistanceFromTarget", "f_77368_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.ai.pathing.Path#manhattanDistanceFromTarget
    static void set_field_manhattanDistanceFromTarget(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "distToTarget", "field_20302", "manhattanDistanceFromTarget", "f_77368_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.ai.pathing.Path#reachesTarget
    static jboolean get_field_reachesTarget(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "reached", "field_20303", "reachesTarget", "f_77369_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.ai.pathing.Path#reachesTarget
    static void set_field_reachesTarget(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "reached", "field_20303", "reachesTarget", "f_77369_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    static jmethodID methodID_next() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "advance", "method_44", "next", "m_77374_"), "()V");
    }

    static void next(const jobject& obj) {
                
       const auto methodID = methodID_next();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_isStart() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "notStarted", "method_30849", "isStart", "m_77387_"), "()Z");
    }

    static jboolean isStart(const jobject& obj) {
                
       const auto methodID = methodID_isStart();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isFinished() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "isDone", "method_46", "isFinished", "m_77392_"), "()Z");
    }

    static jboolean isFinished(const jobject& obj) {
                
       const auto methodID = methodID_isFinished();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getEnd() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getEndNode", "method_45", "getEnd", "m_77395_"), "()Lepq;");
    }

    static jobject getEnd(const jobject& obj) {
                
       const auto methodID = methodID_getEnd();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getNode() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getNode", "method_40", "getNode", "m_77375_"), "(I)Lepq;");
    }

    static jobject getNode(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_getNode();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setLength() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "truncateNodes", "method_36", "setLength", "m_77388_"), "(I)V");
    }

    static void setLength(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_setLength();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setNode() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "replaceNode", "method_33", "setNode", "m_77377_"), "(ILepq;)V");
    }

    static void setNode(const jobject& obj, const jint& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_setNode();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getLength() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "getNodeCount", "method_38", "getLength", "m_77398_"), "()I");
    }

    static jint getLength(const jobject& obj) {
                
       const auto methodID = methodID_getLength();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getCurrentNodeIndex() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "getNextNodeIndex", "method_39", "getCurrentNodeIndex", "m_77399_"), "()I");
    }

    static jint getCurrentNodeIndex(const jobject& obj) {
                
       const auto methodID = methodID_getCurrentNodeIndex();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_setCurrentNodeIndex() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "setNextNodeIndex", "method_42", "setCurrentNodeIndex", "m_77393_"), "(I)V");
    }

    static void setCurrentNodeIndex(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_setCurrentNodeIndex();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getNodePosition() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getEntityPosAtNode", "method_47", "getNodePosition", "m_77382_"), "(Lbsr;I)Lexc;");
    }

    static jobject getNodePosition(const jobject& obj, const jobject& arg0, const jint& arg1) {
                
       const auto methodID = methodID_getNodePosition();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getNodePos() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getNodePos", "method_31031", "getNodePos", "m_77396_"), "(I)Ljd;");
    }

    static jobject getNodePos(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_getNodePos();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__getNodePosition() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getNextEntityPos", "method_49", "getNodePosition", "m_77380_"), "(Lbsr;)Lexc;");
    }

    static jobject _getNodePosition(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__getNodePosition();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getCurrentNodePos() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "getNextNodePos", "method_31032", "getCurrentNodePos", "m_77400_"), "()Ljd;");
    }

    static jobject getCurrentNodePos(const jobject& obj) {
                
       const auto methodID = methodID_getCurrentNodePos();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getCurrentNode() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "getNextNode", "method_29301", "getCurrentNode", "m_77401_"), "()Lepq;");
    }

    static jobject getCurrentNode(const jobject& obj) {
                
       const auto methodID = methodID_getCurrentNode();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getLastNode() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("i", "getPreviousNode", "method_30850", "getLastNode", "m_77402_"), "()Lepq;");
    }

    static jobject getLastNode(const jobject& obj) {
                
       const auto methodID = methodID_getLastNode();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_equalsPath() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "sameAs", "method_41", "equalsPath", "m_77385_"), "(Leps;)Z");
    }

    static jboolean equalsPath(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_equalsPath();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__reachesTarget() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("j", "canReach", "method_21655", "reachesTarget", "m_77403_"), "()Z");
    }

    static jboolean _reachesTarget(const jobject& obj) {
                
       const auto methodID = methodID__reachesTarget();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_setDebugInfo() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setDebug", "method_35500", "setDebugInfo", "m_164709_"), "([Lepq;[Lepq;Ljava/util/Set;)V");
    }

    static void setDebugInfo(const jobject& obj, const jarray& arg0, const jobject& arg1, const jarray& arg2, const jobject& arg3, const jobject& arg4) {
                
       const auto methodID = methodID_setDebugInfo();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_getDebugNodeInfos() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("k", "debugData", "method_52604", "getDebugNodeInfos", "m_294881_"), "()Leps$a;");
    }

    static jobject getDebugNodeInfos(const jobject& obj) {
                
       const auto methodID = methodID_getDebugNodeInfos();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_toBuf() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "writeToStream", "method_35498", "toBuf", "m_164704_"), "(Lvw;)V");
    }

    static void toBuf(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_toBuf();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_fromBuf() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "createFromStream", "method_34", "fromBuf", "m_77390_"), "(Lvw;)Leps;");
    }

    static jobject fromBuf(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_fromBuf();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getTarget() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("l", "getTarget", "method_48", "getTarget", "m_77406_"), "()Ljd;");
    }

    static jobject getTarget(const jobject& obj) {
                
       const auto methodID = methodID_getTarget();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getManhattanDistanceFromTarget() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("m", "getDistToTarget", "method_21656", "getManhattanDistanceFromTarget", "m_77407_"), "()F");
    }

    static jfloat getManhattanDistanceFromTarget(const jobject& obj) {
                
       const auto methodID = methodID_getManhattanDistanceFromTarget();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID_nodesFromBuf() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "readNodeArray", "method_52603", "nodesFromBuf", "m_293564_"), "(Lvw;)[Lepq;");
    }

    static jobject nodesFromBuf(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_nodesFromBuf();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_write() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "writeNodeArray", "method_52602", "write", "m_294259_"), "(Lvw;[Lepq;)V");
    }

    static void write(const jobject& arg0, const jarray& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_write();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_copy() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("n", "copy", "method_52605", "copy", "m_293763_"), "()Leps;");
    }

    static jobject copy(const jobject& obj) {
                
       const auto methodID = methodID_copy();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_ENTITY_AI_PATHING_PATH_HPP