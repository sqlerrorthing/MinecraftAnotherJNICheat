// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ENTITY_AI_PATHING_ENTITYNAVIGATION_HPP
#define NET_MINECRAFT_ENTITY_AI_PATHING_ENTITYNAVIGATION_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.entity.ai.pathing.EntityNavigation
 * Remapped: cda
 */
namespace EntityNavigation {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("cda", "net/minecraft/world/entity/ai/navigation/PathNavigation", "net/minecraft/class_1408", "net/minecraft/entity/ai/pathing/EntityNavigation", "net/minecraft/src/C_758_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.entity.ai.pathing.EntityNavigation#RECALCULATE_COOLDOWN
    [[maybe_unused]] static jint get_field_RECALCULATE_COOLDOWN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "MAX_TIME_RECOMPUTE", "field_30247", "RECALCULATE_COOLDOWN", "f_148217_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.ai.pathing.EntityNavigation#RECALCULATE_COOLDOWN
    [[maybe_unused]] static void set_field_RECALCULATE_COOLDOWN(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "MAX_TIME_RECOMPUTE", "field_30247", "RECALCULATE_COOLDOWN", "f_148217_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.ai.pathing.EntityNavigation#field_41545
    [[maybe_unused]] static jint get_field_field_41545() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "STUCK_CHECK_INTERVAL", "field_41545", "field_41545", "f_262273_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.ai.pathing.EntityNavigation#field_41545
    [[maybe_unused]] static void set_field_field_41545(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "STUCK_CHECK_INTERVAL", "field_41545", "field_41545", "f_262273_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.ai.pathing.EntityNavigation#field_41546
    [[maybe_unused]] static jfloat get_field_field_41546() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "STUCK_THRESHOLD_DISTANCE_FACTOR", "field_41546", "field_41546", "f_262292_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.ai.pathing.EntityNavigation#field_41546
    [[maybe_unused]] static void set_field_field_41546(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "STUCK_THRESHOLD_DISTANCE_FACTOR", "field_41546", "field_41546", "f_262292_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for protected field net.minecraft.entity.ai.pathing.EntityNavigation#entity
    static jobject get_field_entity(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "mob", "field_6684", "entity", "f_26494_"), "Lbtp;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.entity.ai.pathing.EntityNavigation#entity
    static void set_field_entity(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "mob", "field_6684", "entity", "f_26494_"), "Lbtp;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.entity.ai.pathing.EntityNavigation#world
    static jobject get_field_world(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "level", "field_6677", "world", "f_26495_"), "Ldcw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.entity.ai.pathing.EntityNavigation#world
    static void set_field_world(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "level", "field_6677", "world", "f_26495_"), "Ldcw;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.entity.ai.pathing.EntityNavigation#currentPath
    static jobject get_field_currentPath(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "path", "field_6681", "currentPath", "f_26496_"), "Leps;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.entity.ai.pathing.EntityNavigation#currentPath
    static void set_field_currentPath(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "path", "field_6681", "currentPath", "f_26496_"), "Leps;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.entity.ai.pathing.EntityNavigation#speed
    static jdouble get_field_speed(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "speedModifier", "field_6668", "speed", "f_26497_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetDoubleField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.entity.ai.pathing.EntityNavigation#speed
    static void set_field_speed(const jobject &obj, const jdouble &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "speedModifier", "field_6668", "speed", "f_26497_"), "D");
        return MinecraftSDK::env->SetDoubleField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.entity.ai.pathing.EntityNavigation#tickCount
    static jint get_field_tickCount(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "tick", "field_6675", "tickCount", "f_26498_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.entity.ai.pathing.EntityNavigation#tickCount
    static void set_field_tickCount(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "tick", "field_6675", "tickCount", "f_26498_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.entity.ai.pathing.EntityNavigation#pathStartTime
    static jint get_field_pathStartTime(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "lastStuckCheck", "field_6674", "pathStartTime", "f_26499_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.entity.ai.pathing.EntityNavigation#pathStartTime
    static void set_field_pathStartTime(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "lastStuckCheck", "field_6674", "pathStartTime", "f_26499_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.entity.ai.pathing.EntityNavigation#pathStartPos
    static jobject get_field_pathStartPos(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "lastStuckCheckPos", "field_6672", "pathStartPos", "f_26500_"), "Lexc;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.entity.ai.pathing.EntityNavigation#pathStartPos
    static void set_field_pathStartPos(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "lastStuckCheckPos", "field_6672", "pathStartPos", "f_26500_"), "Lexc;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.entity.ai.pathing.EntityNavigation#lastNodePosition
    static jobject get_field_lastNodePosition(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "timeoutCachedNode", "field_6680", "lastNodePosition", "f_26501_"), "Lkh;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.entity.ai.pathing.EntityNavigation#lastNodePosition
    static void set_field_lastNodePosition(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "timeoutCachedNode", "field_6680", "lastNodePosition", "f_26501_"), "Lkh;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.entity.ai.pathing.EntityNavigation#currentNodeMs
    static jlong get_field_currentNodeMs(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "timeoutTimer", "field_6670", "currentNodeMs", "f_26502_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.entity.ai.pathing.EntityNavigation#currentNodeMs
    static void set_field_currentNodeMs(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "timeoutTimer", "field_6670", "currentNodeMs", "f_26502_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.entity.ai.pathing.EntityNavigation#lastActiveTickMs
    static jlong get_field_lastActiveTickMs(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "lastTimeoutCheck", "field_6669", "lastActiveTickMs", "f_26503_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.entity.ai.pathing.EntityNavigation#lastActiveTickMs
    static void set_field_lastActiveTickMs(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "lastTimeoutCheck", "field_6669", "lastActiveTickMs", "f_26503_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.entity.ai.pathing.EntityNavigation#currentNodeTimeout
    static jdouble get_field_currentNodeTimeout(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "timeoutLimit", "field_6682", "currentNodeTimeout", "f_26504_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetDoubleField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.entity.ai.pathing.EntityNavigation#currentNodeTimeout
    static void set_field_currentNodeTimeout(const jobject &obj, const jdouble &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "timeoutLimit", "field_6682", "currentNodeTimeout", "f_26504_"), "D");
        return MinecraftSDK::env->SetDoubleField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.entity.ai.pathing.EntityNavigation#nodeReachProximity
    static jfloat get_field_nodeReachProximity(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "maxDistanceToWaypoint", "field_6683", "nodeReachProximity", "f_26505_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.entity.ai.pathing.EntityNavigation#nodeReachProximity
    static void set_field_nodeReachProximity(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "maxDistanceToWaypoint", "field_6683", "nodeReachProximity", "f_26505_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.entity.ai.pathing.EntityNavigation#inRecalculationCooldown
    static jboolean get_field_inRecalculationCooldown(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "hasDelayedRecomputation", "field_6679", "inRecalculationCooldown", "f_26506_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.entity.ai.pathing.EntityNavigation#inRecalculationCooldown
    static void set_field_inRecalculationCooldown(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "hasDelayedRecomputation", "field_6679", "inRecalculationCooldown", "f_26506_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.entity.ai.pathing.EntityNavigation#lastRecalculateTime
    static jlong get_field_lastRecalculateTime(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "timeLastRecompute", "field_6685", "lastRecalculateTime", "f_26507_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.entity.ai.pathing.EntityNavigation#lastRecalculateTime
    static void set_field_lastRecalculateTime(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "timeLastRecompute", "field_6685", "lastRecalculateTime", "f_26507_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.entity.ai.pathing.EntityNavigation#nodeMaker
    static jobject get_field_nodeMaker(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("o", "nodeEvaluator", "field_6678", "nodeMaker", "f_26508_"), "Lepr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.entity.ai.pathing.EntityNavigation#nodeMaker
    static void set_field_nodeMaker(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("o", "nodeEvaluator", "field_6678", "nodeMaker", "f_26508_"), "Lepr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.ai.pathing.EntityNavigation#currentTarget
    static jobject get_field_currentTarget(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("s", "targetPos", "field_20293", "currentTarget", "f_26509_"), "Ljd;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.ai.pathing.EntityNavigation#currentTarget
    static void set_field_currentTarget(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("s", "targetPos", "field_20293", "currentTarget", "f_26509_"), "Ljd;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.ai.pathing.EntityNavigation#currentDistance
    static jint get_field_currentDistance(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("t", "reachRange", "field_20294", "currentDistance", "f_26510_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.ai.pathing.EntityNavigation#currentDistance
    static void set_field_currentDistance(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("t", "reachRange", "field_20294", "currentDistance", "f_26510_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.ai.pathing.EntityNavigation#rangeMultiplier
    static jfloat get_field_rangeMultiplier(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("u", "maxVisitedNodesMultiplier", "field_21642", "rangeMultiplier", "f_26511_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.ai.pathing.EntityNavigation#rangeMultiplier
    static void set_field_rangeMultiplier(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("u", "maxVisitedNodesMultiplier", "field_21642", "rangeMultiplier", "f_26511_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.ai.pathing.EntityNavigation#pathNodeNavigator
    static jobject get_field_pathNodeNavigator(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("v", "pathFinder", "field_6673", "pathNodeNavigator", "f_26512_"), "Lepu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.ai.pathing.EntityNavigation#pathNodeNavigator
    static void set_field_pathNodeNavigator(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("v", "pathFinder", "field_6673", "pathNodeNavigator", "f_26512_"), "Lepu;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.ai.pathing.EntityNavigation#nearPathStartPos
    static jboolean get_field_nearPathStartPos(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("w", "isStuck", "field_26820", "nearPathStartPos", "f_26513_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.ai.pathing.EntityNavigation#nearPathStartPos
    static void set_field_nearPathStartPos(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("w", "isStuck", "field_26820", "nearPathStartPos", "f_26513_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    static jmethodID methodID_resetRangeMultiplier() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "resetMaxVisitedNodesMultiplier", "method_23965", "resetRangeMultiplier", "m_26566_"), "()V");
    }

    static void resetRangeMultiplier(const jobject& obj) {
                
       const auto methodID = methodID_resetRangeMultiplier();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_setRangeMultiplier() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setMaxVisitedNodesMultiplier", "method_23964", "setRangeMultiplier", "m_26529_"), "(F)V");
    }

    static void setRangeMultiplier(const jobject& obj, const jfloat& arg0) {
                
       const auto methodID = methodID_setRangeMultiplier();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getTargetPos() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "getTargetPos", "method_6355", "getTargetPos", "m_26567_"), "()Ljd;");
    }

    static jobject getTargetPos(const jobject& obj) {
                
       const auto methodID = methodID_getTargetPos();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_createPathNodeNavigator() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "createPathFinder", "method_6336", "createPathNodeNavigator", "m_5532_"), "(I)Lepu;");
    }

    static jobject createPathNodeNavigator(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_createPathNodeNavigator();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setSpeed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setSpeedModifier", "method_6344", "setSpeed", "m_26517_"), "(D)V");
    }

    static void setSpeed(const jobject& obj, const jdouble& arg0) {
                
       const auto methodID = methodID_setSpeed();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_recalculatePath() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("i", "recomputePath", "method_6356", "recalculatePath", "m_26569_"), "()V");
    }

    static void recalculatePath(const jobject& obj) {
                
       const auto methodID = methodID_recalculatePath();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_findPathTo() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "createPath", "method_6352", "findPathTo", "m_26524_"), "(DDDI)Leps;");
    }

    static jobject findPathTo(const jobject& obj, const jdouble& arg0, const jdouble& arg1, const jdouble& arg2, const jint& arg3) {
                
       const auto methodID = methodID_findPathTo();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_findPathToAny() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "createPath", "method_21643", "findPathToAny", "m_26556_"), "(Ljava/util/stream/Stream;I)Leps;");
    }

    static jobject findPathToAny(const jobject& obj, const jobject& arg0, const jint& arg1) {
                
       const auto methodID = methodID_findPathToAny();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__findPathTo() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "createPath", "method_29934", "findPathTo", "m_26548_"), "(Ljava/util/Set;I)Leps;");
    }

    static jobject _findPathTo(const jobject& obj, const jobject& arg0, const jint& arg1) {
                
       const auto methodID = methodID__findPathTo();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID___findPathTo() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "createPath", "method_6348", "findPathTo", "m_7864_"), "(Ljd;I)Leps;");
    }

    static jobject __findPathTo(const jobject& obj, const jobject& arg0, const jint& arg1) {
                
       const auto methodID = methodID___findPathTo();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID____findPathTo() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "createPath", "method_35141", "findPathTo", "m_148218_"), "(Ljd;II)Leps;");
    }

    static jobject ___findPathTo(const jobject& obj, const jobject& arg0, const jint& arg1, const jint& arg2) {
                
       const auto methodID = methodID____findPathTo();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_____findPathTo() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "createPath", "method_6349", "findPathTo", "m_6570_"), "(Lbsr;I)Leps;");
    }

    static jobject ____findPathTo(const jobject& obj, const jobject& arg0, const jint& arg1) {
                
       const auto methodID = methodID_____findPathTo();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID______findPathTo() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "createPath", "method_35142", "findPathTo", "m_26551_"), "(Ljava/util/Set;IZI)Leps;");
    }

    static jobject _____findPathTo(const jobject& obj, const jobject& arg0, const jint& arg1, const jboolean& arg2, const jint& arg3) {
                
       const auto methodID = methodID______findPathTo();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID__findPathToAny() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "createPath", "method_18416", "findPathToAny", "m_148222_"), "(Ljava/util/Set;IZIF)Leps;");
    }

    static jobject _findPathToAny(const jobject& obj, const jobject& arg0, const jint& arg1, const jboolean& arg2, const jint& arg3, const jfloat& arg4) {
                
       const auto methodID = methodID__findPathToAny();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_startMovingTo() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "moveTo", "method_6337", "startMovingTo", "m_26519_"), "(DDDD)Z");
    }

    static jboolean startMovingTo(const jobject& obj, const jdouble& arg0, const jdouble& arg1, const jdouble& arg2, const jdouble& arg3) {
                
       const auto methodID = methodID_startMovingTo();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID__startMovingTo() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "moveTo", "method_58160", "startMovingTo", "m_322222_"), "(DDDID)Z");
    }

    static jboolean _startMovingTo(const jobject& obj, const jdouble& arg0, const jdouble& arg1, const jdouble& arg2, const jint& arg3, const jdouble& arg4) {
                
       const auto methodID = methodID__startMovingTo();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID___startMovingTo() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "moveTo", "method_6335", "startMovingTo", "m_5624_"), "(Lbsr;D)Z");
    }

    static jboolean __startMovingTo(const jobject& obj, const jobject& arg0, const jdouble& arg1) {
                
       const auto methodID = methodID___startMovingTo();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_startMovingAlong() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "moveTo", "method_6334", "startMovingAlong", "m_26536_"), "(Leps;D)Z");
    }

    static jboolean startMovingAlong(const jobject& obj, const jobject& arg0, const jdouble& arg1) {
                
       const auto methodID = methodID_startMovingAlong();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getCurrentPath() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("j", "getPath", "method_6345", "getCurrentPath", "m_26570_"), "()Leps;");
    }

    static jobject getCurrentPath(const jobject& obj) {
                
       const auto methodID = methodID_getCurrentPath();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_tick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "tick", "method_6360", "tick", "m_7638_"), "()V");
    }

    static void tick(const jobject& obj) {
                
       const auto methodID = methodID_tick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_adjustTargetY() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getGroundY", "method_38065", "adjustTargetY", "m_183345_"), "(Lexc;)D");
    }

    static jdouble adjustTargetY(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_adjustTargetY();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_continueFollowingPath() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("k", "followThePath", "method_6339", "continueFollowingPath", "m_7636_"), "()V");
    }

    static void continueFollowingPath(const jobject& obj) {
                
       const auto methodID = methodID_continueFollowingPath();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_shouldJumpToNextNode() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "shouldTargetNextNodeInDirection", "method_27799", "shouldJumpToNextNode", "m_26559_"), "(Lexc;)Z");
    }

    static jboolean shouldJumpToNextNode(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_shouldJumpToNextNode();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_checkTimeouts() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "doStuckDetection", "method_6346", "checkTimeouts", "m_6481_"), "(Lexc;)V");
    }

    static void checkTimeouts(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_checkTimeouts();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_resetNodeAndStop() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "timeoutPath", "method_31266", "resetNodeAndStop", "m_26564_"), "()V");
    }

    static void resetNodeAndStop(const jobject& obj) {
                
       const auto methodID = methodID_resetNodeAndStop();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_resetNode() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "resetStuckTimeout", "method_26085", "resetNode", "m_26565_"), "()V");
    }

    static void resetNode(const jobject& obj) {
                
       const auto methodID = methodID_resetNode();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_isIdle() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("l", "isDone", "method_6357", "isIdle", "m_26571_"), "()Z");
    }

    static jboolean isIdle(const jobject& obj) {
                
       const auto methodID = methodID_isIdle();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isFollowingPath() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("m", "isInProgress", "method_23966", "isFollowingPath", "m_26572_"), "()Z");
    }

    static jboolean isFollowingPath(const jobject& obj) {
                
       const auto methodID = methodID_isFollowingPath();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_stop() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("n", "stop", "method_6340", "stop", "m_26573_"), "()V");
    }

    static void stop(const jobject& obj) {
                
       const auto methodID = methodID_stop();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getPos() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getTempMobPos", "method_6347", "getPos", "m_7475_"), "()Lexc;");
    }

    static jobject getPos(const jobject& obj) {
                
       const auto methodID = methodID_getPos();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_isAtValidPosition() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "canUpdatePath", "method_6358", "isAtValidPosition", "m_7632_"), "()Z");
    }

    static jboolean isAtValidPosition(const jobject& obj) {
                
       const auto methodID = methodID_isAtValidPosition();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_adjustPath() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("W_", "trimPath", "method_6359", "adjustPath", "m_6804_"), "()V");
    }

    static void adjustPath(const jobject& obj) {
                
       const auto methodID = methodID_adjustPath();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_canPathDirectlyThrough() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "canMoveDirectly", "method_6341", "canPathDirectlyThrough", "m_183431_"), "(Lexc;Lexc;)Z");
    }

    static jboolean canPathDirectlyThrough(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_canPathDirectlyThrough();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_canJumpToNext() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "canCutCorner", "method_48158", "canJumpToNext", "m_264193_"), "(Lepv;)Z");
    }

    static jboolean canJumpToNext(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_canJumpToNext();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_doesNotCollide() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "isClearForMovementBetween", "method_43394", "doesNotCollide", "m_262402_"), "(Lbtp;Lexc;Lexc;Z)Z");
    }

    static jboolean doesNotCollide(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jboolean& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_doesNotCollide();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_isValidPosition() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "isStableDestination", "method_6333", "isValidPosition", "m_6342_"), "(Ljd;)Z");
    }

    static jboolean isValidPosition(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_isValidPosition();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getNodeMaker() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("o", "getNodeEvaluator", "method_6342", "getNodeMaker", "m_26575_"), "()Lepr;");
    }

    static jobject getNodeMaker(const jobject& obj) {
                
       const auto methodID = methodID_getNodeMaker();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_setCanSwim() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setCanFloat", "method_6354", "setCanSwim", "m_7008_"), "(Z)V");
    }

    static void setCanSwim(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setCanSwim();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_canSwim() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("p", "canFloat", "method_6350", "canSwim", "m_26576_"), "()Z");
    }

    static jboolean canSwim(const jobject& obj) {
                
       const auto methodID = methodID_canSwim();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_shouldRecalculatePath() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "shouldRecomputePath", "method_18053", "shouldRecalculatePath", "m_200903_"), "(Ljd;)Z");
    }

    static jboolean shouldRecalculatePath(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_shouldRecalculatePath();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getNodeReachProximity() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("q", "getMaxDistanceToWaypoint", "method_35143", "getNodeReachProximity", "m_148228_"), "()F");
    }

    static jfloat getNodeReachProximity(const jobject& obj) {
                
       const auto methodID = methodID_getNodeReachProximity();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID_isNearPathStartPos() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("r", "isStuck", "method_31267", "isNearPathStartPos", "m_26577_"), "()Z");
    }

    static jboolean isNearPathStartPos(const jobject& obj) {
                
       const auto methodID = methodID_isNearPathStartPos();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_ENTITY_AI_PATHING_ENTITYNAVIGATION_HPP