// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ENTITY_AI_PATHING_PATHNODETYPECACHE_HPP
#define NET_MINECRAFT_ENTITY_AI_PATHING_PATHNODETYPECACHE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.entity.ai.pathing.PathNodeTypeCache
 * Remapped: epw
 */
namespace PathNodeTypeCache {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("epw", "net/minecraft/world/level/pathfinder/PathTypeCache", "net/minecraft/class_9315", "net/minecraft/entity/ai/pathing/PathNodeTypeCache", "net/minecraft/src/C_313298_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.entity.ai.pathing.PathNodeTypeCache#field_49417
    [[maybe_unused]] static jint get_field_field_49417() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "SIZE", "field_49417", "field_49417", "f_316885_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.ai.pathing.PathNodeTypeCache#field_49417
    [[maybe_unused]] static void set_field_field_49417(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "SIZE", "field_49417", "field_49417", "f_316885_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.ai.pathing.PathNodeTypeCache#field_49418
    [[maybe_unused]] static jint get_field_field_49418() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "MASK", "field_49418", "field_49418", "f_314200_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.ai.pathing.PathNodeTypeCache#field_49418
    [[maybe_unused]] static void set_field_field_49418(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "MASK", "field_49418", "field_49418", "f_314200_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.entity.ai.pathing.PathNodeTypeCache#positions
    static jlong get_field_positions(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "positions", "field_49419", "positions", "f_316090_"), "[J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.ai.pathing.PathNodeTypeCache#positions
    static void set_field_positions(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "positions", "field_49419", "positions", "f_316090_"), "[J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.ai.pathing.PathNodeTypeCache#cache
    static jobject get_field_cache(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "pathTypes", "field_49420", "cache", "f_314466_"), "[Lepv;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.ai.pathing.PathNodeTypeCache#cache
    static void set_field_cache(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "pathTypes", "field_49420", "cache", "f_314466_"), "[Lepv;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_add() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getOrCompute", "method_57618", "add", "m_321132_"), "(Ldcc;Ljd;)Lepv;");
    }

    static jobject add(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_add();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_get() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "get", "method_57616", "get", "m_321310_"), "(IJ)Lepv;");
    }

    static jobject get(const jobject& obj, const jint& arg0, const jlong& arg1) {
                
       const auto methodID = methodID_get();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_compute() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "compute", "method_57619", "compute", "m_318597_"), "(Ldcc;Ljd;IJ)Lepv;");
    }

    static jobject compute(const jobject& obj, const jobject& arg0, const jobject& arg1, const jint& arg2, const jlong& arg3) {
                
       const auto methodID = methodID_compute();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_invalidate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "invalidate", "method_57620", "invalidate", "m_324305_"), "(Ljd;)V");
    }

    static void invalidate(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_invalidate();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_hash() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "index", "method_57617", "hash", "m_320515_"), "(J)I");
    }

    static jint hash(const jlong& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_hash();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_ENTITY_AI_PATHING_PATHNODETYPECACHE_HPP