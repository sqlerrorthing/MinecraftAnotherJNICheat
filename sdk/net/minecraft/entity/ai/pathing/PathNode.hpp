// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ENTITY_AI_PATHING_PATHNODE_HPP
#define NET_MINECRAFT_ENTITY_AI_PATHING_PATHNODE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.entity.ai.pathing.PathNode
 * Remapped: epq
 */
namespace PathNode {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("epq", "net/minecraft/world/level/pathfinder/Node", "net/minecraft/class_9", "net/minecraft/entity/ai/pathing/PathNode", "net/minecraft/src/C_2751_"));
        }
        return cachedClass;
    };

    // getter for public field net.minecraft.entity.ai.pathing.PathNode#x
    static jint get_field_x(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "x", "field_40", "x", "f_77271_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.pathing.PathNode#x
    static void set_field_x(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "x", "field_40", "x", "f_77271_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.entity.ai.pathing.PathNode#y
    static jint get_field_y(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "y", "field_39", "y", "f_77272_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.pathing.PathNode#y
    static void set_field_y(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "y", "field_39", "y", "f_77272_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.entity.ai.pathing.PathNode#z
    static jint get_field_z(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "z", "field_38", "z", "f_77273_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.pathing.PathNode#z
    static void set_field_z(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "z", "field_38", "z", "f_77273_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.ai.pathing.PathNode#hashCode
    static jint get_field_hashCode(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "hash", "field_44", "hashCode", "f_77283_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.ai.pathing.PathNode#hashCode
    static void set_field_hashCode(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "hash", "field_44", "hashCode", "f_77283_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.entity.ai.pathing.PathNode#heapIndex
    static jint get_field_heapIndex(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "heapIdx", "field_37", "heapIndex", "f_77274_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.pathing.PathNode#heapIndex
    static void set_field_heapIndex(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "heapIdx", "field_37", "heapIndex", "f_77274_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.entity.ai.pathing.PathNode#penalizedPathLength
    static jfloat get_field_penalizedPathLength(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "g", "field_36", "penalizedPathLength", "f_77275_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.pathing.PathNode#penalizedPathLength
    static void set_field_penalizedPathLength(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "g", "field_36", "penalizedPathLength", "f_77275_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.entity.ai.pathing.PathNode#distanceToNearestTarget
    static jfloat get_field_distanceToNearestTarget(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "h", "field_34", "distanceToNearestTarget", "f_77276_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.pathing.PathNode#distanceToNearestTarget
    static void set_field_distanceToNearestTarget(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "h", "field_34", "distanceToNearestTarget", "f_77276_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.entity.ai.pathing.PathNode#heapWeight
    static jfloat get_field_heapWeight(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "f", "field_47", "heapWeight", "f_77277_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.pathing.PathNode#heapWeight
    static void set_field_heapWeight(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "f", "field_47", "heapWeight", "f_77277_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.entity.ai.pathing.PathNode#previous
    static jobject get_field_previous(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "cameFrom", "field_35", "previous", "f_77278_"), "Lepq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.pathing.PathNode#previous
    static void set_field_previous(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "cameFrom", "field_35", "previous", "f_77278_"), "Lepq;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.entity.ai.pathing.PathNode#visited
    static jboolean get_field_visited(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "closed", "field_42", "visited", "f_77279_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.pathing.PathNode#visited
    static void set_field_visited(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "closed", "field_42", "visited", "f_77279_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.entity.ai.pathing.PathNode#pathLength
    static jfloat get_field_pathLength(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "walkedDistance", "field_46", "pathLength", "f_77280_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.pathing.PathNode#pathLength
    static void set_field_pathLength(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "walkedDistance", "field_46", "pathLength", "f_77280_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.entity.ai.pathing.PathNode#penalty
    static jfloat get_field_penalty(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "costMalus", "field_43", "penalty", "f_77281_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.pathing.PathNode#penalty
    static void set_field_penalty(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "costMalus", "field_43", "penalty", "f_77281_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.entity.ai.pathing.PathNode#type
    static jobject get_field_type(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "type", "field_41", "type", "f_77282_"), "Lepv;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.pathing.PathNode#type
    static void set_field_type(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "type", "field_41", "type", "f_77282_"), "Lepv;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_copyWithNewPosition() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "cloneAndMove", "method_26", "copyWithNewPosition", "m_77289_"), "(III)Lepq;");
    }

    static jobject copyWithNewPosition(const jobject& obj, const jint& arg0, const jint& arg1, const jint& arg2) {
                
       const auto methodID = methodID_copyWithNewPosition();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_hash() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "createHash", "method_30", "hash", "m_77295_"), "(III)I");
    }

    static jint hash(const jint& arg0, const jint& arg1, const jint& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_hash();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_getDistance() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "distanceTo", "method_31", "getDistance", "m_77293_"), "(Lepq;)F");
    }

    static jfloat getDistance(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getDistance();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getHorizontalDistance() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "distanceToXZ", "method_44022", "getHorizontalDistance", "m_230613_"), "(Lepq;)F");
    }

    static jfloat getHorizontalDistance(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getHorizontalDistance();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__getDistance() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "distanceTo", "method_35494", "getDistance", "m_164697_"), "(Ljd;)F");
    }

    static jfloat _getDistance(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__getDistance();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getSquaredDistance() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "distanceToSqr", "method_32", "getSquaredDistance", "m_77299_"), "(Lepq;)F");
    }

    static jfloat getSquaredDistance(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getSquaredDistance();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__getSquaredDistance() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "distanceToSqr", "method_35497", "getSquaredDistance", "m_164702_"), "(Ljd;)F");
    }

    static jfloat _getSquaredDistance(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__getSquaredDistance();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getManhattanDistance() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "distanceManhattan", "method_21653", "getManhattanDistance", "m_77304_"), "(Lepq;)F");
    }

    static jfloat getManhattanDistance(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getManhattanDistance();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__getManhattanDistance() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "distanceManhattan", "method_21654", "getManhattanDistance", "m_77306_"), "(Ljd;)F");
    }

    static jfloat _getManhattanDistance(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__getManhattanDistance();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getBlockPos() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "asBlockPos", "method_22879", "getBlockPos", "m_77288_"), "()Ljd;");
    }

    static jobject getBlockPos(const jobject& obj) {
                
       const auto methodID = methodID_getBlockPos();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getPos() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "asVec3", "method_35496", "getPos", "m_164701_"), "()Lexc;");
    }

    static jobject getPos(const jobject& obj) {
                
       const auto methodID = methodID_getPos();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_isInHeap() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "inOpenSet", "method_27", "isInHeap", "m_77303_"), "()Z");
    }

    static jboolean isInHeap(const jobject& obj) {
                
       const auto methodID = methodID_isInHeap();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_write() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "writeToStream", "method_35495", "write", "m_164699_"), "(Lvw;)V");
    }

    static void write(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_write();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_fromBuf() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "createFromStream", "method_28", "fromBuf", "m_77301_"), "(Lvw;)Lepq;");
    }

    static jobject fromBuf(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_fromBuf();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_readFromBuf() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "readContents", "method_47935", "readFromBuf", "m_262841_"), "(Lvw;Lepq;)V");
    }

    static void readFromBuf(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_readFromBuf();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_ENTITY_AI_PATHING_PATHNODE_HPP