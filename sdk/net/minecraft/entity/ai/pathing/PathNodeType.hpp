// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ENTITY_AI_PATHING_PATHNODETYPE_HPP
#define NET_MINECRAFT_ENTITY_AI_PATHING_PATHNODETYPE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.entity.ai.pathing.PathNodeType
 * Remapped: epv
 */
namespace PathNodeType {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("epv", "net/minecraft/world/level/pathfinder/PathType", "net/minecraft/class_7", "net/minecraft/entity/ai/pathing/PathNodeType", "net/minecraft/src/C_313716_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.entity.ai.pathing.PathNodeType#BLOCKED
    [[maybe_unused]] static jobject get_field_BLOCKED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "BLOCKED", "field_22", "BLOCKED", "BLOCKED"), "Lepv;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.pathing.PathNodeType#BLOCKED
    [[maybe_unused]] static void set_field_BLOCKED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "BLOCKED", "field_22", "BLOCKED", "BLOCKED"), "Lepv;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.pathing.PathNodeType#OPEN
    [[maybe_unused]] static jobject get_field_OPEN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "OPEN", "field_7", "OPEN", "OPEN"), "Lepv;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.pathing.PathNodeType#OPEN
    [[maybe_unused]] static void set_field_OPEN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "OPEN", "field_7", "OPEN", "OPEN"), "Lepv;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.pathing.PathNodeType#WALKABLE
    [[maybe_unused]] static jobject get_field_WALKABLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "WALKABLE", "field_12", "WALKABLE", "WALKABLE"), "Lepv;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.pathing.PathNodeType#WALKABLE
    [[maybe_unused]] static void set_field_WALKABLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "WALKABLE", "field_12", "WALKABLE", "WALKABLE"), "Lepv;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.pathing.PathNodeType#WALKABLE_DOOR
    [[maybe_unused]] static jobject get_field_WALKABLE_DOOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "WALKABLE_DOOR", "field_26446", "WALKABLE_DOOR", "WALKABLE_DOOR"), "Lepv;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.pathing.PathNodeType#WALKABLE_DOOR
    [[maybe_unused]] static void set_field_WALKABLE_DOOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "WALKABLE_DOOR", "field_26446", "WALKABLE_DOOR", "WALKABLE_DOOR"), "Lepv;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.pathing.PathNodeType#TRAPDOOR
    [[maybe_unused]] static jobject get_field_TRAPDOOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "TRAPDOOR", "field_19", "TRAPDOOR", "TRAPDOOR"), "Lepv;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.pathing.PathNodeType#TRAPDOOR
    [[maybe_unused]] static void set_field_TRAPDOOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "TRAPDOOR", "field_19", "TRAPDOOR", "TRAPDOOR"), "Lepv;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.pathing.PathNodeType#POWDER_SNOW
    [[maybe_unused]] static jobject get_field_POWDER_SNOW() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "POWDER_SNOW", "field_33534", "POWDER_SNOW", "POWDER_SNOW"), "Lepv;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.pathing.PathNodeType#POWDER_SNOW
    [[maybe_unused]] static void set_field_POWDER_SNOW(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "POWDER_SNOW", "field_33534", "POWDER_SNOW", "POWDER_SNOW"), "Lepv;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.pathing.PathNodeType#DANGER_POWDER_SNOW
    [[maybe_unused]] static jobject get_field_DANGER_POWDER_SNOW() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "DANGER_POWDER_SNOW", "field_36432", "DANGER_POWDER_SNOW", "DANGER_POWDER_SNOW"), "Lepv;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.pathing.PathNodeType#DANGER_POWDER_SNOW
    [[maybe_unused]] static void set_field_DANGER_POWDER_SNOW(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "DANGER_POWDER_SNOW", "field_36432", "DANGER_POWDER_SNOW", "DANGER_POWDER_SNOW"), "Lepv;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.pathing.PathNodeType#FENCE
    [[maybe_unused]] static jobject get_field_FENCE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "FENCE", "field_10", "FENCE", "FENCE"), "Lepv;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.pathing.PathNodeType#FENCE
    [[maybe_unused]] static void set_field_FENCE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "FENCE", "field_10", "FENCE", "FENCE"), "Lepv;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.pathing.PathNodeType#LAVA
    [[maybe_unused]] static jobject get_field_LAVA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "LAVA", "field_14", "LAVA", "LAVA"), "Lepv;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.pathing.PathNodeType#LAVA
    [[maybe_unused]] static void set_field_LAVA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "LAVA", "field_14", "LAVA", "LAVA"), "Lepv;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.pathing.PathNodeType#WATER
    [[maybe_unused]] static jobject get_field_WATER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "WATER", "field_18", "WATER", "WATER"), "Lepv;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.pathing.PathNodeType#WATER
    [[maybe_unused]] static void set_field_WATER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "WATER", "field_18", "WATER", "WATER"), "Lepv;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.pathing.PathNodeType#WATER_BORDER
    [[maybe_unused]] static jobject get_field_WATER_BORDER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "WATER_BORDER", "field_4", "WATER_BORDER", "WATER_BORDER"), "Lepv;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.pathing.PathNodeType#WATER_BORDER
    [[maybe_unused]] static void set_field_WATER_BORDER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "WATER_BORDER", "field_4", "WATER_BORDER", "WATER_BORDER"), "Lepv;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.pathing.PathNodeType#RAIL
    [[maybe_unused]] static jobject get_field_RAIL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "RAIL", "field_21", "RAIL", "RAIL"), "Lepv;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.pathing.PathNodeType#RAIL
    [[maybe_unused]] static void set_field_RAIL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "RAIL", "field_21", "RAIL", "RAIL"), "Lepv;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.pathing.PathNodeType#UNPASSABLE_RAIL
    [[maybe_unused]] static jobject get_field_UNPASSABLE_RAIL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "UNPASSABLE_RAIL", "field_25418", "UNPASSABLE_RAIL", "UNPASSABLE_RAIL"), "Lepv;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.pathing.PathNodeType#UNPASSABLE_RAIL
    [[maybe_unused]] static void set_field_UNPASSABLE_RAIL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "UNPASSABLE_RAIL", "field_25418", "UNPASSABLE_RAIL", "UNPASSABLE_RAIL"), "Lepv;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.pathing.PathNodeType#DANGER_FIRE
    [[maybe_unused]] static jobject get_field_DANGER_FIRE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "DANGER_FIRE", "field_9", "DANGER_FIRE", "DANGER_FIRE"), "Lepv;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.pathing.PathNodeType#DANGER_FIRE
    [[maybe_unused]] static void set_field_DANGER_FIRE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "DANGER_FIRE", "field_9", "DANGER_FIRE", "DANGER_FIRE"), "Lepv;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.pathing.PathNodeType#DAMAGE_FIRE
    [[maybe_unused]] static jobject get_field_DAMAGE_FIRE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "DAMAGE_FIRE", "field_3", "DAMAGE_FIRE", "DAMAGE_FIRE"), "Lepv;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.pathing.PathNodeType#DAMAGE_FIRE
    [[maybe_unused]] static void set_field_DAMAGE_FIRE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "DAMAGE_FIRE", "field_3", "DAMAGE_FIRE", "DAMAGE_FIRE"), "Lepv;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.pathing.PathNodeType#DANGER_OTHER
    [[maybe_unused]] static jobject get_field_DANGER_OTHER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "DANGER_OTHER", "field_5", "DANGER_OTHER", "DANGER_OTHER"), "Lepv;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.pathing.PathNodeType#DANGER_OTHER
    [[maybe_unused]] static void set_field_DANGER_OTHER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "DANGER_OTHER", "field_5", "DANGER_OTHER", "DANGER_OTHER"), "Lepv;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.pathing.PathNodeType#DAMAGE_OTHER
    [[maybe_unused]] static jobject get_field_DAMAGE_OTHER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "DAMAGE_OTHER", "field_17", "DAMAGE_OTHER", "DAMAGE_OTHER"), "Lepv;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.pathing.PathNodeType#DAMAGE_OTHER
    [[maybe_unused]] static void set_field_DAMAGE_OTHER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "DAMAGE_OTHER", "field_17", "DAMAGE_OTHER", "DAMAGE_OTHER"), "Lepv;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.pathing.PathNodeType#DOOR_OPEN
    [[maybe_unused]] static jobject get_field_DOOR_OPEN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "DOOR_OPEN", "field_15", "DOOR_OPEN", "DOOR_OPEN"), "Lepv;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.pathing.PathNodeType#DOOR_OPEN
    [[maybe_unused]] static void set_field_DOOR_OPEN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "DOOR_OPEN", "field_15", "DOOR_OPEN", "DOOR_OPEN"), "Lepv;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.pathing.PathNodeType#DOOR_WOOD_CLOSED
    [[maybe_unused]] static jobject get_field_DOOR_WOOD_CLOSED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "DOOR_WOOD_CLOSED", "field_23", "DOOR_WOOD_CLOSED", "DOOR_WOOD_CLOSED"), "Lepv;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.pathing.PathNodeType#DOOR_WOOD_CLOSED
    [[maybe_unused]] static void set_field_DOOR_WOOD_CLOSED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "DOOR_WOOD_CLOSED", "field_23", "DOOR_WOOD_CLOSED", "DOOR_WOOD_CLOSED"), "Lepv;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.pathing.PathNodeType#DOOR_IRON_CLOSED
    [[maybe_unused]] static jobject get_field_DOOR_IRON_CLOSED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "DOOR_IRON_CLOSED", "field_8", "DOOR_IRON_CLOSED", "DOOR_IRON_CLOSED"), "Lepv;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.pathing.PathNodeType#DOOR_IRON_CLOSED
    [[maybe_unused]] static void set_field_DOOR_IRON_CLOSED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "DOOR_IRON_CLOSED", "field_8", "DOOR_IRON_CLOSED", "DOOR_IRON_CLOSED"), "Lepv;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.pathing.PathNodeType#BREACH
    [[maybe_unused]] static jobject get_field_BREACH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "BREACH", "field_16", "BREACH", "BREACH"), "Lepv;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.pathing.PathNodeType#BREACH
    [[maybe_unused]] static void set_field_BREACH(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "BREACH", "field_16", "BREACH", "BREACH"), "Lepv;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.pathing.PathNodeType#LEAVES
    [[maybe_unused]] static jobject get_field_LEAVES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "LEAVES", "field_6", "LEAVES", "LEAVES"), "Lepv;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.pathing.PathNodeType#LEAVES
    [[maybe_unused]] static void set_field_LEAVES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "LEAVES", "field_6", "LEAVES", "LEAVES"), "Lepv;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.pathing.PathNodeType#STICKY_HONEY
    [[maybe_unused]] static jobject get_field_STICKY_HONEY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "STICKY_HONEY", "field_21326", "STICKY_HONEY", "STICKY_HONEY"), "Lepv;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.pathing.PathNodeType#STICKY_HONEY
    [[maybe_unused]] static void set_field_STICKY_HONEY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "STICKY_HONEY", "field_21326", "STICKY_HONEY", "STICKY_HONEY"), "Lepv;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.pathing.PathNodeType#COCOA
    [[maybe_unused]] static jobject get_field_COCOA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "COCOA", "field_21516", "COCOA", "COCOA"), "Lepv;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.pathing.PathNodeType#COCOA
    [[maybe_unused]] static void set_field_COCOA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "COCOA", "field_21516", "COCOA", "COCOA"), "Lepv;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.pathing.PathNodeType#DAMAGE_CAUTIOUS
    [[maybe_unused]] static jobject get_field_DAMAGE_CAUTIOUS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("y", "DAMAGE_CAUTIOUS", "field_43351", "DAMAGE_CAUTIOUS", "DAMAGE_CAUTIOUS"), "Lepv;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.pathing.PathNodeType#DAMAGE_CAUTIOUS
    [[maybe_unused]] static void set_field_DAMAGE_CAUTIOUS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("y", "DAMAGE_CAUTIOUS", "field_43351", "DAMAGE_CAUTIOUS", "DAMAGE_CAUTIOUS"), "Lepv;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.pathing.PathNodeType#DANGER_TRAPDOOR
    [[maybe_unused]] static jobject get_field_DANGER_TRAPDOOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("z", "DANGER_TRAPDOOR", "field_47413", "DANGER_TRAPDOOR", "DANGER_TRAPDOOR"), "Lepv;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.pathing.PathNodeType#DANGER_TRAPDOOR
    [[maybe_unused]] static void set_field_DANGER_TRAPDOOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("z", "DANGER_TRAPDOOR", "field_47413", "DANGER_TRAPDOOR", "DANGER_TRAPDOOR"), "Lepv;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.entity.ai.pathing.PathNodeType#defaultPenalty
    static jfloat get_field_defaultPenalty(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("A", "malus", "field_13", "defaultPenalty", "f_316400_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.ai.pathing.PathNodeType#defaultPenalty
    static void set_field_defaultPenalty(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("A", "malus", "field_13", "defaultPenalty", "f_316400_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    static jmethodID methodID_values() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("values", "values", "values", "values", "values"), "()[Lepv;");
    }

    static jobject values() {
       const auto clazz = self();
       const auto methodID = methodID_values();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_valueOf() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("valueOf", "valueOf", "valueOf", "valueOf", "valueOf"), "(Ljava/lang/String;)Lepv;");
    }

    static jobject valueOf(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_valueOf();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getDefaultPenalty() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getMalus", "method_11", "getDefaultPenalty", "m_320214_"), "()F");
    }

    static jfloat getDefaultPenalty(const jobject& obj) {
                
       const auto methodID = methodID_getDefaultPenalty();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_ENTITY_AI_PATHING_PATHNODETYPE_HPP