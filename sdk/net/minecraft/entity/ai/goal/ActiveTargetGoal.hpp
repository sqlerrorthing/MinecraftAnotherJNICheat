// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ENTITY_AI_GOAL_ACTIVETARGETGOAL_HPP
#define NET_MINECRAFT_ENTITY_AI_GOAL_ACTIVETARGETGOAL_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.entity.ai.goal.ActiveTargetGoal
 * Remapped: ccf
 */
namespace ActiveTargetGoal {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("ccf", "net/minecraft/world/entity/ai/goal/target/NearestAttackableTargetGoal", "net/minecraft/class_1400", "net/minecraft/entity/ai/goal/ActiveTargetGoal", "net/minecraft/src/C_738_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.entity.ai.goal.ActiveTargetGoal#DEFAULT_RECIPROCAL_CHANCE
    [[maybe_unused]] static jint get_field_DEFAULT_RECIPROCAL_CHANCE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "DEFAULT_RANDOM_INTERVAL", "field_36304", "DEFAULT_RECIPROCAL_CHANCE", "f_199889_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.ai.goal.ActiveTargetGoal#DEFAULT_RECIPROCAL_CHANCE
    [[maybe_unused]] static void set_field_DEFAULT_RECIPROCAL_CHANCE(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "DEFAULT_RANDOM_INTERVAL", "field_36304", "DEFAULT_RECIPROCAL_CHANCE", "f_199889_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for protected field net.minecraft.entity.ai.goal.ActiveTargetGoal#targetClass
    static jobject get_field_targetClass(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "targetType", "field_6643", "targetClass", "f_26048_"), "Ljava/lang/Class;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.entity.ai.goal.ActiveTargetGoal#targetClass
    static void set_field_targetClass(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "targetType", "field_6643", "targetClass", "f_26048_"), "Ljava/lang/Class;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.entity.ai.goal.ActiveTargetGoal#reciprocalChance
    static jint get_field_reciprocalChance(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "randomInterval", "field_6641", "reciprocalChance", "f_26049_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.entity.ai.goal.ActiveTargetGoal#reciprocalChance
    static void set_field_reciprocalChance(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "randomInterval", "field_6641", "reciprocalChance", "f_26049_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.entity.ai.goal.ActiveTargetGoal#targetEntity
    static jobject get_field_targetEntity(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "target", "field_6644", "targetEntity", "f_26050_"), "Lbtn;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.entity.ai.goal.ActiveTargetGoal#targetEntity
    static void set_field_targetEntity(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "target", "field_6644", "targetEntity", "f_26050_"), "Lbtn;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.entity.ai.goal.ActiveTargetGoal#targetPredicate
    static jobject get_field_targetPredicate(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "targetConditions", "field_6642", "targetPredicate", "f_26051_"), "Lcef;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.entity.ai.goal.ActiveTargetGoal#targetPredicate
    static void set_field_targetPredicate(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "targetConditions", "field_6642", "targetPredicate", "f_26051_"), "Lcef;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_canStart() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "canUse", "method_6264", "canStart", "m_8036_"), "()Z");
    }

    static jboolean canStart(const jobject& obj) {
                
       const auto methodID = methodID_canStart();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getSearchBox() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getTargetSearchArea", "method_6321", "getSearchBox", "m_7255_"), "(D)Lewx;");
    }

    static jobject getSearchBox(const jobject& obj, const jdouble& arg0) {
                
       const auto methodID = methodID_getSearchBox();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_findClosestTarget() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "findTarget", "method_18415", "findClosestTarget", "m_26073_"), "()V");
    }

    static void findClosestTarget(const jobject& obj) {
                
       const auto methodID = methodID_findClosestTarget();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_start() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "start", "method_6269", "start", "m_8056_"), "()V");
    }

    static void start(const jobject& obj) {
                
       const auto methodID = methodID_start();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_setTargetEntity() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setTarget", "method_24632", "setTargetEntity", "m_26070_"), "(Lbtn;)V");
    }

    static void setTargetEntity(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setTargetEntity();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_ENTITY_AI_GOAL_ACTIVETARGETGOAL_HPP