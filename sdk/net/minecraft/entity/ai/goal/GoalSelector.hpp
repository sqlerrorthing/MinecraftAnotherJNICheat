// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ENTITY_AI_GOAL_GOALSELECTOR_HPP
#define NET_MINECRAFT_ENTITY_AI_GOAL_GOALSELECTOR_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.entity.ai.goal.GoalSelector
 * Remapped: can
 */
namespace GoalSelector {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("can", "net/minecraft/world/entity/ai/goal/GoalSelector", "net/minecraft/class_1355", "net/minecraft/entity/ai/goal/GoalSelector", "net/minecraft/src/C_690_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.entity.ai.goal.GoalSelector#REPLACEABLE_GOAL
    [[maybe_unused]] static jobject get_field_REPLACEABLE_GOAL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "NO_GOAL", "field_18410", "REPLACEABLE_GOAL", "f_25343_"), "Lcca;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.ai.goal.GoalSelector#REPLACEABLE_GOAL
    [[maybe_unused]] static void set_field_REPLACEABLE_GOAL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "NO_GOAL", "field_18410", "REPLACEABLE_GOAL", "f_25343_"), "Lcca;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.entity.ai.goal.GoalSelector#goalsByControl
    static jobject get_field_goalsByControl(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "lockedFlags", "field_18411", "goalsByControl", "f_25344_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.ai.goal.GoalSelector#goalsByControl
    static void set_field_goalsByControl(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "lockedFlags", "field_18411", "goalsByControl", "f_25344_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.ai.goal.GoalSelector#goals
    static jobject get_field_goals(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "availableGoals", "field_6461", "goals", "f_25345_"), "Ljava/util/Set;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.ai.goal.GoalSelector#goals
    static void set_field_goals(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "availableGoals", "field_6461", "goals", "f_25345_"), "Ljava/util/Set;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.ai.goal.GoalSelector#profiler
    static jobject get_field_profiler(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "profiler", "field_6463", "profiler", "f_25346_"), "Ljava/util/function/Supplier;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.ai.goal.GoalSelector#profiler
    static void set_field_profiler(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "profiler", "field_6463", "profiler", "f_25346_"), "Ljava/util/function/Supplier;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.ai.goal.GoalSelector#disabledControls
    static jobject get_field_disabledControls(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "disabledFlags", "field_6462", "disabledControls", "f_25347_"), "Ljava/util/EnumSet;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.ai.goal.GoalSelector#disabledControls
    static void set_field_disabledControls(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "disabledFlags", "field_6462", "disabledControls", "f_25347_"), "Ljava/util/EnumSet;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_add() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "addGoal", "method_6277", "add", "m_25352_"), "(ILcam;)V");
    }

    static void add(const jobject& obj, const jint& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_add();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_clear() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "removeAllGoals", "method_35113", "clear", "m_262460_"), "(Ljava/util/function/Predicate;)V");
    }

    static void clear(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_clear();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_remove() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "removeGoal", "method_6280", "remove", "m_25363_"), "(Lcam;)V");
    }

    static void remove(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_remove();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_usesAny() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "goalContainsAnyFlags", "method_38063", "usesAny", "m_186075_"), "(Lcca;Ljava/util/EnumSet;)Z");
    }

    static jboolean usesAny(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_usesAny();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_canReplaceAll() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "goalCanBeReplacedForAllFlags", "method_38064", "canReplaceAll", "m_186078_"), "(Lcca;Ljava/util/Map;)Z");
    }

    static jboolean canReplaceAll(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_canReplaceAll();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_tick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "tick", "method_6275", "tick", "m_25373_"), "()V");
    }

    static void tick(const jobject& obj) {
                
       const auto methodID = methodID_tick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_tickGoals() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "tickRunningGoals", "method_38849", "tickGoals", "m_186081_"), "(Z)V");
    }

    static void tickGoals(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_tickGoals();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getGoals() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getAvailableGoals", "method_35115", "getGoals", "m_148105_"), "()Ljava/util/Set;");
    }

    static jobject getGoals(const jobject& obj) {
                
       const auto methodID = methodID_getGoals();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_disableControl() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "disableControlFlag", "method_6274", "disableControl", "m_25355_"), "(Lcam$a;)V");
    }

    static void disableControl(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_disableControl();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_enableControl() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "enableControlFlag", "method_6273", "enableControl", "m_25374_"), "(Lcam$a;)V");
    }

    static void enableControl(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_enableControl();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setControlEnabled() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setControlFlag", "method_6276", "setControlEnabled", "m_25360_"), "(Lcam$a;Z)V");
    }

    static void setControlEnabled(const jobject& obj, const jobject& arg0, const jboolean& arg1) {
                
       const auto methodID = methodID_setControlEnabled();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_ENTITY_AI_GOAL_GOALSELECTOR_HPP