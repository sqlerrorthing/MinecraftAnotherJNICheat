// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ENTITY_AI_CONTROL_MOVECONTROL$STATE_HPP
#define NET_MINECRAFT_ENTITY_AI_CONTROL_MOVECONTROL$STATE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.entity.ai.control.MoveControl$State
 * Remapped: bzp$a
 */
namespace MoveControl$State {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("bzp$a", "net/minecraft/world/entity/ai/control/MoveControl$Operation", "net/minecraft/class_1335$class_1336", "net/minecraft/entity/ai/control/MoveControl$State", "net/minecraft/src/C_668_$C_669_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.entity.ai.control.MoveControl$State#WAIT
    [[maybe_unused]] static jobject get_field_WAIT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "WAIT", "field_6377", "WAIT", "WAIT"), "Lbzp$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.control.MoveControl$State#WAIT
    [[maybe_unused]] static void set_field_WAIT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "WAIT", "field_6377", "WAIT", "WAIT"), "Lbzp$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.control.MoveControl$State#MOVE_TO
    [[maybe_unused]] static jobject get_field_MOVE_TO() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "MOVE_TO", "field_6378", "MOVE_TO", "MOVE_TO"), "Lbzp$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.control.MoveControl$State#MOVE_TO
    [[maybe_unused]] static void set_field_MOVE_TO(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "MOVE_TO", "field_6378", "MOVE_TO", "MOVE_TO"), "Lbzp$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.control.MoveControl$State#STRAFE
    [[maybe_unused]] static jobject get_field_STRAFE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "STRAFE", "field_6376", "STRAFE", "STRAFE"), "Lbzp$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.control.MoveControl$State#STRAFE
    [[maybe_unused]] static void set_field_STRAFE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "STRAFE", "field_6376", "STRAFE", "STRAFE"), "Lbzp$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ai.control.MoveControl$State#JUMPING
    [[maybe_unused]] static jobject get_field_JUMPING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "JUMPING", "field_6379", "JUMPING", "JUMPING"), "Lbzp$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ai.control.MoveControl$State#JUMPING
    [[maybe_unused]] static void set_field_JUMPING(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "JUMPING", "field_6379", "JUMPING", "JUMPING"), "Lbzp$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_values() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("values", "values", "values", "values", "values"), "()[Lbzp$a;");
    }

    static jobject values() {
       const auto clazz = self();
       const auto methodID = methodID_values();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_valueOf() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("valueOf", "valueOf", "valueOf", "valueOf", "valueOf"), "(Ljava/lang/String;)Lbzp$a;");
    }

    static jobject valueOf(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_valueOf();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_ENTITY_AI_CONTROL_MOVECONTROL$STATE_HPP