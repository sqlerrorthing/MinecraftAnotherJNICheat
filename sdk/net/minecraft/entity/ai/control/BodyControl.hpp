// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ENTITY_AI_CONTROL_BODYCONTROL_HPP
#define NET_MINECRAFT_ENTITY_AI_CONTROL_BODYCONTROL_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.entity.ai.control.BodyControl
 * Remapped: bzk
 */
namespace BodyControl {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("bzk", "net/minecraft/world/entity/ai/control/BodyRotationControl", "net/minecraft/class_1330", "net/minecraft/entity/ai/control/BodyControl", "net/minecraft/src/C_661_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.entity.ai.control.BodyControl#entity
    static jobject get_field_entity(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "mob", "field_6356", "entity", "f_24875_"), "Lbtp;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.ai.control.BodyControl#entity
    static void set_field_entity(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "mob", "field_6356", "entity", "f_24875_"), "Lbtp;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.ai.control.BodyControl#BODY_KEEP_UP_THRESHOLD
    [[maybe_unused]] static jint get_field_BODY_KEEP_UP_THRESHOLD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "HEAD_STABLE_ANGLE", "field_30194", "BODY_KEEP_UP_THRESHOLD", "f_148048_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.ai.control.BodyControl#BODY_KEEP_UP_THRESHOLD
    [[maybe_unused]] static void set_field_BODY_KEEP_UP_THRESHOLD(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "HEAD_STABLE_ANGLE", "field_30194", "BODY_KEEP_UP_THRESHOLD", "f_148048_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.ai.control.BodyControl#ROTATE_BODY_START_TICK
    [[maybe_unused]] static jint get_field_ROTATE_BODY_START_TICK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "DELAY_UNTIL_STARTING_TO_FACE_FORWARD", "field_30195", "ROTATE_BODY_START_TICK", "f_148049_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.ai.control.BodyControl#ROTATE_BODY_START_TICK
    [[maybe_unused]] static void set_field_ROTATE_BODY_START_TICK(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "DELAY_UNTIL_STARTING_TO_FACE_FORWARD", "field_30195", "ROTATE_BODY_START_TICK", "f_148049_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.ai.control.BodyControl#ROTATION_INCREMENTS
    [[maybe_unused]] static jint get_field_ROTATION_INCREMENTS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "HOW_LONG_IT_TAKES_TO_FACE_FORWARD", "field_30196", "ROTATION_INCREMENTS", "f_148050_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.ai.control.BodyControl#ROTATION_INCREMENTS
    [[maybe_unused]] static void set_field_ROTATION_INCREMENTS(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "HOW_LONG_IT_TAKES_TO_FACE_FORWARD", "field_30196", "ROTATION_INCREMENTS", "f_148050_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.entity.ai.control.BodyControl#bodyAdjustTicks
    static jint get_field_bodyAdjustTicks(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "headStableTime", "field_6355", "bodyAdjustTicks", "f_24876_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.ai.control.BodyControl#bodyAdjustTicks
    static void set_field_bodyAdjustTicks(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "headStableTime", "field_6355", "bodyAdjustTicks", "f_24876_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.ai.control.BodyControl#lastHeadYaw
    static jfloat get_field_lastHeadYaw(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "lastStableYHeadRot", "field_6354", "lastHeadYaw", "f_24877_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.ai.control.BodyControl#lastHeadYaw
    static void set_field_lastHeadYaw(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "lastStableYHeadRot", "field_6354", "lastHeadYaw", "f_24877_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    static jmethodID methodID_tick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "clientTick", "method_6224", "tick", "m_8121_"), "()V");
    }

    static void tick(const jobject& obj) {
                
       const auto methodID = methodID_tick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_keepUpBody() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "rotateBodyIfNecessary", "method_20243", "keepUpBody", "m_24880_"), "()V");
    }

    static void keepUpBody(const jobject& obj) {
                
       const auto methodID = methodID_keepUpBody();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_keepUpHead() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "rotateHeadIfNecessary", "method_20244", "keepUpHead", "m_24881_"), "()V");
    }

    static void keepUpHead(const jobject& obj) {
                
       const auto methodID = methodID_keepUpHead();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_slowlyAdjustBody() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "rotateHeadTowardsFront", "method_20245", "slowlyAdjustBody", "m_24882_"), "()V");
    }

    static void slowlyAdjustBody(const jobject& obj) {
                
       const auto methodID = methodID_slowlyAdjustBody();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_isIndependent() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "notCarryingMobPassengers", "method_20246", "isIndependent", "m_24883_"), "()Z");
    }

    static jboolean isIndependent(const jobject& obj) {
                
       const auto methodID = methodID_isIndependent();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isMoving() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "isMoving", "method_20247", "isMoving", "m_24884_"), "()Z");
    }

    static jboolean isMoving(const jobject& obj) {
                
       const auto methodID = methodID_isMoving();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_ENTITY_AI_CONTROL_BODYCONTROL_HPP