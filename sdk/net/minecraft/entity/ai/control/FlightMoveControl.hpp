// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ENTITY_AI_CONTROL_FLIGHTMOVECONTROL_HPP
#define NET_MINECRAFT_ENTITY_AI_CONTROL_FLIGHTMOVECONTROL_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.entity.ai.control.FlightMoveControl
 * Remapped: bzm
 */
namespace FlightMoveControl {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("bzm", "net/minecraft/world/entity/ai/control/FlyingMoveControl", "net/minecraft/class_1331", "net/minecraft/entity/ai/control/FlightMoveControl", "net/minecraft/src/C_663_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.entity.ai.control.FlightMoveControl#maxPitchChange
    static jint get_field_maxPitchChange(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "maxTurn", "field_20349", "maxPitchChange", "f_24890_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.ai.control.FlightMoveControl#maxPitchChange
    static void set_field_maxPitchChange(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "maxTurn", "field_20349", "maxPitchChange", "f_24890_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.ai.control.FlightMoveControl#noGravity
    static jboolean get_field_noGravity(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "hoversInPlace", "field_20350", "noGravity", "f_24891_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.ai.control.FlightMoveControl#noGravity
    static void set_field_noGravity(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "hoversInPlace", "field_20350", "noGravity", "f_24891_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    static jmethodID methodID_tick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "tick", "method_6240", "tick", "m_8126_"), "()V");
    }

    static void tick(const jobject& obj) {
                
       const auto methodID = methodID_tick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_ENTITY_AI_CONTROL_FLIGHTMOVECONTROL_HPP