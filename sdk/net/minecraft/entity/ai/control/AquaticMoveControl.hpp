// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ENTITY_AI_CONTROL_AQUATICMOVECONTROL_HPP
#define NET_MINECRAFT_ENTITY_AI_CONTROL_AQUATICMOVECONTROL_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.entity.ai.control.AquaticMoveControl
 * Remapped: bzr
 */
namespace AquaticMoveControl {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("bzr", "net/minecraft/world/entity/ai/control/SmoothSwimmingMoveControl", "net/minecraft/class_5757", "net/minecraft/entity/ai/control/AquaticMoveControl", "net/minecraft/src/C_141095_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.entity.ai.control.AquaticMoveControl#field_40123
    [[maybe_unused]] static jfloat get_field_field_40123() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "FULL_SPEED_TURN_THRESHOLD", "field_40123", "field_40123", "f_243703_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.ai.control.AquaticMoveControl#field_40123
    [[maybe_unused]] static void set_field_field_40123(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "FULL_SPEED_TURN_THRESHOLD", "field_40123", "field_40123", "f_243703_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.ai.control.AquaticMoveControl#field_40124
    [[maybe_unused]] static jfloat get_field_field_40124() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "STOP_TURN_THRESHOLD", "field_40124", "field_40124", "f_244312_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.ai.control.AquaticMoveControl#field_40124
    [[maybe_unused]] static void set_field_field_40124(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "STOP_TURN_THRESHOLD", "field_40124", "field_40124", "f_244312_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.entity.ai.control.AquaticMoveControl#pitchChange
    static jint get_field_pitchChange(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "maxTurnX", "field_28319", "pitchChange", "f_148064_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.ai.control.AquaticMoveControl#pitchChange
    static void set_field_pitchChange(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "maxTurnX", "field_28319", "pitchChange", "f_148064_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.ai.control.AquaticMoveControl#yawChange
    static jint get_field_yawChange(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("o", "maxTurnY", "field_28320", "yawChange", "f_148065_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.ai.control.AquaticMoveControl#yawChange
    static void set_field_yawChange(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("o", "maxTurnY", "field_28320", "yawChange", "f_148065_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.ai.control.AquaticMoveControl#speedInWater
    static jfloat get_field_speedInWater(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("p", "inWaterSpeedModifier", "field_28321", "speedInWater", "f_148066_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.ai.control.AquaticMoveControl#speedInWater
    static void set_field_speedInWater(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("p", "inWaterSpeedModifier", "field_28321", "speedInWater", "f_148066_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.ai.control.AquaticMoveControl#speedInAir
    static jfloat get_field_speedInAir(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("q", "outsideWaterSpeedModifier", "field_28322", "speedInAir", "f_148067_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.ai.control.AquaticMoveControl#speedInAir
    static void set_field_speedInAir(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("q", "outsideWaterSpeedModifier", "field_28322", "speedInAir", "f_148067_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.ai.control.AquaticMoveControl#buoyant
    static jboolean get_field_buoyant(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("r", "applyGravity", "field_28323", "buoyant", "f_148068_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.ai.control.AquaticMoveControl#buoyant
    static void set_field_buoyant(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("r", "applyGravity", "field_28323", "buoyant", "f_148068_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    static jmethodID methodID_tick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "tick", "method_6240", "tick", "m_8126_"), "()V");
    }

    static void tick(const jobject& obj) {
                
       const auto methodID = methodID_tick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_method_45335() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getTurningSpeedFactor", "method_45335", "method_45335", "m_246609_"), "(F)F");
    }

    static jfloat method_45335(const jfloat& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_method_45335();
       return MinecraftSDK::env->CallStaticFloatMethod(clazz, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_ENTITY_AI_CONTROL_AQUATICMOVECONTROL_HPP