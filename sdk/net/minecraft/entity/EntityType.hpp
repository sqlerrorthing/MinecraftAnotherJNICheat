// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ENTITY_ENTITYTYPE_HPP
#define NET_MINECRAFT_ENTITY_ENTITYTYPE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.entity.EntityType
 * Remapped: bsx
 */
namespace EntityType {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("bsx", "net/minecraft/world/entity/EntityType", "net/minecraft/class_1299", "net/minecraft/entity/EntityType", "net/minecraft/src/C_513_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.entity.EntityType#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bB", "LOGGER", "field_6088", "LOGGER", "f_20534_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.EntityType#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bB", "LOGGER", "field_6088", "LOGGER", "f_20534_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.entity.EntityType#registryEntry
    static jobject get_field_registryEntry(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bC", "builtInRegistryHolder", "field_36398", "registryEntry", "f_204038_"), "Ljm$c;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.EntityType#registryEntry
    static void set_field_registryEntry(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bC", "builtInRegistryHolder", "field_36398", "registryEntry", "f_204038_"), "Ljm$c;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.EntityType#field_30054
    [[maybe_unused]] static jfloat get_field_field_30054() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bD", "MAGIC_HORSE_WIDTH", "field_30054", "field_30054", "f_147038_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.EntityType#field_30054
    [[maybe_unused]] static void set_field_field_30054(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bD", "MAGIC_HORSE_WIDTH", "field_30054", "field_30054", "f_147038_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.EntityType#field_42459
    [[maybe_unused]] static jint get_field_field_42459() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bE", "DISPLAY_TRACKING_RANGE", "field_42459", "field_42459", "f_268473_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.EntityType#field_42459
    [[maybe_unused]] static void set_field_field_42459(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bE", "DISPLAY_TRACKING_RANGE", "field_42459", "field_42459", "f_268473_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#ALLAY
    [[maybe_unused]] static jobject get_field_ALLAY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "ALLAY", "field_38384", "ALLAY", "f_217014_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#ALLAY
    [[maybe_unused]] static void set_field_ALLAY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "ALLAY", "field_38384", "ALLAY", "f_217014_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#AREA_EFFECT_CLOUD
    [[maybe_unused]] static jobject get_field_AREA_EFFECT_CLOUD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "AREA_EFFECT_CLOUD", "field_6083", "AREA_EFFECT_CLOUD", "f_20476_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#AREA_EFFECT_CLOUD
    [[maybe_unused]] static void set_field_AREA_EFFECT_CLOUD(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "AREA_EFFECT_CLOUD", "field_6083", "AREA_EFFECT_CLOUD", "f_20476_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#ARMADILLO
    [[maybe_unused]] static jobject get_field_ARMADILLO() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "ARMADILLO", "field_47754", "ARMADILLO", "f_316265_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#ARMADILLO
    [[maybe_unused]] static void set_field_ARMADILLO(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "ARMADILLO", "field_47754", "ARMADILLO", "f_316265_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#ARMOR_STAND
    [[maybe_unused]] static jobject get_field_ARMOR_STAND() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "ARMOR_STAND", "field_6131", "ARMOR_STAND", "f_20529_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#ARMOR_STAND
    [[maybe_unused]] static void set_field_ARMOR_STAND(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "ARMOR_STAND", "field_6131", "ARMOR_STAND", "f_20529_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#ARROW
    [[maybe_unused]] static jobject get_field_ARROW() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "ARROW", "field_6122", "ARROW", "f_20548_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#ARROW
    [[maybe_unused]] static void set_field_ARROW(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "ARROW", "field_6122", "ARROW", "f_20548_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#AXOLOTL
    [[maybe_unused]] static jobject get_field_AXOLOTL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "AXOLOTL", "field_28315", "AXOLOTL", "f_147039_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#AXOLOTL
    [[maybe_unused]] static void set_field_AXOLOTL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "AXOLOTL", "field_28315", "AXOLOTL", "f_147039_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#BAT
    [[maybe_unused]] static jobject get_field_BAT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "BAT", "field_6108", "BAT", "f_20549_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#BAT
    [[maybe_unused]] static void set_field_BAT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "BAT", "field_6108", "BAT", "f_20549_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#BEE
    [[maybe_unused]] static jobject get_field_BEE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "BEE", "field_20346", "BEE", "f_20550_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#BEE
    [[maybe_unused]] static void set_field_BEE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "BEE", "field_20346", "BEE", "f_20550_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#BLAZE
    [[maybe_unused]] static jobject get_field_BLAZE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "BLAZE", "field_6099", "BLAZE", "f_20551_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#BLAZE
    [[maybe_unused]] static void set_field_BLAZE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "BLAZE", "field_6099", "BLAZE", "f_20551_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#BLOCK_DISPLAY
    [[maybe_unused]] static jobject get_field_BLOCK_DISPLAY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "BLOCK_DISPLAY", "field_42460", "BLOCK_DISPLAY", "f_268573_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#BLOCK_DISPLAY
    [[maybe_unused]] static void set_field_BLOCK_DISPLAY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "BLOCK_DISPLAY", "field_42460", "BLOCK_DISPLAY", "f_268573_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#BOAT
    [[maybe_unused]] static jobject get_field_BOAT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "BOAT", "field_6121", "BOAT", "f_20552_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#BOAT
    [[maybe_unused]] static void set_field_BOAT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "BOAT", "field_6121", "BOAT", "f_20552_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#BOGGED
    [[maybe_unused]] static jobject get_field_BOGGED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "BOGGED", "field_49148", "BOGGED", "f_316281_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#BOGGED
    [[maybe_unused]] static void set_field_BOGGED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "BOGGED", "field_49148", "BOGGED", "f_316281_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#BREEZE
    [[maybe_unused]] static jobject get_field_BREEZE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "BREEZE", "field_47244", "BREEZE", "f_302782_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#BREEZE
    [[maybe_unused]] static void set_field_BREEZE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "BREEZE", "field_47244", "BREEZE", "f_302782_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#BREEZE_WIND_CHARGE
    [[maybe_unused]] static jobject get_field_BREEZE_WIND_CHARGE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "BREEZE_WIND_CHARGE", "field_49075", "BREEZE_WIND_CHARGE", "f_315936_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#BREEZE_WIND_CHARGE
    [[maybe_unused]] static void set_field_BREEZE_WIND_CHARGE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "BREEZE_WIND_CHARGE", "field_49075", "BREEZE_WIND_CHARGE", "f_315936_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#CAMEL
    [[maybe_unused]] static jobject get_field_CAMEL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "CAMEL", "field_40116", "CAMEL", "f_243976_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#CAMEL
    [[maybe_unused]] static void set_field_CAMEL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "CAMEL", "field_40116", "CAMEL", "f_243976_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#CAT
    [[maybe_unused]] static jobject get_field_CAT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "CAT", "field_16281", "CAT", "f_20553_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#CAT
    [[maybe_unused]] static void set_field_CAT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "CAT", "field_16281", "CAT", "f_20553_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#CAVE_SPIDER
    [[maybe_unused]] static jobject get_field_CAVE_SPIDER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "CAVE_SPIDER", "field_6084", "CAVE_SPIDER", "f_20554_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#CAVE_SPIDER
    [[maybe_unused]] static void set_field_CAVE_SPIDER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "CAVE_SPIDER", "field_6084", "CAVE_SPIDER", "f_20554_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#CHEST_BOAT
    [[maybe_unused]] static jobject get_field_CHEST_BOAT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "CHEST_BOAT", "field_38096", "CHEST_BOAT", "f_217016_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#CHEST_BOAT
    [[maybe_unused]] static void set_field_CHEST_BOAT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "CHEST_BOAT", "field_38096", "CHEST_BOAT", "f_217016_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#CHEST_MINECART
    [[maybe_unused]] static jobject get_field_CHEST_MINECART() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "CHEST_MINECART", "field_6126", "CHEST_MINECART", "f_20470_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#CHEST_MINECART
    [[maybe_unused]] static void set_field_CHEST_MINECART(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "CHEST_MINECART", "field_6126", "CHEST_MINECART", "f_20470_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#CHICKEN
    [[maybe_unused]] static jobject get_field_CHICKEN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "CHICKEN", "field_6132", "CHICKEN", "f_20555_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#CHICKEN
    [[maybe_unused]] static void set_field_CHICKEN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "CHICKEN", "field_6132", "CHICKEN", "f_20555_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#COD
    [[maybe_unused]] static jobject get_field_COD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "COD", "field_6070", "COD", "f_20556_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#COD
    [[maybe_unused]] static void set_field_COD(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "COD", "field_6070", "COD", "f_20556_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#COMMAND_BLOCK_MINECART
    [[maybe_unused]] static jobject get_field_COMMAND_BLOCK_MINECART() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "COMMAND_BLOCK_MINECART", "field_6136", "COMMAND_BLOCK_MINECART", "f_20471_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#COMMAND_BLOCK_MINECART
    [[maybe_unused]] static void set_field_COMMAND_BLOCK_MINECART(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "COMMAND_BLOCK_MINECART", "field_6136", "COMMAND_BLOCK_MINECART", "f_20471_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#COW
    [[maybe_unused]] static jobject get_field_COW() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "COW", "field_6085", "COW", "f_20557_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#COW
    [[maybe_unused]] static void set_field_COW(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "COW", "field_6085", "COW", "f_20557_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#CREEPER
    [[maybe_unused]] static jobject get_field_CREEPER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "CREEPER", "field_6046", "CREEPER", "f_20558_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#CREEPER
    [[maybe_unused]] static void set_field_CREEPER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "CREEPER", "field_6046", "CREEPER", "f_20558_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#DOLPHIN
    [[maybe_unused]] static jobject get_field_DOLPHIN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("y", "DOLPHIN", "field_6087", "DOLPHIN", "f_20559_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#DOLPHIN
    [[maybe_unused]] static void set_field_DOLPHIN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("y", "DOLPHIN", "field_6087", "DOLPHIN", "f_20559_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#DONKEY
    [[maybe_unused]] static jobject get_field_DONKEY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("z", "DONKEY", "field_6067", "DONKEY", "f_20560_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#DONKEY
    [[maybe_unused]] static void set_field_DONKEY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("z", "DONKEY", "field_6067", "DONKEY", "f_20560_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#DRAGON_FIREBALL
    [[maybe_unused]] static jobject get_field_DRAGON_FIREBALL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("A", "DRAGON_FIREBALL", "field_6129", "DRAGON_FIREBALL", "f_20561_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#DRAGON_FIREBALL
    [[maybe_unused]] static void set_field_DRAGON_FIREBALL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("A", "DRAGON_FIREBALL", "field_6129", "DRAGON_FIREBALL", "f_20561_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#DROWNED
    [[maybe_unused]] static jobject get_field_DROWNED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("B", "DROWNED", "field_6123", "DROWNED", "f_20562_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#DROWNED
    [[maybe_unused]] static void set_field_DROWNED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("B", "DROWNED", "field_6123", "DROWNED", "f_20562_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#EGG
    [[maybe_unused]] static jobject get_field_EGG() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("C", "EGG", "field_6144", "EGG", "f_20483_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#EGG
    [[maybe_unused]] static void set_field_EGG(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("C", "EGG", "field_6144", "EGG", "f_20483_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#ELDER_GUARDIAN
    [[maybe_unused]] static jobject get_field_ELDER_GUARDIAN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("D", "ELDER_GUARDIAN", "field_6086", "ELDER_GUARDIAN", "f_20563_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#ELDER_GUARDIAN
    [[maybe_unused]] static void set_field_ELDER_GUARDIAN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("D", "ELDER_GUARDIAN", "field_6086", "ELDER_GUARDIAN", "f_20563_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#END_CRYSTAL
    [[maybe_unused]] static jobject get_field_END_CRYSTAL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("E", "END_CRYSTAL", "field_6110", "END_CRYSTAL", "f_20564_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#END_CRYSTAL
    [[maybe_unused]] static void set_field_END_CRYSTAL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("E", "END_CRYSTAL", "field_6110", "END_CRYSTAL", "f_20564_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#ENDER_DRAGON
    [[maybe_unused]] static jobject get_field_ENDER_DRAGON() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("F", "ENDER_DRAGON", "field_6116", "ENDER_DRAGON", "f_20565_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#ENDER_DRAGON
    [[maybe_unused]] static void set_field_ENDER_DRAGON(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("F", "ENDER_DRAGON", "field_6116", "ENDER_DRAGON", "f_20565_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#ENDER_PEARL
    [[maybe_unused]] static jobject get_field_ENDER_PEARL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("G", "ENDER_PEARL", "field_6082", "ENDER_PEARL", "f_20484_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#ENDER_PEARL
    [[maybe_unused]] static void set_field_ENDER_PEARL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("G", "ENDER_PEARL", "field_6082", "ENDER_PEARL", "f_20484_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#ENDERMAN
    [[maybe_unused]] static jobject get_field_ENDERMAN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("H", "ENDERMAN", "field_6091", "ENDERMAN", "f_20566_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#ENDERMAN
    [[maybe_unused]] static void set_field_ENDERMAN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("H", "ENDERMAN", "field_6091", "ENDERMAN", "f_20566_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#ENDERMITE
    [[maybe_unused]] static jobject get_field_ENDERMITE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("I", "ENDERMITE", "field_6128", "ENDERMITE", "f_20567_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#ENDERMITE
    [[maybe_unused]] static void set_field_ENDERMITE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("I", "ENDERMITE", "field_6128", "ENDERMITE", "f_20567_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#EVOKER
    [[maybe_unused]] static jobject get_field_EVOKER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("J", "EVOKER", "field_6090", "EVOKER", "f_20568_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#EVOKER
    [[maybe_unused]] static void set_field_EVOKER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("J", "EVOKER", "field_6090", "EVOKER", "f_20568_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#EVOKER_FANGS
    [[maybe_unused]] static jobject get_field_EVOKER_FANGS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("K", "EVOKER_FANGS", "field_6060", "EVOKER_FANGS", "f_20569_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#EVOKER_FANGS
    [[maybe_unused]] static void set_field_EVOKER_FANGS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("K", "EVOKER_FANGS", "field_6060", "EVOKER_FANGS", "f_20569_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#EXPERIENCE_BOTTLE
    [[maybe_unused]] static jobject get_field_EXPERIENCE_BOTTLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("L", "EXPERIENCE_BOTTLE", "field_6064", "EXPERIENCE_BOTTLE", "f_20485_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#EXPERIENCE_BOTTLE
    [[maybe_unused]] static void set_field_EXPERIENCE_BOTTLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("L", "EXPERIENCE_BOTTLE", "field_6064", "EXPERIENCE_BOTTLE", "f_20485_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#EXPERIENCE_ORB
    [[maybe_unused]] static jobject get_field_EXPERIENCE_ORB() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("M", "EXPERIENCE_ORB", "field_6044", "EXPERIENCE_ORB", "f_20570_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#EXPERIENCE_ORB
    [[maybe_unused]] static void set_field_EXPERIENCE_ORB(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("M", "EXPERIENCE_ORB", "field_6044", "EXPERIENCE_ORB", "f_20570_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#EYE_OF_ENDER
    [[maybe_unused]] static jobject get_field_EYE_OF_ENDER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("N", "EYE_OF_ENDER", "field_6061", "EYE_OF_ENDER", "f_20571_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#EYE_OF_ENDER
    [[maybe_unused]] static void set_field_EYE_OF_ENDER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("N", "EYE_OF_ENDER", "field_6061", "EYE_OF_ENDER", "f_20571_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#FALLING_BLOCK
    [[maybe_unused]] static jobject get_field_FALLING_BLOCK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("O", "FALLING_BLOCK", "field_6089", "FALLING_BLOCK", "f_20450_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#FALLING_BLOCK
    [[maybe_unused]] static void set_field_FALLING_BLOCK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("O", "FALLING_BLOCK", "field_6089", "FALLING_BLOCK", "f_20450_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#FIREWORK_ROCKET
    [[maybe_unused]] static jobject get_field_FIREWORK_ROCKET() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("P", "FIREWORK_ROCKET", "field_6133", "FIREWORK_ROCKET", "f_20451_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#FIREWORK_ROCKET
    [[maybe_unused]] static void set_field_FIREWORK_ROCKET(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("P", "FIREWORK_ROCKET", "field_6133", "FIREWORK_ROCKET", "f_20451_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#FOX
    [[maybe_unused]] static jobject get_field_FOX() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Q", "FOX", "field_17943", "FOX", "f_20452_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#FOX
    [[maybe_unused]] static void set_field_FOX(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Q", "FOX", "field_17943", "FOX", "f_20452_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#FROG
    [[maybe_unused]] static jobject get_field_FROG() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("R", "FROG", "field_37419", "FROG", "f_217012_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#FROG
    [[maybe_unused]] static void set_field_FROG(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("R", "FROG", "field_37419", "FROG", "f_217012_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#FURNACE_MINECART
    [[maybe_unused]] static jobject get_field_FURNACE_MINECART() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("S", "FURNACE_MINECART", "field_6080", "FURNACE_MINECART", "f_20472_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#FURNACE_MINECART
    [[maybe_unused]] static void set_field_FURNACE_MINECART(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("S", "FURNACE_MINECART", "field_6080", "FURNACE_MINECART", "f_20472_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#GHAST
    [[maybe_unused]] static jobject get_field_GHAST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("T", "GHAST", "field_6107", "GHAST", "f_20453_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#GHAST
    [[maybe_unused]] static void set_field_GHAST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("T", "GHAST", "field_6107", "GHAST", "f_20453_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#GIANT
    [[maybe_unused]] static jobject get_field_GIANT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("U", "GIANT", "field_6095", "GIANT", "f_20454_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#GIANT
    [[maybe_unused]] static void set_field_GIANT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("U", "GIANT", "field_6095", "GIANT", "f_20454_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#GLOW_ITEM_FRAME
    [[maybe_unused]] static jobject get_field_GLOW_ITEM_FRAME() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("V", "GLOW_ITEM_FRAME", "field_28401", "GLOW_ITEM_FRAME", "f_147033_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#GLOW_ITEM_FRAME
    [[maybe_unused]] static void set_field_GLOW_ITEM_FRAME(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("V", "GLOW_ITEM_FRAME", "field_28401", "GLOW_ITEM_FRAME", "f_147033_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#GLOW_SQUID
    [[maybe_unused]] static jobject get_field_GLOW_SQUID() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("W", "GLOW_SQUID", "field_28402", "GLOW_SQUID", "f_147034_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#GLOW_SQUID
    [[maybe_unused]] static void set_field_GLOW_SQUID(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("W", "GLOW_SQUID", "field_28402", "GLOW_SQUID", "f_147034_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#GOAT
    [[maybe_unused]] static jobject get_field_GOAT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("X", "GOAT", "field_30052", "GOAT", "f_147035_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#GOAT
    [[maybe_unused]] static void set_field_GOAT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("X", "GOAT", "field_30052", "GOAT", "f_147035_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#GUARDIAN
    [[maybe_unused]] static jobject get_field_GUARDIAN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Y", "GUARDIAN", "field_6118", "GUARDIAN", "f_20455_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#GUARDIAN
    [[maybe_unused]] static void set_field_GUARDIAN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Y", "GUARDIAN", "field_6118", "GUARDIAN", "f_20455_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#HOGLIN
    [[maybe_unused]] static jobject get_field_HOGLIN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Z", "HOGLIN", "field_21973", "HOGLIN", "f_20456_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#HOGLIN
    [[maybe_unused]] static void set_field_HOGLIN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Z", "HOGLIN", "field_21973", "HOGLIN", "f_20456_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#HOPPER_MINECART
    [[maybe_unused]] static jobject get_field_HOPPER_MINECART() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aa", "HOPPER_MINECART", "field_6058", "HOPPER_MINECART", "f_20473_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#HOPPER_MINECART
    [[maybe_unused]] static void set_field_HOPPER_MINECART(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aa", "HOPPER_MINECART", "field_6058", "HOPPER_MINECART", "f_20473_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#HORSE
    [[maybe_unused]] static jobject get_field_HORSE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ab", "HORSE", "field_6139", "HORSE", "f_20457_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#HORSE
    [[maybe_unused]] static void set_field_HORSE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ab", "HORSE", "field_6139", "HORSE", "f_20457_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#HUSK
    [[maybe_unused]] static jobject get_field_HUSK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ac", "HUSK", "field_6071", "HUSK", "f_20458_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#HUSK
    [[maybe_unused]] static void set_field_HUSK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ac", "HUSK", "field_6071", "HUSK", "f_20458_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#ILLUSIONER
    [[maybe_unused]] static jobject get_field_ILLUSIONER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ad", "ILLUSIONER", "field_6065", "ILLUSIONER", "f_20459_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#ILLUSIONER
    [[maybe_unused]] static void set_field_ILLUSIONER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ad", "ILLUSIONER", "field_6065", "ILLUSIONER", "f_20459_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#INTERACTION
    [[maybe_unused]] static jobject get_field_INTERACTION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ae", "INTERACTION", "field_42623", "INTERACTION", "f_271243_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#INTERACTION
    [[maybe_unused]] static void set_field_INTERACTION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ae", "INTERACTION", "field_42623", "INTERACTION", "f_271243_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#IRON_GOLEM
    [[maybe_unused]] static jobject get_field_IRON_GOLEM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("af", "IRON_GOLEM", "field_6147", "IRON_GOLEM", "f_20460_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#IRON_GOLEM
    [[maybe_unused]] static void set_field_IRON_GOLEM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("af", "IRON_GOLEM", "field_6147", "IRON_GOLEM", "f_20460_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#ITEM
    [[maybe_unused]] static jobject get_field_ITEM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ag", "ITEM", "field_6052", "ITEM", "f_20461_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#ITEM
    [[maybe_unused]] static void set_field_ITEM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ag", "ITEM", "field_6052", "ITEM", "f_20461_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#ITEM_DISPLAY
    [[maybe_unused]] static jobject get_field_ITEM_DISPLAY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ah", "ITEM_DISPLAY", "field_42456", "ITEM_DISPLAY", "f_268643_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#ITEM_DISPLAY
    [[maybe_unused]] static void set_field_ITEM_DISPLAY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ah", "ITEM_DISPLAY", "field_42456", "ITEM_DISPLAY", "f_268643_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#ITEM_FRAME
    [[maybe_unused]] static jobject get_field_ITEM_FRAME() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ai", "ITEM_FRAME", "field_6043", "ITEM_FRAME", "f_20462_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#ITEM_FRAME
    [[maybe_unused]] static void set_field_ITEM_FRAME(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ai", "ITEM_FRAME", "field_6043", "ITEM_FRAME", "f_20462_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#OMINOUS_ITEM_SPAWNER
    [[maybe_unused]] static jobject get_field_OMINOUS_ITEM_SPAWNER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aj", "OMINOUS_ITEM_SPAWNER", "field_50124", "OMINOUS_ITEM_SPAWNER", "f_314497_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#OMINOUS_ITEM_SPAWNER
    [[maybe_unused]] static void set_field_OMINOUS_ITEM_SPAWNER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aj", "OMINOUS_ITEM_SPAWNER", "field_50124", "OMINOUS_ITEM_SPAWNER", "f_314497_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#FIREBALL
    [[maybe_unused]] static jobject get_field_FIREBALL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ak", "FIREBALL", "field_6066", "FIREBALL", "f_20463_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#FIREBALL
    [[maybe_unused]] static void set_field_FIREBALL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ak", "FIREBALL", "field_6066", "FIREBALL", "f_20463_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#LEASH_KNOT
    [[maybe_unused]] static jobject get_field_LEASH_KNOT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("al", "LEASH_KNOT", "field_6138", "LEASH_KNOT", "f_20464_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#LEASH_KNOT
    [[maybe_unused]] static void set_field_LEASH_KNOT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("al", "LEASH_KNOT", "field_6138", "LEASH_KNOT", "f_20464_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#LIGHTNING_BOLT
    [[maybe_unused]] static jobject get_field_LIGHTNING_BOLT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("am", "LIGHTNING_BOLT", "field_6112", "LIGHTNING_BOLT", "f_20465_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#LIGHTNING_BOLT
    [[maybe_unused]] static void set_field_LIGHTNING_BOLT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("am", "LIGHTNING_BOLT", "field_6112", "LIGHTNING_BOLT", "f_20465_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#LLAMA
    [[maybe_unused]] static jobject get_field_LLAMA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("an", "LLAMA", "field_6074", "LLAMA", "f_20466_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#LLAMA
    [[maybe_unused]] static void set_field_LLAMA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("an", "LLAMA", "field_6074", "LLAMA", "f_20466_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#LLAMA_SPIT
    [[maybe_unused]] static jobject get_field_LLAMA_SPIT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ao", "LLAMA_SPIT", "field_6124", "LLAMA_SPIT", "f_20467_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#LLAMA_SPIT
    [[maybe_unused]] static void set_field_LLAMA_SPIT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ao", "LLAMA_SPIT", "field_6124", "LLAMA_SPIT", "f_20467_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#MAGMA_CUBE
    [[maybe_unused]] static jobject get_field_MAGMA_CUBE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ap", "MAGMA_CUBE", "field_6102", "MAGMA_CUBE", "f_20468_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#MAGMA_CUBE
    [[maybe_unused]] static void set_field_MAGMA_CUBE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ap", "MAGMA_CUBE", "field_6102", "MAGMA_CUBE", "f_20468_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#MARKER
    [[maybe_unused]] static jobject get_field_MARKER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aq", "MARKER", "field_33456", "MARKER", "f_147036_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#MARKER
    [[maybe_unused]] static void set_field_MARKER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aq", "MARKER", "field_33456", "MARKER", "f_147036_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#MINECART
    [[maybe_unused]] static jobject get_field_MINECART() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ar", "MINECART", "field_6096", "MINECART", "f_20469_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#MINECART
    [[maybe_unused]] static void set_field_MINECART(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ar", "MINECART", "field_6096", "MINECART", "f_20469_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#MOOSHROOM
    [[maybe_unused]] static jobject get_field_MOOSHROOM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("as", "MOOSHROOM", "field_6143", "MOOSHROOM", "f_20504_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#MOOSHROOM
    [[maybe_unused]] static void set_field_MOOSHROOM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("as", "MOOSHROOM", "field_6143", "MOOSHROOM", "f_20504_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#MULE
    [[maybe_unused]] static jobject get_field_MULE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("at", "MULE", "field_6057", "MULE", "f_20503_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#MULE
    [[maybe_unused]] static void set_field_MULE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("at", "MULE", "field_6057", "MULE", "f_20503_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#OCELOT
    [[maybe_unused]] static jobject get_field_OCELOT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("au", "OCELOT", "field_6081", "OCELOT", "f_20505_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#OCELOT
    [[maybe_unused]] static void set_field_OCELOT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("au", "OCELOT", "field_6081", "OCELOT", "f_20505_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#PAINTING
    [[maybe_unused]] static jobject get_field_PAINTING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("av", "PAINTING", "field_6120", "PAINTING", "f_20506_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#PAINTING
    [[maybe_unused]] static void set_field_PAINTING(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("av", "PAINTING", "field_6120", "PAINTING", "f_20506_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#PANDA
    [[maybe_unused]] static jobject get_field_PANDA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aw", "PANDA", "field_6146", "PANDA", "f_20507_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#PANDA
    [[maybe_unused]] static void set_field_PANDA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aw", "PANDA", "field_6146", "PANDA", "f_20507_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#PARROT
    [[maybe_unused]] static jobject get_field_PARROT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ax", "PARROT", "field_6104", "PARROT", "f_20508_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#PARROT
    [[maybe_unused]] static void set_field_PARROT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ax", "PARROT", "field_6104", "PARROT", "f_20508_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#PHANTOM
    [[maybe_unused]] static jobject get_field_PHANTOM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ay", "PHANTOM", "field_6078", "PHANTOM", "f_20509_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#PHANTOM
    [[maybe_unused]] static void set_field_PHANTOM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ay", "PHANTOM", "field_6078", "PHANTOM", "f_20509_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#PIG
    [[maybe_unused]] static jobject get_field_PIG() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("az", "PIG", "field_6093", "PIG", "f_20510_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#PIG
    [[maybe_unused]] static void set_field_PIG(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("az", "PIG", "field_6093", "PIG", "f_20510_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#PIGLIN
    [[maybe_unused]] static jobject get_field_PIGLIN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aA", "PIGLIN", "field_22281", "PIGLIN", "f_20511_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#PIGLIN
    [[maybe_unused]] static void set_field_PIGLIN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aA", "PIGLIN", "field_22281", "PIGLIN", "f_20511_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#PIGLIN_BRUTE
    [[maybe_unused]] static jobject get_field_PIGLIN_BRUTE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aB", "PIGLIN_BRUTE", "field_25751", "PIGLIN_BRUTE", "f_20512_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#PIGLIN_BRUTE
    [[maybe_unused]] static void set_field_PIGLIN_BRUTE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aB", "PIGLIN_BRUTE", "field_25751", "PIGLIN_BRUTE", "f_20512_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#PILLAGER
    [[maybe_unused]] static jobject get_field_PILLAGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aC", "PILLAGER", "field_6105", "PILLAGER", "f_20513_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#PILLAGER
    [[maybe_unused]] static void set_field_PILLAGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aC", "PILLAGER", "field_6105", "PILLAGER", "f_20513_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#POLAR_BEAR
    [[maybe_unused]] static jobject get_field_POLAR_BEAR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aD", "POLAR_BEAR", "field_6042", "POLAR_BEAR", "f_20514_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#POLAR_BEAR
    [[maybe_unused]] static void set_field_POLAR_BEAR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aD", "POLAR_BEAR", "field_6042", "POLAR_BEAR", "f_20514_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#POTION
    [[maybe_unused]] static jobject get_field_POTION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aE", "POTION", "field_6045", "POTION", "f_20486_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#POTION
    [[maybe_unused]] static void set_field_POTION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aE", "POTION", "field_6045", "POTION", "f_20486_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#PUFFERFISH
    [[maybe_unused]] static jobject get_field_PUFFERFISH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aF", "PUFFERFISH", "field_6062", "PUFFERFISH", "f_20516_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#PUFFERFISH
    [[maybe_unused]] static void set_field_PUFFERFISH(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aF", "PUFFERFISH", "field_6062", "PUFFERFISH", "f_20516_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#RABBIT
    [[maybe_unused]] static jobject get_field_RABBIT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aG", "RABBIT", "field_6140", "RABBIT", "f_20517_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#RABBIT
    [[maybe_unused]] static void set_field_RABBIT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aG", "RABBIT", "field_6140", "RABBIT", "f_20517_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#RAVAGER
    [[maybe_unused]] static jobject get_field_RAVAGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aH", "RAVAGER", "field_6134", "RAVAGER", "f_20518_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#RAVAGER
    [[maybe_unused]] static void set_field_RAVAGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aH", "RAVAGER", "field_6134", "RAVAGER", "f_20518_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#SALMON
    [[maybe_unused]] static jobject get_field_SALMON() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aI", "SALMON", "field_6073", "SALMON", "f_20519_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#SALMON
    [[maybe_unused]] static void set_field_SALMON(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aI", "SALMON", "field_6073", "SALMON", "f_20519_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#SHEEP
    [[maybe_unused]] static jobject get_field_SHEEP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aJ", "SHEEP", "field_6115", "SHEEP", "f_20520_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#SHEEP
    [[maybe_unused]] static void set_field_SHEEP(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aJ", "SHEEP", "field_6115", "SHEEP", "f_20520_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#SHULKER
    [[maybe_unused]] static jobject get_field_SHULKER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aK", "SHULKER", "field_6109", "SHULKER", "f_20521_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#SHULKER
    [[maybe_unused]] static void set_field_SHULKER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aK", "SHULKER", "field_6109", "SHULKER", "f_20521_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#SHULKER_BULLET
    [[maybe_unused]] static jobject get_field_SHULKER_BULLET() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aL", "SHULKER_BULLET", "field_6100", "SHULKER_BULLET", "f_20522_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#SHULKER_BULLET
    [[maybe_unused]] static void set_field_SHULKER_BULLET(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aL", "SHULKER_BULLET", "field_6100", "SHULKER_BULLET", "f_20522_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#SILVERFISH
    [[maybe_unused]] static jobject get_field_SILVERFISH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aM", "SILVERFISH", "field_6125", "SILVERFISH", "f_20523_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#SILVERFISH
    [[maybe_unused]] static void set_field_SILVERFISH(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aM", "SILVERFISH", "field_6125", "SILVERFISH", "f_20523_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#SKELETON
    [[maybe_unused]] static jobject get_field_SKELETON() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aN", "SKELETON", "field_6137", "SKELETON", "f_20524_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#SKELETON
    [[maybe_unused]] static void set_field_SKELETON(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aN", "SKELETON", "field_6137", "SKELETON", "f_20524_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#SKELETON_HORSE
    [[maybe_unused]] static jobject get_field_SKELETON_HORSE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aO", "SKELETON_HORSE", "field_6075", "SKELETON_HORSE", "f_20525_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#SKELETON_HORSE
    [[maybe_unused]] static void set_field_SKELETON_HORSE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aO", "SKELETON_HORSE", "field_6075", "SKELETON_HORSE", "f_20525_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#SLIME
    [[maybe_unused]] static jobject get_field_SLIME() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aP", "SLIME", "field_6069", "SLIME", "f_20526_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#SLIME
    [[maybe_unused]] static void set_field_SLIME(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aP", "SLIME", "field_6069", "SLIME", "f_20526_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#SMALL_FIREBALL
    [[maybe_unused]] static jobject get_field_SMALL_FIREBALL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aQ", "SMALL_FIREBALL", "field_6049", "SMALL_FIREBALL", "f_20527_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#SMALL_FIREBALL
    [[maybe_unused]] static void set_field_SMALL_FIREBALL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aQ", "SMALL_FIREBALL", "field_6049", "SMALL_FIREBALL", "f_20527_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#SNIFFER
    [[maybe_unused]] static jobject get_field_SNIFFER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aR", "SNIFFER", "field_42622", "SNIFFER", "f_271264_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#SNIFFER
    [[maybe_unused]] static void set_field_SNIFFER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aR", "SNIFFER", "field_42622", "SNIFFER", "f_271264_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#SNOW_GOLEM
    [[maybe_unused]] static jobject get_field_SNOW_GOLEM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aS", "SNOW_GOLEM", "field_6047", "SNOW_GOLEM", "f_20528_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#SNOW_GOLEM
    [[maybe_unused]] static void set_field_SNOW_GOLEM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aS", "SNOW_GOLEM", "field_6047", "SNOW_GOLEM", "f_20528_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#SNOWBALL
    [[maybe_unused]] static jobject get_field_SNOWBALL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aT", "SNOWBALL", "field_6068", "SNOWBALL", "f_20477_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#SNOWBALL
    [[maybe_unused]] static void set_field_SNOWBALL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aT", "SNOWBALL", "field_6068", "SNOWBALL", "f_20477_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#SPAWNER_MINECART
    [[maybe_unused]] static jobject get_field_SPAWNER_MINECART() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aU", "SPAWNER_MINECART", "field_6142", "SPAWNER_MINECART", "f_20474_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#SPAWNER_MINECART
    [[maybe_unused]] static void set_field_SPAWNER_MINECART(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aU", "SPAWNER_MINECART", "field_6142", "SPAWNER_MINECART", "f_20474_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#SPECTRAL_ARROW
    [[maybe_unused]] static jobject get_field_SPECTRAL_ARROW() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aV", "SPECTRAL_ARROW", "field_6135", "SPECTRAL_ARROW", "f_20478_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#SPECTRAL_ARROW
    [[maybe_unused]] static void set_field_SPECTRAL_ARROW(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aV", "SPECTRAL_ARROW", "field_6135", "SPECTRAL_ARROW", "f_20478_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#SPIDER
    [[maybe_unused]] static jobject get_field_SPIDER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aW", "SPIDER", "field_6079", "SPIDER", "f_20479_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#SPIDER
    [[maybe_unused]] static void set_field_SPIDER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aW", "SPIDER", "field_6079", "SPIDER", "f_20479_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#SQUID
    [[maybe_unused]] static jobject get_field_SQUID() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aX", "SQUID", "field_6114", "SQUID", "f_20480_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#SQUID
    [[maybe_unused]] static void set_field_SQUID(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aX", "SQUID", "field_6114", "SQUID", "f_20480_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#STRAY
    [[maybe_unused]] static jobject get_field_STRAY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aY", "STRAY", "field_6098", "STRAY", "f_20481_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#STRAY
    [[maybe_unused]] static void set_field_STRAY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aY", "STRAY", "field_6098", "STRAY", "f_20481_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#STRIDER
    [[maybe_unused]] static jobject get_field_STRIDER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aZ", "STRIDER", "field_23214", "STRIDER", "f_20482_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#STRIDER
    [[maybe_unused]] static void set_field_STRIDER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aZ", "STRIDER", "field_23214", "STRIDER", "f_20482_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#TADPOLE
    [[maybe_unused]] static jobject get_field_TADPOLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ba", "TADPOLE", "field_37420", "TADPOLE", "f_217013_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#TADPOLE
    [[maybe_unused]] static void set_field_TADPOLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ba", "TADPOLE", "field_37420", "TADPOLE", "f_217013_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#TEXT_DISPLAY
    [[maybe_unused]] static jobject get_field_TEXT_DISPLAY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bb", "TEXT_DISPLAY", "field_42457", "TEXT_DISPLAY", "f_268607_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#TEXT_DISPLAY
    [[maybe_unused]] static void set_field_TEXT_DISPLAY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bb", "TEXT_DISPLAY", "field_42457", "TEXT_DISPLAY", "f_268607_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#TNT
    [[maybe_unused]] static jobject get_field_TNT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bc", "TNT", "field_6063", "TNT", "f_20515_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#TNT
    [[maybe_unused]] static void set_field_TNT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bc", "TNT", "field_6063", "TNT", "f_20515_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#TNT_MINECART
    [[maybe_unused]] static jobject get_field_TNT_MINECART() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bd", "TNT_MINECART", "field_6053", "TNT_MINECART", "f_20475_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#TNT_MINECART
    [[maybe_unused]] static void set_field_TNT_MINECART(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bd", "TNT_MINECART", "field_6053", "TNT_MINECART", "f_20475_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#TRADER_LLAMA
    [[maybe_unused]] static jobject get_field_TRADER_LLAMA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("be", "TRADER_LLAMA", "field_17714", "TRADER_LLAMA", "f_20488_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#TRADER_LLAMA
    [[maybe_unused]] static void set_field_TRADER_LLAMA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("be", "TRADER_LLAMA", "field_17714", "TRADER_LLAMA", "f_20488_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#TRIDENT
    [[maybe_unused]] static jobject get_field_TRIDENT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bf", "TRIDENT", "field_6127", "TRIDENT", "f_20487_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#TRIDENT
    [[maybe_unused]] static void set_field_TRIDENT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bf", "TRIDENT", "field_6127", "TRIDENT", "f_20487_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#TROPICAL_FISH
    [[maybe_unused]] static jobject get_field_TROPICAL_FISH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bg", "TROPICAL_FISH", "field_6111", "TROPICAL_FISH", "f_20489_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#TROPICAL_FISH
    [[maybe_unused]] static void set_field_TROPICAL_FISH(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bg", "TROPICAL_FISH", "field_6111", "TROPICAL_FISH", "f_20489_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#TURTLE
    [[maybe_unused]] static jobject get_field_TURTLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bh", "TURTLE", "field_6113", "TURTLE", "f_20490_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#TURTLE
    [[maybe_unused]] static void set_field_TURTLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bh", "TURTLE", "field_6113", "TURTLE", "f_20490_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#VEX
    [[maybe_unused]] static jobject get_field_VEX() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bi", "VEX", "field_6059", "VEX", "f_20491_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#VEX
    [[maybe_unused]] static void set_field_VEX(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bi", "VEX", "field_6059", "VEX", "f_20491_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#VILLAGER
    [[maybe_unused]] static jobject get_field_VILLAGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bj", "VILLAGER", "field_6077", "VILLAGER", "f_20492_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#VILLAGER
    [[maybe_unused]] static void set_field_VILLAGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bj", "VILLAGER", "field_6077", "VILLAGER", "f_20492_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#VINDICATOR
    [[maybe_unused]] static jobject get_field_VINDICATOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bk", "VINDICATOR", "field_6117", "VINDICATOR", "f_20493_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#VINDICATOR
    [[maybe_unused]] static void set_field_VINDICATOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bk", "VINDICATOR", "field_6117", "VINDICATOR", "f_20493_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#WANDERING_TRADER
    [[maybe_unused]] static jobject get_field_WANDERING_TRADER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bl", "WANDERING_TRADER", "field_17713", "WANDERING_TRADER", "f_20494_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#WANDERING_TRADER
    [[maybe_unused]] static void set_field_WANDERING_TRADER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bl", "WANDERING_TRADER", "field_17713", "WANDERING_TRADER", "f_20494_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#WARDEN
    [[maybe_unused]] static jobject get_field_WARDEN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bm", "WARDEN", "field_38095", "WARDEN", "f_217015_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#WARDEN
    [[maybe_unused]] static void set_field_WARDEN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bm", "WARDEN", "field_38095", "WARDEN", "f_217015_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#WIND_CHARGE
    [[maybe_unused]] static jobject get_field_WIND_CHARGE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bn", "WIND_CHARGE", "field_47243", "WIND_CHARGE", "f_303421_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#WIND_CHARGE
    [[maybe_unused]] static void set_field_WIND_CHARGE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bn", "WIND_CHARGE", "field_47243", "WIND_CHARGE", "f_303421_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#WITCH
    [[maybe_unused]] static jobject get_field_WITCH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bo", "WITCH", "field_6145", "WITCH", "f_20495_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#WITCH
    [[maybe_unused]] static void set_field_WITCH(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bo", "WITCH", "field_6145", "WITCH", "f_20495_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#WITHER
    [[maybe_unused]] static jobject get_field_WITHER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bp", "WITHER", "field_6119", "WITHER", "f_20496_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#WITHER
    [[maybe_unused]] static void set_field_WITHER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bp", "WITHER", "field_6119", "WITHER", "f_20496_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#WITHER_SKELETON
    [[maybe_unused]] static jobject get_field_WITHER_SKELETON() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bq", "WITHER_SKELETON", "field_6076", "WITHER_SKELETON", "f_20497_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#WITHER_SKELETON
    [[maybe_unused]] static void set_field_WITHER_SKELETON(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bq", "WITHER_SKELETON", "field_6076", "WITHER_SKELETON", "f_20497_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#WITHER_SKULL
    [[maybe_unused]] static jobject get_field_WITHER_SKULL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("br", "WITHER_SKULL", "field_6130", "WITHER_SKULL", "f_20498_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#WITHER_SKULL
    [[maybe_unused]] static void set_field_WITHER_SKULL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("br", "WITHER_SKULL", "field_6130", "WITHER_SKULL", "f_20498_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#WOLF
    [[maybe_unused]] static jobject get_field_WOLF() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bs", "WOLF", "field_6055", "WOLF", "f_20499_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#WOLF
    [[maybe_unused]] static void set_field_WOLF(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bs", "WOLF", "field_6055", "WOLF", "f_20499_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#ZOGLIN
    [[maybe_unused]] static jobject get_field_ZOGLIN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bt", "ZOGLIN", "field_23696", "ZOGLIN", "f_20500_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#ZOGLIN
    [[maybe_unused]] static void set_field_ZOGLIN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bt", "ZOGLIN", "field_23696", "ZOGLIN", "f_20500_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#ZOMBIE
    [[maybe_unused]] static jobject get_field_ZOMBIE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bu", "ZOMBIE", "field_6051", "ZOMBIE", "f_20501_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#ZOMBIE
    [[maybe_unused]] static void set_field_ZOMBIE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bu", "ZOMBIE", "field_6051", "ZOMBIE", "f_20501_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#ZOMBIE_HORSE
    [[maybe_unused]] static jobject get_field_ZOMBIE_HORSE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bv", "ZOMBIE_HORSE", "field_6048", "ZOMBIE_HORSE", "f_20502_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#ZOMBIE_HORSE
    [[maybe_unused]] static void set_field_ZOMBIE_HORSE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bv", "ZOMBIE_HORSE", "field_6048", "ZOMBIE_HORSE", "f_20502_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#ZOMBIE_VILLAGER
    [[maybe_unused]] static jobject get_field_ZOMBIE_VILLAGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bw", "ZOMBIE_VILLAGER", "field_6054", "ZOMBIE_VILLAGER", "f_20530_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#ZOMBIE_VILLAGER
    [[maybe_unused]] static void set_field_ZOMBIE_VILLAGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bw", "ZOMBIE_VILLAGER", "field_6054", "ZOMBIE_VILLAGER", "f_20530_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#ZOMBIFIED_PIGLIN
    [[maybe_unused]] static jobject get_field_ZOMBIFIED_PIGLIN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bx", "ZOMBIFIED_PIGLIN", "field_6050", "ZOMBIFIED_PIGLIN", "f_20531_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#ZOMBIFIED_PIGLIN
    [[maybe_unused]] static void set_field_ZOMBIFIED_PIGLIN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bx", "ZOMBIFIED_PIGLIN", "field_6050", "ZOMBIFIED_PIGLIN", "f_20531_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#PLAYER
    [[maybe_unused]] static jobject get_field_PLAYER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("by", "PLAYER", "field_6097", "PLAYER", "f_20532_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#PLAYER
    [[maybe_unused]] static void set_field_PLAYER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("by", "PLAYER", "field_6097", "PLAYER", "f_20532_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.EntityType#FISHING_BOBBER
    [[maybe_unused]] static jobject get_field_FISHING_BOBBER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bz", "FISHING_BOBBER", "field_6103", "FISHING_BOBBER", "f_20533_"), "Lbsx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.EntityType#FISHING_BOBBER
    [[maybe_unused]] static void set_field_FISHING_BOBBER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bz", "FISHING_BOBBER", "field_6103", "FISHING_BOBBER", "f_20533_"), "Lbsx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.entity.EntityType#factory
    static jobject get_field_factory(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bF", "factory", "field_6101", "factory", "f_20535_"), "Lbsx$b;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.EntityType#factory
    static void set_field_factory(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bF", "factory", "field_6101", "factory", "f_20535_"), "Lbsx$b;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.EntityType#spawnGroup
    static jobject get_field_spawnGroup(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bG", "category", "field_6094", "spawnGroup", "f_20536_"), "Lbtq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.EntityType#spawnGroup
    static void set_field_spawnGroup(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bG", "category", "field_6094", "spawnGroup", "f_20536_"), "Lbtq;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.EntityType#canSpawnInside
    static jobject get_field_canSpawnInside(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bH", "immuneTo", "field_25355", "canSpawnInside", "f_20537_"), "Lcom/google/common/collect/ImmutableSet;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.EntityType#canSpawnInside
    static void set_field_canSpawnInside(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bH", "immuneTo", "field_25355", "canSpawnInside", "f_20537_"), "Lcom/google/common/collect/ImmutableSet;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.EntityType#saveable
    static jboolean get_field_saveable(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bI", "serialize", "field_6056", "saveable", "f_20538_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.EntityType#saveable
    static void set_field_saveable(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bI", "serialize", "field_6056", "saveable", "f_20538_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.EntityType#summonable
    static jboolean get_field_summonable(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bJ", "summon", "field_6072", "summonable", "f_20539_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.EntityType#summonable
    static void set_field_summonable(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bJ", "summon", "field_6072", "summonable", "f_20539_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.EntityType#fireImmune
    static jboolean get_field_fireImmune(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bK", "fireImmune", "field_18981", "fireImmune", "f_20540_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.EntityType#fireImmune
    static void set_field_fireImmune(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bK", "fireImmune", "field_18981", "fireImmune", "f_20540_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.EntityType#spawnableFarFromPlayer
    static jboolean get_field_spawnableFarFromPlayer(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bL", "canSpawnFarFromPlayer", "field_19423", "spawnableFarFromPlayer", "f_20541_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.EntityType#spawnableFarFromPlayer
    static void set_field_spawnableFarFromPlayer(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bL", "canSpawnFarFromPlayer", "field_19423", "spawnableFarFromPlayer", "f_20541_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.EntityType#maxTrackDistance
    static jint get_field_maxTrackDistance(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bM", "clientTrackingRange", "field_24085", "maxTrackDistance", "f_20542_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.EntityType#maxTrackDistance
    static void set_field_maxTrackDistance(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bM", "clientTrackingRange", "field_24085", "maxTrackDistance", "f_20542_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.EntityType#trackTickInterval
    static jint get_field_trackTickInterval(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bN", "updateInterval", "field_24086", "trackTickInterval", "f_20543_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.EntityType#trackTickInterval
    static void set_field_trackTickInterval(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bN", "updateInterval", "field_24086", "trackTickInterval", "f_20543_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.EntityType#translationKey
    static jobject get_field_translationKey(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bO", "descriptionId", "field_6106", "translationKey", "f_20544_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.EntityType#translationKey
    static void set_field_translationKey(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bO", "descriptionId", "field_6106", "translationKey", "f_20544_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.EntityType#name
    static jobject get_field_name(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bP", "description", "field_6092", "name", "f_20545_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.EntityType#name
    static void set_field_name(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bP", "description", "field_6092", "name", "f_20545_"), "Lwz;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.EntityType#lootTableId
    static jobject get_field_lootTableId(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bQ", "lootTable", "field_16526", "lootTableId", "f_20546_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.EntityType#lootTableId
    static void set_field_lootTableId(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bQ", "lootTable", "field_16526", "lootTableId", "f_20546_"), "Lakq;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.EntityType#dimensions
    static jobject get_field_dimensions(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bR", "dimensions", "field_18070", "dimensions", "f_20547_"), "Lbsu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.EntityType#dimensions
    static void set_field_dimensions(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bR", "dimensions", "field_18070", "dimensions", "f_20547_"), "Lbsu;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.EntityType#spawnBoxScale
    static jfloat get_field_spawnBoxScale(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bS", "spawnDimensionsScale", "field_50125", "spawnBoxScale", "f_316324_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.EntityType#spawnBoxScale
    static void set_field_spawnBoxScale(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bS", "spawnDimensionsScale", "field_50125", "spawnBoxScale", "f_316324_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.EntityType#requiredFeatures
    static jobject get_field_requiredFeatures(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bT", "requiredFeatures", "field_40115", "requiredFeatures", "f_244139_"), "Lcpl;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.EntityType#requiredFeatures
    static void set_field_requiredFeatures(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bT", "requiredFeatures", "field_40115", "requiredFeatures", "f_244139_"), "Lcpl;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_register() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "register", "method_5895", "register", "m_20634_"), "(Ljava/lang/String;Lbsx$a;)Lbsx;");
    }

    static jobject register(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_register();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getId() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getKey", "method_5890", "getId", "m_20613_"), "(Lbsx;)Lakr;");
    }

    static jobject getId(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getId();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_get() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "byString", "method_5898", "get", "m_20632_"), "(Ljava/lang/String;)Ljava/util/Optional;");
    }

    static jobject get(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_get();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_spawnFromItemStack() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "spawn", "method_5894", "spawnFromItemStack", "m_20592_"), "(Laqu;Lcuq;Lcmx;Ljd;Lbtr;ZZ)Lbsr;");
    }

    static jobject spawnFromItemStack(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jobject& arg4, const jboolean& arg5, const jboolean& arg6) {
                
       const auto methodID = methodID_spawnFromItemStack();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6);
    };
    
    static jmethodID methodID_copier() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "createDefaultStackConfig", "method_48009", "copier", "m_263562_"), "(Laqu;Lcuq;Lcmx;)Ljava/util/function/Consumer;");
    }

    static jobject copier(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_copier();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID__copier() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "appendDefaultStackConfig", "method_48156", "copier", "m_264081_"), "(Ljava/util/function/Consumer;Laqu;Lcuq;Lcmx;)Ljava/util/function/Consumer;");
    }

    static jobject _copier(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
       const auto clazz = self();
       const auto methodID = methodID__copier();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_customNameCopier() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "appendCustomNameConfig", "method_48012", "customNameCopier", "m_263556_"), "(Ljava/util/function/Consumer;Lcuq;)Ljava/util/function/Consumer;");
    }

    static jobject customNameCopier(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_customNameCopier();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_nbtCopier() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "appendCustomEntityStackConfig", "method_48011", "nbtCopier", "m_263559_"), "(Ljava/util/function/Consumer;Laqu;Lcuq;Lcmx;)Ljava/util/function/Consumer;");
    }

    static jobject nbtCopier(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_nbtCopier();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_spawn() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "spawn", "method_47821", "spawn", "m_262496_"), "(Laqu;Ljd;Lbtr;)Lbsr;");
    }

    static jobject spawn(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_spawn();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID__spawn() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "spawn", "method_5899", "spawn", "m_262455_"), "(Laqu;Ljava/util/function/Consumer;Ljd;Lbtr;ZZ)Lbsr;");
    }

    static jobject _spawn(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jboolean& arg4, const jboolean& arg5) {
                
       const auto methodID = methodID__spawn();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5);
    };
    
    static jmethodID methodID_create() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "create", "method_5888", "create", "m_262451_"), "(Laqu;Ljava/util/function/Consumer;Ljd;Lbtr;ZZ)Lbsr;");
    }

    static jobject create(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jboolean& arg4, const jboolean& arg5) {
                
       const auto methodID = methodID_create();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5);
    };
    
    static jmethodID methodID_getOriginY() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getYOffset", "method_5884", "getOriginY", "m_20625_"), "(Ldcz;Ljd;ZLewx;)D");
    }

    static jdouble getOriginY(const jobject& arg0, const jobject& arg1, const jboolean& arg2, const jobject& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_getOriginY();
       return MinecraftSDK::env->CallStaticDoubleMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_loadFromEntityNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "updateCustomEntityTag", "method_5881", "loadFromEntityNbt", "m_20620_"), "(Ldcw;Lcmx;Lbsr;Lcxh;)V");
    }

    static void loadFromEntityNbt(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_loadFromEntityNbt();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_isSaveable() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "canSerialize", "method_5893", "isSaveable", "m_20584_"), "()Z");
    }

    static jboolean isSaveable(const jobject& obj) {
                
       const auto methodID = methodID_isSaveable();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isSummonable() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "canSummon", "method_5896", "isSummonable", "m_20654_"), "()Z");
    }

    static jboolean isSummonable(const jobject& obj) {
                
       const auto methodID = methodID_isSummonable();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isFireImmune() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "fireImmune", "method_19946", "isFireImmune", "m_20672_"), "()Z");
    }

    static jboolean isFireImmune(const jobject& obj) {
                
       const auto methodID = methodID_isFireImmune();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isSpawnableFarFromPlayer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "canSpawnFarFromPlayer", "method_20814", "isSpawnableFarFromPlayer", "m_20673_"), "()Z");
    }

    static jboolean isSpawnableFarFromPlayer(const jobject& obj) {
                
       const auto methodID = methodID_isSpawnableFarFromPlayer();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getSpawnGroup() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "getCategory", "method_5891", "getSpawnGroup", "m_20674_"), "()Lbtq;");
    }

    static jobject getSpawnGroup(const jobject& obj) {
                
       const auto methodID = methodID_getSpawnGroup();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getTranslationKey() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "getDescriptionId", "method_5882", "getTranslationKey", "m_20675_"), "()Ljava/lang/String;");
    }

    static jobject getTranslationKey(const jobject& obj) {
                
       const auto methodID = methodID_getTranslationKey();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getName() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "getDescription", "method_5897", "getName", "m_20676_"), "()Lwz;");
    }

    static jobject getName(const jobject& obj) {
                
       const auto methodID = methodID_getName();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getUntranslatedName() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("j", "toShortString", "method_35050", "getUntranslatedName", "m_147048_"), "()Ljava/lang/String;");
    }

    static jobject getUntranslatedName(const jobject& obj) {
                
       const auto methodID = methodID_getUntranslatedName();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getLootTableId() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("k", "getDefaultLootTable", "method_16351", "getLootTableId", "m_20677_"), "()Lakq;");
    }

    static jobject getLootTableId(const jobject& obj) {
                
       const auto methodID = methodID_getLootTableId();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getWidth() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("l", "getWidth", "method_17685", "getWidth", "m_20678_"), "()F");
    }

    static jfloat getWidth(const jobject& obj) {
                
       const auto methodID = methodID_getWidth();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID_getHeight() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("m", "getHeight", "method_17686", "getHeight", "m_20679_"), "()F");
    }

    static jfloat getHeight(const jobject& obj) {
                
       const auto methodID = methodID_getHeight();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID_getRequiredFeatures() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("i", "requiredFeatures", "method_45322", "getRequiredFeatures", "m_245183_"), "()Lcpl;");
    }

    static jobject getRequiredFeatures(const jobject& obj) {
                
       const auto methodID = methodID_getRequiredFeatures();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__create() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "create", "method_5883", "create", "m_20615_"), "(Ldcw;)Lbsr;");
    }

    static jobject _create(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__create();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getEntityFromNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "create", "method_5892", "getEntityFromNbt", "m_20642_"), "(Lub;Ldcw;)Ljava/util/Optional;");
    }

    static jobject getEntityFromNbt(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_getEntityFromNbt();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getSpawnBox() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getSpawnAABB", "method_58629", "getSpawnBox", "m_319702_"), "(DDD)Lewx;");
    }

    static jobject getSpawnBox(const jobject& obj, const jdouble& arg0, const jdouble& arg1, const jdouble& arg2) {
                
       const auto methodID = methodID_getSpawnBox();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_isInvalidSpawn() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "isBlockDangerous", "method_29496", "isInvalidSpawn", "m_20630_"), "(Ldtc;)Z");
    }

    static jboolean isInvalidSpawn(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_isInvalidSpawn();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getDimensions() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("n", "getDimensions", "method_18386", "getDimensions", "m_20680_"), "()Lbsu;");
    }

    static jobject getDimensions(const jobject& obj) {
                
       const auto methodID = methodID_getDimensions();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_fromNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "by", "method_17684", "fromNbt", "m_20637_"), "(Lub;)Ljava/util/Optional;");
    }

    static jobject fromNbt(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_fromNbt();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_loadEntityWithPassengers() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "loadEntityRecursive", "method_17842", "loadEntityWithPassengers", "m_20645_"), "(Lub;Ldcw;Ljava/util/function/Function;)Lbsr;");
    }

    static jobject loadEntityWithPassengers(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_loadEntityWithPassengers();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_streamFromNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "loadEntitiesRecursive", "method_31489", "streamFromNbt", "m_147045_"), "(Ljava/util/List;Ldcw;)Ljava/util/stream/Stream;");
    }

    static jobject streamFromNbt(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_streamFromNbt();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_loadEntityFromNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "loadStaticEntity", "method_17848", "loadEntityFromNbt", "m_20669_"), "(Lub;Ldcw;)Ljava/util/Optional;");
    }

    static jobject loadEntityFromNbt(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_loadEntityFromNbt();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getMaxTrackDistance() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("o", "clientTrackingRange", "method_18387", "getMaxTrackDistance", "m_20681_"), "()I");
    }

    static jint getMaxTrackDistance(const jobject& obj) {
                
       const auto methodID = methodID_getMaxTrackDistance();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getTrackTickInterval() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("p", "updateInterval", "method_18388", "getTrackTickInterval", "m_20682_"), "()I");
    }

    static jint getTrackTickInterval(const jobject& obj) {
                
       const auto methodID = methodID_getTrackTickInterval();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_alwaysUpdateVelocity() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("q", "trackDeltas", "method_18389", "alwaysUpdateVelocity", "m_20683_"), "()Z");
    }

    static jboolean alwaysUpdateVelocity(const jobject& obj) {
                
       const auto methodID = methodID_alwaysUpdateVelocity();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isIn() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "is", "method_20210", "isIn", "m_204039_"), "(Lawu;)Z");
    }

    static jboolean isIn(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_isIn();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__isIn() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "is", "method_53125", "isIn", "m_293227_"), "(Ljq;)Z");
    }

    static jboolean _isIn(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__isIn();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_downcast() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "tryCast", "method_31488", "downcast", "m_141992_"), "(Lbsr;)Lbsr;");
    }

    static jobject downcast(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_downcast();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getBaseClass() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getBaseClass", "method_31794", "getBaseClass", "m_142225_"), "()Ljava/lang/Class;");
    }

    static jobject getBaseClass(const jobject& obj) {
                
       const auto methodID = methodID_getBaseClass();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getRegistryEntry() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("r", "builtInRegistryHolder", "method_40124", "getRegistryEntry", "m_204041_"), "()Ljm$c;");
    }

    static jobject getRegistryEntry(const jobject& obj) {
                
       const auto methodID = methodID_getRegistryEntry();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_ENTITY_ENTITYTYPE_HPP