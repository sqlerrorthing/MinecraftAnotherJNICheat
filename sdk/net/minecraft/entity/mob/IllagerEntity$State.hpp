// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ENTITY_MOB_ILLAGERENTITY$STATE_HPP
#define NET_MINECRAFT_ENTITY_MOB_ILLAGERENTITY$STATE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.entity.mob.IllagerEntity$State
 * Remapped: cjk$a
 */
namespace IllagerEntity$State {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("cjk$a", "net/minecraft/world/entity/monster/AbstractIllager$IllagerArmPose", "net/minecraft/class_1543$class_1544", "net/minecraft/entity/mob/IllagerEntity$State", "net/minecraft/src/C_978_$C_979_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.entity.mob.IllagerEntity$State#CROSSED
    [[maybe_unused]] static jobject get_field_CROSSED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CROSSED", "field_7207", "CROSSED", "CROSSED"), "Lcjk$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.mob.IllagerEntity$State#CROSSED
    [[maybe_unused]] static void set_field_CROSSED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CROSSED", "field_7207", "CROSSED", "CROSSED"), "Lcjk$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.mob.IllagerEntity$State#ATTACKING
    [[maybe_unused]] static jobject get_field_ATTACKING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "ATTACKING", "field_7211", "ATTACKING", "ATTACKING"), "Lcjk$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.mob.IllagerEntity$State#ATTACKING
    [[maybe_unused]] static void set_field_ATTACKING(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "ATTACKING", "field_7211", "ATTACKING", "ATTACKING"), "Lcjk$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.mob.IllagerEntity$State#SPELLCASTING
    [[maybe_unused]] static jobject get_field_SPELLCASTING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "SPELLCASTING", "field_7212", "SPELLCASTING", "SPELLCASTING"), "Lcjk$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.mob.IllagerEntity$State#SPELLCASTING
    [[maybe_unused]] static void set_field_SPELLCASTING(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "SPELLCASTING", "field_7212", "SPELLCASTING", "SPELLCASTING"), "Lcjk$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.mob.IllagerEntity$State#BOW_AND_ARROW
    [[maybe_unused]] static jobject get_field_BOW_AND_ARROW() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "BOW_AND_ARROW", "field_7208", "BOW_AND_ARROW", "BOW_AND_ARROW"), "Lcjk$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.mob.IllagerEntity$State#BOW_AND_ARROW
    [[maybe_unused]] static void set_field_BOW_AND_ARROW(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "BOW_AND_ARROW", "field_7208", "BOW_AND_ARROW", "BOW_AND_ARROW"), "Lcjk$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.mob.IllagerEntity$State#CROSSBOW_HOLD
    [[maybe_unused]] static jobject get_field_CROSSBOW_HOLD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "CROSSBOW_HOLD", "field_7213", "CROSSBOW_HOLD", "CROSSBOW_HOLD"), "Lcjk$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.mob.IllagerEntity$State#CROSSBOW_HOLD
    [[maybe_unused]] static void set_field_CROSSBOW_HOLD(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "CROSSBOW_HOLD", "field_7213", "CROSSBOW_HOLD", "CROSSBOW_HOLD"), "Lcjk$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.mob.IllagerEntity$State#CROSSBOW_CHARGE
    [[maybe_unused]] static jobject get_field_CROSSBOW_CHARGE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "CROSSBOW_CHARGE", "field_7210", "CROSSBOW_CHARGE", "CROSSBOW_CHARGE"), "Lcjk$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.mob.IllagerEntity$State#CROSSBOW_CHARGE
    [[maybe_unused]] static void set_field_CROSSBOW_CHARGE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "CROSSBOW_CHARGE", "field_7210", "CROSSBOW_CHARGE", "CROSSBOW_CHARGE"), "Lcjk$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.mob.IllagerEntity$State#CELEBRATING
    [[maybe_unused]] static jobject get_field_CELEBRATING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "CELEBRATING", "field_19012", "CELEBRATING", "CELEBRATING"), "Lcjk$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.mob.IllagerEntity$State#CELEBRATING
    [[maybe_unused]] static void set_field_CELEBRATING(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "CELEBRATING", "field_19012", "CELEBRATING", "CELEBRATING"), "Lcjk$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.mob.IllagerEntity$State#NEUTRAL
    [[maybe_unused]] static jobject get_field_NEUTRAL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "NEUTRAL", "field_21512", "NEUTRAL", "NEUTRAL"), "Lcjk$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.mob.IllagerEntity$State#NEUTRAL
    [[maybe_unused]] static void set_field_NEUTRAL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "NEUTRAL", "field_21512", "NEUTRAL", "NEUTRAL"), "Lcjk$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_values() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("values", "values", "values", "values", "values"), "()[Lcjk$a;");
    }

    static jobject values() {
       const auto clazz = self();
       const auto methodID = methodID_values();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_valueOf() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("valueOf", "valueOf", "valueOf", "valueOf", "valueOf"), "(Ljava/lang/String;)Lcjk$a;");
    }

    static jobject valueOf(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_valueOf();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_ENTITY_MOB_ILLAGERENTITY$STATE_HPP