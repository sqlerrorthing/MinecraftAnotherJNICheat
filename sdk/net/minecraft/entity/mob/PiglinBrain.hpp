// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ENTITY_MOB_PIGLINBRAIN_HPP
#define NET_MINECRAFT_ENTITY_MOB_PIGLINBRAIN_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.entity.mob.PiglinBrain
 * Remapped: clo
 */
namespace PiglinBrain {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("clo", "net/minecraft/world/entity/monster/piglin/PiglinAi", "net/minecraft/class_4838", "net/minecraft/entity/mob/PiglinBrain", "net/minecraft/src/C_1102_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.entity.mob.PiglinBrain#field_30565
    [[maybe_unused]] static jint get_field_field_30565() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "REPELLENT_DETECTION_RANGE_HORIZONTAL", "field_30565", "field_30565", "f_149940_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.mob.PiglinBrain#field_30565
    [[maybe_unused]] static void set_field_field_30565(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "REPELLENT_DETECTION_RANGE_HORIZONTAL", "field_30565", "field_30565", "f_149940_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.mob.PiglinBrain#field_30566
    [[maybe_unused]] static jint get_field_field_30566() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "REPELLENT_DETECTION_RANGE_VERTICAL", "field_30566", "field_30566", "f_149941_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.mob.PiglinBrain#field_30566
    [[maybe_unused]] static void set_field_field_30566(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "REPELLENT_DETECTION_RANGE_VERTICAL", "field_30566", "field_30566", "f_149941_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.mob.PiglinBrain#BARTERING_ITEM
    [[maybe_unused]] static jobject get_field_BARTERING_ITEM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "BARTERING_ITEM", "field_23826", "BARTERING_ITEM", "f_34794_"), "Lcul;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.mob.PiglinBrain#BARTERING_ITEM
    [[maybe_unused]] static void set_field_BARTERING_ITEM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "BARTERING_ITEM", "field_23826", "BARTERING_ITEM", "f_34794_"), "Lcul;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.mob.PiglinBrain#field_30567
    [[maybe_unused]] static jint get_field_field_30567() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "PLAYER_ANGER_RANGE", "field_30567", "field_30567", "f_149942_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.PiglinBrain#field_30567
    [[maybe_unused]] static void set_field_field_30567(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "PLAYER_ANGER_RANGE", "field_30567", "field_30567", "f_149942_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.mob.PiglinBrain#field_30568
    [[maybe_unused]] static jint get_field_field_30568() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "ANGER_DURATION", "field_30568", "field_30568", "f_149943_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.PiglinBrain#field_30568
    [[maybe_unused]] static void set_field_field_30568(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "ANGER_DURATION", "field_30568", "field_30568", "f_149943_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.mob.PiglinBrain#field_30569
    [[maybe_unused]] static jint get_field_field_30569() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "ADMIRE_DURATION", "field_30569", "field_30569", "f_149944_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.PiglinBrain#field_30569
    [[maybe_unused]] static void set_field_field_30569(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "ADMIRE_DURATION", "field_30569", "field_30569", "f_149944_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.mob.PiglinBrain#field_30570
    [[maybe_unused]] static jint get_field_field_30570() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "MAX_DISTANCE_TO_WALK_TO_ITEM", "field_30570", "field_30570", "f_149945_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.PiglinBrain#field_30570
    [[maybe_unused]] static void set_field_field_30570(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "MAX_DISTANCE_TO_WALK_TO_ITEM", "field_30570", "field_30570", "f_149945_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.mob.PiglinBrain#field_30571
    [[maybe_unused]] static jint get_field_field_30571() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "MAX_TIME_TO_WALK_TO_ITEM", "field_30571", "field_30571", "f_149946_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.PiglinBrain#field_30571
    [[maybe_unused]] static void set_field_field_30571(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "MAX_TIME_TO_WALK_TO_ITEM", "field_30571", "field_30571", "f_149946_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.mob.PiglinBrain#field_30572
    [[maybe_unused]] static jint get_field_field_30572() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "HOW_LONG_TIME_TO_DISABLE_ADMIRE_WALKING_IF_CANT_REACH_ITEM", "field_30572", "field_30572", "f_149947_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.PiglinBrain#field_30572
    [[maybe_unused]] static void set_field_field_30572(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "HOW_LONG_TIME_TO_DISABLE_ADMIRE_WALKING_IF_CANT_REACH_ITEM", "field_30572", "field_30572", "f_149947_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.mob.PiglinBrain#field_30573
    [[maybe_unused]] static jint get_field_field_30573() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "CELEBRATION_TIME", "field_30573", "field_30573", "f_149948_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.PiglinBrain#field_30573
    [[maybe_unused]] static void set_field_field_30573(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "CELEBRATION_TIME", "field_30573", "field_30573", "f_149948_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static protected field net.minecraft.entity.mob.PiglinBrain#HUNT_MEMORY_DURATION
    [[maybe_unused]] static jobject get_field_HUNT_MEMORY_DURATION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "TIME_BETWEEN_HUNTS", "field_22388", "HUNT_MEMORY_DURATION", "f_34795_"), "Lbqc;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static protected field net.minecraft.entity.mob.PiglinBrain#HUNT_MEMORY_DURATION
    [[maybe_unused]] static void set_field_HUNT_MEMORY_DURATION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "TIME_BETWEEN_HUNTS", "field_22388", "HUNT_MEMORY_DURATION", "f_34795_"), "Lbqc;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.mob.PiglinBrain#AVOID_TARGET_EXPIRY
    [[maybe_unused]] static jint get_field_AVOID_TARGET_EXPIRY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "BABY_FLEE_DURATION_AFTER_GETTING_HIT", "field_30574", "AVOID_TARGET_EXPIRY", "f_149949_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.PiglinBrain#AVOID_TARGET_EXPIRY
    [[maybe_unused]] static void set_field_AVOID_TARGET_EXPIRY(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "BABY_FLEE_DURATION_AFTER_GETTING_HIT", "field_30574", "AVOID_TARGET_EXPIRY", "f_149949_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.mob.PiglinBrain#ADMIRING_DISABLED_EXPIRY
    [[maybe_unused]] static jint get_field_ADMIRING_DISABLED_EXPIRY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "HIT_BY_PLAYER_MEMORY_TIMEOUT", "field_30575", "ADMIRING_DISABLED_EXPIRY", "f_149950_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.PiglinBrain#ADMIRING_DISABLED_EXPIRY
    [[maybe_unused]] static void set_field_ADMIRING_DISABLED_EXPIRY(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "HIT_BY_PLAYER_MEMORY_TIMEOUT", "field_30575", "ADMIRING_DISABLED_EXPIRY", "f_149950_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.mob.PiglinBrain#field_30576
    [[maybe_unused]] static jint get_field_field_30576() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "MAX_WALK_DISTANCE_TO_START_RIDING", "field_30576", "field_30576", "f_149951_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.PiglinBrain#field_30576
    [[maybe_unused]] static void set_field_field_30576(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "MAX_WALK_DISTANCE_TO_START_RIDING", "field_30576", "field_30576", "f_149951_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.mob.PiglinBrain#MEMORY_TRANSFER_TASK_DURATION
    [[maybe_unused]] static jobject get_field_MEMORY_TRANSFER_TASK_DURATION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "RIDE_START_INTERVAL", "field_22389", "MEMORY_TRANSFER_TASK_DURATION", "f_34796_"), "Lbqc;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.PiglinBrain#MEMORY_TRANSFER_TASK_DURATION
    [[maybe_unused]] static void set_field_MEMORY_TRANSFER_TASK_DURATION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "RIDE_START_INTERVAL", "field_22389", "MEMORY_TRANSFER_TASK_DURATION", "f_34796_"), "Lbqc;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.mob.PiglinBrain#RIDE_TARGET_MEMORY_DURATION
    [[maybe_unused]] static jobject get_field_RIDE_TARGET_MEMORY_DURATION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "RIDE_DURATION", "field_22390", "RIDE_TARGET_MEMORY_DURATION", "f_34797_"), "Lbqc;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.PiglinBrain#RIDE_TARGET_MEMORY_DURATION
    [[maybe_unused]] static void set_field_RIDE_TARGET_MEMORY_DURATION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "RIDE_DURATION", "field_22390", "RIDE_TARGET_MEMORY_DURATION", "f_34797_"), "Lbqc;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.mob.PiglinBrain#AVOID_MEMORY_DURATION
    [[maybe_unused]] static jobject get_field_AVOID_MEMORY_DURATION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "RETREAT_DURATION", "field_22391", "AVOID_MEMORY_DURATION", "f_34798_"), "Lbqc;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.PiglinBrain#AVOID_MEMORY_DURATION
    [[maybe_unused]] static void set_field_AVOID_MEMORY_DURATION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "RETREAT_DURATION", "field_22391", "AVOID_MEMORY_DURATION", "f_34798_"), "Lbqc;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.mob.PiglinBrain#field_30577
    [[maybe_unused]] static jint get_field_field_30577() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "MELEE_ATTACK_COOLDOWN", "field_30577", "field_30577", "f_149952_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.PiglinBrain#field_30577
    [[maybe_unused]] static void set_field_field_30577(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "MELEE_ATTACK_COOLDOWN", "field_30577", "field_30577", "f_149952_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.mob.PiglinBrain#field_30578
    [[maybe_unused]] static jint get_field_field_30578() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "EAT_COOLDOWN", "field_30578", "field_30578", "f_149953_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.PiglinBrain#field_30578
    [[maybe_unused]] static void set_field_field_30578(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "EAT_COOLDOWN", "field_30578", "field_30578", "f_149953_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.mob.PiglinBrain#field_30579
    [[maybe_unused]] static jint get_field_field_30579() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "DESIRED_DISTANCE_FROM_ENTITY_WHEN_AVOIDING", "field_30579", "field_30579", "f_149954_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.PiglinBrain#field_30579
    [[maybe_unused]] static void set_field_field_30579(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "DESIRED_DISTANCE_FROM_ENTITY_WHEN_AVOIDING", "field_30579", "field_30579", "f_149954_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.mob.PiglinBrain#field_30580
    [[maybe_unused]] static jint get_field_field_30580() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "MAX_LOOK_DIST", "field_30580", "field_30580", "f_149955_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.PiglinBrain#field_30580
    [[maybe_unused]] static void set_field_field_30580(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "MAX_LOOK_DIST", "field_30580", "field_30580", "f_149955_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.mob.PiglinBrain#field_30581
    [[maybe_unused]] static jint get_field_field_30581() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "MAX_LOOK_DIST_FOR_PLAYER_HOLDING_LOVED_ITEM", "field_30581", "field_30581", "f_149956_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.PiglinBrain#field_30581
    [[maybe_unused]] static void set_field_field_30581(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "MAX_LOOK_DIST_FOR_PLAYER_HOLDING_LOVED_ITEM", "field_30581", "field_30581", "f_149956_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.mob.PiglinBrain#field_30582
    [[maybe_unused]] static jint get_field_field_30582() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "INTERACTION_RANGE", "field_30582", "field_30582", "f_149957_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.PiglinBrain#field_30582
    [[maybe_unused]] static void set_field_field_30582(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "INTERACTION_RANGE", "field_30582", "field_30582", "f_149957_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.mob.PiglinBrain#field_30583
    [[maybe_unused]] static jint get_field_field_30583() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "MIN_DESIRED_DIST_FROM_TARGET_WHEN_HOLDING_CROSSBOW", "field_30583", "field_30583", "f_149958_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.PiglinBrain#field_30583
    [[maybe_unused]] static void set_field_field_30583(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "MIN_DESIRED_DIST_FROM_TARGET_WHEN_HOLDING_CROSSBOW", "field_30583", "field_30583", "f_149958_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.mob.PiglinBrain#CROSSBOW_ATTACK_FORWARD_MOVEMENT
    [[maybe_unused]] static jfloat get_field_CROSSBOW_ATTACK_FORWARD_MOVEMENT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("y", "SPEED_WHEN_STRAFING_BACK_FROM_TARGET", "field_30584", "CROSSBOW_ATTACK_FORWARD_MOVEMENT", "f_149959_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.PiglinBrain#CROSSBOW_ATTACK_FORWARD_MOVEMENT
    [[maybe_unused]] static void set_field_CROSSBOW_ATTACK_FORWARD_MOVEMENT(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("y", "SPEED_WHEN_STRAFING_BACK_FROM_TARGET", "field_30584", "CROSSBOW_ATTACK_FORWARD_MOVEMENT", "f_149959_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.mob.PiglinBrain#field_30585
    [[maybe_unused]] static jint get_field_field_30585() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("z", "DESIRED_DISTANCE_FROM_ZOMBIFIED", "field_30585", "field_30585", "f_149960_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.PiglinBrain#field_30585
    [[maybe_unused]] static void set_field_field_30585(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("z", "DESIRED_DISTANCE_FROM_ZOMBIFIED", "field_30585", "field_30585", "f_149960_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.mob.PiglinBrain#GO_TO_ZOMBIFIED_MEMORY_DURATION
    [[maybe_unused]] static jobject get_field_GO_TO_ZOMBIFIED_MEMORY_DURATION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("A", "AVOID_ZOMBIFIED_DURATION", "field_25384", "GO_TO_ZOMBIFIED_MEMORY_DURATION", "f_34799_"), "Lbqc;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.PiglinBrain#GO_TO_ZOMBIFIED_MEMORY_DURATION
    [[maybe_unused]] static void set_field_GO_TO_ZOMBIFIED_MEMORY_DURATION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("A", "AVOID_ZOMBIFIED_DURATION", "field_25384", "GO_TO_ZOMBIFIED_MEMORY_DURATION", "f_34799_"), "Lbqc;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.mob.PiglinBrain#GO_TO_NEMESIS_MEMORY_DURATION
    [[maybe_unused]] static jobject get_field_GO_TO_NEMESIS_MEMORY_DURATION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("B", "BABY_AVOID_NEMESIS_DURATION", "field_25698", "GO_TO_NEMESIS_MEMORY_DURATION", "f_34800_"), "Lbqc;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.PiglinBrain#GO_TO_NEMESIS_MEMORY_DURATION
    [[maybe_unused]] static void set_field_GO_TO_NEMESIS_MEMORY_DURATION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("B", "BABY_AVOID_NEMESIS_DURATION", "field_25698", "GO_TO_NEMESIS_MEMORY_DURATION", "f_34800_"), "Lbqc;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.mob.PiglinBrain#field_30557
    [[maybe_unused]] static jfloat get_field_field_30557() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("C", "PROBABILITY_OF_CELEBRATION_DANCE", "field_30557", "field_30557", "f_149932_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.PiglinBrain#field_30557
    [[maybe_unused]] static void set_field_field_30557(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("C", "PROBABILITY_OF_CELEBRATION_DANCE", "field_30557", "field_30557", "f_149932_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.mob.PiglinBrain#field_30558
    [[maybe_unused]] static jfloat get_field_field_30558() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("D", "SPEED_MULTIPLIER_WHEN_AVOIDING", "field_30558", "field_30558", "f_149933_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.PiglinBrain#field_30558
    [[maybe_unused]] static void set_field_field_30558(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("D", "SPEED_MULTIPLIER_WHEN_AVOIDING", "field_30558", "field_30558", "f_149933_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.mob.PiglinBrain#field_30559
    [[maybe_unused]] static jfloat get_field_field_30559() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("E", "SPEED_MULTIPLIER_WHEN_RETREATING", "field_30559", "field_30559", "f_149934_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.PiglinBrain#field_30559
    [[maybe_unused]] static void set_field_field_30559(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("E", "SPEED_MULTIPLIER_WHEN_RETREATING", "field_30559", "field_30559", "f_149934_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.mob.PiglinBrain#START_RIDING_SPEED
    [[maybe_unused]] static jfloat get_field_START_RIDING_SPEED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("F", "SPEED_MULTIPLIER_WHEN_MOUNTING", "field_30560", "START_RIDING_SPEED", "f_149935_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.PiglinBrain#START_RIDING_SPEED
    [[maybe_unused]] static void set_field_START_RIDING_SPEED(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("F", "SPEED_MULTIPLIER_WHEN_MOUNTING", "field_30560", "START_RIDING_SPEED", "f_149935_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.mob.PiglinBrain#field_30561
    [[maybe_unused]] static jfloat get_field_field_30561() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("G", "SPEED_MULTIPLIER_WHEN_GOING_TO_WANTED_ITEM", "field_30561", "field_30561", "f_149936_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.PiglinBrain#field_30561
    [[maybe_unused]] static void set_field_field_30561(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("G", "SPEED_MULTIPLIER_WHEN_GOING_TO_WANTED_ITEM", "field_30561", "field_30561", "f_149936_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.mob.PiglinBrain#field_30562
    [[maybe_unused]] static jfloat get_field_field_30562() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("H", "SPEED_MULTIPLIER_WHEN_GOING_TO_CELEBRATE_LOCATION", "field_30562", "field_30562", "f_149937_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.PiglinBrain#field_30562
    [[maybe_unused]] static void set_field_field_30562(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("H", "SPEED_MULTIPLIER_WHEN_GOING_TO_CELEBRATE_LOCATION", "field_30562", "field_30562", "f_149937_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.mob.PiglinBrain#field_30563
    [[maybe_unused]] static jfloat get_field_field_30563() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("I", "SPEED_MULTIPLIER_WHEN_DANCING", "field_30563", "field_30563", "f_149938_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.PiglinBrain#field_30563
    [[maybe_unused]] static void set_field_field_30563(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("I", "SPEED_MULTIPLIER_WHEN_DANCING", "field_30563", "field_30563", "f_149938_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.mob.PiglinBrain#field_30564
    [[maybe_unused]] static jfloat get_field_field_30564() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("J", "SPEED_MULTIPLIER_WHEN_IDLING", "field_30564", "field_30564", "f_149939_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.PiglinBrain#field_30564
    [[maybe_unused]] static void set_field_field_30564(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("J", "SPEED_MULTIPLIER_WHEN_IDLING", "field_30564", "field_30564", "f_149939_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    static jmethodID methodID_create() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "makeBrain", "method_24732", "create", "m_34840_"), "(Lcln;Lbuq;)Lbuq;");
    }

    static jobject create(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_create();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_setHuntedRecently() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "initMemories", "method_24736", "setHuntedRecently", "m_219205_"), "(Lcln;Layw;)V");
    }

    static void setHuntedRecently(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_setHuntedRecently();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_addCoreActivities() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "initCoreActivity", "method_24725", "addCoreActivities", "m_34820_"), "(Lbuq;)V");
    }

    static void addCoreActivities(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_addCoreActivities();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_addIdleActivities() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "initIdleActivity", "method_24743", "addIdleActivities", "m_34891_"), "(Lbuq;)V");
    }

    static void addIdleActivities(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_addIdleActivities();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_addFightActivities() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "initFightActivity", "method_24751", "addFightActivities", "m_34903_"), "(Lcln;Lbuq;)V");
    }

    static void addFightActivities(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_addFightActivities();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_addCelebrateActivities() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "initCelebrateActivity", "method_24756", "addCelebrateActivities", "m_34920_"), "(Lbuq;)V");
    }

    static void addCelebrateActivities(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_addCelebrateActivities();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_addAdmireItemActivities() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("d", "initAdmireItemActivity", "method_24760", "addAdmireItemActivities", "m_34940_"), "(Lbuq;)V");
    }

    static void addAdmireItemActivities(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_addAdmireItemActivities();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_addAvoidActivities() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("e", "initRetreatActivity", "method_24764", "addAvoidActivities", "m_34958_"), "(Lbuq;)V");
    }

    static void addAvoidActivities(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_addAvoidActivities();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_addRideActivities() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("f", "initRideHoglinActivity", "method_24768", "addRideActivities", "m_34973_"), "(Lbuq;)V");
    }

    static void addRideActivities(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_addRideActivities();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_makeFollowTasks() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "createLookBehaviors", "method_47272", "makeFollowTasks", "m_257792_"), "()Lcom/google/common/collect/ImmutableList;");
    }

    static jobject makeFollowTasks() {
       const auto clazz = self();
       const auto methodID = methodID_makeFollowTasks();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_makeRandomFollowTask() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "createIdleLookBehaviors", "method_24717", "makeRandomFollowTask", "m_34805_"), "()Lbxe;");
    }

    static jobject makeRandomFollowTask() {
       const auto clazz = self();
       const auto methodID = methodID_makeRandomFollowTask();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_makeRandomWanderTask() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "createIdleMovementBehaviors", "method_24718", "makeRandomWanderTask", "m_34882_"), "()Lbxe;");
    }

    static jobject makeRandomWanderTask() {
       const auto clazz = self();
       const auto methodID = methodID_makeRandomWanderTask();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_makeGoToSoulFireTask() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("d", "avoidRepellent", "method_24738", "makeGoToSoulFireTask", "m_257691_"), "()Lbvi;");
    }

    static jobject makeGoToSoulFireTask() {
       const auto clazz = self();
       const auto methodID = methodID_makeGoToSoulFireTask();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_goToNemesisTask() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("e", "babyAvoidNemesis", "method_30090", "goToNemesisTask", "m_257417_"), "()Lbvi;");
    }

    static jobject goToNemesisTask() {
       const auto clazz = self();
       const auto methodID = methodID_goToNemesisTask();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_makeFleeFromZombifiedPiglinTask() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("f", "avoidZombified", "method_24747", "makeFleeFromZombifiedPiglinTask", "m_257731_"), "()Lbvi;");
    }

    static jobject makeFleeFromZombifiedPiglinTask() {
       const auto clazz = self();
       const auto methodID = methodID_makeFleeFromZombifiedPiglinTask();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_tickActivities() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "updateActivity", "method_24722", "tickActivities", "m_34898_"), "(Lcln;)V");
    }

    static void tickActivities(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_tickActivities();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_canRideHoglin() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("f", "isBabyRidingBaby", "method_29277", "canRideHoglin", "m_34992_"), "(Lcln;)Z");
    }

    static jboolean canRideHoglin(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_canRideHoglin();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_loot() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "pickUpItem", "method_24726", "loot", "m_34843_"), "(Lcln;Lcjh;)V");
    }

    static void loot(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_loot();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_swapItemWithOffHand() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "holdInOffhand", "method_30089", "swapItemWithOffHand", "m_34932_"), "(Lcln;Lcuq;)V");
    }

    static void swapItemWithOffHand(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_swapItemWithOffHand();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getItemFromStack() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "removeOneItemFromItemEntity", "method_24848", "getItemFromStack", "m_34822_"), "(Lcjh;)Lcuq;");
    }

    static jobject getItemFromStack(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getItemFromStack();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_consumeOffHandItem() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "stopHoldingOffHandItem", "method_24741", "consumeOffHandItem", "m_34867_"), "(Lcln;Z)V");
    }

    static void consumeOffHandItem(const jobject& arg0, const jboolean& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_consumeOffHandItem();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_pickupItemWithOffHand() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "cancelAdmiring", "method_25948", "pickupItemWithOffHand", "m_34927_"), "(Lcln;)V");
    }

    static void pickupItemWithOffHand(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_pickupItemWithOffHand();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_barterItem() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("d", "putInInventory", "method_24849", "barterItem", "m_34952_"), "(Lcln;Lcuq;)V");
    }

    static void barterItem(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_barterItem();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_doBarter() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "throwItems", "method_24772", "doBarter", "m_34860_"), "(Lcln;Ljava/util/List;)V");
    }

    static void doBarter(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_doBarter();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_dropBarteredItem() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "throwItemsTowardRandomPos", "method_24774", "dropBarteredItem", "m_34912_"), "(Lcln;Ljava/util/List;)V");
    }

    static void dropBarteredItem(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_dropBarteredItem();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__dropBarteredItem() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "throwItemsTowardPlayer", "method_24727", "dropBarteredItem", "m_34850_"), "(Lcln;Lcmx;Ljava/util/List;)V");
    }

    static void _dropBarteredItem(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID__dropBarteredItem();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_drop() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "throwItemsTowardPos", "method_24731", "drop", "m_34863_"), "(Lcln;Ljava/util/List;Lexc;)V");
    }

    static void drop(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_drop();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_getBarteredItem() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("g", "getBarterResponseItems", "method_24776", "getBarteredItem", "m_34996_"), "(Lcln;)Ljava/util/List;");
    }

    static jobject getBarteredItem(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getBarteredItem();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_isHuntingTarget() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "wantsToDance", "method_29276", "isHuntingTarget", "m_34810_"), "(Lbtn;Lbtn;)Z");
    }

    static jboolean isHuntingTarget(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_isHuntingTarget();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_canGather() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "wantsToPickup", "method_24730", "canGather", "m_34857_"), "(Lcln;Lcuq;)Z");
    }

    static jboolean canGather(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_canGather();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_isGoldenItem() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "isLovedItem", "method_24735", "isGoldenItem", "m_149965_"), "(Lcuq;)Z");
    }

    static jboolean isGoldenItem(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_isGoldenItem();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_canRide() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "wantsToStopRiding", "method_24723", "canRide", "m_34834_"), "(Lcln;Lbsr;)Z");
    }

    static jboolean canRide(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_canRide();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_isPreferredAttackTarget() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "isNearestValidAttackTarget", "method_24755", "isPreferredAttackTarget", "m_34900_"), "(Lcln;Lbtn;)Z");
    }

    static jboolean isPreferredAttackTarget(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_isPreferredAttackTarget();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getNearestZombifiedPiglin() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("h", "isNearZombified", "method_29537", "getNearestZombifiedPiglin", "m_34998_"), "(Lcln;)Z");
    }

    static jboolean getNearestZombifiedPiglin(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getNearestZombifiedPiglin();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getPreferredTarget() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("i", "findNearestValidAttackTarget", "method_24777", "getPreferredTarget", "m_35000_"), "(Lcln;)Ljava/util/Optional;");
    }

    static jobject getPreferredTarget(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getPreferredTarget();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_onGuardedBlockInteracted() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "angerNearbyPiglins", "method_24733", "onGuardedBlockInteracted", "m_34873_"), "(Lcmx;Z)V");
    }

    static void onGuardedBlockInteracted(const jobject& arg0, const jboolean& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_onGuardedBlockInteracted();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_playerInteract() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "mobInteract", "method_24728", "playerInteract", "m_34846_"), "(Lcln;Lcmx;Lbqq;)Lbqr;");
    }

    static jobject playerInteract(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_playerInteract();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_isWillingToTrade() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "canAdmire", "method_27086", "isWillingToTrade", "m_34909_"), "(Lcln;Lcuq;)Z");
    }

    static jboolean isWillingToTrade(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_isWillingToTrade();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_onAttacked() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "wasHurtBy", "method_24724", "onAttacked", "m_34837_"), "(Lcln;Lbtn;)V");
    }

    static void onAttacked(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_onAttacked();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_tryRevenge() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "maybeRetaliate", "method_24759", "tryRevenge", "m_34826_"), "(Lclm;Lbtn;)V");
    }

    static void tryRevenge(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_tryRevenge();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getCurrentActivitySound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "getSoundForCurrentActivity", "method_30091", "getCurrentActivitySound", "m_34947_"), "(Lcln;)Ljava/util/Optional;");
    }

    static jobject getCurrentActivitySound(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getCurrentActivitySound();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getSoundForActivity", "method_30087", "getSound", "m_34854_"), "(Lcln;Lcom;)Lavo;");
    }

    static jobject getSound(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_getSound();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_hasTargetToAvoid() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("j", "isNearAvoidTarget", "method_29538", "hasTargetToAvoid", "m_35002_"), "(Lcln;)Z");
    }

    static jboolean hasTargetToAvoid(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_hasTargetToAvoid();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getNearbyVisiblePiglins() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("d", "getVisibleAdultPiglins", "method_24780", "getNearbyVisiblePiglins", "m_35004_"), "(Lcln;)Ljava/util/List;");
    }

    static jobject getNearbyVisiblePiglins(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getNearbyVisiblePiglins();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getNearbyPiglins() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("e", "getAdultPiglins", "method_26350", "getNearbyPiglins", "m_34960_"), "(Lclm;)Ljava/util/List;");
    }

    static jobject getNearbyPiglins(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getNearbyPiglins();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_wearsGoldArmor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "isWearingGold", "method_24719", "wearsGoldArmor", "m_34808_"), "(Lbtn;)Z");
    }

    static jboolean wearsGoldArmor(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_wearsGoldArmor();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_stopWalking() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("k", "stopWalking", "method_24781", "stopWalking", "m_35006_"), "(Lcln;)V");
    }

    static void stopWalking(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_stopWalking();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_makeRememberRideableHoglinTask() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("g", "babySometimesRideBabyHoglin", "method_24737", "makeRememberRideableHoglinTask", "m_257528_"), "()Lbvi;");
    }

    static jobject makeRememberRideableHoglinTask() {
       const auto clazz = self();
       const auto methodID = methodID_makeRememberRideableHoglinTask();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_angerAtCloserTargets() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "broadcastAngerTarget", "method_24742", "angerAtCloserTargets", "m_34895_"), "(Lclm;Lbtn;)V");
    }

    static void angerAtCloserTargets(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_angerAtCloserTargets();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_angerNearbyPiglins() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "broadcastUniversalAnger", "method_29945", "angerNearbyPiglins", "m_34824_"), "(Lclm;)V");
    }

    static void angerNearbyPiglins(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_angerNearbyPiglins();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_becomeAngryWith() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "setAngerTarget", "method_24750", "becomeAngryWith", "m_34924_"), "(Lclm;Lbtn;)V");
    }

    static void becomeAngryWith(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_becomeAngryWith();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_becomeAngryWithPlayer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("d", "setAngerTargetToNearestTargetablePlayerIfFound", "method_29946", "becomeAngryWithPlayer", "m_34944_"), "(Lclm;Lbtn;)V");
    }

    static void becomeAngryWithPlayer(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_becomeAngryWithPlayer();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_angerAtIfCloser() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("e", "setAngerTargetIfCloserThanCurrent", "method_24763", "angerAtIfCloser", "m_34962_"), "(Lclm;Lbtn;)V");
    }

    static void angerAtIfCloser(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_angerAtIfCloser();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getAngryAt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("f", "getAngerTarget", "method_24782", "getAngryAt", "m_34975_"), "(Lclm;)Ljava/util/Optional;");
    }

    static jobject getAngryAt(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getAngryAt();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getAvoiding() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("e", "getAvoidTarget", "method_29536", "getAvoiding", "m_34986_"), "(Lcln;)Ljava/util/Optional;");
    }

    static jobject getAvoiding(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getAvoiding();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getNearestDetectedPlayer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "getNearestVisibleTargetablePlayer", "method_29947", "getNearestDetectedPlayer", "m_34893_"), "(Lclm;)Ljava/util/Optional;");
    }

    static jobject getNearestDetectedPlayer(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getNearestDetectedPlayer();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_groupRunAwayFrom() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "broadcastRetreat", "method_24767", "groupRunAwayFrom", "m_34929_"), "(Lcln;Lbtn;)V");
    }

    static void groupRunAwayFrom(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_groupRunAwayFrom();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_runAwayFromClosestTarget() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("d", "retreatFromNearestTarget", "method_24771", "runAwayFromClosestTarget", "m_34949_"), "(Lcln;Lbtn;)V");
    }

    static void runAwayFromClosestTarget(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_runAwayFromClosestTarget();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_shouldRunAwayFromHoglins() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("l", "wantsToStopFleeing", "method_24783", "shouldRunAwayFromHoglins", "m_35008_"), "(Lcln;)Z");
    }

    static jboolean shouldRunAwayFromHoglins(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_shouldRunAwayFromHoglins();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_hasNoAdvantageAgainstHoglins() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("m", "piglinsEqualOrOutnumberHoglins", "method_24784", "hasNoAdvantageAgainstHoglins", "m_35010_"), "(Lcln;)Z");
    }

    static jboolean hasNoAdvantageAgainstHoglins(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_hasNoAdvantageAgainstHoglins();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_hasOutnumberedHoglins() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("n", "hoglinsOutnumberPiglins", "method_24785", "hasOutnumberedHoglins", "m_35012_"), "(Lcln;)Z");
    }

    static jboolean hasOutnumberedHoglins(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_hasOutnumberedHoglins();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_runAwayFrom() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("e", "setAvoidTargetAndDontHuntForAWhile", "method_24773", "runAwayFrom", "m_34967_"), "(Lcln;Lbtn;)V");
    }

    static void runAwayFrom(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_runAwayFrom();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_rememberHunting() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "dontKillAnyMoreHoglinsForAWhile", "method_24762", "rememberHunting", "m_34922_"), "(Lclm;)V");
    }

    static void rememberHunting(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_rememberHunting();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_setEatenRecently() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("o", "eat", "method_24787", "setEatenRecently", "m_35014_"), "(Lcln;)V");
    }

    static void setEatenRecently(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_setEatenRecently();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_findGround() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("p", "getRandomNearbyPos", "method_24788", "findGround", "m_35016_"), "(Lcln;)Lexc;");
    }

    static jobject findGround(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_findGround();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_hasAteRecently() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("q", "hasEatenRecently", "method_24789", "hasAteRecently", "m_35018_"), "(Lcln;)Z");
    }

    static jboolean hasAteRecently(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_hasAteRecently();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_hasIdleActivity() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("d", "isIdle", "method_24766", "hasIdleActivity", "m_34942_"), "(Lclm;)Z");
    }

    static jboolean hasIdleActivity(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_hasIdleActivity();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_isHoldingCrossbow() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "hasCrossbow", "method_24748", "isHoldingCrossbow", "m_34918_"), "(Lbtn;)Z");
    }

    static jboolean isHoldingCrossbow(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_isHoldingCrossbow();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_setAdmiringItem() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("d", "admireGoldItem", "method_24753", "setAdmiringItem", "m_34938_"), "(Lbtn;)V");
    }

    static void setAdmiringItem(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_setAdmiringItem();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_isAdmiringItem() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("r", "isAdmiringItem", "method_24790", "isAdmiringItem", "m_35020_"), "(Lcln;)Z");
    }

    static jboolean isAdmiringItem(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_isAdmiringItem();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_acceptsForBarter() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "isBarterCurrency", "method_24746", "acceptsForBarter", "m_149967_"), "(Lcuq;)Z");
    }

    static jboolean acceptsForBarter(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_acceptsForBarter();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_isFood() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "isFood", "method_24752", "isFood", "m_149969_"), "(Lcuq;)Z");
    }

    static jboolean isFood(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_isFood();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_hasSoulFireNearby() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("s", "isNearRepellent", "method_24791", "hasSoulFireNearby", "m_35022_"), "(Lcln;)Z");
    }

    static jboolean hasSoulFireNearby(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_hasSoulFireNearby();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_hasPlayerHoldingWantedItemNearby() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("e", "seesPlayerHoldingLovedItem", "method_24761", "hasPlayerHoldingWantedItemNearby", "m_34971_"), "(Lbtn;)Z");
    }

    static jboolean hasPlayerHoldingWantedItemNearby(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_hasPlayerHoldingWantedItemNearby();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_canWander() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("f", "doesntSeeAnyPlayerHoldingLovedItem", "method_24765", "canWander", "m_34982_"), "(Lbtn;)Z");
    }

    static jboolean canWander(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_canWander();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_isGoldHoldingPlayer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "isPlayerHoldingLovedItem", "method_24739", "isGoldHoldingPlayer", "m_34883_"), "(Lbtn;)Z");
    }

    static jboolean isGoldHoldingPlayer(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_isGoldHoldingPlayer();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_hasBeenHitByPlayer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("t", "isAdmiringDisabled", "method_24714", "hasBeenHitByPlayer", "m_35024_"), "(Lcln;)Z");
    }

    static jboolean hasBeenHitByPlayer(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_hasBeenHitByPlayer();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_hasBeenHurt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("g", "wasHurtRecently", "method_24769", "hasBeenHurt", "m_34988_"), "(Lbtn;)Z");
    }

    static jboolean hasBeenHurt(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_hasBeenHurt();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_hasItemInOffHand() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("u", "isHoldingItemInOffHand", "method_24917", "hasItemInOffHand", "m_35026_"), "(Lcln;)Z");
    }

    static jboolean hasItemInOffHand(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_hasItemInOffHand();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_doesNotHaveGoldInOffHand() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("v", "isNotHoldingLovedItemInOffHand", "method_24850", "doesNotHaveGoldInOffHand", "m_35028_"), "(Lcln;)Z");
    }

    static jboolean doesNotHaveGoldInOffHand(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_doesNotHaveGoldInOffHand();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_isZombified() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "isZombified", "method_29534", "isZombified", "m_34806_"), "(Lbsx;)Z");
    }

    static jboolean isZombified(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_isZombified();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_ENTITY_MOB_PIGLINBRAIN_HPP