// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ENTITY_MOB_ABSTRACTSKELETONENTITY_HPP
#define NET_MINECRAFT_ENTITY_MOB_ABSTRACTSKELETONENTITY_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.entity.mob.AbstractSkeletonEntity
 * Remapped: cjl
 */
namespace AbstractSkeletonEntity {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("cjl", "net/minecraft/world/entity/monster/AbstractSkeleton", "net/minecraft/class_1547", "net/minecraft/entity/mob/AbstractSkeletonEntity", "net/minecraft/src/C_981_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.entity.mob.AbstractSkeletonEntity#HARD_ATTACK_INTERVAL
    [[maybe_unused]] static jint get_field_HARD_ATTACK_INTERVAL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "HARD_ATTACK_INTERVAL", "field_49149", "HARD_ATTACK_INTERVAL", "f_316055_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.AbstractSkeletonEntity#HARD_ATTACK_INTERVAL
    [[maybe_unused]] static void set_field_HARD_ATTACK_INTERVAL(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "HARD_ATTACK_INTERVAL", "field_49149", "HARD_ATTACK_INTERVAL", "f_316055_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.mob.AbstractSkeletonEntity#REGULAR_ATTACK_INTERVAL
    [[maybe_unused]] static jint get_field_REGULAR_ATTACK_INTERVAL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "NORMAL_ATTACK_INTERVAL", "field_49150", "REGULAR_ATTACK_INTERVAL", "f_316823_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.AbstractSkeletonEntity#REGULAR_ATTACK_INTERVAL
    [[maybe_unused]] static void set_field_REGULAR_ATTACK_INTERVAL(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "NORMAL_ATTACK_INTERVAL", "field_49150", "REGULAR_ATTACK_INTERVAL", "f_316823_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.entity.mob.AbstractSkeletonEntity#bowAttackGoal
    static jobject get_field_bowAttackGoal(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "bowGoal", "field_7220", "bowAttackGoal", "f_32130_"), "Lcbm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.AbstractSkeletonEntity#bowAttackGoal
    static void set_field_bowAttackGoal(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "bowGoal", "field_7220", "bowAttackGoal", "f_32130_"), "Lcbm;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.mob.AbstractSkeletonEntity#meleeAttackGoal
    static jobject get_field_meleeAttackGoal(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "meleeGoal", "field_7221", "meleeAttackGoal", "f_32131_"), "Lcaw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.AbstractSkeletonEntity#meleeAttackGoal
    static void set_field_meleeAttackGoal(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "meleeGoal", "field_7221", "meleeAttackGoal", "f_32131_"), "Lcaw;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_initGoals() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("B", "registerGoals", "method_5959", "initGoals", "m_8099_"), "()V");
    }

    static void initGoals(const jobject& obj) {
                
       const auto methodID = methodID_initGoals();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_createAbstractSkeletonAttributes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("s", "createAttributes", "method_26905", "createAbstractSkeletonAttributes", "m_32166_"), "()Lbuv$a;");
    }

    static jobject createAbstractSkeletonAttributes() {
       const auto clazz = self();
       const auto methodID = methodID_createAbstractSkeletonAttributes();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_playStepSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "playStepSound", "method_5712", "playStepSound", "m_7355_"), "(Ljd;Ldtc;)V");
    }

    static void playStepSound(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_playStepSound();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getStepSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("t", "getStepSound", "method_6998", "getStepSound", "m_7878_"), "()Lavo;");
    }

    static jobject getStepSound(const jobject& obj) {
                
       const auto methodID = methodID_getStepSound();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_tickMovement() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("m_", "aiStep", "method_6007", "tickMovement", "m_8107_"), "()V");
    }

    static void tickMovement(const jobject& obj) {
                
       const auto methodID = methodID_tickMovement();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_tickRiding() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("u", "rideTick", "method_5842", "tickRiding", "m_6083_"), "()V");
    }

    static void tickRiding(const jobject& obj) {
                
       const auto methodID = methodID_tickRiding();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_initEquipment() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "populateDefaultEquipmentSlots", "method_5964", "initEquipment", "m_213945_"), "(Layw;Lbqp;)V");
    }

    static void initEquipment(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_initEquipment();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_initialize() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "finalizeSpawn", "method_5943", "initialize", "m_6518_"), "(Lddl;Lbqp;Lbtr;Lbuh;)Lbuh;");
    }

    static jobject initialize(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_initialize();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_updateAttackType() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("x", "reassessWeaponGoal", "method_6997", "updateAttackType", "m_32164_"), "()V");
    }

    static void updateAttackType(const jobject& obj) {
                
       const auto methodID = methodID_updateAttackType();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getHardAttackInterval() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gk", "getHardAttackInterval", "method_57078", "getHardAttackInterval", "m_320361_"), "()I");
    }

    static jint getHardAttackInterval(const jobject& obj) {
                
       const auto methodID = methodID_getHardAttackInterval();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getRegularAttackInterval() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gl", "getAttackInterval", "method_57079", "getRegularAttackInterval", "m_324015_"), "()I");
    }

    static jint getRegularAttackInterval(const jobject& obj) {
                
       const auto methodID = methodID_getRegularAttackInterval();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_shootAt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "performRangedAttack", "method_7105", "shootAt", "m_6504_"), "(Lbtn;F)V");
    }

    static void shootAt(const jobject& obj, const jobject& arg0, const jfloat& arg1) {
                
       const auto methodID = methodID_shootAt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_createArrowProjectile() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getArrow", "method_6996", "createArrowProjectile", "m_7932_"), "(Lcuq;FLcuq;)Lcnd;");
    }

    static jobject createArrowProjectile(const jobject& obj, const jobject& arg0, const jfloat& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_createArrowProjectile();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_canUseRangedWeapon() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "canFireProjectileWeapon", "method_25938", "canUseRangedWeapon", "m_5886_"), "(Lcvn;)Z");
    }

    static jboolean canUseRangedWeapon(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_canUseRangedWeapon();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_readCustomDataFromNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "readAdditionalSaveData", "method_5749", "readCustomDataFromNbt", "m_7378_"), "(Lub;)V");
    }

    static void readCustomDataFromNbt(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_readCustomDataFromNbt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_equipStack() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setItemSlot", "method_5673", "equipStack", "m_21035_"), "(Lbsy;Lcuq;)V");
    }

    static void equipStack(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_equipStack();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_isShaking() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gm", "isShaking", "method_35191", "isShaking", "m_142548_"), "()Z");
    }

    static jboolean isShaking(const jobject& obj) {
                
       const auto methodID = methodID_isShaking();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_ENTITY_MOB_ABSTRACTSKELETONENTITY_HPP