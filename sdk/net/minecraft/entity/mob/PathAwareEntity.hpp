// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ENTITY_MOB_PATHAWAREENTITY_HPP
#define NET_MINECRAFT_ENTITY_MOB_PATHAWAREENTITY_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.entity.mob.PathAwareEntity
 * Remapped: btw
 */
namespace PathAwareEntity {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("btw", "net/minecraft/world/entity/PathfinderMob", "net/minecraft/class_1314", "net/minecraft/entity/mob/PathAwareEntity", "net/minecraft/src/C_533_"));
        }
        return cachedClass;
    };

    // getter for static protected field net.minecraft.entity.mob.PathAwareEntity#DEFAULT_PATHFINDING_FAVOR
    [[maybe_unused]] static jfloat get_field_DEFAULT_PATHFINDING_FAVOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cb", "DEFAULT_WALK_TARGET_VALUE", "field_35670", "DEFAULT_PATHFINDING_FAVOR", "f_186010_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static protected field net.minecraft.entity.mob.PathAwareEntity#DEFAULT_PATHFINDING_FAVOR
    [[maybe_unused]] static void set_field_DEFAULT_PATHFINDING_FAVOR(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cb", "DEFAULT_WALK_TARGET_VALUE", "field_35670", "DEFAULT_PATHFINDING_FAVOR", "f_186010_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    static jmethodID methodID_getPathfindingFavor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getWalkTargetValue", "method_6149", "getPathfindingFavor", "m_21692_"), "(Ljd;)F");
    }

    static jfloat getPathfindingFavor(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getPathfindingFavor();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__getPathfindingFavor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getWalkTargetValue", "method_6144", "getPathfindingFavor", "m_5610_"), "(Ljd;Ldcz;)F");
    }

    static jfloat _getPathfindingFavor(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID__getPathfindingFavor();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_canSpawn() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "checkSpawnRules", "method_5979", "canSpawn", "m_5545_"), "(Ldcx;Lbtr;)Z");
    }

    static jboolean canSpawn(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_canSpawn();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_isNavigating() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gg", "isPathFinding", "method_6150", "isNavigating", "m_21691_"), "()Z");
    }

    static jboolean isNavigating(const jobject& obj) {
                
       const auto methodID = methodID_isNavigating();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isPanicking() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gh", "isPanicking", "method_52546", "isPanicking", "m_293628_"), "()Z");
    }

    static jboolean isPanicking(const jobject& obj) {
                
       const auto methodID = methodID_isPanicking();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_shouldFollowLeash() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gi", "shouldStayCloseToLeashHolder", "method_43689", "shouldFollowLeash", "m_213814_"), "()Z");
    }

    static jboolean shouldFollowLeash(const jobject& obj) {
                
       const auto methodID = methodID_shouldFollowLeash();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_onShortLeashTick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "closeRangeLeashBehaviour", "method_60963", "onShortLeashTick", "m_338827_"), "(Lbsr;)V");
    }

    static void onShortLeashTick(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onShortLeashTick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_shouldTickLeash() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "handleLeashAtDistance", "method_60956", "shouldTickLeash", "m_338665_"), "(Lbsr;F)Z");
    }

    static jboolean shouldTickLeash(const jobject& obj, const jobject& arg0, const jfloat& arg1) {
                
       const auto methodID = methodID_shouldTickLeash();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getFollowLeashSpeed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gj", "followLeashSpeed", "method_6148", "getFollowLeashSpeed", "m_5823_"), "()D");
    }

    static jdouble getFollowLeashSpeed(const jobject& obj) {
                
       const auto methodID = methodID_getFollowLeashSpeed();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_ENTITY_MOB_PATHAWAREENTITY_HPP