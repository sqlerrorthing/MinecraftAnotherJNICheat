// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ENTITY_MOB_MOBENTITY_HPP
#define NET_MINECRAFT_ENTITY_MOB_MOBENTITY_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.entity.mob.MobEntity
 * Remapped: btp
 */
namespace MobEntity {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("btp", "net/minecraft/world/entity/Mob", "net/minecraft/class_1308", "net/minecraft/entity/mob/MobEntity", "net/minecraft/src/C_526_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.entity.mob.MobEntity#MOB_FLAGS
    [[maybe_unused]] static jobject get_field_MOB_FLAGS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "DATA_MOB_FLAGS_ID", "field_6193", "MOB_FLAGS", "f_21340_"), "Lajw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.MobEntity#MOB_FLAGS
    [[maybe_unused]] static void set_field_MOB_FLAGS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "DATA_MOB_FLAGS_ID", "field_6193", "MOB_FLAGS", "f_21340_"), "Lajw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.mob.MobEntity#AI_DISABLED_FLAG
    [[maybe_unused]] static jint get_field_AI_DISABLED_FLAG() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "MOB_FLAG_NO_AI", "field_30088", "AI_DISABLED_FLAG", "f_147266_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.MobEntity#AI_DISABLED_FLAG
    [[maybe_unused]] static void set_field_AI_DISABLED_FLAG(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "MOB_FLAG_NO_AI", "field_30088", "AI_DISABLED_FLAG", "f_147266_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.mob.MobEntity#LEFT_HANDED_FLAG
    [[maybe_unused]] static jint get_field_LEFT_HANDED_FLAG() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "MOB_FLAG_LEFTHANDED", "field_30089", "LEFT_HANDED_FLAG", "f_147267_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.MobEntity#LEFT_HANDED_FLAG
    [[maybe_unused]] static void set_field_LEFT_HANDED_FLAG(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "MOB_FLAG_LEFTHANDED", "field_30089", "LEFT_HANDED_FLAG", "f_147267_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.mob.MobEntity#ATTACKING_FLAG
    [[maybe_unused]] static jint get_field_ATTACKING_FLAG() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "MOB_FLAG_AGGRESSIVE", "field_30090", "ATTACKING_FLAG", "f_147268_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.MobEntity#ATTACKING_FLAG
    [[maybe_unused]] static void set_field_ATTACKING_FLAG(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "MOB_FLAG_AGGRESSIVE", "field_30090", "ATTACKING_FLAG", "f_147268_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static protected field net.minecraft.entity.mob.MobEntity#MINIMUM_DROPPED_XP_PER_EQUIPMENT
    [[maybe_unused]] static jint get_field_MINIMUM_DROPPED_XP_PER_EQUIPMENT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "PICKUP_REACH", "field_30087", "MINIMUM_DROPPED_XP_PER_EQUIPMENT", "f_147265_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static protected field net.minecraft.entity.mob.MobEntity#MINIMUM_DROPPED_XP_PER_EQUIPMENT
    [[maybe_unused]] static void set_field_MINIMUM_DROPPED_XP_PER_EQUIPMENT(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "PICKUP_REACH", "field_30087", "MINIMUM_DROPPED_XP_PER_EQUIPMENT", "f_147265_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.mob.MobEntity#ITEM_PICK_UP_RANGE_EXPANDER
    [[maybe_unused]] static jobject get_field_ITEM_PICK_UP_RANGE_EXPANDER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cb", "ITEM_PICKUP_REACH", "field_38386", "ITEM_PICK_UP_RANGE_EXPANDER", "f_217048_"), "Lkh;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.MobEntity#ITEM_PICK_UP_RANGE_EXPANDER
    [[maybe_unused]] static void set_field_ITEM_PICK_UP_RANGE_EXPANDER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cb", "ITEM_PICKUP_REACH", "field_38386", "ITEM_PICK_UP_RANGE_EXPANDER", "f_217048_"), "Lkh;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.mob.MobEntity#BASE_SPAWN_EQUIPMENT_CHANCE
    [[maybe_unused]] static jfloat get_field_BASE_SPAWN_EQUIPMENT_CHANCE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bH", "MAX_WEARING_ARMOR_CHANCE", "field_30091", "BASE_SPAWN_EQUIPMENT_CHANCE", "f_147269_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.mob.MobEntity#BASE_SPAWN_EQUIPMENT_CHANCE
    [[maybe_unused]] static void set_field_BASE_SPAWN_EQUIPMENT_CHANCE(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bH", "MAX_WEARING_ARMOR_CHANCE", "field_30091", "BASE_SPAWN_EQUIPMENT_CHANCE", "f_147269_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.mob.MobEntity#DEFAULT_CAN_PICKUP_LOOT_CHANCE
    [[maybe_unused]] static jfloat get_field_DEFAULT_CAN_PICKUP_LOOT_CHANCE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bI", "MAX_PICKUP_LOOT_CHANCE", "field_30083", "DEFAULT_CAN_PICKUP_LOOT_CHANCE", "f_147261_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.mob.MobEntity#DEFAULT_CAN_PICKUP_LOOT_CHANCE
    [[maybe_unused]] static void set_field_DEFAULT_CAN_PICKUP_LOOT_CHANCE(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bI", "MAX_PICKUP_LOOT_CHANCE", "field_30083", "DEFAULT_CAN_PICKUP_LOOT_CHANCE", "f_147261_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.mob.MobEntity#BASE_ENCHANTED_ARMOR_CHANCE
    [[maybe_unused]] static jfloat get_field_BASE_ENCHANTED_ARMOR_CHANCE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bJ", "MAX_ENCHANTED_ARMOR_CHANCE", "field_30084", "BASE_ENCHANTED_ARMOR_CHANCE", "f_147262_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.mob.MobEntity#BASE_ENCHANTED_ARMOR_CHANCE
    [[maybe_unused]] static void set_field_BASE_ENCHANTED_ARMOR_CHANCE(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bJ", "MAX_ENCHANTED_ARMOR_CHANCE", "field_30084", "BASE_ENCHANTED_ARMOR_CHANCE", "f_147262_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.mob.MobEntity#BASE_ENCHANTED_MAIN_HAND_EQUIPMENT_CHANCE
    [[maybe_unused]] static jfloat get_field_BASE_ENCHANTED_MAIN_HAND_EQUIPMENT_CHANCE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bK", "MAX_ENCHANTED_WEAPON_CHANCE", "field_30085", "BASE_ENCHANTED_MAIN_HAND_EQUIPMENT_CHANCE", "f_147263_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.mob.MobEntity#BASE_ENCHANTED_MAIN_HAND_EQUIPMENT_CHANCE
    [[maybe_unused]] static void set_field_BASE_ENCHANTED_MAIN_HAND_EQUIPMENT_CHANCE(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bK", "MAX_ENCHANTED_WEAPON_CHANCE", "field_30085", "BASE_ENCHANTED_MAIN_HAND_EQUIPMENT_CHANCE", "f_147263_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.mob.MobEntity#DEFAULT_DROP_CHANCE
    [[maybe_unused]] static jfloat get_field_DEFAULT_DROP_CHANCE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bL", "DEFAULT_EQUIPMENT_DROP_CHANCE", "field_34043", "DEFAULT_DROP_CHANCE", "f_182333_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.mob.MobEntity#DEFAULT_DROP_CHANCE
    [[maybe_unused]] static void set_field_DEFAULT_DROP_CHANCE(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bL", "DEFAULT_EQUIPMENT_DROP_CHANCE", "field_34043", "DEFAULT_DROP_CHANCE", "f_182333_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.mob.MobEntity#field_52220
    [[maybe_unused]] static jfloat get_field_field_52220() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bM", "PRESERVE_ITEM_DROP_CHANCE_THRESHOLD", "field_52220", "field_52220", "f_337144_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.mob.MobEntity#field_52220
    [[maybe_unused]] static void set_field_field_52220(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bM", "PRESERVE_ITEM_DROP_CHANCE_THRESHOLD", "field_52220", "field_52220", "f_337144_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.mob.MobEntity#field_38932
    [[maybe_unused]] static jint get_field_field_38932() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bN", "PRESERVE_ITEM_DROP_CHANCE", "field_38932", "field_38932", "f_217047_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.mob.MobEntity#field_38932
    [[maybe_unused]] static void set_field_field_38932(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bN", "PRESERVE_ITEM_DROP_CHANCE", "field_38932", "field_38932", "f_217047_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.mob.MobEntity#field_35039
    [[maybe_unused]] static jint get_field_field_35039() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bO", "UPDATE_GOAL_SELECTOR_EVERY_N_TICKS", "field_35039", "field_35039", "f_186008_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.mob.MobEntity#field_35039
    [[maybe_unused]] static void set_field_field_35039(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bO", "UPDATE_GOAL_SELECTOR_EVERY_N_TICKS", "field_35039", "field_35039", "f_186008_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.mob.MobEntity#ATTACK_RANGE
    [[maybe_unused]] static jdouble get_field_ATTACK_RANGE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cc", "DEFAULT_ATTACK_REACH", "field_45969", "ATTACK_RANGE", "f_290867_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticDoubleField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.MobEntity#ATTACK_RANGE
    [[maybe_unused]] static void set_field_ATTACK_RANGE(const jdouble &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cc", "DEFAULT_ATTACK_REACH", "field_45969", "ATTACK_RANGE", "f_290867_"), "D");
        return MinecraftSDK::env->SetStaticDoubleField(clazz, fieldID, value);
    };

    // getter for static protected field net.minecraft.entity.mob.MobEntity#RANDOM_SPAWN_BONUS_MODIFIER_ID
    [[maybe_unused]] static jobject get_field_RANDOM_SPAWN_BONUS_MODIFIER_ID() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bP", "RANDOM_SPAWN_BONUS_ID", "field_51997", "RANDOM_SPAWN_BONUS_MODIFIER_ID", "f_337189_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static protected field net.minecraft.entity.mob.MobEntity#RANDOM_SPAWN_BONUS_MODIFIER_ID
    [[maybe_unused]] static void set_field_RANDOM_SPAWN_BONUS_MODIFIER_ID(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bP", "RANDOM_SPAWN_BONUS_ID", "field_51997", "RANDOM_SPAWN_BONUS_MODIFIER_ID", "f_337189_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for public field net.minecraft.entity.mob.MobEntity#ambientSoundChance
    static jint get_field_ambientSoundChance(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bQ", "ambientSoundTime", "field_6191", "ambientSoundChance", "f_21363_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static public field net.minecraft.entity.mob.MobEntity#ambientSoundChance
    static void set_field_ambientSoundChance(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bQ", "ambientSoundTime", "field_6191", "ambientSoundChance", "f_21363_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.entity.mob.MobEntity#experiencePoints
    static jint get_field_experiencePoints(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bR", "xpReward", "field_6194", "experiencePoints", "f_21364_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.entity.mob.MobEntity#experiencePoints
    static void set_field_experiencePoints(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bR", "xpReward", "field_6194", "experiencePoints", "f_21364_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.entity.mob.MobEntity#lookControl
    static jobject get_field_lookControl(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bS", "lookControl", "field_6206", "lookControl", "f_21365_"), "Lbzo;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.entity.mob.MobEntity#lookControl
    static void set_field_lookControl(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bS", "lookControl", "field_6206", "lookControl", "f_21365_"), "Lbzo;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.entity.mob.MobEntity#moveControl
    static jobject get_field_moveControl(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bT", "moveControl", "field_6207", "moveControl", "f_21342_"), "Lbzp;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.entity.mob.MobEntity#moveControl
    static void set_field_moveControl(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bT", "moveControl", "field_6207", "moveControl", "f_21342_"), "Lbzp;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.entity.mob.MobEntity#jumpControl
    static jobject get_field_jumpControl(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bU", "jumpControl", "field_6204", "jumpControl", "f_21343_"), "Lbzn;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.entity.mob.MobEntity#jumpControl
    static void set_field_jumpControl(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bU", "jumpControl", "field_6204", "jumpControl", "f_21343_"), "Lbzn;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.mob.MobEntity#bodyControl
    static jobject get_field_bodyControl(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cd", "bodyRotationControl", "field_6188", "bodyControl", "f_21361_"), "Lbzk;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.MobEntity#bodyControl
    static void set_field_bodyControl(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cd", "bodyRotationControl", "field_6188", "bodyControl", "f_21361_"), "Lbzk;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.entity.mob.MobEntity#navigation
    static jobject get_field_navigation(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bV", "navigation", "field_6189", "navigation", "f_21344_"), "Lcda;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.entity.mob.MobEntity#navigation
    static void set_field_navigation(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bV", "navigation", "field_6189", "navigation", "f_21344_"), "Lcda;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.entity.mob.MobEntity#goalSelector
    static jobject get_field_goalSelector(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bW", "goalSelector", "field_6201", "goalSelector", "f_21345_"), "Lcan;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.entity.mob.MobEntity#goalSelector
    static void set_field_goalSelector(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bW", "goalSelector", "field_6201", "goalSelector", "f_21345_"), "Lcan;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.entity.mob.MobEntity#targetSelector
    static jobject get_field_targetSelector(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bX", "targetSelector", "field_6185", "targetSelector", "f_21346_"), "Lcan;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.entity.mob.MobEntity#targetSelector
    static void set_field_targetSelector(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bX", "targetSelector", "field_6185", "targetSelector", "f_21346_"), "Lcan;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.mob.MobEntity#target
    static jobject get_field_target(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ce", "target", "field_6199", "target", "f_21362_"), "Lbtn;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.MobEntity#target
    static void set_field_target(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ce", "target", "field_6199", "target", "f_21362_"), "Lbtn;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.mob.MobEntity#visibilityCache
    static jobject get_field_visibilityCache(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cf", "sensing", "field_6190", "visibilityCache", "f_21349_"), "Lcdx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.MobEntity#visibilityCache
    static void set_field_visibilityCache(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cf", "sensing", "field_6190", "visibilityCache", "f_21349_"), "Lcdx;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.mob.MobEntity#handItems
    static jobject get_field_handItems(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cg", "handItems", "field_6195", "handItems", "f_21350_"), "Ljv;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.MobEntity#handItems
    static void set_field_handItems(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cg", "handItems", "field_6195", "handItems", "f_21350_"), "Ljv;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.entity.mob.MobEntity#handDropChances
    static jfloat get_field_handDropChances(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bY", "handDropChances", "field_6187", "handDropChances", "f_21347_"), "[F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.entity.mob.MobEntity#handDropChances
    static void set_field_handDropChances(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bY", "handDropChances", "field_6187", "handDropChances", "f_21347_"), "[F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.mob.MobEntity#armorItems
    static jobject get_field_armorItems(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ch", "armorItems", "field_6205", "armorItems", "f_21351_"), "Ljv;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.MobEntity#armorItems
    static void set_field_armorItems(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ch", "armorItems", "field_6205", "armorItems", "f_21351_"), "Ljv;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.entity.mob.MobEntity#armorDropChances
    static jfloat get_field_armorDropChances(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bZ", "armorDropChances", "field_6186", "armorDropChances", "f_21348_"), "[F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.entity.mob.MobEntity#armorDropChances
    static void set_field_armorDropChances(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("bZ", "armorDropChances", "field_6186", "armorDropChances", "f_21348_"), "[F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.mob.MobEntity#bodyArmor
    static jobject get_field_bodyArmor(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ci", "bodyArmorItem", "field_48829", "bodyArmor", "f_314973_"), "Lcuq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.MobEntity#bodyArmor
    static void set_field_bodyArmor(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ci", "bodyArmorItem", "field_48829", "bodyArmor", "f_314973_"), "Lcuq;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.entity.mob.MobEntity#bodyArmorDropChance
    static jfloat get_field_bodyArmorDropChance(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ca", "bodyArmorDropChance", "field_48828", "bodyArmorDropChance", "f_315062_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.entity.mob.MobEntity#bodyArmorDropChance
    static void set_field_bodyArmorDropChance(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ca", "bodyArmorDropChance", "field_48828", "bodyArmorDropChance", "f_315062_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.mob.MobEntity#canPickUpLoot
    static jboolean get_field_canPickUpLoot(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cj", "canPickUpLoot", "field_6203", "canPickUpLoot", "f_21352_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.MobEntity#canPickUpLoot
    static void set_field_canPickUpLoot(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cj", "canPickUpLoot", "field_6203", "canPickUpLoot", "f_21352_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.mob.MobEntity#persistent
    static jboolean get_field_persistent(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ck", "persistenceRequired", "field_6200", "persistent", "f_21353_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.MobEntity#persistent
    static void set_field_persistent(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ck", "persistenceRequired", "field_6200", "persistent", "f_21353_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.mob.MobEntity#pathfindingPenalties
    static jobject get_field_pathfindingPenalties(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cl", "pathfindingMalus", "field_6196", "pathfindingPenalties", "f_21354_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.MobEntity#pathfindingPenalties
    static void set_field_pathfindingPenalties(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cl", "pathfindingMalus", "field_6196", "pathfindingPenalties", "f_21354_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.mob.MobEntity#lootTable
    static jobject get_field_lootTable(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cm", "lootTable", "field_6198", "lootTable", "f_21355_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.MobEntity#lootTable
    static void set_field_lootTable(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cm", "lootTable", "field_6198", "lootTable", "f_21355_"), "Lakq;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.mob.MobEntity#lootTableSeed
    static jlong get_field_lootTableSeed(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cn", "lootTableSeed", "field_6184", "lootTableSeed", "f_21356_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.MobEntity#lootTableSeed
    static void set_field_lootTableSeed(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cn", "lootTableSeed", "field_6184", "lootTableSeed", "f_21356_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.mob.MobEntity#leashData
    static jobject get_field_leashData(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("co", "leashData", "field_52221", "leashData", "f_337544_"), "Lbtk$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.MobEntity#leashData
    static void set_field_leashData(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("co", "leashData", "field_52221", "leashData", "f_337544_"), "Lbtk$a;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.mob.MobEntity#positionTarget
    static jobject get_field_positionTarget(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cp", "restrictCenter", "field_18074", "positionTarget", "f_21360_"), "Ljd;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.MobEntity#positionTarget
    static void set_field_positionTarget(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cp", "restrictCenter", "field_18074", "positionTarget", "f_21360_"), "Ljd;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.mob.MobEntity#positionTargetRange
    static jfloat get_field_positionTargetRange(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cq", "restrictRadius", "field_18075", "positionTargetRange", "f_21341_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.MobEntity#positionTargetRange
    static void set_field_positionTargetRange(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cq", "restrictRadius", "field_18075", "positionTargetRange", "f_21341_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    static jmethodID methodID_initGoals() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("B", "registerGoals", "method_5959", "initGoals", "m_8099_"), "()V");
    }

    static void initGoals(const jobject& obj) {
                
       const auto methodID = methodID_initGoals();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_createMobAttributes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("C", "createMobAttributes", "method_26828", "createMobAttributes", "m_21552_"), "()Lbuv$a;");
    }

    static jobject createMobAttributes() {
       const auto clazz = self();
       const auto methodID = methodID_createMobAttributes();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_createNavigation() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "createNavigation", "method_5965", "createNavigation", "m_6037_"), "(Ldcw;)Lcda;");
    }

    static jobject createNavigation(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_createNavigation();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_movesIndependently() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("D", "shouldPassengersInheritMalus", "method_26323", "movesIndependently", "m_8091_"), "()Z");
    }

    static jboolean movesIndependently(const jobject& obj) {
                
       const auto methodID = methodID_movesIndependently();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getPathfindingPenalty() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getPathfindingMalus", "method_5944", "getPathfindingPenalty", "m_21439_"), "(Lepv;)F");
    }

    static jfloat getPathfindingPenalty(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getPathfindingPenalty();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setPathfindingPenalty() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setPathfindingMalus", "method_5941", "setPathfindingPenalty", "m_21441_"), "(Lepv;F)V");
    }

    static void setPathfindingPenalty(const jobject& obj, const jobject& arg0, const jfloat& arg1) {
                
       const auto methodID = methodID_setPathfindingPenalty();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_onStartPathfinding() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("E", "onPathfindingStart", "method_51504", "onStartPathfinding", "m_284177_"), "()V");
    }

    static void onStartPathfinding(const jobject& obj) {
                
       const auto methodID = methodID_onStartPathfinding();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_onFinishPathfinding() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("F", "onPathfindingDone", "method_51503", "onFinishPathfinding", "m_284461_"), "()V");
    }

    static void onFinishPathfinding(const jobject& obj) {
                
       const auto methodID = methodID_onFinishPathfinding();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_createBodyControl() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("H", "createBodyControl", "method_5963", "createBodyControl", "m_7560_"), "()Lbzk;");
    }

    static jobject createBodyControl(const jobject& obj) {
                
       const auto methodID = methodID_createBodyControl();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getLookControl() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("I", "getLookControl", "method_5988", "getLookControl", "m_21563_"), "()Lbzo;");
    }

    static jobject getLookControl(const jobject& obj) {
                
       const auto methodID = methodID_getLookControl();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getMoveControl() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("J", "getMoveControl", "method_5962", "getMoveControl", "m_21566_"), "()Lbzp;");
    }

    static jobject getMoveControl(const jobject& obj) {
                
       const auto methodID = methodID_getMoveControl();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getJumpControl() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("L", "getJumpControl", "method_5993", "getJumpControl", "m_21569_"), "()Lbzn;");
    }

    static jobject getJumpControl(const jobject& obj) {
                
       const auto methodID = methodID_getJumpControl();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getNavigation() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("N", "getNavigation", "method_5942", "getNavigation", "m_21573_"), "()Lcda;");
    }

    static jobject getNavigation(const jobject& obj) {
                
       const auto methodID = methodID_getNavigation();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getControllingPassenger() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("cQ", "getControllingPassenger", "method_5642", "getControllingPassenger", "m_6688_"), "()Lbtn;");
    }

    static jobject getControllingPassenger(const jobject& obj) {
                
       const auto methodID = methodID_getControllingPassenger();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getVisibilityCache() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("O", "getSensing", "method_5985", "getVisibilityCache", "m_21574_"), "()Lcdx;");
    }

    static jobject getVisibilityCache(const jobject& obj) {
                
       const auto methodID = methodID_getVisibilityCache();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getTarget() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("p", "getTarget", "method_5968", "getTarget", "m_5448_"), "()Lbtn;");
    }

    static jobject getTarget(const jobject& obj) {
                
       const auto methodID = methodID_getTarget();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getTargetInBrain() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("P", "getTargetFromBrain", "method_59664", "getTargetInBrain", "m_319699_"), "()Lbtn;");
    }

    static jobject getTargetInBrain(const jobject& obj) {
                
       const auto methodID = methodID_getTargetInBrain();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_setTarget() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "setTarget", "method_5980", "setTarget", "m_6710_"), "(Lbtn;)V");
    }

    static void setTarget(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setTarget();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_canTarget() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "canAttackType", "method_5973", "canTarget", "m_6549_"), "(Lbsx;)Z");
    }

    static jboolean canTarget(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_canTarget();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_canUseRangedWeapon() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "canFireProjectileWeapon", "method_25938", "canUseRangedWeapon", "m_5886_"), "(Lcvn;)Z");
    }

    static jboolean canUseRangedWeapon(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_canUseRangedWeapon();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_onEatingGrass() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("Q", "ate", "method_5983", "onEatingGrass", "m_8035_"), "()V");
    }

    static void onEatingGrass(const jobject& obj) {
                
       const auto methodID = methodID_onEatingGrass();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_initDataTracker() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "defineSynchedData", "method_5693", "initDataTracker", "m_8097_"), "(Laka$a;)V");
    }

    static void initDataTracker(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_initDataTracker();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getMinAmbientSoundDelay() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("R", "getAmbientSoundInterval", "method_5970", "getMinAmbientSoundDelay", "m_8100_"), "()I");
    }

    static jint getMinAmbientSoundDelay(const jobject& obj) {
                
       const auto methodID = methodID_getMinAmbientSoundDelay();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_playAmbientSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("S", "playAmbientSound", "method_5966", "playAmbientSound", "m_8032_"), "()V");
    }

    static void playAmbientSound(const jobject& obj) {
                
       const auto methodID = methodID_playAmbientSound();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_baseTick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aw", "baseTick", "method_5670", "baseTick", "m_6075_"), "()V");
    }

    static void baseTick(const jobject& obj) {
                
       const auto methodID = methodID_baseTick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_playHurtSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "playHurtSound", "method_6013", "playHurtSound", "m_6677_"), "(Lbrk;)V");
    }

    static void playHurtSound(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_playHurtSound();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_resetSoundDelay() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("s", "resetAmbientSoundTime", "method_5975", "resetSoundDelay", "m_21551_"), "()V");
    }

    static void resetSoundDelay(const jobject& obj) {
                
       const auto methodID = methodID_resetSoundDelay();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getXpToDrop() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("eg", "getBaseExperienceReward", "method_6110", "getXpToDrop", "m_213860_"), "()I");
    }

    static jint getXpToDrop(const jobject& obj) {
                
       const auto methodID = methodID_getXpToDrop();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_playSpawnEffects() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("T", "spawnAnim", "method_5990", "playSpawnEffects", "m_21373_"), "()V");
    }

    static void playSpawnEffects(const jobject& obj) {
                
       const auto methodID = methodID_playSpawnEffects();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_handleStatus() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "handleEntityEvent", "method_5711", "handleStatus", "m_7822_"), "(B)V");
    }

    static void handleStatus(const jobject& obj, const jbyte& arg0) {
                
       const auto methodID = methodID_handleStatus();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_tick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("l", "tick", "method_5773", "tick", "m_8119_"), "()V");
    }

    static void tick(const jobject& obj) {
                
       const auto methodID = methodID_tick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_updateGoalControls() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("U", "updateControlFlags", "method_20417", "updateGoalControls", "m_8022_"), "()V");
    }

    static void updateGoalControls(const jobject& obj) {
                
       const auto methodID = methodID_updateGoalControls();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_turnHead() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "tickHeadTurn", "method_6031", "turnHead", "m_5632_"), "(FF)F");
    }

    static jfloat turnHead(const jobject& obj, const jfloat& arg0, const jfloat& arg1) {
                
       const auto methodID = methodID_turnHead();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getAmbientSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("v", "getAmbientSound", "method_5994", "getAmbientSound", "m_7515_"), "()Lavo;");
    }

    static jobject getAmbientSound(const jobject& obj) {
                
       const auto methodID = methodID_getAmbientSound();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_writeCustomDataToNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "addAdditionalSaveData", "method_5652", "writeCustomDataToNbt", "m_7380_"), "(Lub;)V");
    }

    static void writeCustomDataToNbt(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_writeCustomDataToNbt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_readCustomDataFromNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "readAdditionalSaveData", "method_5749", "readCustomDataFromNbt", "m_7378_"), "(Lub;)V");
    }

    static void readCustomDataFromNbt(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_readCustomDataFromNbt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_dropLoot() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "dropFromLootTable", "method_16077", "dropLoot", "m_7625_"), "(Lbrk;Z)V");
    }

    static void dropLoot(const jobject& obj, const jobject& arg0, const jboolean& arg1) {
                
       const auto methodID = methodID_dropLoot();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getLootTable() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("eA", "getLootTable", "method_5989", "getLootTable", "m_5743_"), "()Lakq;");
    }

    static jobject getLootTable(const jobject& obj) {
                
       const auto methodID = methodID_getLootTable();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getLootTableId() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("V", "getDefaultLootTable", "method_5991", "getLootTableId", "m_7582_"), "()Lakq;");
    }

    static jobject getLootTableId(const jobject& obj) {
                
       const auto methodID = methodID_getLootTableId();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getLootTableSeed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("eB", "getLootTableSeed", "method_51851", "getLootTableSeed", "m_287233_"), "()J");
    }

    static jlong getLootTableSeed(const jobject& obj) {
                
       const auto methodID = methodID_getLootTableSeed();
       return MinecraftSDK::env->CallLongMethod(obj, methodID);
    };
    
    static jmethodID methodID_setForwardSpeed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("E", "setZza", "method_5930", "setForwardSpeed", "m_21564_"), "(F)V");
    }

    static void setForwardSpeed(const jobject& obj, const jfloat& arg0) {
                
       const auto methodID = methodID_setForwardSpeed();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setUpwardSpeed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("F", "setYya", "method_5976", "setUpwardSpeed", "m_21567_"), "(F)V");
    }

    static void setUpwardSpeed(const jobject& obj, const jfloat& arg0) {
                
       const auto methodID = methodID_setUpwardSpeed();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setSidewaysSpeed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("G", "setXxa", "method_5938", "setSidewaysSpeed", "m_21570_"), "(F)V");
    }

    static void setSidewaysSpeed(const jobject& obj, const jfloat& arg0) {
                
       const auto methodID = methodID_setSidewaysSpeed();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setMovementSpeed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("A", "setSpeed", "method_6125", "setMovementSpeed", "m_7910_"), "(F)V");
    }

    static void setMovementSpeed(const jobject& obj, const jfloat& arg0) {
                
       const auto methodID = methodID_setMovementSpeed();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_stopMovement() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("W", "stopInPlace", "method_55695", "stopMovement", "m_324154_"), "()V");
    }

    static void stopMovement(const jobject& obj) {
                
       const auto methodID = methodID_stopMovement();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_tickMovement() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("m_", "aiStep", "method_6007", "tickMovement", "m_8107_"), "()V");
    }

    static void tickMovement(const jobject& obj) {
                
       const auto methodID = methodID_tickMovement();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getItemPickUpRangeExpander() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("X", "getPickupReach", "method_42646", "getItemPickUpRangeExpander", "m_213552_"), "()Lkh;");
    }

    static jobject getItemPickUpRangeExpander(const jobject& obj) {
                
       const auto methodID = methodID_getItemPickUpRangeExpander();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_loot() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "pickUpItem", "method_5949", "loot", "m_7581_"), "(Lcjh;)V");
    }

    static void loot(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_loot();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_tryEquip() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("i", "equipItemIfPossible", "method_24523", "tryEquip", "m_255207_"), "(Lcuq;)Lcuq;");
    }

    static jobject tryEquip(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_tryEquip();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_equipLootStack() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "setItemSlotAndDropWhenKilled", "method_24834", "equipLootStack", "m_21468_"), "(Lbsy;Lcuq;)V");
    }

    static void equipLootStack(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_equipLootStack();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_updateDropChances() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "setGuaranteedDrop", "method_25939", "updateDropChances", "m_21508_"), "(Lbsy;)V");
    }

    static void updateDropChances(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_updateDropChances();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_prefersNewEquipment() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "canReplaceCurrentItem", "method_5955", "prefersNewEquipment", "m_7808_"), "(Lcuq;Lcuq;)Z");
    }

    static jboolean prefersNewEquipment(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_prefersNewEquipment();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getAttackDamageWith() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("o", "getApproximateAttackDamageWithItem", "method_57295", "getAttackDamageWith", "m_319522_"), "(Lcuq;)D");
    }

    static jdouble getAttackDamageWith(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getAttackDamageWith();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_prefersNewDamageableItem() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "canReplaceEqualItem", "method_26320", "prefersNewDamageableItem", "m_21477_"), "(Lcuq;Lcuq;)Z");
    }

    static jboolean prefersNewDamageableItem(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_prefersNewDamageableItem();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_hasComponentsOtherThanDamage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("p", "hasAnyComponentExceptDamage", "method_57296", "hasComponentsOtherThanDamage", "m_321483_"), "(Lcuq;)Z");
    }

    static jboolean hasComponentsOtherThanDamage(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_hasComponentsOtherThanDamage();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_canPickupItem() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("j", "canHoldItem", "method_5939", "canPickupItem", "m_7252_"), "(Lcuq;)Z");
    }

    static jboolean canPickupItem(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_canPickupItem();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_canGather() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("k", "wantsToPickUp", "method_20820", "canGather", "m_7243_"), "(Lcuq;)Z");
    }

    static jboolean canGather(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_canGather();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_canImmediatelyDespawn() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "removeWhenFarAway", "method_5974", "canImmediatelyDespawn", "m_6785_"), "(D)Z");
    }

    static jboolean canImmediatelyDespawn(const jobject& obj, const jdouble& arg0) {
                
       const auto methodID = methodID_canImmediatelyDespawn();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_cannotDespawn() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("Y", "requiresCustomPersistence", "method_17326", "cannotDespawn", "m_8023_"), "()Z");
    }

    static jboolean cannotDespawn(const jobject& obj) {
                
       const auto methodID = methodID_cannotDespawn();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isDisallowedInPeaceful() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("Z", "shouldDespawnInPeaceful", "method_23734", "isDisallowedInPeaceful", "m_8028_"), "()Z");
    }

    static jboolean isDisallowedInPeaceful(const jobject& obj) {
                
       const auto methodID = methodID_isDisallowedInPeaceful();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_checkDespawn() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("dA", "checkDespawn", "method_5982", "checkDespawn", "m_6043_"), "()V");
    }

    static void checkDespawn(const jobject& obj) {
                
       const auto methodID = methodID_checkDespawn();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_tickNewAi() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("fm", "serverAiStep", "method_6023", "tickNewAi", "m_6140_"), "()V");
    }

    static void tickNewAi(const jobject& obj) {
                
       const auto methodID = methodID_tickNewAi();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_sendAiDebugData() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aa", "sendDebugPackets", "method_18409", "sendAiDebugData", "m_8025_"), "()V");
    }

    static void sendAiDebugData(const jobject& obj) {
                
       const auto methodID = methodID_sendAiDebugData();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_mobTick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ab", "customServerAiStep", "method_5958", "mobTick", "m_8024_"), "()V");
    }

    static void mobTick(const jobject& obj) {
                
       const auto methodID = methodID_mobTick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getMaxLookPitchChange() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ac", "getMaxHeadXRot", "method_5978", "getMaxLookPitchChange", "m_8132_"), "()I");
    }

    static jint getMaxLookPitchChange(const jobject& obj) {
                
       const auto methodID = methodID_getMaxLookPitchChange();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getMaxHeadRotation() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ae", "getMaxHeadYRot", "method_5986", "getMaxHeadRotation", "m_8085_"), "()I");
    }

    static jint getMaxHeadRotation(const jobject& obj) {
                
       const auto methodID = methodID_getMaxHeadRotation();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_clampHeadYaw() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("af", "clampHeadRotationToBody", "method_56080", "clampHeadYaw", "m_322776_"), "()V");
    }

    static void clampHeadYaw(const jobject& obj) {
                
       const auto methodID = methodID_clampHeadYaw();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getMaxLookYawChange() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("fM", "getHeadRotSpeed", "method_20240", "getMaxLookYawChange", "m_21529_"), "()I");
    }

    static jint getMaxLookYawChange(const jobject& obj) {
                
       const auto methodID = methodID_getMaxLookYawChange();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_lookAtEntity() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "lookAt", "method_5951", "lookAtEntity", "m_21391_"), "(Lbsr;FF)V");
    }

    static void lookAtEntity(const jobject& obj, const jobject& arg0, const jfloat& arg1, const jfloat& arg2) {
                
       const auto methodID = methodID_lookAtEntity();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_changeAngle() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "rotlerp", "method_5960", "changeAngle", "m_21376_"), "(FFF)F");
    }

    static jfloat changeAngle(const jobject& obj, const jfloat& arg0, const jfloat& arg1, const jfloat& arg2) {
                
       const auto methodID = methodID_changeAngle();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_canMobSpawn() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "checkMobSpawnRules", "method_20636", "canMobSpawn", "m_217057_"), "(Lbsx;Ldcx;Lbtr;Ljd;Layw;)Z");
    }

    static jboolean canMobSpawn(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jobject& arg4) {
       const auto clazz = self();
       const auto methodID = methodID_canMobSpawn();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_canSpawn() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "checkSpawnRules", "method_5979", "canSpawn", "m_5545_"), "(Ldcx;Lbtr;)Z");
    }

    static jboolean canSpawn(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_canSpawn();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__canSpawn() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "checkSpawnObstruction", "method_5957", "canSpawn", "m_6914_"), "(Ldcz;)Z");
    }

    static jboolean _canSpawn(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__canSpawn();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getLimitPerChunk() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("fN", "getMaxSpawnClusterSize", "method_5945", "getLimitPerChunk", "m_5792_"), "()I");
    }

    static jint getLimitPerChunk(const jobject& obj) {
                
       const auto methodID = methodID_getLimitPerChunk();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_spawnsTooManyForEachTry() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("r", "isMaxGroupSizeReached", "method_5969", "spawnsTooManyForEachTry", "m_7296_"), "(I)Z");
    }

    static jboolean spawnsTooManyForEachTry(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_spawnsTooManyForEachTry();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getSafeFallDistance() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("cx", "getMaxFallDistance", "method_5850", "getSafeFallDistance", "m_6056_"), "()I");
    }

    static jint getSafeFallDistance(const jobject& obj) {
                
       const auto methodID = methodID_getSafeFallDistance();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getHandItems() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("eW", "getHandSlots", "method_5877", "getHandItems", "m_21487_"), "()Ljava/lang/Iterable;");
    }

    static jobject getHandItems(const jobject& obj) {
                
       const auto methodID = methodID_getHandItems();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getArmorItems() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("eV", "getArmorSlots", "method_5661", "getArmorItems", "m_21151_"), "()Ljava/lang/Iterable;");
    }

    static jobject getArmorItems(const jobject& obj) {
                
       const auto methodID = methodID_getArmorItems();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getBodyArmor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("fO", "getBodyArmorItem", "method_56676", "getBodyArmor", "m_319275_"), "()Lcuq;");
    }

    static jobject getBodyArmor(const jobject& obj) {
                
       const auto methodID = methodID_getBodyArmor();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_canUseSlot() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "canUseSlot", "method_56991", "canUseSlot", "m_30729_"), "(Lbsy;)Z");
    }

    static jboolean canUseSlot(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_canUseSlot();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isWearingBodyArmor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("fP", "isWearingBodyArmor", "method_56677", "isWearingBodyArmor", "m_324340_"), "()Z");
    }

    static jboolean isWearingBodyArmor(const jobject& obj) {
                
       const auto methodID = methodID_isWearingBodyArmor();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isHorseArmor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("l", "isBodyArmorItem", "method_6773", "isHorseArmor", "m_30833_"), "(Lcuq;)Z");
    }

    static jboolean isHorseArmor(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_isHorseArmor();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_equipBodyArmor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("m", "setBodyArmorItem", "method_56678", "equipBodyArmor", "m_323866_"), "(Lcuq;)V");
    }

    static void equipBodyArmor(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_equipBodyArmor();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getAllArmorItems() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("eX", "getArmorAndBodyArmorSlots", "method_56674", "getAllArmorItems", "m_322068_"), "()Ljava/lang/Iterable;");
    }

    static jobject getAllArmorItems(const jobject& obj) {
                
       const auto methodID = methodID_getAllArmorItems();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getEquippedStack() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getItemBySlot", "method_6118", "getEquippedStack", "m_6844_"), "(Lbsy;)Lcuq;");
    }

    static jobject getEquippedStack(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getEquippedStack();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_equipStack() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setItemSlot", "method_5673", "equipStack", "m_21035_"), "(Lbsy;Lcuq;)V");
    }

    static void equipStack(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_equipStack();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_dropEquipment() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "dropCustomDeathLoot", "method_6099", "dropEquipment", "m_7472_"), "(Laqu;Lbrk;Z)V");
    }

    static void dropEquipment(const jobject& obj, const jobject& arg0, const jobject& arg1, const jboolean& arg2) {
                
       const auto methodID = methodID_dropEquipment();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_getDropChance() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "getEquipmentDropChance", "method_5929", "getDropChance", "m_21519_"), "(Lbsy;)F");
    }

    static jfloat getDropChance(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getDropChance();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_dropAllEquipment() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("fQ", "dropPreservedEquipment", "method_60973", "dropAllEquipment", "m_339194_"), "()V");
    }

    static void dropAllEquipment(const jobject& obj) {
                
       const auto methodID = methodID_dropAllEquipment();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID__dropEquipment() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "dropPreservedEquipment", "method_60972", "dropEquipment", "m_339901_"), "(Ljava/util/function/Predicate;)Ljava/util/Set;");
    }

    static jobject _dropEquipment(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__dropEquipment();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_createEquipmentLootParameters() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "createEquipmentParams", "method_58635", "createEquipmentLootParameters", "m_320276_"), "(Laqu;)Leru;");
    }

    static jobject createEquipmentLootParameters(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_createEquipmentLootParameters();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setEquipmentFromTable() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "equip", "method_58634", "setEquipmentFromTable", "m_319416_"), "(Lbta;)V");
    }

    static void setEquipmentFromTable(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setEquipmentFromTable();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__setEquipmentFromTable() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "equip", "method_59665", "setEquipmentFromTable", "m_322414_"), "(Lakq;Ljava/util/Map;)V");
    }

    static void _setEquipmentFromTable(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID__setEquipmentFromTable();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_initEquipment() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "populateDefaultEquipmentSlots", "method_5964", "initEquipment", "m_213945_"), "(Layw;Lbqp;)V");
    }

    static void initEquipment(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_initEquipment();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getEquipmentForSlot() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getEquipmentForSlot", "method_5948", "getEquipmentForSlot", "m_21412_"), "(Lbsy;I)Lcul;");
    }

    static jobject getEquipmentForSlot(const jobject& arg0, const jint& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_getEquipmentForSlot();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_updateEnchantments() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "populateDefaultEquipmentEnchantments", "method_5984", "updateEnchantments", "m_213946_"), "(Lddl;Layw;Lbqp;)V");
    }

    static void updateEnchantments(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_updateEnchantments();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_enchantMainHandItem() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "enchantSpawnedWeapon", "method_30759", "enchantMainHandItem", "m_214095_"), "(Lddl;Layw;Lbqp;)V");
    }

    static void enchantMainHandItem(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_enchantMainHandItem();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_enchantEquipment() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "enchantSpawnedArmor", "method_30758", "enchantEquipment", "m_217051_"), "(Lddl;Layw;Lbsy;Lbqp;)V");
    }

    static void enchantEquipment(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_enchantEquipment();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID__enchantEquipment() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "enchantSpawnedEquipment", "method_59927", "enchantEquipment", "m_340386_"), "(Lddl;Lbsy;Layw;FLbqp;)V");
    }

    static void _enchantEquipment(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jfloat& arg3, const jobject& arg4) {
                
       const auto methodID = methodID__enchantEquipment();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_initialize() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "finalizeSpawn", "method_5943", "initialize", "m_6518_"), "(Lddl;Lbqp;Lbtr;Lbuh;)Lbuh;");
    }

    static jobject initialize(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_initialize();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_setPersistent() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("fR", "setPersistenceRequired", "method_5971", "setPersistent", "m_21530_"), "()V");
    }

    static void setPersistent(const jobject& obj) {
                
       const auto methodID = methodID_setPersistent();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_setEquipmentDropChance() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setDropChance", "method_5946", "setEquipmentDropChance", "m_21409_"), "(Lbsy;F)V");
    }

    static void setEquipmentDropChance(const jobject& obj, const jobject& arg0, const jfloat& arg1) {
                
       const auto methodID = methodID_setEquipmentDropChance();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__canPickUpLoot() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("fS", "canPickUpLoot", "method_5936", "canPickUpLoot", "m_21531_"), "()Z");
    }

    static jboolean _canPickUpLoot(const jobject& obj) {
                
       const auto methodID = methodID__canPickUpLoot();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_setCanPickUpLoot() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a_", "setCanPickUpLoot", "method_5952", "setCanPickUpLoot", "m_21553_"), "(Z)V");
    }

    static void setCanPickUpLoot(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setCanPickUpLoot();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_canEquip() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "canTakeItem", "method_18397", "canEquip", "m_7066_"), "(Lcuq;)Z");
    }

    static jboolean canEquip(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_canEquip();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isPersistent() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("fT", "isPersistenceRequired", "method_5947", "isPersistent", "m_21532_"), "()Z");
    }

    static jboolean isPersistent(const jobject& obj) {
                
       const auto methodID = methodID_isPersistent();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_interact() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "interact", "method_5688", "interact", "m_6096_"), "(Lcmx;Lbqq;)Lbqr;");
    }

    static jobject interact(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_interact();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_interactWithItem() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "checkAndHandleImportantInteractions", "method_29506", "interactWithItem", "m_21499_"), "(Lcmx;Lbqq;)Lbqr;");
    }

    static jobject interactWithItem(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_interactWithItem();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_onPlayerSpawnedChild() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "onOffspringSpawnedFromEgg", "method_18249", "onPlayerSpawnedChild", "m_5502_"), "(Lcmx;Lbtp;)V");
    }

    static void onPlayerSpawnedChild(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_onPlayerSpawnedChild();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_interactMob() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "mobInteract", "method_5992", "interactMob", "m_6071_"), "(Lcmx;Lbqq;)Lbqr;");
    }

    static jobject interactMob(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_interactMob();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_isInWalkTargetRange() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("fU", "isWithinRestriction", "method_18411", "isInWalkTargetRange", "m_21533_"), "()Z");
    }

    static jboolean isInWalkTargetRange(const jobject& obj) {
                
       const auto methodID = methodID_isInWalkTargetRange();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID__isInWalkTargetRange() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "isWithinRestriction", "method_18407", "isInWalkTargetRange", "m_21444_"), "(Ljd;)Z");
    }

    static jboolean _isInWalkTargetRange(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__isInWalkTargetRange();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setPositionTarget() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "restrictTo", "method_18408", "setPositionTarget", "m_21446_"), "(Ljd;I)V");
    }

    static void setPositionTarget(const jobject& obj, const jobject& arg0, const jint& arg1) {
                
       const auto methodID = methodID_setPositionTarget();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getPositionTarget() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("fV", "getRestrictCenter", "method_18412", "getPositionTarget", "m_21534_"), "()Ljd;");
    }

    static jobject getPositionTarget(const jobject& obj) {
                
       const auto methodID = methodID_getPositionTarget();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getPositionTargetRange() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("fW", "getRestrictRadius", "method_18413", "getPositionTargetRange", "m_21535_"), "()F");
    }

    static jfloat getPositionTargetRange(const jobject& obj) {
                
       const auto methodID = methodID_getPositionTargetRange();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID_clearPositionTarget() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("fX", "clearRestriction", "method_35055", "clearPositionTarget", "m_147271_"), "()V");
    }

    static void clearPositionTarget(const jobject& obj) {
                
       const auto methodID = methodID_clearPositionTarget();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_hasPositionTarget() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("fY", "hasRestriction", "method_18410", "hasPositionTarget", "m_21536_"), "()Z");
    }

    static jboolean hasPositionTarget(const jobject& obj) {
                
       const auto methodID = methodID_hasPositionTarget();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_convertTo() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "convertTo", "method_29243", "convertTo", "m_21406_"), "(Lbsx;Z)Lbtp;");
    }

    static jobject convertTo(const jobject& obj, const jobject& arg0, const jboolean& arg1) {
                
       const auto methodID = methodID_convertTo();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getLeashData() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("X_", "getLeashData", "method_60955", "getLeashData", "m_338492_"), "()Lbtk$a;");
    }

    static jobject getLeashData(const jobject& obj) {
                
       const auto methodID = methodID_getLeashData();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_setLeashData() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setLeashData", "method_60960", "setLeashData", "m_338401_"), "(Lbtk$a;)V");
    }

    static void setLeashData(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setLeashData();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_detachLeash() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "dropLeash", "method_5932", "detachLeash", "m_21455_"), "(ZZ)V");
    }

    static void detachLeash(const jobject& obj, const jboolean& arg0, const jboolean& arg1) {
                
       const auto methodID = methodID_detachLeash();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__detachLeash() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("z", "leashTooFarBehaviour", "method_60970", "detachLeash", "m_339671_"), "()V");
    }

    static void _detachLeash(const jobject& obj) {
                
       const auto methodID = methodID__detachLeash();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_canBeLeashed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("y", "canBeLeashed", "method_5931", "canBeLeashed", "m_6573_"), "()Z");
    }

    static jboolean canBeLeashed(const jobject& obj) {
                
       const auto methodID = methodID_canBeLeashed();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_startRiding() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "startRiding", "method_5873", "startRiding", "m_7998_"), "(Lbsr;Z)Z");
    }

    static jboolean startRiding(const jobject& obj, const jobject& arg0, const jboolean& arg1) {
                
       const auto methodID = methodID_startRiding();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_canMoveVoluntarily() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("db", "isEffectiveAi", "method_6034", "canMoveVoluntarily", "m_21515_"), "()Z");
    }

    static jboolean canMoveVoluntarily(const jobject& obj) {
                
       const auto methodID = methodID_canMoveVoluntarily();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_setAiDisabled() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("u", "setNoAi", "method_5977", "setAiDisabled", "m_21557_"), "(Z)V");
    }

    static void setAiDisabled(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setAiDisabled();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setLeftHanded() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("v", "setLeftHanded", "method_5937", "setLeftHanded", "m_21559_"), "(Z)V");
    }

    static void setLeftHanded(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setLeftHanded();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setAttacking() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("w", "setAggressive", "method_19540", "setAttacking", "m_21561_"), "(Z)V");
    }

    static void setAttacking(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setAttacking();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isAiDisabled() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("fZ", "isNoAi", "method_5987", "isAiDisabled", "m_21525_"), "()Z");
    }

    static jboolean isAiDisabled(const jobject& obj) {
                
       const auto methodID = methodID_isAiDisabled();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isLeftHanded() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ga", "isLeftHanded", "method_5961", "isLeftHanded", "m_21526_"), "()Z");
    }

    static jboolean isLeftHanded(const jobject& obj) {
                
       const auto methodID = methodID_isLeftHanded();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isAttacking() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gb", "isAggressive", "method_6510", "isAttacking", "m_5912_"), "()Z");
    }

    static jboolean isAttacking(const jobject& obj) {
                
       const auto methodID = methodID_isAttacking();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_setBaby() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setBaby", "method_7217", "setBaby", "m_6863_"), "(Z)V");
    }

    static void setBaby(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setBaby();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getMainArm() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("fq", "getMainArm", "method_6068", "getMainArm", "m_5737_"), "()Lbtg;");
    }

    static jobject getMainArm(const jobject& obj) {
                
       const auto methodID = methodID_getMainArm();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_isInAttackRange() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("i", "isWithinMeleeAttackRange", "method_42150", "isInAttackRange", "m_217066_"), "(Lbtn;)Z");
    }

    static jboolean isInAttackRange(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_isInAttackRange();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getAttackBox() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gc", "getAttackBoundingBox", "method_53511", "getAttackBox", "m_292684_"), "()Lewx;");
    }

    static jobject getAttackBox(const jobject& obj) {
                
       const auto methodID = methodID_getAttackBox();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_tryAttack() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("D", "doHurtTarget", "method_6121", "tryAttack", "m_7327_"), "(Lbsr;)Z");
    }

    static jboolean tryAttack(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_tryAttack();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_playAttackSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gd", "playAttackSound", "method_59928", "playAttackSound", "m_339982_"), "()V");
    }

    static void playAttackSound(const jobject& obj) {
                
       const auto methodID = methodID_playAttackSound();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_isAffectedByDaylight() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ge", "isSunBurnTick", "method_5972", "isAffectedByDaylight", "m_21527_"), "()Z");
    }

    static jboolean isAffectedByDaylight(const jobject& obj) {
                
       const auto methodID = methodID_isAffectedByDaylight();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_swimUpward() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "jumpInLiquid", "method_6010", "swimUpward", "m_203347_"), "(Lawu;)V");
    }

    static void swimUpward(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_swimUpward();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_clearGoalsAndTasks() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gf", "removeFreeWill", "method_35056", "clearGoalsAndTasks", "m_147272_"), "()V");
    }

    static void clearGoalsAndTasks(const jobject& obj) {
                
       const auto methodID = methodID_clearGoalsAndTasks();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_clearGoals() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "removeAllGoals", "method_47825", "clearGoals", "m_262441_"), "(Ljava/util/function/Predicate;)V");
    }

    static void clearGoals(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_clearGoals();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_removeFromDimension() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("cw", "removeAfterChangingDimensions", "method_30076", "removeFromDimension", "m_6089_"), "()V");
    }

    static void removeFromDimension(const jobject& obj) {
                
       const auto methodID = methodID_removeFromDimension();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getPickBlockStack() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("dB", "getPickResult", "method_31480", "getPickBlockStack", "m_142340_"), "()Lcuq;");
    }

    static jobject getPickBlockStack(const jobject& obj) {
                
       const auto methodID = methodID_getPickBlockStack();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_ENTITY_MOB_MOBENTITY_HPP