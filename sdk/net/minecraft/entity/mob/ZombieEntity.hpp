// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ENTITY_MOB_ZOMBIEENTITY_HPP
#define NET_MINECRAFT_ENTITY_MOB_ZOMBIEENTITY_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.entity.mob.ZombieEntity
 * Remapped: ckw
 */
namespace ZombieEntity {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("ckw", "net/minecraft/world/entity/monster/Zombie", "net/minecraft/class_1642", "net/minecraft/entity/mob/ZombieEntity", "net/minecraft/src/C_1092_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.entity.mob.ZombieEntity#BABY_SPEED_MODIFIER_ID
    [[maybe_unused]] static jobject get_field_BABY_SPEED_MODIFIER_ID() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "SPEED_MODIFIER_BABY_ID", "field_7429", "BABY_SPEED_MODIFIER_ID", "f_336940_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.ZombieEntity#BABY_SPEED_MODIFIER_ID
    [[maybe_unused]] static void set_field_BABY_SPEED_MODIFIER_ID(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "SPEED_MODIFIER_BABY_ID", "field_7429", "BABY_SPEED_MODIFIER_ID", "f_336940_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.mob.ZombieEntity#BABY_SPEED_BONUS
    [[maybe_unused]] static jobject get_field_BABY_SPEED_BONUS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "SPEED_MODIFIER_BABY", "field_7430", "BABY_SPEED_BONUS", "f_34267_"), "Lbuu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.ZombieEntity#BABY_SPEED_BONUS
    [[maybe_unused]] static void set_field_BABY_SPEED_BONUS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "SPEED_MODIFIER_BABY", "field_7430", "BABY_SPEED_BONUS", "f_34267_"), "Lbuu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.mob.ZombieEntity#REINFORCEMENT_CALLER_CHARGE_MODIFIER_ID
    [[maybe_unused]] static jobject get_field_REINFORCEMENT_CALLER_CHARGE_MODIFIER_ID() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "REINFORCEMENT_CALLER_CHARGE_ID", "field_52018", "REINFORCEMENT_CALLER_CHARGE_MODIFIER_ID", "f_337471_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.ZombieEntity#REINFORCEMENT_CALLER_CHARGE_MODIFIER_ID
    [[maybe_unused]] static void set_field_REINFORCEMENT_CALLER_CHARGE_MODIFIER_ID(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "REINFORCEMENT_CALLER_CHARGE_ID", "field_52018", "REINFORCEMENT_CALLER_CHARGE_MODIFIER_ID", "f_337471_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.mob.ZombieEntity#REINFORCEMENT_CALLEE_CHARGE_REINFORCEMENT_BONUS
    [[maybe_unused]] static jobject get_field_REINFORCEMENT_CALLEE_CHARGE_REINFORCEMENT_BONUS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cf", "ZOMBIE_REINFORCEMENT_CALLEE_CHARGE", "field_52016", "REINFORCEMENT_CALLEE_CHARGE_REINFORCEMENT_BONUS", "f_337397_"), "Lbuu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.ZombieEntity#REINFORCEMENT_CALLEE_CHARGE_REINFORCEMENT_BONUS
    [[maybe_unused]] static void set_field_REINFORCEMENT_CALLEE_CHARGE_REINFORCEMENT_BONUS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cf", "ZOMBIE_REINFORCEMENT_CALLEE_CHARGE", "field_52016", "REINFORCEMENT_CALLEE_CHARGE_REINFORCEMENT_BONUS", "f_337397_"), "Lbuu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.mob.ZombieEntity#LEADER_ZOMBIE_BONUS_MODIFIER_ID
    [[maybe_unused]] static jobject get_field_LEADER_ZOMBIE_BONUS_MODIFIER_ID() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cg", "LEADER_ZOMBIE_BONUS_ID", "field_52017", "LEADER_ZOMBIE_BONUS_MODIFIER_ID", "f_337184_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.ZombieEntity#LEADER_ZOMBIE_BONUS_MODIFIER_ID
    [[maybe_unused]] static void set_field_LEADER_ZOMBIE_BONUS_MODIFIER_ID(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cg", "LEADER_ZOMBIE_BONUS_ID", "field_52017", "LEADER_ZOMBIE_BONUS_MODIFIER_ID", "f_337184_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.mob.ZombieEntity#ZOMBIE_RANDOM_SPAWN_BONUS_MODIFIER_ID
    [[maybe_unused]] static jobject get_field_ZOMBIE_RANDOM_SPAWN_BONUS_MODIFIER_ID() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ch", "ZOMBIE_RANDOM_SPAWN_BONUS_ID", "field_52193", "ZOMBIE_RANDOM_SPAWN_BONUS_MODIFIER_ID", "f_336709_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.ZombieEntity#ZOMBIE_RANDOM_SPAWN_BONUS_MODIFIER_ID
    [[maybe_unused]] static void set_field_ZOMBIE_RANDOM_SPAWN_BONUS_MODIFIER_ID(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ch", "ZOMBIE_RANDOM_SPAWN_BONUS_ID", "field_52193", "ZOMBIE_RANDOM_SPAWN_BONUS_MODIFIER_ID", "f_336709_"), "Lakr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.mob.ZombieEntity#BABY
    [[maybe_unused]] static jobject get_field_BABY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ci", "DATA_BABY_ID", "field_7434", "BABY", "f_34268_"), "Lajw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.ZombieEntity#BABY
    [[maybe_unused]] static void set_field_BABY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ci", "DATA_BABY_ID", "field_7434", "BABY", "f_34268_"), "Lajw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.mob.ZombieEntity#ZOMBIE_TYPE
    [[maybe_unused]] static jobject get_field_ZOMBIE_TYPE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cj", "DATA_SPECIAL_TYPE_ID", "field_7427", "ZOMBIE_TYPE", "f_34260_"), "Lajw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.ZombieEntity#ZOMBIE_TYPE
    [[maybe_unused]] static void set_field_ZOMBIE_TYPE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cj", "DATA_SPECIAL_TYPE_ID", "field_7427", "ZOMBIE_TYPE", "f_34260_"), "Lajw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.mob.ZombieEntity#CONVERTING_IN_WATER
    [[maybe_unused]] static jobject get_field_CONVERTING_IN_WATER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ck", "DATA_DROWNED_CONVERSION_ID", "field_7425", "CONVERTING_IN_WATER", "f_34261_"), "Lajw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.ZombieEntity#CONVERTING_IN_WATER
    [[maybe_unused]] static void set_field_CONVERTING_IN_WATER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ck", "DATA_DROWNED_CONVERSION_ID", "field_7425", "CONVERTING_IN_WATER", "f_34261_"), "Lajw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.mob.ZombieEntity#field_30519
    [[maybe_unused]] static jfloat get_field_field_30519() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "ZOMBIE_LEADER_CHANCE", "field_30519", "field_30519", "f_149884_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.mob.ZombieEntity#field_30519
    [[maybe_unused]] static void set_field_field_30519(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "ZOMBIE_LEADER_CHANCE", "field_30519", "field_30519", "f_149884_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.mob.ZombieEntity#field_30515
    [[maybe_unused]] static jint get_field_field_30515() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cc", "REINFORCEMENT_ATTEMPTS", "field_30515", "field_30515", "f_149880_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.mob.ZombieEntity#field_30515
    [[maybe_unused]] static void set_field_field_30515(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cc", "REINFORCEMENT_ATTEMPTS", "field_30515", "field_30515", "f_149880_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.mob.ZombieEntity#field_30516
    [[maybe_unused]] static jint get_field_field_30516() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cd", "REINFORCEMENT_RANGE_MAX", "field_30516", "field_30516", "f_149881_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.mob.ZombieEntity#field_30516
    [[maybe_unused]] static void set_field_field_30516(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cd", "REINFORCEMENT_RANGE_MAX", "field_30516", "field_30516", "f_149881_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.mob.ZombieEntity#field_30517
    [[maybe_unused]] static jint get_field_field_30517() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ce", "REINFORCEMENT_RANGE_MIN", "field_30517", "field_30517", "f_149882_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.mob.ZombieEntity#field_30517
    [[maybe_unused]] static void set_field_field_30517(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ce", "REINFORCEMENT_RANGE_MIN", "field_30517", "field_30517", "f_149882_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.mob.ZombieEntity#BABY_BASE_DIMENSIONS
    [[maybe_unused]] static jobject get_field_BABY_BASE_DIMENSIONS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cl", "BABY_DIMENSIONS", "field_47811", "BABY_BASE_DIMENSIONS", "f_315078_"), "Lbsu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.ZombieEntity#BABY_BASE_DIMENSIONS
    [[maybe_unused]] static void set_field_BABY_BASE_DIMENSIONS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cl", "BABY_DIMENSIONS", "field_47811", "BABY_BASE_DIMENSIONS", "f_315078_"), "Lbsu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.mob.ZombieEntity#field_30518
    [[maybe_unused]] static jfloat get_field_field_30518() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cm", "BREAK_DOOR_CHANCE", "field_30518", "field_30518", "f_149883_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.ZombieEntity#field_30518
    [[maybe_unused]] static void set_field_field_30518(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cm", "BREAK_DOOR_CHANCE", "field_30518", "field_30518", "f_149883_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.mob.ZombieEntity#DOOR_BREAK_DIFFICULTY_CHECKER
    [[maybe_unused]] static jobject get_field_DOOR_BREAK_DIFFICULTY_CHECKER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cn", "DOOR_BREAKING_PREDICATE", "field_19015", "DOOR_BREAK_DIFFICULTY_CHECKER", "f_34262_"), "Ljava/util/function/Predicate;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.ZombieEntity#DOOR_BREAK_DIFFICULTY_CHECKER
    [[maybe_unused]] static void set_field_DOOR_BREAK_DIFFICULTY_CHECKER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cn", "DOOR_BREAKING_PREDICATE", "field_19015", "DOOR_BREAK_DIFFICULTY_CHECKER", "f_34262_"), "Ljava/util/function/Predicate;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.entity.mob.ZombieEntity#breakDoorsGoal
    static jobject get_field_breakDoorsGoal(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("co", "breakDoorGoal", "field_7433", "breakDoorsGoal", "f_34263_"), "Lbzw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.ZombieEntity#breakDoorsGoal
    static void set_field_breakDoorsGoal(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("co", "breakDoorGoal", "field_7433", "breakDoorsGoal", "f_34263_"), "Lbzw;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.mob.ZombieEntity#canBreakDoors
    static jboolean get_field_canBreakDoors(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cp", "canBreakDoors", "field_7432", "canBreakDoors", "f_34264_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.ZombieEntity#canBreakDoors
    static void set_field_canBreakDoors(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cp", "canBreakDoors", "field_7432", "canBreakDoors", "f_34264_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.mob.ZombieEntity#inWaterTime
    static jint get_field_inWaterTime(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cq", "inWaterTime", "field_7426", "inWaterTime", "f_34265_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.ZombieEntity#inWaterTime
    static void set_field_inWaterTime(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cq", "inWaterTime", "field_7426", "inWaterTime", "f_34265_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.mob.ZombieEntity#ticksUntilWaterConversion
    static jint get_field_ticksUntilWaterConversion(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cr", "conversionTime", "field_7424", "ticksUntilWaterConversion", "f_34266_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.ZombieEntity#ticksUntilWaterConversion
    static void set_field_ticksUntilWaterConversion(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cr", "conversionTime", "field_7424", "ticksUntilWaterConversion", "f_34266_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    static jmethodID methodID_initGoals() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("B", "registerGoals", "method_5959", "initGoals", "m_8099_"), "()V");
    }

    static void initGoals(const jobject& obj) {
                
       const auto methodID = methodID_initGoals();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_initCustomGoals() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("t", "addBehaviourGoals", "method_7208", "initCustomGoals", "m_6878_"), "()V");
    }

    static void initCustomGoals(const jobject& obj) {
                
       const auto methodID = methodID_initCustomGoals();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_createZombieAttributes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("go", "createAttributes", "method_26940", "createZombieAttributes", "m_34328_"), "()Lbuv$a;");
    }

    static jobject createZombieAttributes() {
       const auto clazz = self();
       const auto methodID = methodID_createZombieAttributes();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_initDataTracker() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "defineSynchedData", "method_5693", "initDataTracker", "m_8097_"), "(Laka$a;)V");
    }

    static void initDataTracker(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_initDataTracker();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isConvertingInWater() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gr", "isUnderWaterConverting", "method_7206", "isConvertingInWater", "m_34329_"), "()Z");
    }

    static jboolean isConvertingInWater(const jobject& obj) {
                
       const auto methodID = methodID_isConvertingInWater();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID__canBreakDoors() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gs", "canBreakDoors", "method_7211", "canBreakDoors", "m_34330_"), "()Z");
    }

    static jboolean _canBreakDoors(const jobject& obj) {
                
       const auto methodID = methodID__canBreakDoors();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_setCanBreakDoors() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("y", "setCanBreakDoors", "method_7201", "setCanBreakDoors", "m_34336_"), "(Z)V");
    }

    static void setCanBreakDoors(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setCanBreakDoors();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_shouldBreakDoors() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("x", "supportsBreakDoorGoal", "method_7212", "shouldBreakDoors", "m_7586_"), "()Z");
    }

    static jboolean shouldBreakDoors(const jobject& obj) {
                
       const auto methodID = methodID_shouldBreakDoors();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isBaby() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("o_", "isBaby", "method_6109", "isBaby", "m_6162_"), "()Z");
    }

    static jboolean isBaby(const jobject& obj) {
                
       const auto methodID = methodID_isBaby();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getXpToDrop() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("eg", "getBaseExperienceReward", "method_6110", "getXpToDrop", "m_213860_"), "()I");
    }

    static jint getXpToDrop(const jobject& obj) {
                
       const auto methodID = methodID_getXpToDrop();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_setBaby() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setBaby", "method_7217", "setBaby", "m_6863_"), "(Z)V");
    }

    static void setBaby(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setBaby();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_onTrackedDataSet() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "onSyncedDataUpdated", "method_5674", "onTrackedDataSet", "m_7350_"), "(Lajw;)V");
    }

    static void onTrackedDataSet(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onTrackedDataSet();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_canConvertInWater() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gm", "convertsInWater", "method_7209", "canConvertInWater", "m_7593_"), "()Z");
    }

    static jboolean canConvertInWater(const jobject& obj) {
                
       const auto methodID = methodID_canConvertInWater();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_tick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("l", "tick", "method_5773", "tick", "m_8119_"), "()V");
    }

    static void tick(const jobject& obj) {
                
       const auto methodID = methodID_tick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_tickMovement() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("m_", "aiStep", "method_6007", "tickMovement", "m_8107_"), "()V");
    }

    static void tickMovement(const jobject& obj) {
                
       const auto methodID = methodID_tickMovement();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_setTicksUntilWaterConversion() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "startUnderWaterConversion", "method_7213", "setTicksUntilWaterConversion", "m_34278_"), "(I)V");
    }

    static void setTicksUntilWaterConversion(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_setTicksUntilWaterConversion();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_convertInWater() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ag_", "doUnderWaterConversion", "method_7218", "convertInWater", "m_7595_"), "()V");
    }

    static void convertInWater(const jobject& obj) {
                
       const auto methodID = methodID_convertInWater();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_convertTo() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "convertToZombieType", "method_7200", "convertTo", "m_34310_"), "(Lbsx;)V");
    }

    static void convertTo(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_convertTo();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_burnsInDaylight() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ah_", "isSunSensitive", "method_7216", "burnsInDaylight", "m_5884_"), "()Z");
    }

    static jboolean burnsInDaylight(const jobject& obj) {
                
       const auto methodID = methodID_burnsInDaylight();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_damage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "hurt", "method_5643", "damage", "m_6469_"), "(Lbrk;F)Z");
    }

    static jboolean damage(const jobject& obj, const jobject& arg0, const jfloat& arg1) {
                
       const auto methodID = methodID_damage();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_tryAttack() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("D", "doHurtTarget", "method_6121", "tryAttack", "m_7327_"), "(Lbsr;)Z");
    }

    static jboolean tryAttack(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_tryAttack();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getAmbientSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("v", "getAmbientSound", "method_5994", "getAmbientSound", "m_7515_"), "()Lavo;");
    }

    static jobject getAmbientSound(const jobject& obj) {
                
       const auto methodID = methodID_getAmbientSound();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getHurtSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getHurtSound", "method_6011", "getHurtSound", "m_7975_"), "(Lbrk;)Lavo;");
    }

    static jobject getHurtSound(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getHurtSound();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getDeathSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("n_", "getDeathSound", "method_6002", "getDeathSound", "m_5592_"), "()Lavo;");
    }

    static jobject getDeathSound(const jobject& obj) {
                
       const auto methodID = methodID_getDeathSound();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getStepSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gk", "getStepSound", "method_7207", "getStepSound", "m_7660_"), "()Lavo;");
    }

    static jobject getStepSound(const jobject& obj) {
                
       const auto methodID = methodID_getStepSound();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_playStepSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "playStepSound", "method_5712", "playStepSound", "m_7355_"), "(Ljd;Ldtc;)V");
    }

    static void playStepSound(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_playStepSound();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_initEquipment() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "populateDefaultEquipmentSlots", "method_5964", "initEquipment", "m_213945_"), "(Layw;Lbqp;)V");
    }

    static void initEquipment(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_initEquipment();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_writeCustomDataToNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "addAdditionalSaveData", "method_5652", "writeCustomDataToNbt", "m_7380_"), "(Lub;)V");
    }

    static void writeCustomDataToNbt(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_writeCustomDataToNbt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_readCustomDataFromNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "readAdditionalSaveData", "method_5749", "readCustomDataFromNbt", "m_7378_"), "(Lub;)V");
    }

    static void readCustomDataFromNbt(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_readCustomDataFromNbt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_onKilledOther() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "killedEntity", "method_5874", "onKilledOther", "m_214076_"), "(Laqu;Lbtn;)Z");
    }

    static jboolean onKilledOther(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_onKilledOther();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getBaseDimensions() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "getDefaultDimensions", "method_55694", "getBaseDimensions", "m_31586_"), "(Lbua;)Lbsu;");
    }

    static jobject getBaseDimensions(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getBaseDimensions();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_canPickupItem() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("j", "canHoldItem", "method_5939", "canPickupItem", "m_7252_"), "(Lcuq;)Z");
    }

    static jboolean canPickupItem(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_canPickupItem();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_canGather() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("k", "wantsToPickUp", "method_20820", "canGather", "m_7243_"), "(Lcuq;)Z");
    }

    static jboolean canGather(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_canGather();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_initialize() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "finalizeSpawn", "method_5943", "initialize", "m_6518_"), "(Lddl;Lbqp;Lbtr;Lbuh;)Lbuh;");
    }

    static jobject initialize(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_initialize();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_shouldBeBaby() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getSpawnAsBabyOdds", "method_29936", "shouldBeBaby", "m_219162_"), "(Layw;)Z");
    }

    static jboolean shouldBeBaby(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_shouldBeBaby();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_applyAttributeModifiers() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("H", "handleAttributes", "method_7205", "applyAttributeModifiers", "m_34339_"), "(F)V");
    }

    static void applyAttributeModifiers(const jobject& obj, const jfloat& arg0) {
                
       const auto methodID = methodID_applyAttributeModifiers();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_initAttributes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gt", "randomizeReinforcementsChance", "method_6001", "initAttributes", "m_7572_"), "()V");
    }

    static void initAttributes(const jobject& obj) {
                
       const auto methodID = methodID_initAttributes();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_dropEquipment() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "dropCustomDeathLoot", "method_6099", "dropEquipment", "m_7472_"), "(Laqu;Lbrk;Z)V");
    }

    static void dropEquipment(const jobject& obj, const jobject& arg0, const jobject& arg1, const jboolean& arg2) {
                
       const auto methodID = methodID_dropEquipment();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_getSkull() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gl", "getSkull", "method_7215", "getSkull", "m_5728_"), "()Lcuq;");
    }

    static jobject getSkull(const jobject& obj) {
                
       const auto methodID = methodID_getSkull();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_ENTITY_MOB_ZOMBIEENTITY_HPP