// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ENTITY_MOB_DROWNEDENTITY_HPP
#define NET_MINECRAFT_ENTITY_MOB_DROWNEDENTITY_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.entity.mob.DrownedEntity
 * Remapped: cjr
 */
namespace DrownedEntity {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("cjr", "net/minecraft/world/entity/monster/Drowned", "net/minecraft/class_1551", "net/minecraft/entity/mob/DrownedEntity", "net/minecraft/src/C_990_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.entity.mob.DrownedEntity#field_30460
    [[maybe_unused]] static jfloat get_field_field_30460() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "NAUTILUS_SHELL_CHANCE", "field_30460", "field_30460", "f_149692_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.mob.DrownedEntity#field_30460
    [[maybe_unused]] static void set_field_field_30460(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "NAUTILUS_SHELL_CHANCE", "field_30460", "field_30460", "f_149692_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for default field net.minecraft.entity.mob.DrownedEntity#targetingUnderwater
    static jboolean get_field_targetingUnderwater(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cf", "searchingForLand", "field_7233", "targetingUnderwater", "f_32342_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static default field net.minecraft.entity.mob.DrownedEntity#targetingUnderwater
    static void set_field_targetingUnderwater(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cf", "searchingForLand", "field_7233", "targetingUnderwater", "f_32342_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.entity.mob.DrownedEntity#waterNavigation
    static jobject get_field_waterNavigation(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "waterNavigation", "field_7234", "waterNavigation", "f_32340_"), "Lcdc;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.entity.mob.DrownedEntity#waterNavigation
    static void set_field_waterNavigation(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "waterNavigation", "field_7234", "waterNavigation", "f_32340_"), "Lcdc;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.entity.mob.DrownedEntity#landNavigation
    static jobject get_field_landNavigation(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "groundNavigation", "field_7232", "landNavigation", "f_32341_"), "Lccz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.entity.mob.DrownedEntity#landNavigation
    static void set_field_landNavigation(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "groundNavigation", "field_7232", "landNavigation", "f_32341_"), "Lccz;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_createDrownedAttributes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("s", "createAttributes", "method_55746", "createDrownedAttributes", "m_320431_"), "()Lbuv$a;");
    }

    static jobject createDrownedAttributes() {
       const auto clazz = self();
       const auto methodID = methodID_createDrownedAttributes();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_initCustomGoals() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("t", "addBehaviourGoals", "method_7208", "initCustomGoals", "m_6878_"), "()V");
    }

    static void initCustomGoals(const jobject& obj) {
                
       const auto methodID = methodID_initCustomGoals();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_initialize() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "finalizeSpawn", "method_5943", "initialize", "m_6518_"), "(Lddl;Lbqp;Lbtr;Lbuh;)Lbuh;");
    }

    static jobject initialize(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_initialize();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_canSpawn() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "checkDrownedSpawnRules", "method_20673", "canSpawn", "m_218955_"), "(Lbsx;Lddl;Lbtr;Ljd;Layw;)Z");
    }

    static jboolean canSpawn(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jobject& arg4) {
       const auto clazz = self();
       const auto methodID = methodID_canSpawn();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_isValidSpawnDepth() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "isDeepEnoughToSpawn", "method_20672", "isValidSpawnDepth", "m_32366_"), "(Ldcx;Ljd;)Z");
    }

    static jboolean isValidSpawnDepth(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_isValidSpawnDepth();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_shouldBreakDoors() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("x", "supportsBreakDoorGoal", "method_7212", "shouldBreakDoors", "m_7586_"), "()Z");
    }

    static jboolean shouldBreakDoors(const jobject& obj) {
                
       const auto methodID = methodID_shouldBreakDoors();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getAmbientSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("v", "getAmbientSound", "method_5994", "getAmbientSound", "m_7515_"), "()Lavo;");
    }

    static jobject getAmbientSound(const jobject& obj) {
                
       const auto methodID = methodID_getAmbientSound();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getHurtSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getHurtSound", "method_6011", "getHurtSound", "m_7975_"), "(Lbrk;)Lavo;");
    }

    static jobject getHurtSound(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getHurtSound();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getDeathSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("n_", "getDeathSound", "method_6002", "getDeathSound", "m_5592_"), "()Lavo;");
    }

    static jobject getDeathSound(const jobject& obj) {
                
       const auto methodID = methodID_getDeathSound();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getStepSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gk", "getStepSound", "method_7207", "getStepSound", "m_7660_"), "()Lavo;");
    }

    static jobject getStepSound(const jobject& obj) {
                
       const auto methodID = methodID_getStepSound();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getSwimSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aQ", "getSwimSound", "method_5737", "getSwimSound", "m_5501_"), "()Lavo;");
    }

    static jobject getSwimSound(const jobject& obj) {
                
       const auto methodID = methodID_getSwimSound();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getSkull() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gl", "getSkull", "method_7215", "getSkull", "m_5728_"), "()Lcuq;");
    }

    static jobject getSkull(const jobject& obj) {
                
       const auto methodID = methodID_getSkull();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_initEquipment() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "populateDefaultEquipmentSlots", "method_5964", "initEquipment", "m_213945_"), "(Layw;Lbqp;)V");
    }

    static void initEquipment(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_initEquipment();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_prefersNewEquipment() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "canReplaceCurrentItem", "method_5955", "prefersNewEquipment", "m_7808_"), "(Lcuq;Lcuq;)Z");
    }

    static jboolean prefersNewEquipment(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_prefersNewEquipment();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_canConvertInWater() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gm", "convertsInWater", "method_7209", "canConvertInWater", "m_7593_"), "()Z");
    }

    static jboolean canConvertInWater(const jobject& obj) {
                
       const auto methodID = methodID_canConvertInWater();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID__canSpawn() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "checkSpawnObstruction", "method_5957", "canSpawn", "m_6914_"), "(Ldcz;)Z");
    }

    static jboolean _canSpawn(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__canSpawn();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_canDrownedAttackTarget() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("j", "okTarget", "method_7012", "canDrownedAttackTarget", "m_32395_"), "(Lbtn;)Z");
    }

    static jboolean canDrownedAttackTarget(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_canDrownedAttackTarget();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isPushedByFluids() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("cC", "isPushedByFluid", "method_5675", "isPushedByFluids", "m_6063_"), "()Z");
    }

    static jboolean isPushedByFluids(const jobject& obj) {
                
       const auto methodID = methodID_isPushedByFluids();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isTargetingUnderwater() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gu", "wantsToSwim", "method_7018", "isTargetingUnderwater", "m_32392_"), "()Z");
    }

    static jboolean isTargetingUnderwater(const jobject& obj) {
                
       const auto methodID = methodID_isTargetingUnderwater();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_travel() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "travel", "method_6091", "travel", "m_7023_"), "(Lexc;)V");
    }

    static void travel(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_travel();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_updateSwimming() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("bl", "updateSwimming", "method_5790", "updateSwimming", "m_5844_"), "()V");
    }

    static void updateSwimming(const jobject& obj) {
                
       const auto methodID = methodID_updateSwimming();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_isInSwimmingPose() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ce", "isVisuallySwimming", "method_20232", "isInSwimmingPose", "m_6067_"), "()Z");
    }

    static jboolean isInSwimmingPose(const jobject& obj) {
                
       const auto methodID = methodID_isInSwimmingPose();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_hasFinishedCurrentPath() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gn", "closeToNextPos", "method_7016", "hasFinishedCurrentPath", "m_32391_"), "()Z");
    }

    static jboolean hasFinishedCurrentPath(const jobject& obj) {
                
       const auto methodID = methodID_hasFinishedCurrentPath();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_shootAt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "performRangedAttack", "method_7105", "shootAt", "m_6504_"), "(Lbtn;F)V");
    }

    static void shootAt(const jobject& obj, const jobject& arg0, const jfloat& arg1) {
                
       const auto methodID = methodID_shootAt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_setTargetingUnderwater() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("x", "setSearchingForLand", "method_7013", "setTargetingUnderwater", "m_32398_"), "(Z)V");
    }

    static void setTargetingUnderwater(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setTargetingUnderwater();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_ENTITY_MOB_DROWNEDENTITY_HPP