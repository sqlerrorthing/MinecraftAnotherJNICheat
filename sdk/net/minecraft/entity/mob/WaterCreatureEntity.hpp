// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ENTITY_MOB_WATERCREATUREENTITY_HPP
#define NET_MINECRAFT_ENTITY_MOB_WATERCREATUREENTITY_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.entity.mob.WaterCreatureEntity
 * Remapped: cgg
 */
namespace WaterCreatureEntity {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("cgg", "net/minecraft/world/entity/animal/WaterAnimal", "net/minecraft/class_1480", "net/minecraft/entity/mob/WaterCreatureEntity", "net/minecraft/src/C_921_"));
        }
        return cachedClass;
    };

    static jmethodID methodID_canSpawn() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "checkSpawnObstruction", "method_5957", "canSpawn", "m_6914_"), "(Ldcz;)Z");
    }

    static jboolean canSpawn(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_canSpawn();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getMinAmbientSoundDelay() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("R", "getAmbientSoundInterval", "method_5970", "getMinAmbientSoundDelay", "m_8100_"), "()I");
    }

    static jint getMinAmbientSoundDelay(const jobject& obj) {
                
       const auto methodID = methodID_getMinAmbientSoundDelay();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getXpToDrop() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("eg", "getBaseExperienceReward", "method_6110", "getXpToDrop", "m_213860_"), "()I");
    }

    static jint getXpToDrop(const jobject& obj) {
                
       const auto methodID = methodID_getXpToDrop();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_tickWaterBreathingAir() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "handleAirSupply", "method_6673", "tickWaterBreathingAir", "m_6229_"), "(I)V");
    }

    static void tickWaterBreathingAir(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_tickWaterBreathingAir();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_baseTick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aw", "baseTick", "method_5670", "baseTick", "m_6075_"), "()V");
    }

    static void baseTick(const jobject& obj) {
                
       const auto methodID = methodID_baseTick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_isPushedByFluids() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("cC", "isPushedByFluid", "method_5675", "isPushedByFluids", "m_6063_"), "()Z");
    }

    static jboolean isPushedByFluids(const jobject& obj) {
                
       const auto methodID = methodID_isPushedByFluids();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_canBeLeashed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("y", "canBeLeashed", "method_5931", "canBeLeashed", "m_6573_"), "()Z");
    }

    static jboolean canBeLeashed(const jobject& obj) {
                
       const auto methodID = methodID_canBeLeashed();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID__canSpawn() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "checkSurfaceWaterAnimalSpawnRules", "method_38986", "canSpawn", "m_218282_"), "(Lbsx;Ldcx;Lbtr;Ljd;Layw;)Z");
    }

    static jboolean _canSpawn(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jobject& arg4) {
       const auto clazz = self();
       const auto methodID = methodID__canSpawn();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
};

#endif // NET_MINECRAFT_ENTITY_MOB_WATERCREATUREENTITY_HPP