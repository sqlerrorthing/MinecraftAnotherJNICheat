// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ENTITY_MOB_ZOGLINENTITY_HPP
#define NET_MINECRAFT_ENTITY_MOB_ZOGLINENTITY_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.entity.mob.ZoglinEntity
 * Remapped: ckv
 */
namespace ZoglinEntity {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("ckv", "net/minecraft/world/entity/monster/Zoglin", "net/minecraft/class_5136", "net/minecraft/entity/mob/ZoglinEntity", "net/minecraft/src/C_1091_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.entity.mob.ZoglinEntity#BABY
    [[maybe_unused]] static jobject get_field_BABY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "DATA_BABY_ID", "field_23734", "BABY", "f_34201_"), "Lajw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.ZoglinEntity#BABY
    [[maybe_unused]] static void set_field_BABY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "DATA_BABY_ID", "field_23734", "BABY", "f_34201_"), "Lajw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.mob.ZoglinEntity#field_30514
    [[maybe_unused]] static jint get_field_field_30514() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "MAX_HEALTH", "field_30514", "field_30514", "f_149879_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.ZoglinEntity#field_30514
    [[maybe_unused]] static void set_field_field_30514(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "MAX_HEALTH", "field_30514", "field_30514", "f_149879_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.mob.ZoglinEntity#field_30505
    [[maybe_unused]] static jint get_field_field_30505() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cc", "ATTACK_KNOCKBACK", "field_30505", "field_30505", "f_149870_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.ZoglinEntity#field_30505
    [[maybe_unused]] static void set_field_field_30505(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cc", "ATTACK_KNOCKBACK", "field_30505", "field_30505", "f_149870_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.mob.ZoglinEntity#DEFAULT_KNOCKBACK_RESISTANCE
    [[maybe_unused]] static jfloat get_field_DEFAULT_KNOCKBACK_RESISTANCE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cd", "KNOCKBACK_RESISTANCE", "field_30506", "DEFAULT_KNOCKBACK_RESISTANCE", "f_149871_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.ZoglinEntity#DEFAULT_KNOCKBACK_RESISTANCE
    [[maybe_unused]] static void set_field_DEFAULT_KNOCKBACK_RESISTANCE(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cd", "KNOCKBACK_RESISTANCE", "field_30506", "DEFAULT_KNOCKBACK_RESISTANCE", "f_149871_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.mob.ZoglinEntity#DEFAULT_ATTACK_DAMAGE
    [[maybe_unused]] static jint get_field_DEFAULT_ATTACK_DAMAGE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ce", "ATTACK_DAMAGE", "field_30507", "DEFAULT_ATTACK_DAMAGE", "f_149872_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.ZoglinEntity#DEFAULT_ATTACK_DAMAGE
    [[maybe_unused]] static void set_field_DEFAULT_ATTACK_DAMAGE(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ce", "ATTACK_DAMAGE", "field_30507", "DEFAULT_ATTACK_DAMAGE", "f_149872_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.mob.ZoglinEntity#BABY_ATTACK_DAMAGE
    [[maybe_unused]] static jfloat get_field_BABY_ATTACK_DAMAGE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cf", "BABY_ATTACK_DAMAGE", "field_30508", "BABY_ATTACK_DAMAGE", "f_149873_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.ZoglinEntity#BABY_ATTACK_DAMAGE
    [[maybe_unused]] static void set_field_BABY_ATTACK_DAMAGE(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cf", "BABY_ATTACK_DAMAGE", "field_30508", "BABY_ATTACK_DAMAGE", "f_149873_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.mob.ZoglinEntity#ADULT_MELEE_ATTACK_COOLDOWN
    [[maybe_unused]] static jint get_field_ADULT_MELEE_ATTACK_COOLDOWN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cg", "ATTACK_INTERVAL", "field_30509", "ADULT_MELEE_ATTACK_COOLDOWN", "f_149874_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.ZoglinEntity#ADULT_MELEE_ATTACK_COOLDOWN
    [[maybe_unused]] static void set_field_ADULT_MELEE_ATTACK_COOLDOWN(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cg", "ATTACK_INTERVAL", "field_30509", "ADULT_MELEE_ATTACK_COOLDOWN", "f_149874_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.mob.ZoglinEntity#BABY_MELEE_ATTACK_COOLDOWN
    [[maybe_unused]] static jint get_field_BABY_MELEE_ATTACK_COOLDOWN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ch", "BABY_ATTACK_INTERVAL", "field_30510", "BABY_MELEE_ATTACK_COOLDOWN", "f_149875_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.ZoglinEntity#BABY_MELEE_ATTACK_COOLDOWN
    [[maybe_unused]] static void set_field_BABY_MELEE_ATTACK_COOLDOWN(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ch", "BABY_ATTACK_INTERVAL", "field_30510", "BABY_MELEE_ATTACK_COOLDOWN", "f_149875_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.mob.ZoglinEntity#ATTACK_TARGET_DURATION
    [[maybe_unused]] static jint get_field_ATTACK_TARGET_DURATION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ci", "ATTACK_DURATION", "field_30511", "ATTACK_TARGET_DURATION", "f_149876_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.ZoglinEntity#ATTACK_TARGET_DURATION
    [[maybe_unused]] static void set_field_ATTACK_TARGET_DURATION(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ci", "ATTACK_DURATION", "field_30511", "ATTACK_TARGET_DURATION", "f_149876_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.mob.ZoglinEntity#DEFAULT_MOVEMENT_SPEED
    [[maybe_unused]] static jfloat get_field_DEFAULT_MOVEMENT_SPEED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cj", "MOVEMENT_SPEED_WHEN_FIGHTING", "field_30512", "DEFAULT_MOVEMENT_SPEED", "f_149877_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.ZoglinEntity#DEFAULT_MOVEMENT_SPEED
    [[maybe_unused]] static void set_field_DEFAULT_MOVEMENT_SPEED(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cj", "MOVEMENT_SPEED_WHEN_FIGHTING", "field_30512", "DEFAULT_MOVEMENT_SPEED", "f_149877_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.mob.ZoglinEntity#field_30513
    [[maybe_unused]] static jfloat get_field_field_30513() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ck", "SPEED_MULTIPLIER_WHEN_IDLING", "field_30513", "field_30513", "f_149878_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.ZoglinEntity#field_30513
    [[maybe_unused]] static void set_field_field_30513(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ck", "SPEED_MULTIPLIER_WHEN_IDLING", "field_30513", "field_30513", "f_149878_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.entity.mob.ZoglinEntity#movementCooldownTicks
    static jint get_field_movementCooldownTicks(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cl", "attackAnimationRemainingTicks", "field_23732", "movementCooldownTicks", "f_34199_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.ZoglinEntity#movementCooldownTicks
    static void set_field_movementCooldownTicks(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cl", "attackAnimationRemainingTicks", "field_23732", "movementCooldownTicks", "f_34199_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for static protected field net.minecraft.entity.mob.ZoglinEntity#USED_SENSORS
    [[maybe_unused]] static jobject get_field_USED_SENSORS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "SENSOR_TYPES", "field_23731", "USED_SENSORS", "f_34198_"), "Lcom/google/common/collect/ImmutableList;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static protected field net.minecraft.entity.mob.ZoglinEntity#USED_SENSORS
    [[maybe_unused]] static void set_field_USED_SENSORS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "SENSOR_TYPES", "field_23731", "USED_SENSORS", "f_34198_"), "Lcom/google/common/collect/ImmutableList;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static protected field net.minecraft.entity.mob.ZoglinEntity#USED_MEMORY_MODULES
    [[maybe_unused]] static jobject get_field_USED_MEMORY_MODULES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "MEMORY_TYPES", "field_23733", "USED_MEMORY_MODULES", "f_34200_"), "Lcom/google/common/collect/ImmutableList;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static protected field net.minecraft.entity.mob.ZoglinEntity#USED_MEMORY_MODULES
    [[maybe_unused]] static void set_field_USED_MEMORY_MODULES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "MEMORY_TYPES", "field_23733", "USED_MEMORY_MODULES", "f_34200_"), "Lcom/google/common/collect/ImmutableList;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_createBrainProfile() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("dU", "brainProvider", "method_28306", "createBrainProfile", "m_5490_"), "()Lbuq$b;");
    }

    static jobject createBrainProfile(const jobject& obj) {
                
       const auto methodID = methodID_createBrainProfile();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_deserializeBrain() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "makeBrain", "method_18867", "deserializeBrain", "m_8075_"), "(Lcom/mojang/serialization/Dynamic;)Lbuq;");
    }

    static jobject deserializeBrain(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_deserializeBrain();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_addCoreTasks() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "initCoreActivity", "method_26928", "addCoreTasks", "m_34216_"), "(Lbuq;)V");
    }

    static void addCoreTasks(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_addCoreTasks();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_addIdleTasks() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "initIdleActivity", "method_26929", "addIdleTasks", "m_34228_"), "(Lbuq;)V");
    }

    static void addIdleTasks(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_addIdleTasks();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_addFightTasks() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "initFightActivity", "method_26930", "addFightTasks", "m_34236_"), "(Lbuq;)V");
    }

    static void addFightTasks(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_addFightTasks();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getHoglinTarget() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gm", "findNearestValidAttackTarget", "method_26934", "getHoglinTarget", "m_34251_"), "()Ljava/util/Optional;");
    }

    static jobject getHoglinTarget(const jobject& obj) {
                
       const auto methodID = methodID_getHoglinTarget();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_shouldAttack() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("j", "isTargetable", "method_26936", "shouldAttack", "m_34252_"), "(Lbtn;)Z");
    }

    static jboolean shouldAttack(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_shouldAttack();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_initDataTracker() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "defineSynchedData", "method_5693", "initDataTracker", "m_8097_"), "(Laka$a;)V");
    }

    static void initDataTracker(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_initDataTracker();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_onTrackedDataSet() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "onSyncedDataUpdated", "method_5674", "onTrackedDataSet", "m_7350_"), "(Lajw;)V");
    }

    static void onTrackedDataSet(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onTrackedDataSet();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_createZoglinAttributes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("s", "createAttributes", "method_26937", "createZoglinAttributes", "m_34257_"), "()Lbuv$a;");
    }

    static jobject createZoglinAttributes() {
       const auto clazz = self();
       const auto methodID = methodID_createZoglinAttributes();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_isAdult() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("t", "isAdult", "method_26939", "isAdult", "m_34247_"), "()Z");
    }

    static jboolean isAdult(const jobject& obj) {
                
       const auto methodID = methodID_isAdult();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_tryAttack() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("D", "doHurtTarget", "method_6121", "tryAttack", "m_7327_"), "(Lbsr;)Z");
    }

    static jboolean tryAttack(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_tryAttack();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_canBeLeashed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("y", "canBeLeashed", "method_5931", "canBeLeashed", "m_6573_"), "()Z");
    }

    static jboolean canBeLeashed(const jobject& obj) {
                
       const auto methodID = methodID_canBeLeashed();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_knockback() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "blockedByShield", "method_6060", "knockback", "m_6731_"), "(Lbtn;)V");
    }

    static void knockback(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_knockback();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_damage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "hurt", "method_5643", "damage", "m_6469_"), "(Lbrk;F)Z");
    }

    static jboolean damage(const jobject& obj, const jobject& arg0, const jfloat& arg1) {
                
       const auto methodID = methodID_damage();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_setAttackTarget() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("k", "setAttackTarget", "method_26938", "setAttackTarget", "m_34254_"), "(Lbtn;)V");
    }

    static void setAttackTarget(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setAttackTarget();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getBrain() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("dT", "getBrain", "method_18868", "getBrain", "m_6274_"), "()Lbuq;");
    }

    static jobject getBrain(const jobject& obj) {
                
       const auto methodID = methodID_getBrain();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_tickBrain() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("x", "updateActivity", "method_26931", "tickBrain", "m_34248_"), "()V");
    }

    static void tickBrain(const jobject& obj) {
                
       const auto methodID = methodID_tickBrain();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_mobTick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ab", "customServerAiStep", "method_5958", "mobTick", "m_8024_"), "()V");
    }

    static void mobTick(const jobject& obj) {
                
       const auto methodID = methodID_mobTick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_setBaby() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setBaby", "method_7217", "setBaby", "m_6863_"), "(Z)V");
    }

    static void setBaby(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setBaby();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isBaby() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("o_", "isBaby", "method_6109", "isBaby", "m_6162_"), "()Z");
    }

    static jboolean isBaby(const jobject& obj) {
                
       const auto methodID = methodID_isBaby();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_tickMovement() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("m_", "aiStep", "method_6007", "tickMovement", "m_8107_"), "()V");
    }

    static void tickMovement(const jobject& obj) {
                
       const auto methodID = methodID_tickMovement();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_handleStatus() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "handleEntityEvent", "method_5711", "handleStatus", "m_7822_"), "(B)V");
    }

    static void handleStatus(const jobject& obj, const jbyte& arg0) {
                
       const auto methodID = methodID_handleStatus();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getMovementCooldownTicks() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gk", "getAttackAnimationRemainingTicks", "method_24657", "getMovementCooldownTicks", "m_7575_"), "()I");
    }

    static jint getMovementCooldownTicks(const jobject& obj) {
                
       const auto methodID = methodID_getMovementCooldownTicks();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getAmbientSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("v", "getAmbientSound", "method_5994", "getAmbientSound", "m_7515_"), "()Lavo;");
    }

    static jobject getAmbientSound(const jobject& obj) {
                
       const auto methodID = methodID_getAmbientSound();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getHurtSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getHurtSound", "method_6011", "getHurtSound", "m_7975_"), "(Lbrk;)Lavo;");
    }

    static jobject getHurtSound(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getHurtSound();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getDeathSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("n_", "getDeathSound", "method_6002", "getDeathSound", "m_5592_"), "()Lavo;");
    }

    static jobject getDeathSound(const jobject& obj) {
                
       const auto methodID = methodID_getDeathSound();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_playStepSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "playStepSound", "method_5712", "playStepSound", "m_7355_"), "(Ljd;Ldtc;)V");
    }

    static void playStepSound(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_playStepSound();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_playAngrySound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gl", "playAngrySound", "method_26933", "playAngrySound", "m_34250_"), "()V");
    }

    static void playAngrySound(const jobject& obj) {
                
       const auto methodID = methodID_playAngrySound();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getTarget() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("p", "getTarget", "method_5968", "getTarget", "m_5448_"), "()Lbtn;");
    }

    static jobject getTarget(const jobject& obj) {
                
       const auto methodID = methodID_getTarget();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_sendAiDebugData() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aa", "sendDebugPackets", "method_18409", "sendAiDebugData", "m_8025_"), "()V");
    }

    static void sendAiDebugData(const jobject& obj) {
                
       const auto methodID = methodID_sendAiDebugData();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_writeCustomDataToNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "addAdditionalSaveData", "method_5652", "writeCustomDataToNbt", "m_7380_"), "(Lub;)V");
    }

    static void writeCustomDataToNbt(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_writeCustomDataToNbt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_readCustomDataFromNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "readAdditionalSaveData", "method_5749", "readCustomDataFromNbt", "m_7378_"), "(Lub;)V");
    }

    static void readCustomDataFromNbt(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_readCustomDataFromNbt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_ENTITY_MOB_ZOGLINENTITY_HPP