// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ENTITY_MOB_GHASTENTITY$GHASTMOVECONTROL_HPP
#define NET_MINECRAFT_ENTITY_MOB_GHASTENTITY$GHASTMOVECONTROL_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.entity.mob.GhastEntity$GhastMoveControl
 * Remapped: cjx$b
 */
namespace GhastEntity$GhastMoveControl {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("cjx$b", "net/minecraft/world/entity/monster/Ghast$GhastMoveControl", "net/minecraft/class_1571$class_1573", "net/minecraft/entity/mob/GhastEntity$GhastMoveControl", "net/minecraft/src/C_1011_$C_1013_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.entity.mob.GhastEntity$GhastMoveControl#ghast
    static jobject get_field_ghast(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "ghast", "field_7275", "ghast", "f_32765_"), "Lcjx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.GhastEntity$GhastMoveControl#ghast
    static void set_field_ghast(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "ghast", "field_7275", "ghast", "f_32765_"), "Lcjx;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.mob.GhastEntity$GhastMoveControl#collisionCheckCooldown
    static jint get_field_collisionCheckCooldown(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "floatDuration", "field_7276", "collisionCheckCooldown", "f_32766_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.GhastEntity$GhastMoveControl#collisionCheckCooldown
    static void set_field_collisionCheckCooldown(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "floatDuration", "field_7276", "collisionCheckCooldown", "f_32766_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    static jmethodID methodID_tick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "tick", "method_6240", "tick", "m_8126_"), "()V");
    }

    static void tick(const jobject& obj) {
                
       const auto methodID = methodID_tick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_willCollide() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "canReach", "method_7051", "willCollide", "m_32770_"), "(Lexc;I)Z");
    }

    static jboolean willCollide(const jobject& obj, const jobject& arg0, const jint& arg1) {
                
       const auto methodID = methodID_willCollide();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_ENTITY_MOB_GHASTENTITY$GHASTMOVECONTROL_HPP