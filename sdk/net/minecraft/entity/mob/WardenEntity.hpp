// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ENTITY_MOB_WARDENENTITY_HPP
#define NET_MINECRAFT_ENTITY_MOB_WARDENENTITY_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.entity.mob.WardenEntity
 * Remapped: cmb
 */
namespace WardenEntity {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("cmb", "net/minecraft/world/entity/monster/warden/Warden", "net/minecraft/class_7260", "net/minecraft/entity/mob/WardenEntity", "net/minecraft/src/C_213061_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.entity.mob.WardenEntity#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ce", "LOGGER", "field_38138", "LOGGER", "f_219315_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.WardenEntity#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ce", "LOGGER", "field_38138", "LOGGER", "f_219315_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.mob.WardenEntity#field_38142
    [[maybe_unused]] static jint get_field_field_38142() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cf", "VIBRATION_COOLDOWN_TICKS", "field_38142", "field_38142", "f_219321_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.WardenEntity#field_38142
    [[maybe_unused]] static void set_field_field_38142(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cf", "VIBRATION_COOLDOWN_TICKS", "field_38142", "field_38142", "f_219321_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.mob.WardenEntity#field_38860
    [[maybe_unused]] static jint get_field_field_38860() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cg", "TIME_TO_USE_MELEE_UNTIL_SONIC_BOOM", "field_38860", "field_38860", "f_219322_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.WardenEntity#field_38860
    [[maybe_unused]] static void set_field_field_38860(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cg", "TIME_TO_USE_MELEE_UNTIL_SONIC_BOOM", "field_38860", "field_38860", "f_219322_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.mob.WardenEntity#MAX_HEALTH
    [[maybe_unused]] static jint get_field_MAX_HEALTH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ch", "MAX_HEALTH", "field_38143", "MAX_HEALTH", "f_219323_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.WardenEntity#MAX_HEALTH
    [[maybe_unused]] static void set_field_MAX_HEALTH(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ch", "MAX_HEALTH", "field_38143", "MAX_HEALTH", "f_219323_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.mob.WardenEntity#MOVEMENT_SPEED
    [[maybe_unused]] static jfloat get_field_MOVEMENT_SPEED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ci", "MOVEMENT_SPEED_WHEN_FIGHTING", "field_38144", "MOVEMENT_SPEED", "f_219324_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.WardenEntity#MOVEMENT_SPEED
    [[maybe_unused]] static void set_field_MOVEMENT_SPEED(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ci", "MOVEMENT_SPEED_WHEN_FIGHTING", "field_38144", "MOVEMENT_SPEED", "f_219324_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.mob.WardenEntity#KNOCKBACK_RESISTANCE
    [[maybe_unused]] static jfloat get_field_KNOCKBACK_RESISTANCE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cj", "KNOCKBACK_RESISTANCE", "field_38145", "KNOCKBACK_RESISTANCE", "f_219325_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.WardenEntity#KNOCKBACK_RESISTANCE
    [[maybe_unused]] static void set_field_KNOCKBACK_RESISTANCE(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cj", "KNOCKBACK_RESISTANCE", "field_38145", "KNOCKBACK_RESISTANCE", "f_219325_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.mob.WardenEntity#ATTACK_KNOCKBACK
    [[maybe_unused]] static jfloat get_field_ATTACK_KNOCKBACK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ck", "ATTACK_KNOCKBACK", "field_38146", "ATTACK_KNOCKBACK", "f_219326_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.WardenEntity#ATTACK_KNOCKBACK
    [[maybe_unused]] static void set_field_ATTACK_KNOCKBACK(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ck", "ATTACK_KNOCKBACK", "field_38146", "ATTACK_KNOCKBACK", "f_219326_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.mob.WardenEntity#ATTACK_DAMAGE
    [[maybe_unused]] static jint get_field_ATTACK_DAMAGE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cl", "ATTACK_DAMAGE", "field_38147", "ATTACK_DAMAGE", "f_219327_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.WardenEntity#ATTACK_DAMAGE
    [[maybe_unused]] static void set_field_ATTACK_DAMAGE(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cl", "ATTACK_DAMAGE", "field_38147", "ATTACK_DAMAGE", "f_219327_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.mob.WardenEntity#ANGER
    [[maybe_unused]] static jobject get_field_ANGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cm", "CLIENT_ANGER_LEVEL", "field_38148", "ANGER", "f_219328_"), "Lajw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.WardenEntity#ANGER
    [[maybe_unused]] static void set_field_ANGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cm", "CLIENT_ANGER_LEVEL", "field_38148", "ANGER", "f_219328_"), "Lajw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.mob.WardenEntity#field_38149
    [[maybe_unused]] static jint get_field_field_38149() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cn", "DARKNESS_DISPLAY_LIMIT", "field_38149", "field_38149", "f_219329_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.WardenEntity#field_38149
    [[maybe_unused]] static void set_field_field_38149(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cn", "DARKNESS_DISPLAY_LIMIT", "field_38149", "field_38149", "f_219329_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.mob.WardenEntity#DARKNESS_EFFECT_DURATION
    [[maybe_unused]] static jint get_field_DARKNESS_EFFECT_DURATION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("co", "DARKNESS_DURATION", "field_38150", "DARKNESS_EFFECT_DURATION", "f_219330_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.WardenEntity#DARKNESS_EFFECT_DURATION
    [[maybe_unused]] static void set_field_DARKNESS_EFFECT_DURATION(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("co", "DARKNESS_DURATION", "field_38150", "DARKNESS_EFFECT_DURATION", "f_219330_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.mob.WardenEntity#field_38151
    [[maybe_unused]] static jint get_field_field_38151() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cp", "DARKNESS_RADIUS", "field_38151", "field_38151", "f_219331_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.WardenEntity#field_38151
    [[maybe_unused]] static void set_field_field_38151(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cp", "DARKNESS_RADIUS", "field_38151", "field_38151", "f_219331_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.mob.WardenEntity#field_38152
    [[maybe_unused]] static jint get_field_field_38152() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cq", "DARKNESS_INTERVAL", "field_38152", "field_38152", "f_219332_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.WardenEntity#field_38152
    [[maybe_unused]] static void set_field_field_38152(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cq", "DARKNESS_INTERVAL", "field_38152", "field_38152", "f_219332_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.mob.WardenEntity#field_38153
    [[maybe_unused]] static jint get_field_field_38153() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cr", "ANGERMANAGEMENT_TICK_DELAY", "field_38153", "field_38153", "f_219333_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.WardenEntity#field_38153
    [[maybe_unused]] static void set_field_field_38153(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cr", "ANGERMANAGEMENT_TICK_DELAY", "field_38153", "field_38153", "f_219333_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.mob.WardenEntity#ANGRINESS_AMOUNT
    [[maybe_unused]] static jint get_field_ANGRINESS_AMOUNT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cs", "DEFAULT_ANGER", "field_38155", "ANGRINESS_AMOUNT", "f_219334_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.WardenEntity#ANGRINESS_AMOUNT
    [[maybe_unused]] static void set_field_ANGRINESS_AMOUNT(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cs", "DEFAULT_ANGER", "field_38155", "ANGRINESS_AMOUNT", "f_219334_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.mob.WardenEntity#field_38156
    [[maybe_unused]] static jint get_field_field_38156() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ct", "PROJECTILE_ANGER", "field_38156", "field_38156", "f_219335_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.WardenEntity#field_38156
    [[maybe_unused]] static void set_field_field_38156(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ct", "PROJECTILE_ANGER", "field_38156", "field_38156", "f_219335_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.mob.WardenEntity#field_39117
    [[maybe_unused]] static jint get_field_field_39117() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cu", "ON_HURT_ANGER_BOOST", "field_39117", "field_39117", "f_219336_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.WardenEntity#field_39117
    [[maybe_unused]] static void set_field_field_39117(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cu", "ON_HURT_ANGER_BOOST", "field_39117", "field_39117", "f_219336_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.mob.WardenEntity#field_38157
    [[maybe_unused]] static jint get_field_field_38157() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cv", "RECENT_PROJECTILE_TICK_THRESHOLD", "field_38157", "field_38157", "f_219337_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.WardenEntity#field_38157
    [[maybe_unused]] static void set_field_field_38157(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cv", "RECENT_PROJECTILE_TICK_THRESHOLD", "field_38157", "field_38157", "f_219337_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.mob.WardenEntity#field_38158
    [[maybe_unused]] static jint get_field_field_38158() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cw", "TOUCH_COOLDOWN_TICKS", "field_38158", "field_38158", "f_219338_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.WardenEntity#field_38158
    [[maybe_unused]] static void set_field_field_38158(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cw", "TOUCH_COOLDOWN_TICKS", "field_38158", "field_38158", "f_219338_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.mob.WardenEntity#field_38159
    [[maybe_unused]] static jint get_field_field_38159() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cx", "DIGGING_PARTICLES_AMOUNT", "field_38159", "field_38159", "f_219339_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.WardenEntity#field_38159
    [[maybe_unused]] static void set_field_field_38159(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cx", "DIGGING_PARTICLES_AMOUNT", "field_38159", "field_38159", "f_219339_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.mob.WardenEntity#field_38160
    [[maybe_unused]] static jfloat get_field_field_38160() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cy", "DIGGING_PARTICLES_DURATION", "field_38160", "field_38160", "f_219340_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.WardenEntity#field_38160
    [[maybe_unused]] static void set_field_field_38160(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cy", "DIGGING_PARTICLES_DURATION", "field_38160", "field_38160", "f_219340_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.mob.WardenEntity#field_38161
    [[maybe_unused]] static jfloat get_field_field_38161() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cz", "DIGGING_PARTICLES_OFFSET", "field_38161", "field_38161", "f_219341_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.WardenEntity#field_38161
    [[maybe_unused]] static void set_field_field_38161(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cz", "DIGGING_PARTICLES_OFFSET", "field_38161", "field_38161", "f_219341_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.mob.WardenEntity#field_39305
    [[maybe_unused]] static jint get_field_field_39305() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cA", "PROJECTILE_ANGER_DISTANCE", "field_39305", "field_39305", "f_219342_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.WardenEntity#field_39305
    [[maybe_unused]] static void set_field_field_39305(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cA", "PROJECTILE_ANGER_DISTANCE", "field_39305", "field_39305", "f_219342_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.entity.mob.WardenEntity#tendrilPitch
    static jint get_field_tendrilPitch(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cB", "tendrilAnimation", "field_38162", "tendrilPitch", "f_219343_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.WardenEntity#tendrilPitch
    static void set_field_tendrilPitch(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cB", "tendrilAnimation", "field_38162", "tendrilPitch", "f_219343_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.mob.WardenEntity#lastTendrilPitch
    static jint get_field_lastTendrilPitch(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cD", "tendrilAnimationO", "field_38163", "lastTendrilPitch", "f_219344_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.WardenEntity#lastTendrilPitch
    static void set_field_lastTendrilPitch(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cD", "tendrilAnimationO", "field_38163", "lastTendrilPitch", "f_219344_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.mob.WardenEntity#heartbeatCooldown
    static jint get_field_heartbeatCooldown(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cE", "heartAnimation", "field_38164", "heartbeatCooldown", "f_219345_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.WardenEntity#heartbeatCooldown
    static void set_field_heartbeatCooldown(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cE", "heartAnimation", "field_38164", "heartbeatCooldown", "f_219345_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.mob.WardenEntity#lastHeartbeatCooldown
    static jint get_field_lastHeartbeatCooldown(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cF", "heartAnimationO", "field_38165", "lastHeartbeatCooldown", "f_219317_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.WardenEntity#lastHeartbeatCooldown
    static void set_field_lastHeartbeatCooldown(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cF", "heartAnimationO", "field_38165", "lastHeartbeatCooldown", "f_219317_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.entity.mob.WardenEntity#roaringAnimationState
    static jobject get_field_roaringAnimationState(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "roarAnimationState", "field_38168", "roaringAnimationState", "f_219312_"), "Lbsm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.entity.mob.WardenEntity#roaringAnimationState
    static void set_field_roaringAnimationState(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "roarAnimationState", "field_38168", "roaringAnimationState", "f_219312_"), "Lbsm;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.entity.mob.WardenEntity#sniffingAnimationState
    static jobject get_field_sniffingAnimationState(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "sniffAnimationState", "field_38169", "sniffingAnimationState", "f_219316_"), "Lbsm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.entity.mob.WardenEntity#sniffingAnimationState
    static void set_field_sniffingAnimationState(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "sniffAnimationState", "field_38169", "sniffingAnimationState", "f_219316_"), "Lbsm;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.entity.mob.WardenEntity#emergingAnimationState
    static jobject get_field_emergingAnimationState(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "emergeAnimationState", "field_38135", "emergingAnimationState", "f_219346_"), "Lbsm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.entity.mob.WardenEntity#emergingAnimationState
    static void set_field_emergingAnimationState(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "emergeAnimationState", "field_38135", "emergingAnimationState", "f_219346_"), "Lbsm;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.entity.mob.WardenEntity#diggingAnimationState
    static jobject get_field_diggingAnimationState(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "diggingAnimationState", "field_38136", "diggingAnimationState", "f_219347_"), "Lbsm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.entity.mob.WardenEntity#diggingAnimationState
    static void set_field_diggingAnimationState(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "diggingAnimationState", "field_38136", "diggingAnimationState", "f_219347_"), "Lbsm;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.entity.mob.WardenEntity#attackingAnimationState
    static jobject get_field_attackingAnimationState(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cc", "attackAnimationState", "field_38137", "attackingAnimationState", "f_219313_"), "Lbsm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.entity.mob.WardenEntity#attackingAnimationState
    static void set_field_attackingAnimationState(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cc", "attackAnimationState", "field_38137", "attackingAnimationState", "f_219313_"), "Lbsm;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.entity.mob.WardenEntity#chargingSonicBoomAnimationState
    static jobject get_field_chargingSonicBoomAnimationState(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cd", "sonicBoomAnimationState", "field_38859", "chargingSonicBoomAnimationState", "f_219314_"), "Lbsm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.entity.mob.WardenEntity#chargingSonicBoomAnimationState
    static void set_field_chargingSonicBoomAnimationState(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cd", "sonicBoomAnimationState", "field_38859", "chargingSonicBoomAnimationState", "f_219314_"), "Lbsm;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.mob.WardenEntity#gameEventHandler
    static jobject get_field_gameEventHandler(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cG", "dynamicGameEventListener", "field_38166", "gameEventHandler", "f_219318_"), "Ldxw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.WardenEntity#gameEventHandler
    static void set_field_gameEventHandler(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cG", "dynamicGameEventListener", "field_38166", "gameEventHandler", "f_219318_"), "Ldxw;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.mob.WardenEntity#vibrationCallback
    static jobject get_field_vibrationCallback(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cH", "vibrationUser", "field_44598", "vibrationCallback", "f_279603_"), "Ldyi$d;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.WardenEntity#vibrationCallback
    static void set_field_vibrationCallback(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cH", "vibrationUser", "field_44598", "vibrationCallback", "f_279603_"), "Ldyi$d;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.mob.WardenEntity#vibrationListenerData
    static jobject get_field_vibrationListenerData(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cI", "vibrationData", "field_44599", "vibrationListenerData", "f_279590_"), "Ldyi$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.mob.WardenEntity#vibrationListenerData
    static void set_field_vibrationListenerData(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cI", "vibrationData", "field_44599", "vibrationListenerData", "f_279590_"), "Ldyi$a;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.entity.mob.WardenEntity#angerManager
    static jobject get_field_angerManager(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cJ", "angerManagement", "field_38141", "angerManager", "f_219319_"), "Lcma;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.entity.mob.WardenEntity#angerManager
    static void set_field_angerManager(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cJ", "angerManagement", "field_38141", "angerManager", "f_219319_"), "Lcma;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_createSpawnPacket() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getAddEntityPacket", "method_18002", "createSpawnPacket", "m_5654_"), "(Laqt;)Lzg;");
    }

    static jobject createSpawnPacket(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_createSpawnPacket();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_onSpawnPacket() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "recreateFromPacket", "method_31471", "onSpawnPacket", "m_141965_"), "(Labv;)V");
    }

    static void onSpawnPacket(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onSpawnPacket();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_canSpawn() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "checkSpawnObstruction", "method_5957", "canSpawn", "m_6914_"), "(Ldcz;)Z");
    }

    static jboolean canSpawn(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_canSpawn();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getPathfindingFavor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getWalkTargetValue", "method_6144", "getPathfindingFavor", "m_5610_"), "(Ljd;Ldcz;)F");
    }

    static jfloat getPathfindingFavor(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_getPathfindingFavor();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_isInvulnerableTo() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "isInvulnerableTo", "method_5679", "isInvulnerableTo", "m_6673_"), "(Lbrk;)Z");
    }

    static jboolean isInvulnerableTo(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_isInvulnerableTo();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isDiggingOrEmerging() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("go", "isDiggingOrEmerging", "method_43113", "isDiggingOrEmerging", "m_219450_"), "()Z");
    }

    static jboolean isDiggingOrEmerging(const jobject& obj) {
                
       const auto methodID = methodID_isDiggingOrEmerging();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_canStartRiding() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("o", "canRide", "method_5860", "canStartRiding", "m_7341_"), "(Lbsr;)Z");
    }

    static jboolean canStartRiding(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_canStartRiding();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_disablesShield() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("fK", "canDisableShield", "method_42149", "disablesShield", "m_213824_"), "()Z");
    }

    static jboolean disablesShield(const jobject& obj) {
                
       const auto methodID = methodID_disablesShield();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_calculateNextStepSoundDistance() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aP", "nextStep", "method_5867", "calculateNextStepSoundDistance", "m_6059_"), "()F");
    }

    static jfloat calculateNextStepSoundDistance(const jobject& obj) {
                
       const auto methodID = methodID_calculateNextStepSoundDistance();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID_addAttributes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("s", "createAttributes", "method_42221", "addAttributes", "m_219463_"), "()Lbuv$a;");
    }

    static jobject addAttributes() {
       const auto clazz = self();
       const auto methodID = methodID_addAttributes();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_occludeVibrationSignals() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("bd", "dampensVibrations", "method_33189", "occludeVibrationSignals", "m_213854_"), "()Z");
    }

    static jboolean occludeVibrationSignals(const jobject& obj) {
                
       const auto methodID = methodID_occludeVibrationSignals();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getSoundVolume() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("fa", "getSoundVolume", "method_6107", "getSoundVolume", "m_6121_"), "()F");
    }

    static jfloat getSoundVolume(const jobject& obj) {
                
       const auto methodID = methodID_getSoundVolume();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID_getAmbientSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("v", "getAmbientSound", "method_5994", "getAmbientSound", "m_7515_"), "()Lavo;");
    }

    static jobject getAmbientSound(const jobject& obj) {
                
       const auto methodID = methodID_getAmbientSound();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getHurtSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getHurtSound", "method_6011", "getHurtSound", "m_7975_"), "(Lbrk;)Lavo;");
    }

    static jobject getHurtSound(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getHurtSound();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getDeathSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("n_", "getDeathSound", "method_6002", "getDeathSound", "m_5592_"), "()Lavo;");
    }

    static jobject getDeathSound(const jobject& obj) {
                
       const auto methodID = methodID_getDeathSound();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_playStepSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "playStepSound", "method_5712", "playStepSound", "m_7355_"), "(Ljd;Ldtc;)V");
    }

    static void playStepSound(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_playStepSound();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_tryAttack() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("D", "doHurtTarget", "method_6121", "tryAttack", "m_7327_"), "(Lbsr;)Z");
    }

    static jboolean tryAttack(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_tryAttack();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_initDataTracker() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "defineSynchedData", "method_5693", "initDataTracker", "m_8097_"), "(Laka$a;)V");
    }

    static void initDataTracker(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_initDataTracker();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getAnger() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("t", "getClientAngerLevel", "method_42222", "getAnger", "m_219464_"), "()I");
    }

    static jint getAnger(const jobject& obj) {
                
       const auto methodID = methodID_getAnger();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_updateAnger() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gr", "syncClientAngerLevel", "method_42217", "updateAnger", "m_219451_"), "()V");
    }

    static void updateAnger(const jobject& obj) {
                
       const auto methodID = methodID_updateAnger();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_tick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("l", "tick", "method_5773", "tick", "m_8119_"), "()V");
    }

    static void tick(const jobject& obj) {
                
       const auto methodID = methodID_tick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_mobTick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ab", "customServerAiStep", "method_5958", "mobTick", "m_8024_"), "()V");
    }

    static void mobTick(const jobject& obj) {
                
       const auto methodID = methodID_mobTick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_handleStatus() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "handleEntityEvent", "method_5711", "handleStatus", "m_7822_"), "(B)V");
    }

    static void handleStatus(const jobject& obj, const jbyte& arg0) {
                
       const auto methodID = methodID_handleStatus();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getHeartRate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gs", "getHeartBeatDelay", "method_42218", "getHeartRate", "m_219452_"), "()I");
    }

    static jint getHeartRate(const jobject& obj) {
                
       const auto methodID = methodID_getHeartRate();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getTendrilPitch() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("H", "getTendrilAnimation", "method_42223", "getTendrilPitch", "m_219467_"), "(F)F");
    }

    static jfloat getTendrilPitch(const jobject& obj, const jfloat& arg0) {
                
       const auto methodID = methodID_getTendrilPitch();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getHeartPitch() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("I", "getHeartAnimation", "method_42202", "getHeartPitch", "m_219469_"), "(F)F");
    }

    static jfloat getHeartPitch(const jobject& obj, const jfloat& arg0) {
                
       const auto methodID = methodID_getHeartPitch();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_addDigParticles() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "clientDiggingParticles", "method_42205", "addDigParticles", "m_219383_"), "(Lbsm;)V");
    }

    static void addDigParticles(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_addDigParticles();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_onTrackedDataSet() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "onSyncedDataUpdated", "method_5674", "onTrackedDataSet", "m_7350_"), "(Lajw;)V");
    }

    static void onTrackedDataSet(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onTrackedDataSet();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isImmuneToExplosion() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "ignoreExplosion", "method_5659", "isImmuneToExplosion", "m_6128_"), "(Ldco;)Z");
    }

    static jboolean isImmuneToExplosion(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_isImmuneToExplosion();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_deserializeBrain() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "makeBrain", "method_18867", "deserializeBrain", "m_8075_"), "(Lcom/mojang/serialization/Dynamic;)Lbuq;");
    }

    static jobject deserializeBrain(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_deserializeBrain();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getBrain() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("dT", "getBrain", "method_18868", "getBrain", "m_6274_"), "()Lbuq;");
    }

    static jobject getBrain(const jobject& obj) {
                
       const auto methodID = methodID_getBrain();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_sendAiDebugData() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aa", "sendDebugPackets", "method_18409", "sendAiDebugData", "m_8025_"), "()V");
    }

    static void sendAiDebugData(const jobject& obj) {
                
       const auto methodID = methodID_sendAiDebugData();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_updateEventHandler() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "updateDynamicGameEventListener", "method_42147", "updateEventHandler", "m_213651_"), "(Ljava/util/function/BiConsumer;)V");
    }

    static void updateEventHandler(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_updateEventHandler();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isValidTarget() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "canTargetEntity", "method_42206", "isValidTarget", "m_219385_"), "(Lbsr;)Z");
    }

    static jboolean isValidTarget(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_isValidTarget();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_addDarknessToClosePlayers() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "applyDarknessAround", "method_42204", "addDarknessToClosePlayers", "m_219375_"), "(Laqu;Lexc;Lbsr;I)V");
    }

    static void addDarknessToClosePlayers(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jint& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_addDarknessToClosePlayers();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_writeCustomDataToNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "addAdditionalSaveData", "method_5652", "writeCustomDataToNbt", "m_7380_"), "(Lub;)V");
    }

    static void writeCustomDataToNbt(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_writeCustomDataToNbt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_readCustomDataFromNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "readAdditionalSaveData", "method_5749", "readCustomDataFromNbt", "m_7378_"), "(Lub;)V");
    }

    static void readCustomDataFromNbt(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_readCustomDataFromNbt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_playListeningSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gt", "playListeningSound", "method_42219", "playListeningSound", "m_219453_"), "()V");
    }

    static void playListeningSound(const jobject& obj) {
                
       const auto methodID = methodID_playListeningSound();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getAngriness() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("x", "getAngerLevel", "method_42214", "getAngriness", "m_219446_"), "()Lclz;");
    }

    static jobject getAngriness(const jobject& obj) {
                
       const auto methodID = methodID_getAngriness();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getAngerAtTarget() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gu", "getActiveAnger", "method_43999", "getAngerAtTarget", "m_219454_"), "()I");
    }

    static jint getAngerAtTarget(const jobject& obj) {
                
       const auto methodID = methodID_getAngerAtTarget();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_removeSuspect() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "clearAnger", "method_42211", "removeSuspect", "m_219428_"), "(Lbsr;)V");
    }

    static void removeSuspect(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_removeSuspect();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_increaseAngerAt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "increaseAngerAt", "method_42213", "increaseAngerAt", "m_219441_"), "(Lbsr;)V");
    }

    static void increaseAngerAt(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_increaseAngerAt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__increaseAngerAt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "increaseAngerAt", "method_42212", "increaseAngerAt", "m_219387_"), "(Lbsr;IZ)V");
    }

    static void _increaseAngerAt(const jobject& obj, const jobject& arg0, const jint& arg1, const jboolean& arg2) {
                
       const auto methodID = methodID__increaseAngerAt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_getPrimeSuspect() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gk", "getEntityAngryAt", "method_42215", "getPrimeSuspect", "m_219448_"), "()Ljava/util/Optional;");
    }

    static jobject getPrimeSuspect(const jobject& obj) {
                
       const auto methodID = methodID_getPrimeSuspect();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getTarget() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("p", "getTarget", "method_5968", "getTarget", "m_5448_"), "()Lbtn;");
    }

    static jobject getTarget(const jobject& obj) {
                
       const auto methodID = methodID_getTarget();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_canImmediatelyDespawn() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "removeWhenFarAway", "method_5974", "canImmediatelyDespawn", "m_6785_"), "(D)Z");
    }

    static jboolean canImmediatelyDespawn(const jobject& obj, const jdouble& arg0) {
                
       const auto methodID = methodID_canImmediatelyDespawn();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_initialize() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "finalizeSpawn", "method_5943", "initialize", "m_6518_"), "(Lddl;Lbqp;Lbtr;Lbuh;)Lbuh;");
    }

    static jobject initialize(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_initialize();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_damage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "hurt", "method_5643", "damage", "m_6469_"), "(Lbrk;F)Z");
    }

    static jboolean damage(const jobject& obj, const jobject& arg0, const jfloat& arg1) {
                
       const auto methodID = methodID_damage();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_updateAttackTarget() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("j", "setAttackTarget", "method_43274", "updateAttackTarget", "m_219459_"), "(Lbtn;)V");
    }

    static void updateAttackTarget(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_updateAttackTarget();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getBaseDimensions() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "getDefaultDimensions", "method_55694", "getBaseDimensions", "m_31586_"), "(Lbua;)Lbsu;");
    }

    static jobject getBaseDimensions(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getBaseDimensions();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isPushable() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("bB", "isPushable", "method_5810", "isPushable", "m_6094_"), "()Z");
    }

    static jboolean isPushable(const jobject& obj) {
                
       const auto methodID = methodID_isPushable();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_pushAway() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("E", "doPush", "method_6087", "pushAway", "m_7324_"), "(Lbsr;)V");
    }

    static void pushAway(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_pushAway();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getAngerManager() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gl", "getAngerManagement", "method_42216", "getAngerManager", "m_219449_"), "()Lcma;");
    }

    static jobject getAngerManager(const jobject& obj) {
                
       const auto methodID = methodID_getAngerManager();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_createNavigation() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "createNavigation", "method_5965", "createNavigation", "m_6037_"), "(Ldcw;)Lcda;");
    }

    static jobject createNavigation(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_createNavigation();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getVibrationListenerData() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gm", "getVibrationData", "method_51298", "getVibrationListenerData", "m_280002_"), "()Ldyi$a;");
    }

    static jobject getVibrationListenerData(const jobject& obj) {
                
       const auto methodID = methodID_getVibrationListenerData();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getVibrationCallback() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gn", "getVibrationUser", "method_51299", "getVibrationCallback", "m_280445_"), "()Ldyi$d;");
    }

    static jobject getVibrationCallback(const jobject& obj) {
                
       const auto methodID = methodID_getVibrationCallback();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_ENTITY_MOB_WARDENENTITY_HPP