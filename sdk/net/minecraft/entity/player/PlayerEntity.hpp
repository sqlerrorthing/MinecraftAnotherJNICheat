// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ENTITY_PLAYER_PLAYERENTITY_HPP
#define NET_MINECRAFT_ENTITY_PLAYER_PLAYERENTITY_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.entity.player.PlayerEntity
 * Remapped: cmx
 */
namespace PlayerEntity {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("cmx", "net/minecraft/world/entity/player/Player", "net/minecraft/class_1657", "net/minecraft/entity/player/PlayerEntity", "net/minecraft/src/C_1141_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.entity.player.PlayerEntity#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "LOGGER", "field_38197", "LOGGER", "f_219722_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.player.PlayerEntity#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "LOGGER", "field_38197", "LOGGER", "f_219722_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.player.PlayerEntity#DEFAULT_MAIN_ARM
    [[maybe_unused]] static jobject get_field_DEFAULT_MAIN_ARM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bH", "DEFAULT_MAIN_HAND", "field_46174", "DEFAULT_MAIN_ARM", "f_291841_"), "Lbtg;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.player.PlayerEntity#DEFAULT_MAIN_ARM
    [[maybe_unused]] static void set_field_DEFAULT_MAIN_ARM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bH", "DEFAULT_MAIN_HAND", "field_46174", "DEFAULT_MAIN_ARM", "f_291841_"), "Lbtg;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.player.PlayerEntity#field_46175
    [[maybe_unused]] static jint get_field_field_46175() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bI", "DEFAULT_MODEL_CUSTOMIZATION", "field_46175", "field_46175", "f_290962_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.player.PlayerEntity#field_46175
    [[maybe_unused]] static void set_field_field_46175(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bI", "DEFAULT_MODEL_CUSTOMIZATION", "field_46175", "field_46175", "f_290962_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.player.PlayerEntity#field_30644
    [[maybe_unused]] static jint get_field_field_30644() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bJ", "MAX_HEALTH", "field_30644", "field_30644", "f_150083_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.player.PlayerEntity#field_30644
    [[maybe_unused]] static void set_field_field_30644(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bJ", "MAX_HEALTH", "field_30644", "field_30644", "f_150083_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.player.PlayerEntity#field_30645
    [[maybe_unused]] static jint get_field_field_30645() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bK", "SLEEP_DURATION", "field_30645", "field_30645", "f_150084_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.player.PlayerEntity#field_30645
    [[maybe_unused]] static void set_field_field_30645(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bK", "SLEEP_DURATION", "field_30645", "field_30645", "f_150084_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.player.PlayerEntity#field_30646
    [[maybe_unused]] static jint get_field_field_30646() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bL", "WAKE_UP_DURATION", "field_30646", "field_30646", "f_150085_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.player.PlayerEntity#field_30646
    [[maybe_unused]] static void set_field_field_30646(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bL", "WAKE_UP_DURATION", "field_30646", "field_30646", "f_150085_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.player.PlayerEntity#field_30647
    [[maybe_unused]] static jint get_field_field_30647() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bM", "ENDER_SLOT_OFFSET", "field_30647", "field_30647", "f_150086_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.player.PlayerEntity#field_30647
    [[maybe_unused]] static void set_field_field_30647(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bM", "ENDER_SLOT_OFFSET", "field_30647", "field_30647", "f_150086_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.player.PlayerEntity#field_49734
    [[maybe_unused]] static jint get_field_field_49734() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bN", "HELD_ITEM_SLOT", "field_49734", "field_49734", "f_316671_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.player.PlayerEntity#field_49734
    [[maybe_unused]] static void set_field_field_49734(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bN", "HELD_ITEM_SLOT", "field_49734", "field_49734", "f_316671_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.player.PlayerEntity#field_49735
    [[maybe_unused]] static jint get_field_field_49735() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bO", "CRAFTING_SLOT_OFFSET", "field_49735", "field_49735", "f_313973_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.player.PlayerEntity#field_49735
    [[maybe_unused]] static void set_field_field_49735(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bO", "CRAFTING_SLOT_OFFSET", "field_49735", "field_49735", "f_313973_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.player.PlayerEntity#field_47819
    [[maybe_unused]] static jfloat get_field_field_47819() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bP", "DEFAULT_BLOCK_INTERACTION_RANGE", "field_47819", "field_47819", "f_316011_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.player.PlayerEntity#field_47819
    [[maybe_unused]] static void set_field_field_47819(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bP", "DEFAULT_BLOCK_INTERACTION_RANGE", "field_47819", "field_47819", "f_316011_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.player.PlayerEntity#field_47820
    [[maybe_unused]] static jfloat get_field_field_47820() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bQ", "DEFAULT_ENTITY_INTERACTION_RANGE", "field_47820", "field_47820", "f_315769_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.player.PlayerEntity#field_47820
    [[maybe_unused]] static void set_field_field_47820(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bQ", "DEFAULT_ENTITY_INTERACTION_RANGE", "field_47820", "field_47820", "f_315769_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.player.PlayerEntity#field_30648
    [[maybe_unused]] static jfloat get_field_field_30648() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bR", "CROUCH_BB_HEIGHT", "field_30648", "field_30648", "f_150087_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.player.PlayerEntity#field_30648
    [[maybe_unused]] static void set_field_field_30648(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bR", "CROUCH_BB_HEIGHT", "field_30648", "field_30648", "f_150087_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.player.PlayerEntity#field_30649
    [[maybe_unused]] static jfloat get_field_field_30649() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bS", "SWIMMING_BB_WIDTH", "field_30649", "field_30649", "f_150088_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.player.PlayerEntity#field_30649
    [[maybe_unused]] static void set_field_field_30649(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bS", "SWIMMING_BB_WIDTH", "field_30649", "field_30649", "f_150088_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.player.PlayerEntity#field_30650
    [[maybe_unused]] static jfloat get_field_field_30650() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bT", "SWIMMING_BB_HEIGHT", "field_30650", "field_30650", "f_150089_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.player.PlayerEntity#field_30650
    [[maybe_unused]] static void set_field_field_30650(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bT", "SWIMMING_BB_HEIGHT", "field_30650", "field_30650", "f_150089_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.player.PlayerEntity#DEFAULT_EYE_HEIGHT
    [[maybe_unused]] static jfloat get_field_DEFAULT_EYE_HEIGHT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bU", "DEFAULT_EYE_HEIGHT", "field_30651", "DEFAULT_EYE_HEIGHT", "f_150090_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.player.PlayerEntity#DEFAULT_EYE_HEIGHT
    [[maybe_unused]] static void set_field_DEFAULT_EYE_HEIGHT(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bU", "DEFAULT_EYE_HEIGHT", "field_30651", "DEFAULT_EYE_HEIGHT", "f_150090_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.player.PlayerEntity#field_52222
    [[maybe_unused]] static jint get_field_field_52222() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "CURRENT_IMPULSE_CONTEXT_RESET_GRACE_TIME_TICKS", "field_52222", "field_52222", "f_336776_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.player.PlayerEntity#field_52222
    [[maybe_unused]] static void set_field_field_52222(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "CURRENT_IMPULSE_CONTEXT_RESET_GRACE_TIME_TICKS", "field_52222", "field_52222", "f_336776_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.player.PlayerEntity#VEHICLE_ATTACHMENT_POS
    [[maybe_unused]] static jobject get_field_VEHICLE_ATTACHMENT_POS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bV", "DEFAULT_VEHICLE_ATTACHMENT", "field_47821", "VEHICLE_ATTACHMENT_POS", "f_315404_"), "Lexc;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.player.PlayerEntity#VEHICLE_ATTACHMENT_POS
    [[maybe_unused]] static void set_field_VEHICLE_ATTACHMENT_POS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bV", "DEFAULT_VEHICLE_ATTACHMENT", "field_47821", "VEHICLE_ATTACHMENT_POS", "f_315404_"), "Lexc;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.player.PlayerEntity#STANDING_DIMENSIONS
    [[maybe_unused]] static jobject get_field_STANDING_DIMENSIONS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bW", "STANDING_DIMENSIONS", "field_18135", "STANDING_DIMENSIONS", "f_36088_"), "Lbsu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.player.PlayerEntity#STANDING_DIMENSIONS
    [[maybe_unused]] static void set_field_STANDING_DIMENSIONS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bW", "STANDING_DIMENSIONS", "field_18135", "STANDING_DIMENSIONS", "f_36088_"), "Lbsu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.player.PlayerEntity#POSE_DIMENSIONS
    [[maybe_unused]] static jobject get_field_POSE_DIMENSIONS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "POSES", "field_18134", "POSE_DIMENSIONS", "f_36074_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.player.PlayerEntity#POSE_DIMENSIONS
    [[maybe_unused]] static void set_field_POSE_DIMENSIONS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "POSES", "field_18134", "POSE_DIMENSIONS", "f_36074_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.player.PlayerEntity#ABSORPTION_AMOUNT
    [[maybe_unused]] static jobject get_field_ABSORPTION_AMOUNT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "DATA_PLAYER_ABSORPTION_ID", "field_7491", "ABSORPTION_AMOUNT", "f_36107_"), "Lajw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.player.PlayerEntity#ABSORPTION_AMOUNT
    [[maybe_unused]] static void set_field_ABSORPTION_AMOUNT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "DATA_PLAYER_ABSORPTION_ID", "field_7491", "ABSORPTION_AMOUNT", "f_36107_"), "Lajw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.player.PlayerEntity#SCORE
    [[maybe_unused]] static jobject get_field_SCORE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "DATA_SCORE_ID", "field_7511", "SCORE", "f_36108_"), "Lajw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.player.PlayerEntity#SCORE
    [[maybe_unused]] static void set_field_SCORE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "DATA_SCORE_ID", "field_7511", "SCORE", "f_36108_"), "Lajw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static protected field net.minecraft.entity.player.PlayerEntity#PLAYER_MODEL_PARTS
    [[maybe_unused]] static jobject get_field_PLAYER_MODEL_PARTS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bX", "DATA_PLAYER_MODE_CUSTOMISATION", "field_7518", "PLAYER_MODEL_PARTS", "f_36089_"), "Lajw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static protected field net.minecraft.entity.player.PlayerEntity#PLAYER_MODEL_PARTS
    [[maybe_unused]] static void set_field_PLAYER_MODEL_PARTS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bX", "DATA_PLAYER_MODE_CUSTOMISATION", "field_7518", "PLAYER_MODEL_PARTS", "f_36089_"), "Lajw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static protected field net.minecraft.entity.player.PlayerEntity#MAIN_ARM
    [[maybe_unused]] static jobject get_field_MAIN_ARM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bY", "DATA_PLAYER_MAIN_HAND", "field_7488", "MAIN_ARM", "f_36090_"), "Lajw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static protected field net.minecraft.entity.player.PlayerEntity#MAIN_ARM
    [[maybe_unused]] static void set_field_MAIN_ARM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bY", "DATA_PLAYER_MAIN_HAND", "field_7488", "MAIN_ARM", "f_36090_"), "Lajw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static protected field net.minecraft.entity.player.PlayerEntity#LEFT_SHOULDER_ENTITY
    [[maybe_unused]] static jobject get_field_LEFT_SHOULDER_ENTITY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bZ", "DATA_SHOULDER_LEFT", "field_7496", "LEFT_SHOULDER_ENTITY", "f_36091_"), "Lajw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static protected field net.minecraft.entity.player.PlayerEntity#LEFT_SHOULDER_ENTITY
    [[maybe_unused]] static void set_field_LEFT_SHOULDER_ENTITY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bZ", "DATA_SHOULDER_LEFT", "field_7496", "LEFT_SHOULDER_ENTITY", "f_36091_"), "Lajw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static protected field net.minecraft.entity.player.PlayerEntity#RIGHT_SHOULDER_ENTITY
    [[maybe_unused]] static jobject get_field_RIGHT_SHOULDER_ENTITY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ca", "DATA_SHOULDER_RIGHT", "field_7506", "RIGHT_SHOULDER_ENTITY", "f_36092_"), "Lajw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static protected field net.minecraft.entity.player.PlayerEntity#RIGHT_SHOULDER_ENTITY
    [[maybe_unused]] static void set_field_RIGHT_SHOULDER_ENTITY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ca", "DATA_SHOULDER_RIGHT", "field_7506", "RIGHT_SHOULDER_ENTITY", "f_36092_"), "Lajw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.entity.player.PlayerEntity#shoulderEntityAddedTime
    static jlong get_field_shoulderEntityAddedTime(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "timeEntitySatOnShoulder", "field_19428", "shoulderEntityAddedTime", "f_36109_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.player.PlayerEntity#shoulderEntityAddedTime
    static void set_field_shoulderEntityAddedTime(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "timeEntitySatOnShoulder", "field_19428", "shoulderEntityAddedTime", "f_36109_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.entity.player.PlayerEntity#inventory
    static jobject get_field_inventory(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "inventory", "field_7514", "inventory", "f_36093_"), "Lcmw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.entity.player.PlayerEntity#inventory
    static void set_field_inventory(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "inventory", "field_7514", "inventory", "f_36093_"), "Lcmw;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.entity.player.PlayerEntity#enderChestInventory
    static jobject get_field_enderChestInventory(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cb", "enderChestInventory", "field_7486", "enderChestInventory", "f_36094_"), "Lcrh;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.entity.player.PlayerEntity#enderChestInventory
    static void set_field_enderChestInventory(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cb", "enderChestInventory", "field_7486", "enderChestInventory", "f_36094_"), "Lcrh;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.entity.player.PlayerEntity#playerScreenHandler
    static jobject get_field_playerScreenHandler(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cc", "inventoryMenu", "field_7498", "playerScreenHandler", "f_36095_"), "Lcqw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.entity.player.PlayerEntity#playerScreenHandler
    static void set_field_playerScreenHandler(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cc", "inventoryMenu", "field_7498", "playerScreenHandler", "f_36095_"), "Lcqw;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.entity.player.PlayerEntity#currentScreenHandler
    static jobject get_field_currentScreenHandler(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cd", "containerMenu", "field_7512", "currentScreenHandler", "f_36096_"), "Lcpu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.entity.player.PlayerEntity#currentScreenHandler
    static void set_field_currentScreenHandler(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cd", "containerMenu", "field_7512", "currentScreenHandler", "f_36096_"), "Lcpu;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.entity.player.PlayerEntity#hungerManager
    static jobject get_field_hungerManager(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ce", "foodData", "field_7493", "hungerManager", "f_36097_"), "Lcpq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.entity.player.PlayerEntity#hungerManager
    static void set_field_hungerManager(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ce", "foodData", "field_7493", "hungerManager", "f_36097_"), "Lcpq;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.entity.player.PlayerEntity#abilityResyncCountdown
    static jint get_field_abilityResyncCountdown(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cf", "jumpTriggerTime", "field_7489", "abilityResyncCountdown", "f_36098_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.entity.player.PlayerEntity#abilityResyncCountdown
    static void set_field_abilityResyncCountdown(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cf", "jumpTriggerTime", "field_7489", "abilityResyncCountdown", "f_36098_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.entity.player.PlayerEntity#prevStrideDistance
    static jfloat get_field_prevStrideDistance(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cg", "oBob", "field_7505", "prevStrideDistance", "f_36099_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static public field net.minecraft.entity.player.PlayerEntity#prevStrideDistance
    static void set_field_prevStrideDistance(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cg", "oBob", "field_7505", "prevStrideDistance", "f_36099_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.entity.player.PlayerEntity#strideDistance
    static jfloat get_field_strideDistance(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ch", "bob", "field_7483", "strideDistance", "f_36100_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static public field net.minecraft.entity.player.PlayerEntity#strideDistance
    static void set_field_strideDistance(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ch", "bob", "field_7483", "strideDistance", "f_36100_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.entity.player.PlayerEntity#experiencePickUpDelay
    static jint get_field_experiencePickUpDelay(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ci", "takeXpDelay", "field_7504", "experiencePickUpDelay", "f_36101_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static public field net.minecraft.entity.player.PlayerEntity#experiencePickUpDelay
    static void set_field_experiencePickUpDelay(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ci", "takeXpDelay", "field_7504", "experiencePickUpDelay", "f_36101_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.entity.player.PlayerEntity#prevCapeX
    static jdouble get_field_prevCapeX(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cj", "xCloakO", "field_7524", "prevCapeX", "f_36102_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetDoubleField(obj, fieldID);
    };

    // setter for static public field net.minecraft.entity.player.PlayerEntity#prevCapeX
    static void set_field_prevCapeX(const jobject &obj, const jdouble &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cj", "xCloakO", "field_7524", "prevCapeX", "f_36102_"), "D");
        return MinecraftSDK::env->SetDoubleField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.entity.player.PlayerEntity#prevCapeY
    static jdouble get_field_prevCapeY(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ck", "yCloakO", "field_7502", "prevCapeY", "f_36103_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetDoubleField(obj, fieldID);
    };

    // setter for static public field net.minecraft.entity.player.PlayerEntity#prevCapeY
    static void set_field_prevCapeY(const jobject &obj, const jdouble &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ck", "yCloakO", "field_7502", "prevCapeY", "f_36103_"), "D");
        return MinecraftSDK::env->SetDoubleField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.entity.player.PlayerEntity#prevCapeZ
    static jdouble get_field_prevCapeZ(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cl", "zCloakO", "field_7522", "prevCapeZ", "f_36104_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetDoubleField(obj, fieldID);
    };

    // setter for static public field net.minecraft.entity.player.PlayerEntity#prevCapeZ
    static void set_field_prevCapeZ(const jobject &obj, const jdouble &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cl", "zCloakO", "field_7522", "prevCapeZ", "f_36104_"), "D");
        return MinecraftSDK::env->SetDoubleField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.entity.player.PlayerEntity#capeX
    static jdouble get_field_capeX(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cm", "xCloak", "field_7500", "capeX", "f_36105_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetDoubleField(obj, fieldID);
    };

    // setter for static public field net.minecraft.entity.player.PlayerEntity#capeX
    static void set_field_capeX(const jobject &obj, const jdouble &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cm", "xCloak", "field_7500", "capeX", "f_36105_"), "D");
        return MinecraftSDK::env->SetDoubleField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.entity.player.PlayerEntity#capeY
    static jdouble get_field_capeY(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cn", "yCloak", "field_7521", "capeY", "f_36106_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetDoubleField(obj, fieldID);
    };

    // setter for static public field net.minecraft.entity.player.PlayerEntity#capeY
    static void set_field_capeY(const jobject &obj, const jdouble &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cn", "yCloak", "field_7521", "capeY", "f_36106_"), "D");
        return MinecraftSDK::env->SetDoubleField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.entity.player.PlayerEntity#capeZ
    static jdouble get_field_capeZ(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("co", "zCloak", "field_7499", "capeZ", "f_36075_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetDoubleField(obj, fieldID);
    };

    // setter for static public field net.minecraft.entity.player.PlayerEntity#capeZ
    static void set_field_capeZ(const jobject &obj, const jdouble &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("co", "zCloak", "field_7499", "capeZ", "f_36075_"), "D");
        return MinecraftSDK::env->SetDoubleField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.player.PlayerEntity#sleepTimer
    static jint get_field_sleepTimer(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cz", "sleepCounter", "field_7487", "sleepTimer", "f_36110_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.player.PlayerEntity#sleepTimer
    static void set_field_sleepTimer(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cz", "sleepCounter", "field_7487", "sleepTimer", "f_36110_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.entity.player.PlayerEntity#isSubmergedInWater
    static jboolean get_field_isSubmergedInWater(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cp", "wasUnderwater", "field_7490", "isSubmergedInWater", "f_36076_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.entity.player.PlayerEntity#isSubmergedInWater
    static void set_field_isSubmergedInWater(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cp", "wasUnderwater", "field_7490", "isSubmergedInWater", "f_36076_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.player.PlayerEntity#abilities
    static jobject get_field_abilities(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cA", "abilities", "field_7503", "abilities", "f_36077_"), "Lcmu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.player.PlayerEntity#abilities
    static void set_field_abilities(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cA", "abilities", "field_7503", "abilities", "f_36077_"), "Lcmu;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.entity.player.PlayerEntity#experienceLevel
    static jint get_field_experienceLevel(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cq", "experienceLevel", "field_7520", "experienceLevel", "f_36078_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static public field net.minecraft.entity.player.PlayerEntity#experienceLevel
    static void set_field_experienceLevel(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cq", "experienceLevel", "field_7520", "experienceLevel", "f_36078_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.entity.player.PlayerEntity#totalExperience
    static jint get_field_totalExperience(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cr", "totalExperience", "field_7495", "totalExperience", "f_36079_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static public field net.minecraft.entity.player.PlayerEntity#totalExperience
    static void set_field_totalExperience(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cr", "totalExperience", "field_7495", "totalExperience", "f_36079_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.entity.player.PlayerEntity#experienceProgress
    static jfloat get_field_experienceProgress(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cs", "experienceProgress", "field_7510", "experienceProgress", "f_36080_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static public field net.minecraft.entity.player.PlayerEntity#experienceProgress
    static void set_field_experienceProgress(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cs", "experienceProgress", "field_7510", "experienceProgress", "f_36080_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.entity.player.PlayerEntity#enchantmentTableSeed
    static jint get_field_enchantmentTableSeed(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ct", "enchantmentSeed", "field_7494", "enchantmentTableSeed", "f_36081_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.entity.player.PlayerEntity#enchantmentTableSeed
    static void set_field_enchantmentTableSeed(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ct", "enchantmentSeed", "field_7494", "enchantmentTableSeed", "f_36081_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.entity.player.PlayerEntity#field_7509
    static jfloat get_field_field_7509(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cu", "defaultFlySpeed", "field_7509", "field_7509", "f_36082_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.entity.player.PlayerEntity#field_7509
    static void set_field_field_7509(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cu", "defaultFlySpeed", "field_7509", "field_7509", "f_36082_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.player.PlayerEntity#lastPlayedLevelUpSoundTime
    static jint get_field_lastPlayedLevelUpSoundTime(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cB", "lastLevelUpTime", "field_7508", "lastPlayedLevelUpSoundTime", "f_36111_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.player.PlayerEntity#lastPlayedLevelUpSoundTime
    static void set_field_lastPlayedLevelUpSoundTime(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cB", "lastLevelUpTime", "field_7508", "lastPlayedLevelUpSoundTime", "f_36111_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.player.PlayerEntity#gameProfile
    static jobject get_field_gameProfile(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cD", "gameProfile", "field_7507", "gameProfile", "f_36084_"), "Lcom/mojang/authlib/GameProfile;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.player.PlayerEntity#gameProfile
    static void set_field_gameProfile(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cD", "gameProfile", "field_7507", "gameProfile", "f_36084_"), "Lcom/mojang/authlib/GameProfile;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.player.PlayerEntity#reducedDebugInfo
    static jboolean get_field_reducedDebugInfo(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cE", "reducedDebugInfo", "field_7523", "reducedDebugInfo", "f_36085_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.player.PlayerEntity#reducedDebugInfo
    static void set_field_reducedDebugInfo(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cE", "reducedDebugInfo", "field_7523", "reducedDebugInfo", "f_36085_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.player.PlayerEntity#selectedItem
    static jobject get_field_selectedItem(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cF", "lastItemInMainHand", "field_7525", "selectedItem", "f_36086_"), "Lcuq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.player.PlayerEntity#selectedItem
    static void set_field_selectedItem(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cF", "lastItemInMainHand", "field_7525", "selectedItem", "f_36086_"), "Lcuq;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.player.PlayerEntity#itemCooldownManager
    static jobject get_field_itemCooldownManager(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cG", "cooldowns", "field_7484", "itemCooldownManager", "f_36087_"), "Lcum;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.player.PlayerEntity#itemCooldownManager
    static void set_field_itemCooldownManager(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cG", "cooldowns", "field_7484", "itemCooldownManager", "f_36087_"), "Lcum;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.player.PlayerEntity#lastDeathPos
    static jobject get_field_lastDeathPos(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cH", "lastDeathLocation", "field_39445", "lastDeathPos", "f_238176_"), "Ljava/util/Optional;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.player.PlayerEntity#lastDeathPos
    static void set_field_lastDeathPos(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cH", "lastDeathLocation", "field_39445", "lastDeathPos", "f_238176_"), "Ljava/util/Optional;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.entity.player.PlayerEntity#fishHook
    static jobject get_field_fishHook(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cv", "fishing", "field_7513", "fishHook", "f_36083_"), "Lcnl;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.entity.player.PlayerEntity#fishHook
    static void set_field_fishHook(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cv", "fishing", "field_7513", "fishHook", "f_36083_"), "Lcnl;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.entity.player.PlayerEntity#damageTiltYaw
    static jfloat get_field_damageTiltYaw(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cw", "hurtDir", "field_41765", "damageTiltYaw", "f_263750_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.entity.player.PlayerEntity#damageTiltYaw
    static void set_field_damageTiltYaw(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cw", "hurtDir", "field_41765", "damageTiltYaw", "f_263750_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.entity.player.PlayerEntity#currentExplosionImpactPos
    static jobject get_field_currentExplosionImpactPos(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cx", "currentImpulseImpactPos", "field_49989", "currentExplosionImpactPos", "f_316171_"), "Lexc;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.entity.player.PlayerEntity#currentExplosionImpactPos
    static void set_field_currentExplosionImpactPos(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cx", "currentImpulseImpactPos", "field_49989", "currentExplosionImpactPos", "f_316171_"), "Lexc;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.entity.player.PlayerEntity#explodedBy
    static jobject get_field_explodedBy(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cy", "currentExplosionCause", "field_49990", "explodedBy", "f_314551_"), "Lbsr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.entity.player.PlayerEntity#explodedBy
    static void set_field_explodedBy(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cy", "currentExplosionCause", "field_49990", "explodedBy", "f_314551_"), "Lbsr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.player.PlayerEntity#ignoreFallDamageFromCurrentExplosion
    static jboolean get_field_ignoreFallDamageFromCurrentExplosion(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cI", "ignoreFallDamageFromCurrentImpulse", "field_49991", "ignoreFallDamageFromCurrentExplosion", "f_315903_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.player.PlayerEntity#ignoreFallDamageFromCurrentExplosion
    static void set_field_ignoreFallDamageFromCurrentExplosion(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cI", "ignoreFallDamageFromCurrentImpulse", "field_49991", "ignoreFallDamageFromCurrentExplosion", "f_315903_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.player.PlayerEntity#currentExplosionResetGraceTime
    static jint get_field_currentExplosionResetGraceTime(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cJ", "currentImpulseContextResetGraceTime", "field_52223", "currentExplosionResetGraceTime", "f_337524_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.player.PlayerEntity#currentExplosionResetGraceTime
    static void set_field_currentExplosionResetGraceTime(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("cJ", "currentImpulseContextResetGraceTime", "field_52223", "currentExplosionResetGraceTime", "f_337524_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    static jmethodID methodID_isBlockBreakingRestricted() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "blockActionRestricted", "method_21701", "isBlockBreakingRestricted", "m_36187_"), "(Ldcw;Ljd;Ldct;)Z");
    }

    static jboolean isBlockBreakingRestricted(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_isBlockBreakingRestricted();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_createPlayerAttributes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("fM", "createAttributes", "method_26956", "createPlayerAttributes", "m_36340_"), "()Lbuv$a;");
    }

    static jobject createPlayerAttributes() {
       const auto clazz = self();
       const auto methodID = methodID_createPlayerAttributes();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_initDataTracker() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "defineSynchedData", "method_5693", "initDataTracker", "m_8097_"), "(Laka$a;)V");
    }

    static void initDataTracker(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_initDataTracker();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_tick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("l", "tick", "method_5773", "tick", "m_8119_"), "()V");
    }

    static void tick(const jobject& obj) {
                
       const auto methodID = methodID_tick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getMaxRelativeHeadRotation() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("fk", "getMaxHeadRotationRelativeToBody", "method_53964", "getMaxRelativeHeadRotation", "m_307017_"), "()F");
    }

    static jfloat getMaxRelativeHeadRotation(const jobject& obj) {
                
       const auto methodID = methodID_getMaxRelativeHeadRotation();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID_shouldCancelInteraction() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("fN", "isSecondaryUseActive", "method_21823", "shouldCancelInteraction", "m_36341_"), "()Z");
    }

    static jboolean shouldCancelInteraction(const jobject& obj) {
                
       const auto methodID = methodID_shouldCancelInteraction();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_shouldDismount() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("fO", "wantsToStopRiding", "method_21824", "shouldDismount", "m_36342_"), "()Z");
    }

    static jboolean shouldDismount(const jobject& obj) {
                
       const auto methodID = methodID_shouldDismount();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_clipAtLedge() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("fP", "isStayingOnGroundSurface", "method_21825", "clipAtLedge", "m_36343_"), "()Z");
    }

    static jboolean clipAtLedge(const jobject& obj) {
                
       const auto methodID = methodID_clipAtLedge();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_updateWaterSubmersionState() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("fQ", "updateIsUnderwater", "method_7295", "updateWaterSubmersionState", "m_7602_"), "()Z");
    }

    static jboolean updateWaterSubmersionState(const jobject& obj) {
                
       const auto methodID = methodID_updateWaterSubmersionState();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_updateTurtleHelmet() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("v", "turtleHelmetTick", "method_7330", "updateTurtleHelmet", "m_36372_"), "()V");
    }

    static void updateTurtleHelmet(const jobject& obj) {
                
       const auto methodID = methodID_updateTurtleHelmet();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_createCooldownManager() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("k", "createItemCooldowns", "method_7265", "createCooldownManager", "m_7478_"), "()Lcum;");
    }

    static jobject createCooldownManager(const jobject& obj) {
                
       const auto methodID = methodID_createCooldownManager();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_updateCapeAngles() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("x", "moveCloak", "method_7313", "updateCapeAngles", "m_36377_"), "()V");
    }

    static void updateCapeAngles(const jobject& obj) {
                
       const auto methodID = methodID_updateCapeAngles();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_updatePose() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("fR", "updatePlayerPose", "method_7318", "updatePose", "m_7594_"), "()V");
    }

    static void updatePose(const jobject& obj) {
                
       const auto methodID = methodID_updatePose();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_canChangeIntoPose() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "canPlayerFitWithinBlocksAndEntitiesWhen", "method_52558", "canChangeIntoPose", "m_295652_"), "(Lbua;)Z");
    }

    static jboolean canChangeIntoPose(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_canChangeIntoPose();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getSwimSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aQ", "getSwimSound", "method_5737", "getSwimSound", "m_5501_"), "()Lavo;");
    }

    static jobject getSwimSound(const jobject& obj) {
                
       const auto methodID = methodID_getSwimSound();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getSplashSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aR", "getSwimSplashSound", "method_5625", "getSplashSound", "m_5509_"), "()Lavo;");
    }

    static jobject getSplashSound(const jobject& obj) {
                
       const auto methodID = methodID_getSplashSound();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getHighSpeedSplashSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aS", "getSwimHighSpeedSplashSound", "method_5672", "getHighSpeedSplashSound", "m_5508_"), "()Lavo;");
    }

    static jobject getHighSpeedSplashSound(const jobject& obj) {
                
       const auto methodID = methodID_getHighSpeedSplashSound();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getDefaultPortalCooldown() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("bQ", "getDimensionChangingDelay", "method_5806", "getDefaultPortalCooldown", "m_6045_"), "()I");
    }

    static jint getDefaultPortalCooldown(const jobject& obj) {
                
       const auto methodID = methodID_getDefaultPortalCooldown();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_playSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "playSound", "method_5783", "playSound", "m_5496_"), "(Lavo;FF)V");
    }

    static void playSound(const jobject& obj, const jobject& arg0, const jfloat& arg1, const jfloat& arg2) {
                
       const auto methodID = methodID_playSound();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_playSoundToPlayer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "playNotifySound", "method_17356", "playSoundToPlayer", "m_6330_"), "(Lavo;Lavq;FF)V");
    }

    static void playSoundToPlayer(const jobject& obj, const jobject& arg0, const jobject& arg1, const jfloat& arg2, const jfloat& arg3) {
                
       const auto methodID = methodID_playSoundToPlayer();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_getSoundCategory() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("de", "getSoundSource", "method_5634", "getSoundCategory", "m_5720_"), "()Lavq;");
    }

    static jobject getSoundCategory(const jobject& obj) {
                
       const auto methodID = methodID_getSoundCategory();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getBurningDuration() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("df", "getFireImmuneTicks", "method_5676", "getBurningDuration", "m_6101_"), "()I");
    }

    static jint getBurningDuration(const jobject& obj) {
                
       const auto methodID = methodID_getBurningDuration();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_handleStatus() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "handleEntityEvent", "method_5711", "handleStatus", "m_7822_"), "(B)V");
    }

    static void handleStatus(const jobject& obj, const jbyte& arg0) {
                
       const auto methodID = methodID_handleStatus();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_closeHandledScreen() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("s", "closeContainer", "method_7346", "closeHandledScreen", "m_6915_"), "()V");
    }

    static void closeHandledScreen(const jobject& obj) {
                
       const auto methodID = methodID_closeHandledScreen();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_onHandledScreenClosed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("t", "doCloseContainer", "method_14247", "onHandledScreenClosed", "m_9230_"), "()V");
    }

    static void onHandledScreenClosed(const jobject& obj) {
                
       const auto methodID = methodID_onHandledScreenClosed();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_tickRiding() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("u", "rideTick", "method_5842", "tickRiding", "m_6083_"), "()V");
    }

    static void tickRiding(const jobject& obj) {
                
       const auto methodID = methodID_tickRiding();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_tickNewAi() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("fm", "serverAiStep", "method_6023", "tickNewAi", "m_6140_"), "()V");
    }

    static void tickNewAi(const jobject& obj) {
                
       const auto methodID = methodID_tickNewAi();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_tickMovement() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("m_", "aiStep", "method_6007", "tickMovement", "m_8107_"), "()V");
    }

    static void tickMovement(const jobject& obj) {
                
       const auto methodID = methodID_tickMovement();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_updateShoulderEntity() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "playShoulderEntityAmbientSound", "method_7267", "updateShoulderEntity", "m_36367_"), "(Lub;)V");
    }

    static void updateShoulderEntity(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_updateShoulderEntity();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_collideWithEntity() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "touch", "method_7341", "collideWithEntity", "m_36277_"), "(Lbsr;)V");
    }

    static void collideWithEntity(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_collideWithEntity();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getScore() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("fS", "getScore", "method_7272", "getScore", "m_36344_"), "()I");
    }

    static jint getScore(const jobject& obj) {
                
       const auto methodID = methodID_getScore();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_setScore() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("r", "setScore", "method_7320", "setScore", "m_36397_"), "(I)V");
    }

    static void setScore(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_setScore();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_addScore() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("s", "increaseScore", "method_7285", "addScore", "m_36401_"), "(I)V");
    }

    static void addScore(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_addScore();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_useRiptide() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "startAutoSpinAttack", "method_40126", "useRiptide", "m_204079_"), "(IFLcuq;)V");
    }

    static void useRiptide(const jobject& obj, const jint& arg0, const jfloat& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_useRiptide();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_getWeaponStack() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("dS", "getWeaponItem", "method_59958", "getWeaponStack", "m_338776_"), "()Lcuq;");
    }

    static jobject getWeaponStack(const jobject& obj) {
                
       const auto methodID = methodID_getWeaponStack();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_onDeath() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "die", "method_6078", "onDeath", "m_6667_"), "(Lbrk;)V");
    }

    static void onDeath(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onDeath();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_dropInventory() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ez", "dropEquipment", "method_16078", "dropInventory", "m_5907_"), "()V");
    }

    static void dropInventory(const jobject& obj) {
                
       const auto methodID = methodID_dropInventory();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_vanishCursedItems() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("fT", "destroyVanishingCursedItems", "method_7293", "vanishCursedItems", "m_36345_"), "()V");
    }

    static void vanishCursedItems(const jobject& obj) {
                
       const auto methodID = methodID_vanishCursedItems();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getHurtSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getHurtSound", "method_6011", "getHurtSound", "m_7975_"), "(Lbrk;)Lavo;");
    }

    static jobject getHurtSound(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getHurtSound();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getDeathSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("n_", "getDeathSound", "method_6002", "getDeathSound", "m_5592_"), "()Lavo;");
    }

    static jobject getDeathSound(const jobject& obj) {
                
       const auto methodID = methodID_getDeathSound();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_dropItem() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "drop", "method_7328", "dropItem", "m_36176_"), "(Lcuq;Z)Lcjh;");
    }

    static jobject dropItem(const jobject& obj, const jobject& arg0, const jboolean& arg1) {
                
       const auto methodID = methodID_dropItem();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__dropItem() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "drop", "method_7329", "dropItem", "m_7197_"), "(Lcuq;ZZ)Lcjh;");
    }

    static jobject _dropItem(const jobject& obj, const jobject& arg0, const jboolean& arg1, const jboolean& arg2) {
                
       const auto methodID = methodID__dropItem();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_getBlockBreakingSpeed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getDestroySpeed", "method_7351", "getBlockBreakingSpeed", "m_36281_"), "(Ldtc;)F");
    }

    static jfloat getBlockBreakingSpeed(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getBlockBreakingSpeed();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_canHarvest() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "hasCorrectToolForDrops", "method_7305", "canHarvest", "m_36298_"), "(Ldtc;)Z");
    }

    static jboolean canHarvest(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_canHarvest();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_readCustomDataFromNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "readAdditionalSaveData", "method_5749", "readCustomDataFromNbt", "m_7378_"), "(Lub;)V");
    }

    static void readCustomDataFromNbt(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_readCustomDataFromNbt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_writeCustomDataToNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "addAdditionalSaveData", "method_5652", "writeCustomDataToNbt", "m_7380_"), "(Lub;)V");
    }

    static void writeCustomDataToNbt(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_writeCustomDataToNbt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isInvulnerableTo() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "isInvulnerableTo", "method_5679", "isInvulnerableTo", "m_6673_"), "(Lbrk;)Z");
    }

    static jboolean isInvulnerableTo(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_isInvulnerableTo();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_damage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "hurt", "method_5643", "damage", "m_6469_"), "(Lbrk;F)Z");
    }

    static jboolean damage(const jobject& obj, const jobject& arg0, const jfloat& arg1) {
                
       const auto methodID = methodID_damage();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_takeShieldHit() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "blockUsingShield", "method_6090", "takeShieldHit", "m_6728_"), "(Lbtn;)V");
    }

    static void takeShieldHit(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_takeShieldHit();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_canTakeDamage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ep", "canBeSeenAsEnemy", "method_33190", "canTakeDamage", "m_142066_"), "()Z");
    }

    static jboolean canTakeDamage(const jobject& obj) {
                
       const auto methodID = methodID_canTakeDamage();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_shouldDamagePlayer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "canHarmPlayer", "method_7256", "shouldDamagePlayer", "m_7099_"), "(Lcmx;)Z");
    }

    static jboolean shouldDamagePlayer(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_shouldDamagePlayer();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_damageArmor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "hurtArmor", "method_6105", "damageArmor", "m_6472_"), "(Lbrk;F)V");
    }

    static void damageArmor(const jobject& obj, const jobject& arg0, const jfloat& arg1) {
                
       const auto methodID = methodID_damageArmor();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_damageHelmet() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "hurtHelmet", "method_36977", "damageHelmet", "m_142642_"), "(Lbrk;F)V");
    }

    static void damageHelmet(const jobject& obj, const jobject& arg0, const jfloat& arg1) {
                
       const auto methodID = methodID_damageHelmet();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_damageShield() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("x", "hurtCurrentlyUsedShield", "method_6056", "damageShield", "m_7909_"), "(F)V");
    }

    static void damageShield(const jobject& obj, const jfloat& arg0) {
                
       const auto methodID = methodID_damageShield();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_applyDamage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "actuallyHurt", "method_6074", "applyDamage", "m_6475_"), "(Lbrk;F)V");
    }

    static void applyDamage(const jobject& obj, const jobject& arg0, const jfloat& arg1) {
                
       const auto methodID = methodID_applyDamage();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_shouldFilterText() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("Z", "isTextFilteringEnabled", "method_33793", "shouldFilterText", "m_143387_"), "()Z");
    }

    static jboolean shouldFilterText(const jobject& obj) {
                
       const auto methodID = methodID_shouldFilterText();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_openEditSignScreen() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "openTextEdit", "method_7311", "openEditSignScreen", "m_7739_"), "(Ldrs;Z)V");
    }

    static void openEditSignScreen(const jobject& obj, const jobject& arg0, const jboolean& arg1) {
                
       const auto methodID = methodID_openEditSignScreen();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_openCommandBlockMinecartScreen() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "openMinecartCommandBlock", "method_7257", "openCommandBlockMinecartScreen", "m_7907_"), "(Ldbx;)V");
    }

    static void openCommandBlockMinecartScreen(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_openCommandBlockMinecartScreen();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_openCommandBlockScreen() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "openCommandBlock", "method_7323", "openCommandBlockScreen", "m_7698_"), "(Ldqr;)V");
    }

    static void openCommandBlockScreen(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_openCommandBlockScreen();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_openStructureBlockScreen() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "openStructureBlock", "method_7303", "openStructureBlockScreen", "m_5966_"), "(Ldrx;)V");
    }

    static void openStructureBlockScreen(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_openStructureBlockScreen();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_openJigsawScreen() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "openJigsawBlock", "method_16354", "openJigsawScreen", "m_7569_"), "(Ldri;)V");
    }

    static void openJigsawScreen(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_openJigsawScreen();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_openHorseInventory() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "openHorseInventory", "method_7291", "openHorseInventory", "m_6658_"), "(Lchi;Lbqk;)V");
    }

    static void openHorseInventory(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_openHorseInventory();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_openHandledScreen() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "openMenu", "method_17355", "openHandledScreen", "m_5893_"), "(Lbqv;)Ljava/util/OptionalInt;");
    }

    static jobject openHandledScreen(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_openHandledScreen();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_sendTradeOffers() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "sendMerchantOffers", "method_17354", "sendTradeOffers", "m_7662_"), "(ILdbv;IIZZ)V");
    }

    static void sendTradeOffers(const jobject& obj, const jint& arg0, const jobject& arg1, const jint& arg2, const jint& arg3, const jboolean& arg4, const jboolean& arg5) {
                
       const auto methodID = methodID_sendTradeOffers();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5);
    };
    
    static jmethodID methodID_useBook() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "openItemGui", "method_7315", "useBook", "m_6986_"), "(Lcuq;Lbqq;)V");
    }

    static void useBook(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_useBook();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_interact() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "interactOn", "method_7287", "interact", "m_36157_"), "(Lbsr;Lbqq;)Lbqr;");
    }

    static jobject interact(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_interact();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_dismountVehicle() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("bJ", "removeVehicle", "method_29239", "dismountVehicle", "m_6038_"), "()V");
    }

    static void dismountVehicle(const jobject& obj) {
                
       const auto methodID = methodID_dismountVehicle();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_isImmobile() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("fc", "isImmobile", "method_6062", "isImmobile", "m_6107_"), "()Z");
    }

    static jboolean isImmobile(const jobject& obj) {
                
       const auto methodID = methodID_isImmobile();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_shouldSwimInFluids() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ec", "isAffectedByFluids", "method_29920", "shouldSwimInFluids", "m_6129_"), "()Z");
    }

    static jboolean shouldSwimInFluids(const jobject& obj) {
                
       const auto methodID = methodID_shouldSwimInFluids();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_adjustMovementForSneaking() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "maybeBackOffFromEdge", "method_18796", "adjustMovementForSneaking", "m_5763_"), "(Lexc;Lbts;)Lexc;");
    }

    static jobject adjustMovementForSneaking(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_adjustMovementForSneaking();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_method_30263() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("G", "isAboveGround", "method_30263", "method_30263", "m_36386_"), "(F)Z");
    }

    static jboolean method_30263(const jobject& obj, const jfloat& arg0) {
                
       const auto methodID = methodID_method_30263();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isSpaceAroundPlayerEmpty() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "canFallAtLeast", "method_59818", "isSpaceAroundPlayerEmpty", "m_323310_"), "(DDF)Z");
    }

    static jboolean isSpaceAroundPlayerEmpty(const jobject& obj, const jdouble& arg0, const jdouble& arg1, const jfloat& arg2) {
                
       const auto methodID = methodID_isSpaceAroundPlayerEmpty();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_attack() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "attack", "method_7324", "attack", "m_5706_"), "(Lbsr;)V");
    }

    static void attack(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_attack();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getDamageAgainst() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getEnchantedDamage", "method_59903", "getDamageAgainst", "m_339569_"), "(Lbsr;FLbrk;)F");
    }

    static jfloat getDamageAgainst(const jobject& obj, const jobject& arg0, const jfloat& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_getDamageAgainst();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_attackLivingEntity() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "doAutoAttackOnTouch", "method_5997", "attackLivingEntity", "m_6727_"), "(Lbtn;)V");
    }

    static void attackLivingEntity(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_attackLivingEntity();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_disableShield() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("fU", "disableShield", "method_7284", "disableShield", "m_36384_"), "()V");
    }

    static void disableShield(const jobject& obj) {
                
       const auto methodID = methodID_disableShield();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_addCritParticles() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "crit", "method_7277", "addCritParticles", "m_5704_"), "(Lbsr;)V");
    }

    static void addCritParticles(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_addCritParticles();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_addEnchantedHitParticles() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "magicCrit", "method_7304", "addEnchantedHitParticles", "m_5700_"), "(Lbsr;)V");
    }

    static void addEnchantedHitParticles(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_addEnchantedHitParticles();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_spawnSweepAttackParticles() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("fV", "sweepAttack", "method_7263", "spawnSweepAttackParticles", "m_36346_"), "()V");
    }

    static void spawnSweepAttackParticles(const jobject& obj) {
                
       const auto methodID = methodID_spawnSweepAttackParticles();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_requestRespawn() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("fW", "respawn", "method_7331", "requestRespawn", "m_7583_"), "()V");
    }

    static void requestRespawn(const jobject& obj) {
                
       const auto methodID = methodID_requestRespawn();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_remove() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "remove", "method_5650", "remove", "m_142687_"), "(Lbsr$c;)V");
    }

    static void remove(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_remove();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isMainPlayer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "isLocalPlayer", "method_7340", "isMainPlayer", "m_7578_"), "()Z");
    }

    static jboolean isMainPlayer(const jobject& obj) {
                
       const auto methodID = methodID_isMainPlayer();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getGameProfile() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("fX", "getGameProfile", "method_7334", "getGameProfile", "m_36316_"), "()Lcom/mojang/authlib/GameProfile;");
    }

    static jobject getGameProfile(const jobject& obj) {
                
       const auto methodID = methodID_getGameProfile();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getInventory() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("fY", "getInventory", "method_31548", "getInventory", "m_150109_"), "()Lcmw;");
    }

    static jobject getInventory(const jobject& obj) {
                
       const auto methodID = methodID_getInventory();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getAbilities() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("fZ", "getAbilities", "method_31549", "getAbilities", "m_150110_"), "()Lcmu;");
    }

    static jobject getAbilities(const jobject& obj) {
                
       const auto methodID = methodID_getAbilities();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_isInCreativeMode() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("fL", "hasInfiniteMaterials", "method_56992", "isInCreativeMode", "m_322042_"), "()Z");
    }

    static jboolean isInCreativeMode(const jobject& obj) {
                
       const auto methodID = methodID_isInCreativeMode();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_onPickupSlotClick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "updateTutorialInventoryAction", "method_33592", "onPickupSlotClick", "m_141945_"), "(Lcuq;Lcuq;Lcqd;)V");
    }

    static void onPickupSlotClick(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_onPickupSlotClick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_shouldCloseHandledScreenOnRespawn() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ga", "hasContainerOpen", "method_45015", "shouldCloseHandledScreenOnRespawn", "m_242612_"), "()Z");
    }

    static jboolean shouldCloseHandledScreenOnRespawn(const jobject& obj) {
                
       const auto methodID = methodID_shouldCloseHandledScreenOnRespawn();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_trySleep() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "startSleepInBed", "method_7269", "trySleep", "m_7720_"), "(Ljd;)Lcom/mojang/datafixers/util/Either;");
    }

    static jobject trySleep(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_trySleep();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_wakeUp() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "stopSleepInBed", "method_7358", "wakeUp", "m_6145_"), "(ZZ)V");
    }

    static void wakeUp(const jobject& obj, const jboolean& arg0, const jboolean& arg1) {
                
       const auto methodID = methodID_wakeUp();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__wakeUp() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("fI", "stopSleeping", "method_18400", "wakeUp", "m_5796_"), "()V");
    }

    static void _wakeUp(const jobject& obj) {
                
       const auto methodID = methodID__wakeUp();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_canResetTimeBySleeping() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gb", "isSleepingLongEnough", "method_7276", "canResetTimeBySleeping", "m_36317_"), "()Z");
    }

    static jboolean canResetTimeBySleeping(const jobject& obj) {
                
       const auto methodID = methodID_canResetTimeBySleeping();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getSleepTimer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gc", "getSleepTimer", "method_7297", "getSleepTimer", "m_36318_"), "()I");
    }

    static jint getSleepTimer(const jobject& obj) {
                
       const auto methodID = methodID_getSleepTimer();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_sendMessage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "displayClientMessage", "method_7353", "sendMessage", "m_5661_"), "(Lwz;Z)V");
    }

    static void sendMessage(const jobject& obj, const jobject& arg0, const jboolean& arg1) {
                
       const auto methodID = methodID_sendMessage();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_incrementStat() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "awardStat", "method_7281", "incrementStat", "m_36220_"), "(Lakr;)V");
    }

    static void incrementStat(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_incrementStat();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_increaseStat() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "awardStat", "method_7339", "increaseStat", "m_36222_"), "(Lakr;I)V");
    }

    static void increaseStat(const jobject& obj, const jobject& arg0, const jint& arg1) {
                
       const auto methodID = methodID_increaseStat();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__incrementStat() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "awardStat", "method_7259", "incrementStat", "m_36246_"), "(Lavw;)V");
    }

    static void _incrementStat(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__incrementStat();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__increaseStat() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "awardStat", "method_7342", "increaseStat", "m_6278_"), "(Lavw;I)V");
    }

    static void _increaseStat(const jobject& obj, const jobject& arg0, const jint& arg1) {
                
       const auto methodID = methodID__increaseStat();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_resetStat() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "resetStat", "method_7266", "resetStat", "m_7166_"), "(Lavw;)V");
    }

    static void resetStat(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_resetStat();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_unlockRecipes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "awardRecipes", "method_7254", "unlockRecipes", "m_7281_"), "(Ljava/util/Collection;)I");
    }

    static jint unlockRecipes(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_unlockRecipes();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_onRecipeCrafted() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "triggerRecipeCrafted", "method_51283", "onRecipeCrafted", "m_280300_"), "(Lczb;Ljava/util/List;)V");
    }

    static void onRecipeCrafted(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_onRecipeCrafted();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__unlockRecipes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "awardRecipesByKey", "method_7335", "unlockRecipes", "m_7902_"), "(Ljava/util/List;)V");
    }

    static void _unlockRecipes(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__unlockRecipes();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_lockRecipes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "resetRecipes", "method_7333", "lockRecipes", "m_7279_"), "(Ljava/util/Collection;)I");
    }

    static jint lockRecipes(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_lockRecipes();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_jump() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ff", "jumpFromGround", "method_6043", "jump", "m_6135_"), "()V");
    }

    static void jump(const jobject& obj) {
                
       const auto methodID = methodID_jump();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_travel() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "travel", "method_6091", "travel", "m_7023_"), "(Lexc;)V");
    }

    static void travel(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_travel();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_updateSwimming() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("bl", "updateSwimming", "method_5790", "updateSwimming", "m_5844_"), "()V");
    }

    static void updateSwimming(const jobject& obj) {
                
       const auto methodID = methodID_updateSwimming();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_doesNotSuffocate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "freeAt", "method_7326", "doesNotSuffocate", "m_36350_"), "(Ljd;)Z");
    }

    static jboolean doesNotSuffocate(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_doesNotSuffocate();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getMovementSpeed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("fj", "getSpeed", "method_6029", "getMovementSpeed", "m_6113_"), "()F");
    }

    static jfloat getMovementSpeed(const jobject& obj) {
                
       const auto methodID = methodID_getMovementSpeed();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID_handleFallDamage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "causeFallDamage", "method_5747", "handleFallDamage", "m_142535_"), "(FFLbrk;)Z");
    }

    static jboolean handleFallDamage(const jobject& obj, const jfloat& arg0, const jfloat& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_handleFallDamage();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_checkFallFlying() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gd", "tryToStartFallFlying", "method_23668", "checkFallFlying", "m_36319_"), "()Z");
    }

    static jboolean checkFallFlying(const jobject& obj) {
                
       const auto methodID = methodID_checkFallFlying();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_startFallFlying() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ge", "startFallFlying", "method_23669", "startFallFlying", "m_36320_"), "()V");
    }

    static void startFallFlying(const jobject& obj) {
                
       const auto methodID = methodID_startFallFlying();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_stopFallFlying() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gf", "stopFallFlying", "method_23670", "stopFallFlying", "m_36321_"), "()V");
    }

    static void stopFallFlying(const jobject& obj) {
                
       const auto methodID = methodID_stopFallFlying();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_onSwimmingStart() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("bo", "doWaterSplashEffect", "method_5746", "onSwimmingStart", "m_5841_"), "()V");
    }

    static void onSwimmingStart(const jobject& obj) {
                
       const auto methodID = methodID_onSwimmingStart();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_playStepSound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "playStepSound", "method_5712", "playStepSound", "m_7355_"), "(Ljd;Ldtc;)V");
    }

    static void playStepSound(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_playStepSound();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getFallSounds() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("eH", "getFallSounds", "method_39760", "getFallSounds", "m_196493_"), "()Lbtn$a;");
    }

    static jobject getFallSounds(const jobject& obj) {
                
       const auto methodID = methodID_getFallSounds();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_onKilledOther() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "killedEntity", "method_5874", "onKilledOther", "m_214076_"), "(Laqu;Lbtn;)Z");
    }

    static jboolean onKilledOther(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_onKilledOther();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_slowMovement() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "makeStuckInBlock", "method_5844", "slowMovement", "m_7601_"), "(Ldtc;Lexc;)V");
    }

    static void slowMovement(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_slowMovement();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_addExperience() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "giveExperiencePoints", "method_7255", "addExperience", "m_6756_"), "(I)V");
    }

    static void addExperience(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_addExperience();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getEnchantmentTableSeed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gg", "getEnchantmentSeed", "method_7278", "getEnchantmentTableSeed", "m_36322_"), "()I");
    }

    static jint getEnchantmentTableSeed(const jobject& obj) {
                
       const auto methodID = methodID_getEnchantmentTableSeed();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_applyEnchantmentCosts() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "onEnchantmentPerformed", "method_7286", "applyEnchantmentCosts", "m_7408_"), "(Lcuq;I)V");
    }

    static void applyEnchantmentCosts(const jobject& obj, const jobject& arg0, const jint& arg1) {
                
       const auto methodID = methodID_applyEnchantmentCosts();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_addExperienceLevels() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "giveExperienceLevels", "method_7316", "addExperienceLevels", "m_6749_"), "(I)V");
    }

    static void addExperienceLevels(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_addExperienceLevels();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getNextLevelExperience() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gh", "getXpNeededForNextLevel", "method_7349", "getNextLevelExperience", "m_36323_"), "()I");
    }

    static jint getNextLevelExperience(const jobject& obj) {
                
       const auto methodID = methodID_getNextLevelExperience();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_addExhaustion() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("E", "causeFoodExhaustion", "method_7322", "addExhaustion", "m_36399_"), "(F)V");
    }

    static void addExhaustion(const jobject& obj, const jfloat& arg0) {
                
       const auto methodID = methodID_addExhaustion();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getSculkShriekerWarningManager() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ab", "getWardenSpawnTracker", "method_42272", "getSculkShriekerWarningManager", "m_245217_"), "()Ljava/util/Optional;");
    }

    static jobject getSculkShriekerWarningManager(const jobject& obj) {
                
       const auto methodID = methodID_getSculkShriekerWarningManager();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getHungerManager() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gi", "getFoodData", "method_7344", "getHungerManager", "m_36324_"), "()Lcpq;");
    }

    static jobject getHungerManager(const jobject& obj) {
                
       const auto methodID = methodID_getHungerManager();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_canConsume() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("u", "canEat", "method_7332", "canConsume", "m_36391_"), "(Z)Z");
    }

    static jboolean canConsume(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_canConsume();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_canFoodHeal() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gj", "isHurt", "method_7317", "canFoodHeal", "m_36325_"), "()Z");
    }

    static jboolean canFoodHeal(const jobject& obj) {
                
       const auto methodID = methodID_canFoodHeal();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_canModifyBlocks() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gk", "mayBuild", "method_7294", "canModifyBlocks", "m_36326_"), "()Z");
    }

    static jboolean canModifyBlocks(const jobject& obj) {
                
       const auto methodID = methodID_canModifyBlocks();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_canPlaceOn() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "mayUseItemAt", "method_7343", "canPlaceOn", "m_36204_"), "(Ljd;Lji;Lcuq;)Z");
    }

    static jboolean canPlaceOn(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_canPlaceOn();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_getXpToDrop() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("eg", "getBaseExperienceReward", "method_6110", "getXpToDrop", "m_213860_"), "()I");
    }

    static jint getXpToDrop(const jobject& obj) {
                
       const auto methodID = methodID_getXpToDrop();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_shouldAlwaysDropXp() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("eh", "isAlwaysExperienceDropper", "method_6071", "shouldAlwaysDropXp", "m_6124_"), "()Z");
    }

    static jboolean shouldAlwaysDropXp(const jobject& obj) {
                
       const auto methodID = methodID_shouldAlwaysDropXp();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_shouldRenderName() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("cF", "shouldShowName", "method_5733", "shouldRenderName", "m_6052_"), "()Z");
    }

    static jboolean shouldRenderName(const jobject& obj) {
                
       const auto methodID = methodID_shouldRenderName();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getMoveEffect() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("bc", "getMovementEmission", "method_33570", "getMoveEffect", "m_142319_"), "()Lbsr$b;");
    }

    static jobject getMoveEffect(const jobject& obj) {
                
       const auto methodID = methodID_getMoveEffect();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_sendAbilitiesUpdate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("z", "onUpdateAbilities", "method_7355", "sendAbilitiesUpdate", "m_6885_"), "()V");
    }

    static void sendAbilitiesUpdate(const jobject& obj) {
                
       const auto methodID = methodID_sendAbilitiesUpdate();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getName() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ah", "getName", "method_5477", "getName", "m_7755_"), "()Lwz;");
    }

    static jobject getName(const jobject& obj) {
                
       const auto methodID = methodID_getName();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getEnderChestInventory() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gl", "getEnderChestInventory", "method_7274", "getEnderChestInventory", "m_36327_"), "()Lcrh;");
    }

    static jobject getEnderChestInventory(const jobject& obj) {
                
       const auto methodID = methodID_getEnderChestInventory();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getEquippedStack() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getItemBySlot", "method_6118", "getEquippedStack", "m_6844_"), "(Lbsy;)Lcuq;");
    }

    static jobject getEquippedStack(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getEquippedStack();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isArmorSlot() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "doesEmitEquipEvent", "method_44201", "isArmorSlot", "m_213772_"), "(Lbsy;)Z");
    }

    static jboolean isArmorSlot(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_isArmorSlot();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_equipStack() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setItemSlot", "method_5673", "equipStack", "m_21035_"), "(Lbsy;Lcuq;)V");
    }

    static void equipStack(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_equipStack();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_giveItemStack() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("i", "addItem", "method_7270", "giveItemStack", "m_36356_"), "(Lcuq;)Z");
    }

    static jboolean giveItemStack(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_giveItemStack();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getHandItems() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("eW", "getHandSlots", "method_5877", "getHandItems", "m_21487_"), "()Ljava/lang/Iterable;");
    }

    static jobject getHandItems(const jobject& obj) {
                
       const auto methodID = methodID_getHandItems();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getArmorItems() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("eV", "getArmorSlots", "method_5661", "getArmorItems", "m_21151_"), "()Ljava/lang/Iterable;");
    }

    static jobject getArmorItems(const jobject& obj) {
                
       const auto methodID = methodID_getArmorItems();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_canUseSlot() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "canUseSlot", "method_56991", "canUseSlot", "m_30729_"), "(Lbsy;)Z");
    }

    static jboolean canUseSlot(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_canUseSlot();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_addShoulderEntity() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "setEntityOnShoulder", "method_7298", "addShoulderEntity", "m_36360_"), "(Lub;)Z");
    }

    static jboolean addShoulderEntity(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_addShoulderEntity();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_dropShoulderEntities() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gm", "removeEntitiesOnShoulder", "method_7262", "dropShoulderEntities", "m_36328_"), "()V");
    }

    static void dropShoulderEntities(const jobject& obj) {
                
       const auto methodID = methodID_dropShoulderEntities();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_dropShoulderEntity() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("k", "respawnEntityOnShoulder", "method_7296", "dropShoulderEntity", "m_36370_"), "(Lub;)V");
    }

    static void dropShoulderEntity(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_dropShoulderEntity();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isSpectator() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("R_", "isSpectator", "method_7325", "isSpectator", "m_5833_"), "()Z");
    }

    static jboolean isSpectator(const jobject& obj) {
                
       const auto methodID = methodID_isSpectator();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_canBeHitByProjectile() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("bz", "canBeHitByProjectile", "method_49108", "canBeHitByProjectile", "m_271807_"), "()Z");
    }

    static jboolean canBeHitByProjectile(const jobject& obj) {
                
       const auto methodID = methodID_canBeHitByProjectile();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isSwimming() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("cd", "isSwimming", "method_5681", "isSwimming", "m_6069_"), "()Z");
    }

    static jboolean isSwimming(const jobject& obj) {
                
       const auto methodID = methodID_isSwimming();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isCreative() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "isCreative", "method_7337", "isCreative", "m_7500_"), "()Z");
    }

    static jboolean isCreative(const jobject& obj) {
                
       const auto methodID = methodID_isCreative();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isPushedByFluids() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("cC", "isPushedByFluid", "method_5675", "isPushedByFluids", "m_6063_"), "()Z");
    }

    static jboolean isPushedByFluids(const jobject& obj) {
                
       const auto methodID = methodID_isPushedByFluids();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getScoreboard() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gn", "getScoreboard", "method_7327", "getScoreboard", "m_36329_"), "()Leyg;");
    }

    static jobject getScoreboard(const jobject& obj) {
                
       const auto methodID = methodID_getScoreboard();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getDisplayName() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("S_", "getDisplayName", "method_5476", "getDisplayName", "m_5446_"), "()Lwz;");
    }

    static jobject getDisplayName(const jobject& obj) {
                
       const auto methodID = methodID_getDisplayName();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_addTellClickEvent() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "decorateDisplayNameComponent", "method_7299", "addTellClickEvent", "m_36218_"), "(Lxn;)Lxn;");
    }

    static jobject addTellClickEvent(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_addTellClickEvent();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getNameForScoreboard() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("cB", "getScoreboardName", "method_5820", "getNameForScoreboard", "m_6302_"), "()Ljava/lang/String;");
    }

    static jobject getNameForScoreboard(const jobject& obj) {
                
       const auto methodID = methodID_getNameForScoreboard();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_setAbsorptionAmountUnclamped() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("D", "internalSetAbsorptionAmount", "method_52544", "setAbsorptionAmountUnclamped", "m_292637_"), "(F)V");
    }

    static void setAbsorptionAmountUnclamped(const jobject& obj, const jfloat& arg0) {
                
       const auto methodID = methodID_setAbsorptionAmountUnclamped();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getAbsorptionAmount() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("fo", "getAbsorptionAmount", "method_6067", "getAbsorptionAmount", "m_6103_"), "()F");
    }

    static jfloat getAbsorptionAmount(const jobject& obj) {
                
       const auto methodID = methodID_getAbsorptionAmount();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID_isPartVisible() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "isModelPartShown", "method_7348", "isPartVisible", "m_36170_"), "(Lcmy;)Z");
    }

    static jboolean isPartVisible(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_isPartVisible();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getStackReference() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a_", "getSlot", "method_32318", "getStackReference", "m_141942_"), "(I)Lbug;");
    }

    static jobject getStackReference(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_getStackReference();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_hasReducedDebugInfo() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("go", "isReducedDebugInfo", "method_7302", "hasReducedDebugInfo", "m_36330_"), "()Z");
    }

    static jboolean hasReducedDebugInfo(const jobject& obj) {
                
       const auto methodID = methodID_hasReducedDebugInfo();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_setReducedDebugInfo() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("v", "setReducedDebugInfo", "method_7268", "setReducedDebugInfo", "m_36393_"), "(Z)V");
    }

    static void setReducedDebugInfo(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setReducedDebugInfo();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setFireTicks() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "setRemainingFireTicks", "method_20803", "setFireTicks", "m_7311_"), "(I)V");
    }

    static void setFireTicks(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_setFireTicks();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getMainArm() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("fq", "getMainArm", "method_6068", "getMainArm", "m_5737_"), "()Lbtg;");
    }

    static jobject getMainArm(const jobject& obj) {
                
       const auto methodID = methodID_getMainArm();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_setMainArm() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setMainArm", "method_7283", "setMainArm", "m_36163_"), "(Lbtg;)V");
    }

    static void setMainArm(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setMainArm();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getShoulderEntityLeft() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gp", "getShoulderEntityLeft", "method_7356", "getShoulderEntityLeft", "m_36331_"), "()Lub;");
    }

    static jobject getShoulderEntityLeft(const jobject& obj) {
                
       const auto methodID = methodID_getShoulderEntityLeft();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_setShoulderEntityLeft() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("i", "setShoulderEntityLeft", "method_7273", "setShoulderEntityLeft", "m_36362_"), "(Lub;)V");
    }

    static void setShoulderEntityLeft(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setShoulderEntityLeft();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getShoulderEntityRight() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gq", "getShoulderEntityRight", "method_7308", "getShoulderEntityRight", "m_36332_"), "()Lub;");
    }

    static jobject getShoulderEntityRight(const jobject& obj) {
                
       const auto methodID = methodID_getShoulderEntityRight();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_setShoulderEntityRight() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("j", "setShoulderEntityRight", "method_7345", "setShoulderEntityRight", "m_36364_"), "(Lub;)V");
    }

    static void setShoulderEntityRight(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setShoulderEntityRight();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getAttackCooldownProgressPerTick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gr", "getCurrentItemAttackStrengthDelay", "method_7279", "getAttackCooldownProgressPerTick", "m_36333_"), "()F");
    }

    static jfloat getAttackCooldownProgressPerTick(const jobject& obj) {
                
       const auto methodID = methodID_getAttackCooldownProgressPerTick();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID_getAttackCooldownProgress() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("F", "getAttackStrengthScale", "method_7261", "getAttackCooldownProgress", "m_36403_"), "(F)F");
    }

    static jfloat getAttackCooldownProgress(const jobject& obj, const jfloat& arg0) {
                
       const auto methodID = methodID_getAttackCooldownProgress();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_resetLastAttackedTicks() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gs", "resetAttackStrengthTicker", "method_7350", "resetLastAttackedTicks", "m_36334_"), "()V");
    }

    static void resetLastAttackedTicks(const jobject& obj) {
                
       const auto methodID = methodID_resetLastAttackedTicks();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getItemCooldownManager() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gt", "getCooldowns", "method_7357", "getItemCooldownManager", "m_36335_"), "()Lcum;");
    }

    static jobject getItemCooldownManager(const jobject& obj) {
                
       const auto methodID = methodID_getItemCooldownManager();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getVelocityMultiplier() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aO", "getBlockSpeedFactor", "method_23326", "getVelocityMultiplier", "m_6041_"), "()F");
    }

    static jfloat getVelocityMultiplier(const jobject& obj) {
                
       const auto methodID = methodID_getVelocityMultiplier();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID_getLuck() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gu", "getLuck", "method_7292", "getLuck", "m_36336_"), "()F");
    }

    static jfloat getLuck(const jobject& obj) {
                
       const auto methodID = methodID_getLuck();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID_isCreativeLevelTwoOp() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gv", "canUseGameMasterBlocks", "method_7338", "isCreativeLevelTwoOp", "m_36337_"), "()Z");
    }

    static jboolean isCreativeLevelTwoOp(const jobject& obj) {
                
       const auto methodID = methodID_isCreativeLevelTwoOp();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_canEquip() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "canTakeItem", "method_18397", "canEquip", "m_7066_"), "(Lcuq;)Z");
    }

    static jboolean canEquip(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_canEquip();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getBaseDimensions() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "getDefaultDimensions", "method_55694", "getBaseDimensions", "m_31586_"), "(Lbua;)Lbsu;");
    }

    static jobject getBaseDimensions(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getBaseDimensions();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getPoses() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("fE", "getDismountPoses", "method_24831", "getPoses", "m_7431_"), "()Lcom/google/common/collect/ImmutableList;");
    }

    static jobject getPoses(const jobject& obj) {
                
       const auto methodID = methodID_getPoses();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getProjectileType() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "getProjectile", "method_18808", "getProjectileType", "m_6298_"), "(Lcuq;)Lcuq;");
    }

    static jobject getProjectileType(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getProjectileType();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_eatFood() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "eat", "method_18866", "eatFood", "m_36184_"), "(Ldcw;Lcuq;Lcpr;)Lcuq;");
    }

    static jobject eatFood(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_eatFood();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_getLeashPos() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("s", "getRopeHoldPosition", "method_30951", "getLeashPos", "m_7398_"), "(F)Lexc;");
    }

    static jobject getLeashPos(const jobject& obj, const jfloat& arg0) {
                
       const auto methodID = methodID_getLeashPos();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isPlayer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("dN", "isAlwaysTicking", "method_31747", "isPlayer", "m_142389_"), "()Z");
    }

    static jboolean isPlayer(const jobject& obj) {
                
       const auto methodID = methodID_isPlayer();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isUsingSpyglass() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gw", "isScoping", "method_31550", "isUsingSpyglass", "m_150108_"), "()Z");
    }

    static jboolean isUsingSpyglass(const jobject& obj) {
                
       const auto methodID = methodID_isUsingSpyglass();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_shouldSave() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("dM", "shouldBeSaved", "method_31746", "shouldSave", "m_142391_"), "()Z");
    }

    static jboolean shouldSave(const jobject& obj) {
                
       const auto methodID = methodID_shouldSave();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getLastDeathPos() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gx", "getLastDeathLocation", "method_43122", "getLastDeathPos", "m_219759_"), "()Ljava/util/Optional;");
    }

    static jobject getLastDeathPos(const jobject& obj) {
                
       const auto methodID = methodID_getLastDeathPos();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_setLastDeathPos() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setLastDeathLocation", "method_43120", "setLastDeathPos", "m_219749_"), "(Ljava/util/Optional;)V");
    }

    static void setLastDeathPos(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setLastDeathPos();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getDamageTiltYaw() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("eE", "getHurtDir", "method_48157", "getDamageTiltYaw", "m_264297_"), "()F");
    }

    static jfloat getDamageTiltYaw(const jobject& obj) {
                
       const auto methodID = methodID_getDamageTiltYaw();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID_animateDamage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("n", "animateHurt", "method_5879", "animateDamage", "m_6053_"), "(F)V");
    }

    static void animateDamage(const jobject& obj, const jfloat& arg0) {
                
       const auto methodID = methodID_animateDamage();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_canSprintAsVehicle() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("dH", "canSprint", "method_48155", "canSprintAsVehicle", "m_264410_"), "()Z");
    }

    static jboolean canSprintAsVehicle(const jobject& obj) {
                
       const auto methodID = methodID_canSprintAsVehicle();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getOffGroundSpeed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("fi", "getFlyingSpeed", "method_49484", "getOffGroundSpeed", "m_274460_"), "()F");
    }

    static jfloat getOffGroundSpeed(const jobject& obj) {
                
       const auto methodID = methodID_getOffGroundSpeed();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID_getBlockInteractionRange() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gy", "blockInteractionRange", "method_55754", "getBlockInteractionRange", "m_319993_"), "()D");
    }

    static jdouble getBlockInteractionRange(const jobject& obj) {
                
       const auto methodID = methodID_getBlockInteractionRange();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID);
    };
    
    static jmethodID methodID_getEntityInteractionRange() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gz", "entityInteractionRange", "method_55755", "getEntityInteractionRange", "m_323410_"), "()D");
    }

    static jdouble getEntityInteractionRange(const jobject& obj) {
                
       const auto methodID = methodID_getEntityInteractionRange();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID);
    };
    
    static jmethodID methodID_canInteractWithEntity() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "canInteractWithEntity", "method_56094", "canInteractWithEntity", "m_321636_"), "(Lbsr;D)Z");
    }

    static jboolean canInteractWithEntity(const jobject& obj, const jobject& arg0, const jdouble& arg1) {
                
       const auto methodID = methodID_canInteractWithEntity();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_canInteractWithEntityIn() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "canInteractWithEntity", "method_56092", "canInteractWithEntityIn", "m_323803_"), "(Lewx;D)Z");
    }

    static jboolean canInteractWithEntityIn(const jobject& obj, const jobject& arg0, const jdouble& arg1) {
                
       const auto methodID = methodID_canInteractWithEntityIn();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_canInteractWithBlockAt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "canInteractWithBlock", "method_56093", "canInteractWithBlockAt", "m_319363_"), "(Ljd;D)Z");
    }

    static jboolean canInteractWithBlockAt(const jobject& obj, const jobject& arg0, const jdouble& arg1) {
                
       const auto methodID = methodID_canInteractWithBlockAt();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_setIgnoreFallDamageFromCurrentExplosion() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("w", "setIgnoreFallDamageFromCurrentImpulse", "method_60984", "setIgnoreFallDamageFromCurrentExplosion", "m_340576_"), "(Z)V");
    }

    static void setIgnoreFallDamageFromCurrentExplosion(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setIgnoreFallDamageFromCurrentExplosion();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_shouldIgnoreFallDamageFromCurrentExplosion() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gA", "isIgnoringFallDamageFromCurrentImpulse", "method_61165", "shouldIgnoreFallDamageFromCurrentExplosion", "m_338570_"), "()Z");
    }

    static jboolean shouldIgnoreFallDamageFromCurrentExplosion(const jobject& obj) {
                
       const auto methodID = methodID_shouldIgnoreFallDamageFromCurrentExplosion();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_tryClearCurrentExplosion() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gB", "tryResetCurrentImpulseContext", "method_60983", "tryClearCurrentExplosion", "m_339473_"), "()V");
    }

    static void tryClearCurrentExplosion(const jobject& obj) {
                
       const auto methodID = methodID_tryClearCurrentExplosion();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_clearCurrentExplosion() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("gC", "resetCurrentImpulseContext", "method_58396", "clearCurrentExplosion", "m_320755_"), "()V");
    }

    static void clearCurrentExplosion(const jobject& obj) {
                
       const auto methodID = methodID_clearCurrentExplosion();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_ENTITY_PLAYER_PLAYERENTITY_HPP