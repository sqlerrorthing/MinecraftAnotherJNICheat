// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ENTITY_PLAYER_PLAYERENTITY$SLEEPFAILUREREASON_HPP
#define NET_MINECRAFT_ENTITY_PLAYER_PLAYERENTITY$SLEEPFAILUREREASON_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.entity.player.PlayerEntity$SleepFailureReason
 * Remapped: cmx$a
 */
namespace PlayerEntity$SleepFailureReason {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("cmx$a", "net/minecraft/world/entity/player/Player$BedSleepingProblem", "net/minecraft/class_1657$class_1658", "net/minecraft/entity/player/PlayerEntity$SleepFailureReason", "net/minecraft/src/C_1141_$C_1143_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.entity.player.PlayerEntity$SleepFailureReason#NOT_POSSIBLE_HERE
    [[maybe_unused]] static jobject get_field_NOT_POSSIBLE_HERE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "NOT_POSSIBLE_HERE", "field_7528", "NOT_POSSIBLE_HERE", "NOT_POSSIBLE_HERE"), "Lcmx$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.player.PlayerEntity$SleepFailureReason#NOT_POSSIBLE_HERE
    [[maybe_unused]] static void set_field_NOT_POSSIBLE_HERE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "NOT_POSSIBLE_HERE", "field_7528", "NOT_POSSIBLE_HERE", "NOT_POSSIBLE_HERE"), "Lcmx$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.player.PlayerEntity$SleepFailureReason#NOT_POSSIBLE_NOW
    [[maybe_unused]] static jobject get_field_NOT_POSSIBLE_NOW() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "NOT_POSSIBLE_NOW", "field_7529", "NOT_POSSIBLE_NOW", "NOT_POSSIBLE_NOW"), "Lcmx$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.player.PlayerEntity$SleepFailureReason#NOT_POSSIBLE_NOW
    [[maybe_unused]] static void set_field_NOT_POSSIBLE_NOW(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "NOT_POSSIBLE_NOW", "field_7529", "NOT_POSSIBLE_NOW", "NOT_POSSIBLE_NOW"), "Lcmx$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.player.PlayerEntity$SleepFailureReason#TOO_FAR_AWAY
    [[maybe_unused]] static jobject get_field_TOO_FAR_AWAY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "TOO_FAR_AWAY", "field_7530", "TOO_FAR_AWAY", "TOO_FAR_AWAY"), "Lcmx$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.player.PlayerEntity$SleepFailureReason#TOO_FAR_AWAY
    [[maybe_unused]] static void set_field_TOO_FAR_AWAY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "TOO_FAR_AWAY", "field_7530", "TOO_FAR_AWAY", "TOO_FAR_AWAY"), "Lcmx$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.player.PlayerEntity$SleepFailureReason#OBSTRUCTED
    [[maybe_unused]] static jobject get_field_OBSTRUCTED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "OBSTRUCTED", "field_18592", "OBSTRUCTED", "OBSTRUCTED"), "Lcmx$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.player.PlayerEntity$SleepFailureReason#OBSTRUCTED
    [[maybe_unused]] static void set_field_OBSTRUCTED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "OBSTRUCTED", "field_18592", "OBSTRUCTED", "OBSTRUCTED"), "Lcmx$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.player.PlayerEntity$SleepFailureReason#OTHER_PROBLEM
    [[maybe_unused]] static jobject get_field_OTHER_PROBLEM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "OTHER_PROBLEM", "field_7531", "OTHER_PROBLEM", "OTHER_PROBLEM"), "Lcmx$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.player.PlayerEntity$SleepFailureReason#OTHER_PROBLEM
    [[maybe_unused]] static void set_field_OTHER_PROBLEM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "OTHER_PROBLEM", "field_7531", "OTHER_PROBLEM", "OTHER_PROBLEM"), "Lcmx$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.player.PlayerEntity$SleepFailureReason#NOT_SAFE
    [[maybe_unused]] static jobject get_field_NOT_SAFE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "NOT_SAFE", "field_7532", "NOT_SAFE", "NOT_SAFE"), "Lcmx$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.player.PlayerEntity$SleepFailureReason#NOT_SAFE
    [[maybe_unused]] static void set_field_NOT_SAFE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "NOT_SAFE", "field_7532", "NOT_SAFE", "NOT_SAFE"), "Lcmx$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.entity.player.PlayerEntity$SleepFailureReason#message
    static jobject get_field_message(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "message", "field_18593", "message", "f_36413_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.player.PlayerEntity$SleepFailureReason#message
    static void set_field_message(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "message", "field_18593", "message", "f_36413_"), "Lwz;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_values() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("values", "values", "values", "values", "values"), "()[Lcmx$a;");
    }

    static jobject values() {
       const auto clazz = self();
       const auto methodID = methodID_values();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_valueOf() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("valueOf", "valueOf", "valueOf", "valueOf", "valueOf"), "(Ljava/lang/String;)Lcmx$a;");
    }

    static jobject valueOf(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_valueOf();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getMessage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getMessage", "method_19206", "getMessage", "m_36423_"), "()Lwz;");
    }

    static jobject getMessage(const jobject& obj) {
                
       const auto methodID = methodID_getMessage();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_ENTITY_PLAYER_PLAYERENTITY$SLEEPFAILUREREASON_HPP