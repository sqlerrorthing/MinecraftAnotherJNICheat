// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ENTITY_PLAYER_PLAYERMODELPART_HPP
#define NET_MINECRAFT_ENTITY_PLAYER_PLAYERMODELPART_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.entity.player.PlayerModelPart
 * Remapped: cmy
 */
namespace PlayerModelPart {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("cmy", "net/minecraft/world/entity/player/PlayerModelPart", "net/minecraft/class_1664", "net/minecraft/entity/player/PlayerModelPart", "net/minecraft/src/C_1144_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.entity.player.PlayerModelPart#CAPE
    [[maybe_unused]] static jobject get_field_CAPE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CAPE", "field_7559", "CAPE", "CAPE"), "Lcmy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.player.PlayerModelPart#CAPE
    [[maybe_unused]] static void set_field_CAPE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CAPE", "field_7559", "CAPE", "CAPE"), "Lcmy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.player.PlayerModelPart#JACKET
    [[maybe_unused]] static jobject get_field_JACKET() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "JACKET", "field_7564", "JACKET", "JACKET"), "Lcmy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.player.PlayerModelPart#JACKET
    [[maybe_unused]] static void set_field_JACKET(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "JACKET", "field_7564", "JACKET", "JACKET"), "Lcmy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.player.PlayerModelPart#LEFT_SLEEVE
    [[maybe_unused]] static jobject get_field_LEFT_SLEEVE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "LEFT_SLEEVE", "field_7568", "LEFT_SLEEVE", "LEFT_SLEEVE"), "Lcmy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.player.PlayerModelPart#LEFT_SLEEVE
    [[maybe_unused]] static void set_field_LEFT_SLEEVE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "LEFT_SLEEVE", "field_7568", "LEFT_SLEEVE", "LEFT_SLEEVE"), "Lcmy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.player.PlayerModelPart#RIGHT_SLEEVE
    [[maybe_unused]] static jobject get_field_RIGHT_SLEEVE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "RIGHT_SLEEVE", "field_7570", "RIGHT_SLEEVE", "RIGHT_SLEEVE"), "Lcmy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.player.PlayerModelPart#RIGHT_SLEEVE
    [[maybe_unused]] static void set_field_RIGHT_SLEEVE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "RIGHT_SLEEVE", "field_7570", "RIGHT_SLEEVE", "RIGHT_SLEEVE"), "Lcmy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.player.PlayerModelPart#LEFT_PANTS_LEG
    [[maybe_unused]] static jobject get_field_LEFT_PANTS_LEG() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "LEFT_PANTS_LEG", "field_7566", "LEFT_PANTS_LEG", "LEFT_PANTS_LEG"), "Lcmy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.player.PlayerModelPart#LEFT_PANTS_LEG
    [[maybe_unused]] static void set_field_LEFT_PANTS_LEG(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "LEFT_PANTS_LEG", "field_7566", "LEFT_PANTS_LEG", "LEFT_PANTS_LEG"), "Lcmy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.player.PlayerModelPart#RIGHT_PANTS_LEG
    [[maybe_unused]] static jobject get_field_RIGHT_PANTS_LEG() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "RIGHT_PANTS_LEG", "field_7565", "RIGHT_PANTS_LEG", "RIGHT_PANTS_LEG"), "Lcmy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.player.PlayerModelPart#RIGHT_PANTS_LEG
    [[maybe_unused]] static void set_field_RIGHT_PANTS_LEG(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "RIGHT_PANTS_LEG", "field_7565", "RIGHT_PANTS_LEG", "RIGHT_PANTS_LEG"), "Lcmy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.player.PlayerModelPart#HAT
    [[maybe_unused]] static jobject get_field_HAT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "HAT", "field_7563", "HAT", "HAT"), "Lcmy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.player.PlayerModelPart#HAT
    [[maybe_unused]] static void set_field_HAT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "HAT", "field_7563", "HAT", "HAT"), "Lcmy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.entity.player.PlayerModelPart#id
    static jint get_field_id(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "bit", "field_7561", "id", "f_36434_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.player.PlayerModelPart#id
    static void set_field_id(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "bit", "field_7561", "id", "f_36434_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.player.PlayerModelPart#bitFlag
    static jint get_field_bitFlag(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "mask", "field_7560", "bitFlag", "f_36435_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.player.PlayerModelPart#bitFlag
    static void set_field_bitFlag(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "mask", "field_7560", "bitFlag", "f_36435_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.player.PlayerModelPart#name
    static jobject get_field_name(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "id", "field_7569", "name", "f_36436_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.player.PlayerModelPart#name
    static void set_field_name(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "id", "field_7569", "name", "f_36436_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.player.PlayerModelPart#optionName
    static jobject get_field_optionName(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "name", "field_7567", "optionName", "f_36437_"), "Lwz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.player.PlayerModelPart#optionName
    static void set_field_optionName(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "name", "field_7567", "optionName", "f_36437_"), "Lwz;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_values() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("values", "values", "values", "values", "values"), "()[Lcmy;");
    }

    static jobject values() {
       const auto clazz = self();
       const auto methodID = methodID_values();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_valueOf() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("valueOf", "valueOf", "valueOf", "valueOf", "valueOf"), "(Ljava/lang/String;)Lcmy;");
    }

    static jobject valueOf(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_valueOf();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getBitFlag() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getMask", "method_7430", "getBitFlag", "m_36445_"), "()I");
    }

    static jint getBitFlag(const jobject& obj) {
                
       const auto methodID = methodID_getBitFlag();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getId() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getBit", "method_35206", "getId", "m_150114_"), "()I");
    }

    static jint getId(const jobject& obj) {
                
       const auto methodID = methodID_getId();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getName() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getId", "method_7429", "getName", "m_36446_"), "()Ljava/lang/String;");
    }

    static jobject getName(const jobject& obj) {
                
       const auto methodID = methodID_getName();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getOptionName() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getName", "method_7428", "getOptionName", "m_36447_"), "()Lwz;");
    }

    static jobject getOptionName(const jobject& obj) {
                
       const auto methodID = methodID_getOptionName();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_ENTITY_PLAYER_PLAYERMODELPART_HPP