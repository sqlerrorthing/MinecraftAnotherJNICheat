// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ENTITY_ITEMENTITY_HPP
#define NET_MINECRAFT_ENTITY_ITEMENTITY_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.entity.ItemEntity
 * Remapped: cjh
 */
namespace ItemEntity {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("cjh", "net/minecraft/world/entity/item/ItemEntity", "net/minecraft/class_1542", "net/minecraft/entity/ItemEntity", "net/minecraft/src/C_976_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.entity.ItemEntity#STACK
    [[maybe_unused]] static jobject get_field_STACK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "DATA_ITEM", "field_7199", "STACK", "f_31984_"), "Lajw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.ItemEntity#STACK
    [[maybe_unused]] static void set_field_STACK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "DATA_ITEM", "field_7199", "STACK", "f_31984_"), "Lajw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.ItemEntity#field_48703
    [[maybe_unused]] static jfloat get_field_field_48703() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "FLOAT_HEIGHT", "field_48703", "field_48703", "f_315581_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.ItemEntity#field_48703
    [[maybe_unused]] static void set_field_field_48703(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "FLOAT_HEIGHT", "field_48703", "field_48703", "f_315581_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.ItemEntity#field_48702
    [[maybe_unused]] static jfloat get_field_field_48702() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "EYE_HEIGHT", "field_48702", "field_48702", "f_316032_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.ItemEntity#field_48702
    [[maybe_unused]] static void set_field_field_48702(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "EYE_HEIGHT", "field_48702", "field_48702", "f_316032_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.ItemEntity#DESPAWN_AGE
    [[maybe_unused]] static jint get_field_DESPAWN_AGE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "LIFETIME", "field_30456", "DESPAWN_AGE", "f_149659_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.ItemEntity#DESPAWN_AGE
    [[maybe_unused]] static void set_field_DESPAWN_AGE(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "LIFETIME", "field_30456", "DESPAWN_AGE", "f_149659_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.ItemEntity#CANNOT_PICK_UP_DELAY
    [[maybe_unused]] static jint get_field_CANNOT_PICK_UP_DELAY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "INFINITE_PICKUP_DELAY", "field_30457", "CANNOT_PICK_UP_DELAY", "f_149660_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.ItemEntity#CANNOT_PICK_UP_DELAY
    [[maybe_unused]] static void set_field_CANNOT_PICK_UP_DELAY(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "INFINITE_PICKUP_DELAY", "field_30457", "CANNOT_PICK_UP_DELAY", "f_149660_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.entity.ItemEntity#NEVER_DESPAWN_AGE
    [[maybe_unused]] static jint get_field_NEVER_DESPAWN_AGE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "INFINITE_LIFETIME", "field_30458", "NEVER_DESPAWN_AGE", "f_149661_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.ItemEntity#NEVER_DESPAWN_AGE
    [[maybe_unused]] static void set_field_NEVER_DESPAWN_AGE(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "INFINITE_LIFETIME", "field_30458", "NEVER_DESPAWN_AGE", "f_149661_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.entity.ItemEntity#itemAge
    static jint get_field_itemAge(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "age", "field_7204", "itemAge", "f_31985_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.ItemEntity#itemAge
    static void set_field_itemAge(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "age", "field_7204", "itemAge", "f_31985_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.ItemEntity#pickupDelay
    static jint get_field_pickupDelay(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "pickupDelay", "field_7202", "pickupDelay", "f_31986_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.ItemEntity#pickupDelay
    static void set_field_pickupDelay(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "pickupDelay", "field_7202", "pickupDelay", "f_31986_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.ItemEntity#health
    static jint get_field_health(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "health", "field_7201", "health", "f_31987_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.ItemEntity#health
    static void set_field_health(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "health", "field_7201", "health", "f_31987_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.ItemEntity#throwerUuid
    static jobject get_field_throwerUuid(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "thrower", "field_7200", "throwerUuid", "f_31988_"), "Ljava/util/UUID;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.ItemEntity#throwerUuid
    static void set_field_throwerUuid(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "thrower", "field_7200", "throwerUuid", "f_31988_"), "Ljava/util/UUID;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.ItemEntity#thrower
    static jobject get_field_thrower(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "cachedThrower", "field_46653", "thrower", "f_302454_"), "Lbsr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.ItemEntity#thrower
    static void set_field_thrower(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "cachedThrower", "field_46653", "thrower", "f_302454_"), "Lbsr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.ItemEntity#owner
    static jobject get_field_owner(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "target", "field_41893", "owner", "f_265881_"), "Ljava/util/UUID;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.ItemEntity#owner
    static void set_field_owner(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "target", "field_41893", "owner", "f_265881_"), "Ljava/util/UUID;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.entity.ItemEntity#uniqueOffset
    static jfloat get_field_uniqueOffset(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "bobOffs", "field_7203", "uniqueOffset", "f_31983_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static public field net.minecraft.entity.ItemEntity#uniqueOffset
    static void set_field_uniqueOffset(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "bobOffs", "field_7203", "uniqueOffset", "f_31983_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    static jmethodID methodID_occludeVibrationSignals() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("bd", "dampensVibrations", "method_33189", "occludeVibrationSignals", "m_213854_"), "()Z");
    }

    static jboolean occludeVibrationSignals(const jobject& obj) {
                
       const auto methodID = methodID_occludeVibrationSignals();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getOwner() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("s", "getOwner", "method_24921", "getOwner", "m_19749_"), "()Lbsr;");
    }

    static jobject getOwner(const jobject& obj) {
                
       const auto methodID = methodID_getOwner();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_copyFrom() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("w", "restoreFrom", "method_5878", "copyFrom", "m_20361_"), "(Lbsr;)V");
    }

    static void copyFrom(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_copyFrom();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getMoveEffect() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("bc", "getMovementEmission", "method_33570", "getMoveEffect", "m_142319_"), "()Lbsr$b;");
    }

    static jobject getMoveEffect(const jobject& obj) {
                
       const auto methodID = methodID_getMoveEffect();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_initDataTracker() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "defineSynchedData", "method_5693", "initDataTracker", "m_8097_"), "(Laka$a;)V");
    }

    static void initDataTracker(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_initDataTracker();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getGravity() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aZ", "getDefaultGravity", "method_7490", "getGravity", "m_319564_"), "()D");
    }

    static jdouble getGravity(const jobject& obj) {
                
       const auto methodID = methodID_getGravity();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID);
    };
    
    static jmethodID methodID_tick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("l", "tick", "method_5773", "tick", "m_8119_"), "()V");
    }

    static void tick(const jobject& obj) {
                
       const auto methodID = methodID_tick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getVelocityAffectingPos() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("aL", "getBlockPosBelowThatAffectsMyMovement", "method_23314", "getVelocityAffectingPos", "m_20099_"), "()Ljd;");
    }

    static jobject getVelocityAffectingPos(const jobject& obj) {
                
       const auto methodID = methodID_getVelocityAffectingPos();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_applyWaterBuoyancy() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("D", "setUnderwaterMovement", "method_6974", "applyWaterBuoyancy", "m_32067_"), "()V");
    }

    static void applyWaterBuoyancy(const jobject& obj) {
                
       const auto methodID = methodID_applyWaterBuoyancy();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_applyLavaBuoyancy() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("E", "setUnderLavaMovement", "method_24348", "applyLavaBuoyancy", "m_32068_"), "()V");
    }

    static void applyLavaBuoyancy(const jobject& obj) {
                
       const auto methodID = methodID_applyLavaBuoyancy();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_tryMerge() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("F", "mergeWithNeighbours", "method_6973", "tryMerge", "m_32069_"), "()V");
    }

    static void tryMerge(const jobject& obj) {
                
       const auto methodID = methodID_tryMerge();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_canMerge() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("H", "isMergable", "method_20397", "canMerge", "m_32070_"), "()Z");
    }

    static jboolean canMerge(const jobject& obj) {
                
       const auto methodID = methodID_canMerge();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID__tryMerge() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "tryToMerge", "method_6972", "tryMerge", "m_32015_"), "(Lcjh;)V");
    }

    static void _tryMerge(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__tryMerge();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__canMerge() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "areMergable", "method_24017", "canMerge", "m_32026_"), "(Lcuq;Lcuq;)Z");
    }

    static jboolean _canMerge(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID__canMerge();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_merge() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "merge", "method_24018", "merge", "m_32029_"), "(Lcuq;Lcuq;I)Lcuq;");
    }

    static jobject merge(const jobject& arg0, const jobject& arg1, const jint& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_merge();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID__merge() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "merge", "method_24016", "merge", "m_32022_"), "(Lcjh;Lcuq;Lcuq;)V");
    }

    static void _merge(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID__merge();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID___merge() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "merge", "method_18006", "merge", "m_32017_"), "(Lcjh;Lcuq;Lcjh;Lcuq;)V");
    }

    static void __merge(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
       const auto clazz = self();
       const auto methodID = methodID___merge();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_isFireImmune() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("be", "fireImmune", "method_5753", "isFireImmune", "m_5825_"), "()Z");
    }

    static jboolean isFireImmune(const jobject& obj) {
                
       const auto methodID = methodID_isFireImmune();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_damage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "hurt", "method_5643", "damage", "m_6469_"), "(Lbrk;F)Z");
    }

    static jboolean damage(const jobject& obj, const jobject& arg0, const jfloat& arg1) {
                
       const auto methodID = methodID_damage();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_writeCustomDataToNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "addAdditionalSaveData", "method_5652", "writeCustomDataToNbt", "m_7380_"), "(Lub;)V");
    }

    static void writeCustomDataToNbt(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_writeCustomDataToNbt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_readCustomDataFromNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "readAdditionalSaveData", "method_5749", "readCustomDataFromNbt", "m_7378_"), "(Lub;)V");
    }

    static void readCustomDataFromNbt(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_readCustomDataFromNbt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_onPlayerCollision() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b_", "playerTouch", "method_5694", "onPlayerCollision", "m_6123_"), "(Lcmx;)V");
    }

    static void onPlayerCollision(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onPlayerCollision();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getName() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ah", "getName", "method_5477", "getName", "m_7755_"), "()Lwz;");
    }

    static jobject getName(const jobject& obj) {
                
       const auto methodID = methodID_getName();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_isAttackable() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("cu", "isAttackable", "method_5732", "isAttackable", "m_6097_"), "()Z");
    }

    static jboolean isAttackable(const jobject& obj) {
                
       const auto methodID = methodID_isAttackable();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_teleportTo() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "changeDimension", "method_5731", "teleportTo", "m_5489_"), "(Leqc;)Lbsr;");
    }

    static jobject teleportTo(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_teleportTo();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getStack() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("p", "getItem", "method_6983", "getStack", "m_32055_"), "()Lcuq;");
    }

    static jobject getStack(const jobject& obj) {
                
       const auto methodID = methodID_getStack();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_setStack() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setItem", "method_6979", "setStack", "m_32045_"), "(Lcuq;)V");
    }

    static void setStack(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setStack();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_onTrackedDataSet() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "onSyncedDataUpdated", "method_5674", "onTrackedDataSet", "m_7350_"), "(Lajw;)V");
    }

    static void onTrackedDataSet(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onTrackedDataSet();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setOwner() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "setTarget", "method_48349", "setOwner", "m_266426_"), "(Ljava/util/UUID;)V");
    }

    static void setOwner(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setOwner();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setThrower() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "setThrower", "method_6981", "setThrower", "m_32052_"), "(Lbsr;)V");
    }

    static void setThrower(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setThrower();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getItemAge() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("t", "getAge", "method_6985", "getItemAge", "m_32059_"), "()I");
    }

    static jint getItemAge(const jobject& obj) {
                
       const auto methodID = methodID_getItemAge();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_setToDefaultPickupDelay() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("v", "setDefaultPickUpDelay", "method_6988", "setToDefaultPickupDelay", "m_32060_"), "()V");
    }

    static void setToDefaultPickupDelay(const jobject& obj) {
                
       const auto methodID = methodID_setToDefaultPickupDelay();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_resetPickupDelay() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("w", "setNoPickUpDelay", "method_6975", "resetPickupDelay", "m_32061_"), "()V");
    }

    static void resetPickupDelay(const jobject& obj) {
                
       const auto methodID = methodID_resetPickupDelay();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_setPickupDelayInfinite() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("x", "setNeverPickUp", "method_6989", "setPickupDelayInfinite", "m_32062_"), "()V");
    }

    static void setPickupDelayInfinite(const jobject& obj) {
                
       const auto methodID = methodID_setPickupDelayInfinite();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_setPickupDelay() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "setPickUpDelay", "method_6982", "setPickupDelay", "m_32010_"), "(I)V");
    }

    static void setPickupDelay(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_setPickupDelay();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_cannotPickup() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("y", "hasPickUpDelay", "method_6977", "cannotPickup", "m_32063_"), "()Z");
    }

    static jboolean cannotPickup(const jobject& obj) {
                
       const auto methodID = methodID_cannotPickup();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_setNeverDespawn() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("z", "setUnlimitedLifetime", "method_35190", "setNeverDespawn", "m_149678_"), "()V");
    }

    static void setNeverDespawn(const jobject& obj) {
                
       const auto methodID = methodID_setNeverDespawn();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_setCovetedItem() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("A", "setExtendedLifetime", "method_6976", "setCovetedItem", "m_32064_"), "()V");
    }

    static void setCovetedItem(const jobject& obj) {
                
       const auto methodID = methodID_setCovetedItem();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_setDespawnImmediately() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("B", "makeFakeItem", "method_6987", "setDespawnImmediately", "m_32065_"), "()V");
    }

    static void setDespawnImmediately(const jobject& obj) {
                
       const auto methodID = methodID_setDespawnImmediately();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getRotation() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getSpin", "method_27314", "getRotation", "m_32008_"), "(F)F");
    }

    static jfloat getRotation(const jobject& obj, const jfloat& arg0) {
                
       const auto methodID = methodID_getRotation();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_copy() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("C", "copy", "method_29271", "copy", "m_32066_"), "()Lcjh;");
    }

    static jobject copy(const jobject& obj) {
                
       const auto methodID = methodID_copy();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getSoundCategory() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("de", "getSoundSource", "method_5634", "getSoundCategory", "m_5720_"), "()Lavq;");
    }

    static jobject getSoundCategory(const jobject& obj) {
                
       const auto methodID = methodID_getSoundCategory();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getBodyYaw() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("dF", "getVisualRotationYInDegrees", "method_43078", "getBodyYaw", "m_213816_"), "()F");
    }

    static jfloat getBodyYaw(const jobject& obj) {
                
       const auto methodID = methodID_getBodyYaw();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID_getStackReference() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a_", "getSlot", "method_32318", "getStackReference", "m_141942_"), "(I)Lbug;");
    }

    static jobject getStackReference(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_getStackReference();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_ENTITY_ITEMENTITY_HPP