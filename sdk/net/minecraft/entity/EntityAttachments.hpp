// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ENTITY_ENTITYATTACHMENTS_HPP
#define NET_MINECRAFT_ENTITY_ENTITYATTACHMENTS_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.entity.EntityAttachments
 * Remapped: bst
 */
namespace EntityAttachments {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("bst", "net/minecraft/world/entity/EntityAttachments", "net/minecraft/class_9066", "net/minecraft/entity/EntityAttachments", "net/minecraft/src/C_313872_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.entity.EntityAttachments#points
    static jobject get_field_points(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "attachments", "field_47752", "points", "f_315816_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.EntityAttachments#points
    static void set_field_points(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "attachments", "field_47752", "points", "f_315816_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_of() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "createDefault", "method_55844", "of", "m_319952_"), "(FF)Lbst;");
    }

    static jobject of(const jfloat& arg0, const jfloat& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_of();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_builder() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "builder", "method_55673", "builder", "m_321590_"), "()Lbst$a;");
    }

    static jobject builder() {
       const auto clazz = self();
       const auto methodID = methodID_builder();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_scale() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "scale", "method_55674", "scale", "m_322872_"), "(FFF)Lbst;");
    }

    static jobject scale(const jobject& obj, const jfloat& arg0, const jfloat& arg1, const jfloat& arg2) {
                
       const auto methodID = methodID_scale();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_scalePoints() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "scalePoints", "method_55677", "scalePoints", "m_323539_"), "(Ljava/util/List;FFF)Ljava/util/List;");
    }

    static jobject scalePoints(const jobject& arg0, const jfloat& arg1, const jfloat& arg2, const jfloat& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_scalePoints();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_getPointNullable() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getNullable", "method_55675", "getPointNullable", "m_318717_"), "(Lbss;IF)Lexc;");
    }

    static jobject getPointNullable(const jobject& obj, const jobject& arg0, const jint& arg1, const jfloat& arg2) {
                
       const auto methodID = methodID_getPointNullable();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_getPoint() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "get", "method_55678", "getPoint", "m_324387_"), "(Lbss;IF)Lexc;");
    }

    static jobject getPoint(const jobject& obj, const jobject& arg0, const jint& arg1, const jfloat& arg2) {
                
       const auto methodID = methodID_getPoint();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_getPointOrDefault() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getClamped", "method_55679", "getPointOrDefault", "m_321580_"), "(Lbss;IF)Lexc;");
    }

    static jobject getPointOrDefault(const jobject& obj, const jobject& arg0, const jint& arg1, const jfloat& arg2) {
                
       const auto methodID = methodID_getPointOrDefault();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_rotatePoint() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "transformPoint", "method_55676", "rotatePoint", "m_323891_"), "(Lexc;F)Lexc;");
    }

    static jobject rotatePoint(const jobject& arg0, const jfloat& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_rotatePoint();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_ENTITY_ENTITYATTACHMENTS_HPP