// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ENTITY_ENTITY$REMOVALREASON_HPP
#define NET_MINECRAFT_ENTITY_ENTITY$REMOVALREASON_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.entity.Entity$RemovalReason
 * Remapped: bsr$c
 */
namespace Entity$RemovalReason {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("bsr$c", "net/minecraft/world/entity/Entity$RemovalReason", "net/minecraft/class_1297$class_5529", "net/minecraft/entity/Entity$RemovalReason", "net/minecraft/src/C_507_$C_141065_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.entity.Entity$RemovalReason#KILLED
    [[maybe_unused]] static jobject get_field_KILLED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "KILLED", "field_26998", "KILLED", "KILLED"), "Lbsr$c;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.Entity$RemovalReason#KILLED
    [[maybe_unused]] static void set_field_KILLED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "KILLED", "field_26998", "KILLED", "KILLED"), "Lbsr$c;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.Entity$RemovalReason#DISCARDED
    [[maybe_unused]] static jobject get_field_DISCARDED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "DISCARDED", "field_26999", "DISCARDED", "DISCARDED"), "Lbsr$c;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.Entity$RemovalReason#DISCARDED
    [[maybe_unused]] static void set_field_DISCARDED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "DISCARDED", "field_26999", "DISCARDED", "DISCARDED"), "Lbsr$c;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.Entity$RemovalReason#UNLOADED_TO_CHUNK
    [[maybe_unused]] static jobject get_field_UNLOADED_TO_CHUNK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "UNLOADED_TO_CHUNK", "field_27000", "UNLOADED_TO_CHUNK", "UNLOADED_TO_CHUNK"), "Lbsr$c;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.Entity$RemovalReason#UNLOADED_TO_CHUNK
    [[maybe_unused]] static void set_field_UNLOADED_TO_CHUNK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "UNLOADED_TO_CHUNK", "field_27000", "UNLOADED_TO_CHUNK", "UNLOADED_TO_CHUNK"), "Lbsr$c;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.Entity$RemovalReason#UNLOADED_WITH_PLAYER
    [[maybe_unused]] static jobject get_field_UNLOADED_WITH_PLAYER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "UNLOADED_WITH_PLAYER", "field_27001", "UNLOADED_WITH_PLAYER", "UNLOADED_WITH_PLAYER"), "Lbsr$c;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.Entity$RemovalReason#UNLOADED_WITH_PLAYER
    [[maybe_unused]] static void set_field_UNLOADED_WITH_PLAYER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "UNLOADED_WITH_PLAYER", "field_27001", "UNLOADED_WITH_PLAYER", "UNLOADED_WITH_PLAYER"), "Lbsr$c;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.entity.Entity$RemovalReason#CHANGED_DIMENSION
    [[maybe_unused]] static jobject get_field_CHANGED_DIMENSION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "CHANGED_DIMENSION", "field_27002", "CHANGED_DIMENSION", "CHANGED_DIMENSION"), "Lbsr$c;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.entity.Entity$RemovalReason#CHANGED_DIMENSION
    [[maybe_unused]] static void set_field_CHANGED_DIMENSION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "CHANGED_DIMENSION", "field_27002", "CHANGED_DIMENSION", "CHANGED_DIMENSION"), "Lbsr$c;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.entity.Entity$RemovalReason#destroy
    static jboolean get_field_destroy(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "destroy", "field_27003", "destroy", "f_146956_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.Entity$RemovalReason#destroy
    static void set_field_destroy(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "destroy", "field_27003", "destroy", "f_146956_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.entity.Entity$RemovalReason#save
    static jboolean get_field_save(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "save", "field_27004", "save", "f_146957_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.Entity$RemovalReason#save
    static void set_field_save(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "save", "field_27004", "save", "f_146957_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    static jmethodID methodID_values() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("values", "values", "values", "values", "values"), "()[Lbsr$c;");
    }

    static jobject values() {
       const auto clazz = self();
       const auto methodID = methodID_values();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_valueOf() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("valueOf", "valueOf", "valueOf", "valueOf", "valueOf"), "(Ljava/lang/String;)Lbsr$c;");
    }

    static jobject valueOf(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_valueOf();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_shouldDestroy() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "shouldDestroy", "method_31486", "shouldDestroy", "m_146965_"), "()Z");
    }

    static jboolean shouldDestroy(const jobject& obj) {
                
       const auto methodID = methodID_shouldDestroy();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_shouldSave() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "shouldSave", "method_31487", "shouldSave", "m_146966_"), "()Z");
    }

    static jboolean shouldSave(const jobject& obj) {
                
       const auto methodID = methodID_shouldSave();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_ENTITY_ENTITY$REMOVALREASON_HPP