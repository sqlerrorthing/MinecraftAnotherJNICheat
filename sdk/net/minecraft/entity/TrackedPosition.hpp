// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_ENTITY_TRACKEDPOSITION_HPP
#define NET_MINECRAFT_ENTITY_TRACKEDPOSITION_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.entity.TrackedPosition
 * Remapped: aig
 */
namespace TrackedPosition {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("aig", "net/minecraft/network/protocol/game/VecDeltaCodec", "net/minecraft/class_7422", "net/minecraft/entity/TrackedPosition", "net/minecraft/src/C_213538_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.entity.TrackedPosition#COORDINATE_SCALE
    [[maybe_unused]] static jdouble get_field_COORDINATE_SCALE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "TRUNCATION_STEPS", "field_39015", "COORDINATE_SCALE", "f_238014_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticDoubleField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.entity.TrackedPosition#COORDINATE_SCALE
    [[maybe_unused]] static void set_field_COORDINATE_SCALE(const jdouble &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "TRUNCATION_STEPS", "field_39015", "COORDINATE_SCALE", "f_238014_"), "D");
        return MinecraftSDK::env->SetStaticDoubleField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.entity.TrackedPosition#pos
    static jobject get_field_pos(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "base", "field_39016", "pos", "f_238015_"), "Lexc;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.entity.TrackedPosition#pos
    static void set_field_pos(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "base", "field_39016", "pos", "f_238015_"), "Lexc;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_pack() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "encode", "method_43487", "pack", "m_238017_"), "(D)J");
    }

    static jlong pack(const jdouble& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_pack();
       return MinecraftSDK::env->CallStaticLongMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_unpack() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "decode", "method_43488", "unpack", "m_238019_"), "(J)D");
    }

    static jdouble unpack(const jlong& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_unpack();
       return MinecraftSDK::env->CallStaticDoubleMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_withDelta() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "decode", "method_43489", "withDelta", "m_238021_"), "(JJJ)Lexc;");
    }

    static jobject withDelta(const jobject& obj, const jlong& arg0, const jlong& arg1, const jlong& arg2) {
                
       const auto methodID = methodID_withDelta();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_getDeltaX() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "encodeX", "method_43490", "getDeltaX", "m_238025_"), "(Lexc;)J");
    }

    static jlong getDeltaX(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getDeltaX();
       return MinecraftSDK::env->CallLongMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getDeltaY() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "encodeY", "method_43491", "getDeltaY", "m_238027_"), "(Lexc;)J");
    }

    static jlong getDeltaY(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getDeltaY();
       return MinecraftSDK::env->CallLongMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getDeltaZ() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "encodeZ", "method_43492", "getDeltaZ", "m_238029_"), "(Lexc;)J");
    }

    static jlong getDeltaZ(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getDeltaZ();
       return MinecraftSDK::env->CallLongMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_subtract() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "delta", "method_43493", "subtract", "m_238031_"), "(Lexc;)Lexc;");
    }

    static jobject subtract(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_subtract();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setPos() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "setBase", "method_43494", "setPos", "m_238033_"), "(Lexc;)V");
    }

    static void setPos(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setPos();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getPos() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getBase", "method_60933", "getPos", "m_338619_"), "()Lexc;");
    }

    static jobject getPos(const jobject& obj) {
                
       const auto methodID = methodID_getPos();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_ENTITY_TRACKEDPOSITION_HPP