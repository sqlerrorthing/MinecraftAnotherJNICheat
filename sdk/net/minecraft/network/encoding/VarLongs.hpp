// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_NETWORK_ENCODING_VARLONGS_HPP
#define NET_MINECRAFT_NETWORK_ENCODING_VARLONGS_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.network.encoding.VarLongs
 * Remapped: wr
 */
namespace VarLongs {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("wr", "net/minecraft/network/VarLong", "net/minecraft/class_8704", "net/minecraft/network/encoding/VarLongs", "net/minecraft/src/C_290076_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.network.encoding.VarLongs#MAX_BYTES
    [[maybe_unused]] static jint get_field_MAX_BYTES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "MAX_VARLONG_SIZE", "field_45686", "MAX_BYTES", "f_290807_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.network.encoding.VarLongs#MAX_BYTES
    [[maybe_unused]] static void set_field_MAX_BYTES(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "MAX_VARLONG_SIZE", "field_45686", "MAX_BYTES", "f_290807_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.network.encoding.VarLongs#DATA_BITS_MASK
    [[maybe_unused]] static jint get_field_DATA_BITS_MASK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "DATA_BITS_MASK", "field_45687", "DATA_BITS_MASK", "f_291895_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.network.encoding.VarLongs#DATA_BITS_MASK
    [[maybe_unused]] static void set_field_DATA_BITS_MASK(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "DATA_BITS_MASK", "field_45687", "DATA_BITS_MASK", "f_291895_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.network.encoding.VarLongs#MORE_BITS_MASK
    [[maybe_unused]] static jint get_field_MORE_BITS_MASK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "CONTINUATION_BIT_MASK", "field_45688", "MORE_BITS_MASK", "f_290740_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.network.encoding.VarLongs#MORE_BITS_MASK
    [[maybe_unused]] static void set_field_MORE_BITS_MASK(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "CONTINUATION_BIT_MASK", "field_45688", "MORE_BITS_MASK", "f_290740_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.network.encoding.VarLongs#DATA_BITS_PER_BYTE
    [[maybe_unused]] static jint get_field_DATA_BITS_PER_BYTE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "DATA_BITS_PER_BYTE", "field_45689", "DATA_BITS_PER_BYTE", "f_291045_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.network.encoding.VarLongs#DATA_BITS_PER_BYTE
    [[maybe_unused]] static void set_field_DATA_BITS_PER_BYTE(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "DATA_BITS_PER_BYTE", "field_45689", "DATA_BITS_PER_BYTE", "f_291045_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    static jmethodID methodID_getSizeInBytes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getByteSize", "method_53019", "getSizeInBytes", "m_292847_"), "(J)I");
    }

    static jint getSizeInBytes(const jlong& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getSizeInBytes();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_shouldContinueRead() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "hasContinuationBit", "method_53018", "shouldContinueRead", "m_294807_"), "(B)Z");
    }

    static jboolean shouldContinueRead(const jbyte& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_shouldContinueRead();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_read() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "read", "method_53020", "read", "m_295135_"), "(Lio/netty/buffer/ByteBuf;)J");
    }

    static jlong read(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_read();
       return MinecraftSDK::env->CallStaticLongMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_write() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "write", "method_53021", "write", "m_293521_"), "(Lio/netty/buffer/ByteBuf;J)Lio/netty/buffer/ByteBuf;");
    }

    static jobject write(const jobject& arg0, const jlong& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_write();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_NETWORK_ENCODING_VARLONGS_HPP