// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_NETWORK_CODEC_PACKETCODECS$19_HPP
#define NET_MINECRAFT_NETWORK_CODEC_PACKETCODECS$19_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.network.codec.PacketCodecs$19
 * Remapped: yv$19
 */
namespace PacketCodecs$19 {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("yv$19", "net/minecraft/network/codec/ByteBufCodecs$26", "net/minecraft/class_9135$19", "net/minecraft/network/codec/PacketCodecs$19", "net/minecraft/src/C_313613_$C_313862_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.network.codec.PacketCodecs$19#NAME_MAX_LENGTH
    [[maybe_unused]] static jint get_field_NAME_MAX_LENGTH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "MAX_PROPERTY_NAME_LENGTH", "field_49691", "NAME_MAX_LENGTH", "f_314496_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.network.codec.PacketCodecs$19#NAME_MAX_LENGTH
    [[maybe_unused]] static void set_field_NAME_MAX_LENGTH(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "MAX_PROPERTY_NAME_LENGTH", "field_49691", "NAME_MAX_LENGTH", "f_314496_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.network.codec.PacketCodecs$19#VALUE_MAX_LENGTH
    [[maybe_unused]] static jint get_field_VALUE_MAX_LENGTH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "MAX_PROPERTY_VALUE_LENGTH", "field_49692", "VALUE_MAX_LENGTH", "f_316242_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.network.codec.PacketCodecs$19#VALUE_MAX_LENGTH
    [[maybe_unused]] static void set_field_VALUE_MAX_LENGTH(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "MAX_PROPERTY_VALUE_LENGTH", "field_49692", "VALUE_MAX_LENGTH", "f_316242_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.network.codec.PacketCodecs$19#SIGNATURE_MAX_LENGTH
    [[maybe_unused]] static jint get_field_SIGNATURE_MAX_LENGTH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "MAX_PROPERTY_SIGNATURE_LENGTH", "field_49693", "SIGNATURE_MAX_LENGTH", "f_316931_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.network.codec.PacketCodecs$19#SIGNATURE_MAX_LENGTH
    [[maybe_unused]] static void set_field_SIGNATURE_MAX_LENGTH(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "MAX_PROPERTY_SIGNATURE_LENGTH", "field_49693", "SIGNATURE_MAX_LENGTH", "f_316931_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.network.codec.PacketCodecs$19#MAP_MAX_SIZE
    [[maybe_unused]] static jint get_field_MAP_MAX_SIZE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "MAX_PROPERTIES", "field_49694", "MAP_MAX_SIZE", "f_315264_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.network.codec.PacketCodecs$19#MAP_MAX_SIZE
    [[maybe_unused]] static void set_field_MAP_MAX_SIZE(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "MAX_PROPERTIES", "field_49694", "MAP_MAX_SIZE", "f_315264_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    static jmethodID methodID_decode() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "decode", "method_58014", "decode", "m_318688_"), "(Lio/netty/buffer/ByteBuf;)Lcom/mojang/authlib/properties/PropertyMap;");
    }

    static jobject decode(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_decode();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_encode() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "encode", "method_58015", "encode", "m_318638_"), "(Lio/netty/buffer/ByteBuf;Lcom/mojang/authlib/properties/PropertyMap;)V");
    }

    static void encode(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_encode();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_NETWORK_CODEC_PACKETCODECS$19_HPP