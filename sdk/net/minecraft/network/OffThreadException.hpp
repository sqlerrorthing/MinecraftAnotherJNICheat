// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_NETWORK_OFFTHREADEXCEPTION_HPP
#define NET_MINECRAFT_NETWORK_OFFTHREADEXCEPTION_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.network.OffThreadException
 * Remapped: ald
 */
namespace OffThreadException {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("ald", "net/minecraft/server/RunningOnDifferentThreadException", "net/minecraft/class_2987", "net/minecraft/network/OffThreadException", "net/minecraft/src/C_5278_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.network.OffThreadException#INSTANCE
    [[maybe_unused]] static jobject get_field_INSTANCE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "RUNNING_ON_DIFFERENT_THREAD", "field_13400", "INSTANCE", "f_136017_"), "Lald;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.network.OffThreadException#INSTANCE
    [[maybe_unused]] static void set_field_INSTANCE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "RUNNING_ON_DIFFERENT_THREAD", "field_13400", "INSTANCE", "f_136017_"), "Lald;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_fillInStackTrace() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("fillInStackTrace", "fillInStackTrace", "", "", "fillInStackTrace"), "()Ljava/lang/Throwable;");
    }

    static jobject fillInStackTrace(const jobject& obj) {
                
       const auto methodID = methodID_fillInStackTrace();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_NETWORK_OFFTHREADEXCEPTION_HPP