// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_NETWORK_PACKETBYTEBUF_HPP
#define NET_MINECRAFT_NETWORK_PACKETBYTEBUF_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.network.PacketByteBuf
 * Remapped: vw
 */
namespace PacketByteBuf {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("vw", "net/minecraft/network/FriendlyByteBuf", "net/minecraft/class_2540", "net/minecraft/network/PacketByteBuf", "net/minecraft/src/C_4983_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.network.PacketByteBuf#MAX_READ_NBT_SIZE
    [[maybe_unused]] static jint get_field_MAX_READ_NBT_SIZE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "DEFAULT_NBT_QUOTA", "field_33287", "MAX_READ_NBT_SIZE", "f_178337_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.network.PacketByteBuf#MAX_READ_NBT_SIZE
    [[maybe_unused]] static void set_field_MAX_READ_NBT_SIZE(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "DEFAULT_NBT_QUOTA", "field_33287", "MAX_READ_NBT_SIZE", "f_178337_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.network.PacketByteBuf#parent
    static jobject get_field_parent(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "source", "field_11695", "parent", "f_130049_"), "Lio/netty/buffer/ByteBuf;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.network.PacketByteBuf#parent
    static void set_field_parent(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "source", "field_11695", "parent", "f_130049_"), "Lio/netty/buffer/ByteBuf;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for static public field net.minecraft.network.PacketByteBuf#DEFAULT_MAX_STRING_LENGTH
    [[maybe_unused]] static jshort get_field_DEFAULT_MAX_STRING_LENGTH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "MAX_STRING_LENGTH", "field_33283", "DEFAULT_MAX_STRING_LENGTH", "f_178333_"), "S");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticShortField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.network.PacketByteBuf#DEFAULT_MAX_STRING_LENGTH
    [[maybe_unused]] static void set_field_DEFAULT_MAX_STRING_LENGTH(const jshort &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "MAX_STRING_LENGTH", "field_33283", "DEFAULT_MAX_STRING_LENGTH", "f_178333_"), "S");
        return MinecraftSDK::env->SetStaticShortField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.network.PacketByteBuf#MAX_TEXT_LENGTH
    [[maybe_unused]] static jint get_field_MAX_TEXT_LENGTH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "MAX_COMPONENT_STRING_LENGTH", "field_33284", "MAX_TEXT_LENGTH", "f_178334_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.network.PacketByteBuf#MAX_TEXT_LENGTH
    [[maybe_unused]] static void set_field_MAX_TEXT_LENGTH(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "MAX_COMPONENT_STRING_LENGTH", "field_33284", "MAX_TEXT_LENGTH", "f_178334_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.network.PacketByteBuf#field_39381
    [[maybe_unused]] static jint get_field_field_39381() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "PUBLIC_KEY_SIZE", "field_39381", "field_39381", "f_236798_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.network.PacketByteBuf#field_39381
    [[maybe_unused]] static void set_field_field_39381(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "PUBLIC_KEY_SIZE", "field_39381", "field_39381", "f_236798_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.network.PacketByteBuf#field_39382
    [[maybe_unused]] static jint get_field_field_39382() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "MAX_PUBLIC_KEY_HEADER_SIZE", "field_39382", "field_39382", "f_236799_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.network.PacketByteBuf#field_39382
    [[maybe_unused]] static void set_field_field_39382(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "MAX_PUBLIC_KEY_HEADER_SIZE", "field_39382", "field_39382", "f_236799_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.network.PacketByteBuf#field_39383
    [[maybe_unused]] static jint get_field_field_39383() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "MAX_PUBLIC_KEY_LENGTH", "field_39383", "field_39383", "f_236800_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.network.PacketByteBuf#field_39383
    [[maybe_unused]] static void set_field_field_39383(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "MAX_PUBLIC_KEY_LENGTH", "field_39383", "field_39383", "f_236800_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.network.PacketByteBuf#GSON
    [[maybe_unused]] static jobject get_field_GSON() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "GSON", "field_42966", "GSON", "f_271126_"), "Lcom/google/gson/Gson;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.network.PacketByteBuf#GSON
    [[maybe_unused]] static void set_field_GSON(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "GSON", "field_42966", "GSON", "f_271126_"), "Lcom/google/gson/Gson;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_decode() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "readWithCodecTrusted", "method_52954", "decode", "m_293826_"), "(Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/Codec;)Ljava/lang/Object;");
    }

    static jobject decode(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_decode();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__decode() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "readWithCodec", "method_29171", "decode", "m_266466_"), "(Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/Codec;Luk;)Ljava/lang/Object;");
    }

    static jobject _decode(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID__decode();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_encode() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "writeWithCodec", "method_29172", "encode", "m_266332_"), "(Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/Codec;Ljava/lang/Object;)Lvw;");
    }

    static jobject encode(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_encode();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_decodeAsJson() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "readJsonWithCodec", "method_49394", "decodeAsJson", "m_271872_"), "(Lcom/mojang/serialization/Codec;)Ljava/lang/Object;");
    }

    static jobject decodeAsJson(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_decodeAsJson();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_encodeAsJson() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "writeJsonWithCodec", "method_49395", "encodeAsJson", "m_272073_"), "(Lcom/mojang/serialization/Codec;Ljava/lang/Object;)V");
    }

    static void encodeAsJson(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_encodeAsJson();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getMaxValidator() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "limitValue", "method_37453", "getMaxValidator", "m_182695_"), "(Ljava/util/function/IntFunction;I)Ljava/util/function/IntFunction;");
    }

    static jobject getMaxValidator(const jobject& arg0, const jint& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_getMaxValidator();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_readCollection() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "readCollection", "method_34068", "readCollection", "m_236838_"), "(Ljava/util/function/IntFunction;Lyy;)Ljava/util/Collection;");
    }

    static jobject readCollection(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_readCollection();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_writeCollection() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "writeCollection", "method_34062", "writeCollection", "m_236828_"), "(Ljava/util/Collection;Lyz;)V");
    }

    static void writeCollection(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_writeCollection();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_readList() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "readList", "method_34066", "readList", "m_236845_"), "(Lyy;)Ljava/util/List;");
    }

    static jobject readList(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_readList();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_readIntList() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "readIntIdList", "method_34059", "readIntList", "m_178338_"), "()Lit/unimi/dsi/fastutil/ints/IntList;");
    }

    static jobject readIntList(const jobject& obj) {
                
       const auto methodID = methodID_readIntList();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_writeIntList() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "writeIntIdList", "method_34060", "writeIntList", "m_178345_"), "(Lit/unimi/dsi/fastutil/ints/IntList;)V");
    }

    static void writeIntList(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_writeIntList();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_readMap() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "readMap", "method_34069", "readMap", "m_236841_"), "(Ljava/util/function/IntFunction;Lyy;Lyy;)Ljava/util/Map;");
    }

    static jobject readMap(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_readMap();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID__readMap() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "readMap", "method_34067", "readMap", "m_236847_"), "(Lyy;Lyy;)Ljava/util/Map;");
    }

    static jobject _readMap(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID__readMap();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_writeMap() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "writeMap", "method_34063", "writeMap", "m_236831_"), "(Ljava/util/Map;Lyz;Lyz;)V");
    }

    static void writeMap(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_writeMap();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_forEachInCollection() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "readWithCount", "method_34065", "forEachInCollection", "m_178364_"), "(Ljava/util/function/Consumer;)V");
    }

    static void forEachInCollection(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_forEachInCollection();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_writeEnumSet() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "writeEnumSet", "method_46253", "writeEnumSet", "m_245616_"), "(Ljava/util/EnumSet;Ljava/lang/Class;)V");
    }

    static void writeEnumSet(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_writeEnumSet();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_readEnumSet() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "readEnumSet", "method_46251", "readEnumSet", "m_247336_"), "(Ljava/lang/Class;)Ljava/util/EnumSet;");
    }

    static jobject readEnumSet(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_readEnumSet();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_writeOptional() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "writeOptional", "method_37435", "writeOptional", "m_236835_"), "(Ljava/util/Optional;Lyz;)V");
    }

    static void writeOptional(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_writeOptional();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_readOptional() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "readOptional", "method_37436", "readOptional", "m_236860_"), "(Lyy;)Ljava/util/Optional;");
    }

    static jobject readOptional(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_readOptional();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_readNullable() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "readNullable", "method_43827", "readNullable", "m_236868_"), "(Lyy;)Ljava/lang/Object;");
    }

    static jobject readNullable(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_readNullable();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__readNullable() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "readNullable", "method_56893", "readNullable", "m_323524_"), "(Lio/netty/buffer/ByteBuf;Lyy;)Ljava/lang/Object;");
    }

    static jobject _readNullable(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID__readNullable();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_writeNullable() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "writeNullable", "method_43826", "writeNullable", "m_321806_"), "(Ljava/lang/Object;Lyz;)V");
    }

    static void writeNullable(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_writeNullable();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__writeNullable() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "writeNullable", "method_56892", "writeNullable", "m_236821_"), "(Lio/netty/buffer/ByteBuf;Ljava/lang/Object;Lyz;)V");
    }

    static void _writeNullable(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID__writeNullable();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_readByteArray() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "readByteArray", "method_10795", "readByteArray", "m_130052_"), "()[B");
    }

    static jbyte readByteArray(const jobject& obj) {
                
       const auto methodID = methodID_readByteArray();
       return MinecraftSDK::env->CallByteMethod(obj, methodID);
    };
    
    static jmethodID methodID__readByteArray() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "readByteArray", "method_56890", "readByteArray", "m_324528_"), "(Lio/netty/buffer/ByteBuf;)[B");
    }

    static jbyte _readByteArray(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID__readByteArray();
       return MinecraftSDK::env->CallStaticByteMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_writeByteArray() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "writeByteArray", "method_10813", "writeByteArray", "m_130087_"), "([B)Lvw;");
    }

    static jobject writeByteArray(const jobject& obj, const jarray& arg0, const jbyte& arg1) {
                
       const auto methodID = methodID_writeByteArray();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__writeByteArray() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "writeByteArray", "method_56894", "writeByteArray", "m_319178_"), "(Lio/netty/buffer/ByteBuf;[B)V");
    }

    static void _writeByteArray(const jobject& arg0, const jarray& arg1, const jbyte& arg2) {
       const auto clazz = self();
       const auto methodID = methodID__writeByteArray();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID___readByteArray() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "readByteArray", "method_10803", "readByteArray", "m_130101_"), "(I)[B");
    }

    static jbyte __readByteArray(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID___readByteArray();
       return MinecraftSDK::env->CallByteMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID____readByteArray() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "readByteArray", "method_56891", "readByteArray", "m_319319_"), "(Lio/netty/buffer/ByteBuf;I)[B");
    }

    static jbyte ___readByteArray(const jobject& arg0, const jint& arg1) {
       const auto clazz = self();
       const auto methodID = methodID____readByteArray();
       return MinecraftSDK::env->CallStaticByteMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_writeIntArray() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "writeVarIntArray", "method_10806", "writeIntArray", "m_130089_"), "([I)Lvw;");
    }

    static jobject writeIntArray(const jobject& obj, const jarray& arg0, const jint& arg1) {
                
       const auto methodID = methodID_writeIntArray();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_readIntArray() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "readVarIntArray", "method_10787", "readIntArray", "m_130100_"), "()[I");
    }

    static jint readIntArray(const jobject& obj) {
                
       const auto methodID = methodID_readIntArray();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID__readIntArray() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "readVarIntArray", "method_10799", "readIntArray", "m_130116_"), "(I)[I");
    }

    static jint _readIntArray(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID__readIntArray();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_writeLongArray() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "writeLongArray", "method_10789", "writeLongArray", "m_130091_"), "([J)Lvw;");
    }

    static jobject writeLongArray(const jobject& obj, const jarray& arg0, const jlong& arg1) {
                
       const auto methodID = methodID_writeLongArray();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_readLongArray() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "readLongArray", "method_33134", "readLongArray", "m_178381_"), "()[J");
    }

    static jlong readLongArray(const jobject& obj) {
                
       const auto methodID = methodID_readLongArray();
       return MinecraftSDK::env->CallLongMethod(obj, methodID);
    };
    
    static jmethodID methodID__readLongArray() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "readLongArray", "method_10801", "readLongArray", "m_130105_"), "([J)[J");
    }

    static jlong _readLongArray(const jobject& obj, const jarray& arg0, const jlong& arg1) {
                
       const auto methodID = methodID__readLongArray();
       return MinecraftSDK::env->CallLongMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID___readLongArray() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "readLongArray", "method_10809", "readLongArray", "m_130093_"), "([JI)[J");
    }

    static jlong __readLongArray(const jobject& obj, const jarray& arg0, const jlong& arg1, const jint& arg2) {
                
       const auto methodID = methodID___readLongArray();
       return MinecraftSDK::env->CallLongMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_readBlockPos() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "readBlockPos", "method_10811", "readBlockPos", "m_130135_"), "()Ljd;");
    }

    static jobject readBlockPos(const jobject& obj) {
                
       const auto methodID = methodID_readBlockPos();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__readBlockPos() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "readBlockPos", "method_56335", "readBlockPos", "m_319748_"), "(Lio/netty/buffer/ByteBuf;)Ljd;");
    }

    static jobject _readBlockPos(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID__readBlockPos();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_writeBlockPos() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "writeBlockPos", "method_10807", "writeBlockPos", "m_130064_"), "(Ljd;)Lvw;");
    }

    static jobject writeBlockPos(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_writeBlockPos();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__writeBlockPos() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "writeBlockPos", "method_56336", "writeBlockPos", "m_323314_"), "(Lio/netty/buffer/ByteBuf;Ljd;)V");
    }

    static void _writeBlockPos(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID__writeBlockPos();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_readChunkPos() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "readChunkPos", "method_36133", "readChunkPos", "m_178383_"), "()Ldcd;");
    }

    static jobject readChunkPos(const jobject& obj) {
                
       const auto methodID = methodID_readChunkPos();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_writeChunkPos() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "writeChunkPos", "method_36130", "writeChunkPos", "m_178341_"), "(Ldcd;)Lvw;");
    }

    static jobject writeChunkPos(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_writeChunkPos();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_readChunkSectionPos() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "readSectionPos", "method_19456", "readChunkSectionPos", "m_130157_"), "()Lkf;");
    }

    static jobject readChunkSectionPos(const jobject& obj) {
                
       const auto methodID = methodID_readChunkSectionPos();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_writeChunkSectionPos() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "writeSectionPos", "method_36131", "writeChunkSectionPos", "m_178343_"), "(Lkf;)Lvw;");
    }

    static jobject writeChunkSectionPos(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_writeChunkSectionPos();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_readGlobalPos() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "readGlobalPos", "method_44117", "readGlobalPos", "m_236872_"), "()Ljl;");
    }

    static jobject readGlobalPos(const jobject& obj) {
                
       const auto methodID = methodID_readGlobalPos();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_writeGlobalPos() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "writeGlobalPos", "method_44113", "writeGlobalPos", "m_236814_"), "(Ljl;)V");
    }

    static void writeGlobalPos(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_writeGlobalPos();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_readVector3f() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("i", "readVector3f", "method_49069", "readVector3f", "m_269394_"), "()Lorg/joml/Vector3f;");
    }

    static jobject readVector3f(const jobject& obj) {
                
       const auto methodID = methodID_readVector3f();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__readVector3f() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "readVector3f", "method_56342", "readVector3f", "m_321050_"), "(Lio/netty/buffer/ByteBuf;)Lorg/joml/Vector3f;");
    }

    static jobject _readVector3f(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID__readVector3f();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_writeVector3f() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "writeVector3f", "method_49068", "writeVector3f", "m_269582_"), "(Lorg/joml/Vector3f;)V");
    }

    static void writeVector3f(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_writeVector3f();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__writeVector3f() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "writeVector3f", "method_56339", "writeVector3f", "m_324702_"), "(Lio/netty/buffer/ByteBuf;Lorg/joml/Vector3f;)V");
    }

    static void _writeVector3f(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID__writeVector3f();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_readQuaternionf() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("j", "readQuaternion", "method_49070", "readQuaternionf", "m_269131_"), "()Lorg/joml/Quaternionf;");
    }

    static jobject readQuaternionf(const jobject& obj) {
                
       const auto methodID = methodID_readQuaternionf();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__readQuaternionf() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("d", "readQuaternion", "method_56343", "readQuaternionf", "m_321482_"), "(Lio/netty/buffer/ByteBuf;)Lorg/joml/Quaternionf;");
    }

    static jobject _readQuaternionf(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID__readQuaternionf();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_writeQuaternionf() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "writeQuaternion", "method_49067", "writeQuaternionf", "m_269101_"), "(Lorg/joml/Quaternionf;)V");
    }

    static void writeQuaternionf(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_writeQuaternionf();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__writeQuaternionf() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "writeQuaternion", "method_56338", "writeQuaternionf", "m_322686_"), "(Lio/netty/buffer/ByteBuf;Lorg/joml/Quaternionf;)V");
    }

    static void _writeQuaternionf(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID__writeQuaternionf();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_readVec3d() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("k", "readVec3", "method_52996", "readVec3d", "m_295597_"), "()Lexc;");
    }

    static jobject readVec3d(const jobject& obj) {
                
       const auto methodID = methodID_readVec3d();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_writeVec3d() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "writeVec3", "method_52955", "writeVec3d", "m_295412_"), "(Lexc;)V");
    }

    static void writeVec3d(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_writeVec3d();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_readEnumConstant() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "readEnum", "method_10818", "readEnumConstant", "m_130066_"), "(Ljava/lang/Class;)Ljava/lang/Enum;");
    }

    static jobject readEnumConstant(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_readEnumConstant();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_writeEnumConstant() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "writeEnum", "method_10817", "writeEnumConstant", "m_130068_"), "(Ljava/lang/Enum;)Lvw;");
    }

    static jobject writeEnumConstant(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_writeEnumConstant();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID___decode() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "readById", "method_52962", "decode", "m_293355_"), "(Ljava/util/function/IntFunction;)Ljava/lang/Object;");
    }

    static jobject __decode(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID___decode();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__encode() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "writeById", "method_52963", "encode", "m_293228_"), "(Ljava/util/function/ToIntFunction;Ljava/lang/Object;)Lvw;");
    }

    static jobject _encode(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID__encode();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_readVarInt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("l", "readVarInt", "method_10816", "readVarInt", "m_130242_"), "()I");
    }

    static jint readVarInt(const jobject& obj) {
                
       const auto methodID = methodID_readVarInt();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_readVarLong() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("m", "readVarLong", "method_10792", "readVarLong", "m_130258_"), "()J");
    }

    static jlong readVarLong(const jobject& obj) {
                
       const auto methodID = methodID_readVarLong();
       return MinecraftSDK::env->CallLongMethod(obj, methodID);
    };
    
    static jmethodID methodID_writeUuid() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "writeUUID", "method_10797", "writeUuid", "m_130077_"), "(Ljava/util/UUID;)Lvw;");
    }

    static jobject writeUuid(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_writeUuid();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__writeUuid() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "writeUUID", "method_56337", "writeUuid", "m_321780_"), "(Lio/netty/buffer/ByteBuf;Ljava/util/UUID;)V");
    }

    static void _writeUuid(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID__writeUuid();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_readUuid() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("n", "readUUID", "method_10790", "readUuid", "m_130259_"), "()Ljava/util/UUID;");
    }

    static jobject readUuid(const jobject& obj) {
                
       const auto methodID = methodID_readUuid();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__readUuid() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("e", "readUUID", "method_56344", "readUuid", "m_323841_"), "(Lio/netty/buffer/ByteBuf;)Ljava/util/UUID;");
    }

    static jobject _readUuid(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID__readUuid();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_writeVarInt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "writeVarInt", "method_10804", "writeVarInt", "m_130130_"), "(I)Lvw;");
    }

    static jobject writeVarInt(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_writeVarInt();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_writeVarLong() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "writeVarLong", "method_10791", "writeVarLong", "m_130103_"), "(J)Lvw;");
    }

    static jobject writeVarLong(const jobject& obj, const jlong& arg0) {
                
       const auto methodID = methodID_writeVarLong();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_writeNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "writeNbt", "method_10794", "writeNbt", "m_130079_"), "(Luy;)Lvw;");
    }

    static jobject writeNbt(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_writeNbt();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__writeNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "writeNbt", "method_56341", "writeNbt", "m_320266_"), "(Lio/netty/buffer/ByteBuf;Luy;)V");
    }

    static void _writeNbt(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID__writeNbt();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_readNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("o", "readNbt", "method_10798", "readNbt", "m_130260_"), "()Lub;");
    }

    static jobject readNbt(const jobject& obj) {
                
       const auto methodID = methodID_readNbt();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__readNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("f", "readNbt", "method_56345", "readNbt", "m_320231_"), "(Lio/netty/buffer/ByteBuf;)Lub;");
    }

    static jobject _readNbt(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID__readNbt();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID___readNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "readNbt", "method_56340", "readNbt", "m_323235_"), "(Lio/netty/buffer/ByteBuf;Luk;)Luy;");
    }

    static jobject __readNbt(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID___readNbt();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID____readNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "readNbt", "method_30616", "readNbt", "m_130081_"), "(Luk;)Luy;");
    }

    static jobject ___readNbt(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID____readNbt();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_readString() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("p", "readUtf", "method_19772", "readString", "m_130277_"), "()Ljava/lang/String;");
    }

    static jobject readString(const jobject& obj) {
                
       const auto methodID = methodID_readString();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__readString() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "readUtf", "method_10800", "readString", "m_130136_"), "(I)Ljava/lang/String;");
    }

    static jobject _readString(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID__readString();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_writeString() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "writeUtf", "method_10814", "writeString", "m_130070_"), "(Ljava/lang/String;)Lvw;");
    }

    static jobject writeString(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_writeString();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__writeString() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "writeUtf", "method_10788", "writeString", "m_130072_"), "(Ljava/lang/String;I)Lvw;");
    }

    static jobject _writeString(const jobject& obj, const jobject& arg0, const jint& arg1) {
                
       const auto methodID = methodID__writeString();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_readIdentifier() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("q", "readResourceLocation", "method_10810", "readIdentifier", "m_130281_"), "()Lakr;");
    }

    static jobject readIdentifier(const jobject& obj) {
                
       const auto methodID = methodID_readIdentifier();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_writeIdentifier() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "writeResourceLocation", "method_10812", "writeIdentifier", "m_130085_"), "(Lakr;)Lvw;");
    }

    static jobject writeIdentifier(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_writeIdentifier();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_readRegistryKey() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "readResourceKey", "method_44112", "readRegistryKey", "m_236801_"), "(Lakq;)Lakq;");
    }

    static jobject readRegistryKey(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_readRegistryKey();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_writeRegistryKey() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "writeResourceKey", "method_44116", "writeRegistryKey", "m_236858_"), "(Lakq;)V");
    }

    static void writeRegistryKey(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_writeRegistryKey();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_readRegistryRefKey() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("r", "readRegistryKey", "method_53006", "readRegistryRefKey", "m_294064_"), "()Lakq;");
    }

    static jobject readRegistryRefKey(const jobject& obj) {
                
       const auto methodID = methodID_readRegistryRefKey();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_readDate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("s", "readDate", "method_10802", "readDate", "m_130282_"), "()Ljava/util/Date;");
    }

    static jobject readDate(const jobject& obj) {
                
       const auto methodID = methodID_readDate();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_writeDate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "writeDate", "method_10796", "writeDate", "m_130075_"), "(Ljava/util/Date;)Lvw;");
    }

    static jobject writeDate(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_writeDate();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_readInstant() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("t", "readInstant", "method_44118", "readInstant", "m_236873_"), "()Ljava/time/Instant;");
    }

    static jobject readInstant(const jobject& obj) {
                
       const auto methodID = methodID_readInstant();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_writeInstant() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "writeInstant", "method_44115", "writeInstant", "m_236826_"), "(Ljava/time/Instant;)V");
    }

    static void writeInstant(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_writeInstant();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_readPublicKey() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("u", "readPublicKey", "method_44119", "readPublicKey", "m_236874_"), "()Ljava/security/PublicKey;");
    }

    static jobject readPublicKey(const jobject& obj) {
                
       const auto methodID = methodID_readPublicKey();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_writePublicKey() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "writePublicKey", "method_44114", "writePublicKey", "m_236824_"), "(Ljava/security/PublicKey;)Lvw;");
    }

    static jobject writePublicKey(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_writePublicKey();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_readBlockHitResult() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("v", "readBlockHitResult", "method_17814", "readBlockHitResult", "m_130283_"), "()Lewy;");
    }

    static jobject readBlockHitResult(const jobject& obj) {
                
       const auto methodID = methodID_readBlockHitResult();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_writeBlockHitResult() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "writeBlockHitResult", "method_17813", "writeBlockHitResult", "m_130062_"), "(Lewy;)V");
    }

    static void writeBlockHitResult(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_writeBlockHitResult();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_readBitSet() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("w", "readBitSet", "method_33558", "readBitSet", "m_178384_"), "()Ljava/util/BitSet;");
    }

    static jobject readBitSet(const jobject& obj) {
                
       const auto methodID = methodID_readBitSet();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_writeBitSet() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "writeBitSet", "method_33557", "writeBitSet", "m_178350_"), "(Ljava/util/BitSet;)V");
    }

    static void writeBitSet(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_writeBitSet();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__readBitSet() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "readFixedBitSet", "method_46254", "readBitSet", "m_247358_"), "(I)Ljava/util/BitSet;");
    }

    static jobject _readBitSet(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID__readBitSet();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__writeBitSet() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "writeFixedBitSet", "method_46252", "writeBitSet", "m_246901_"), "(Ljava/util/BitSet;I)V");
    }

    static void _writeBitSet(const jobject& obj, const jobject& arg0, const jint& arg1) {
                
       const auto methodID = methodID__writeBitSet();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_isContiguous() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("isContiguous", "isContiguous", "", "", "isContiguous"), "()Z");
    }

    static jboolean isContiguous(const jobject& obj) {
                
       const auto methodID = methodID_isContiguous();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_maxFastWritableBytes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("maxFastWritableBytes", "maxFastWritableBytes", "", "", "maxFastWritableBytes"), "()I");
    }

    static jint maxFastWritableBytes(const jobject& obj) {
                
       const auto methodID = methodID_maxFastWritableBytes();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_capacity() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("capacity", "capacity", "", "", "capacity"), "()I");
    }

    static jint capacity(const jobject& obj) {
                
       const auto methodID = methodID_capacity();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID__capacity() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "capacity", "method_52986", "capacity", "capacity"), "(I)Lvw;");
    }

    static jobject _capacity(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID__capacity();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_maxCapacity() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("maxCapacity", "maxCapacity", "", "", "maxCapacity"), "()I");
    }

    static jint maxCapacity(const jobject& obj) {
                
       const auto methodID = methodID_maxCapacity();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_alloc() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("alloc", "alloc", "", "", "alloc"), "()Lio/netty/buffer/ByteBufAllocator;");
    }

    static jobject alloc(const jobject& obj) {
                
       const auto methodID = methodID_alloc();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_order() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("order", "order", "", "", "order"), "()Ljava/nio/ByteOrder;");
    }

    static jobject order(const jobject& obj) {
                
       const auto methodID = methodID_order();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__order() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("order", "order", "order", "order", "order"), "(Ljava/nio/ByteOrder;)Lio/netty/buffer/ByteBuf;");
    }

    static jobject _order(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__order();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_unwrap() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("unwrap", "unwrap", "", "", "unwrap"), "()Lio/netty/buffer/ByteBuf;");
    }

    static jobject unwrap(const jobject& obj) {
                
       const auto methodID = methodID_unwrap();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_isDirect() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("isDirect", "isDirect", "", "", "isDirect"), "()Z");
    }

    static jboolean isDirect(const jobject& obj) {
                
       const auto methodID = methodID_isDirect();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isReadOnly() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("isReadOnly", "isReadOnly", "", "", "isReadOnly"), "()Z");
    }

    static jboolean isReadOnly(const jobject& obj) {
                
       const auto methodID = methodID_isReadOnly();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_asReadOnly() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("asReadOnly", "asReadOnly", "", "", "asReadOnly"), "()Lio/netty/buffer/ByteBuf;");
    }

    static jobject asReadOnly(const jobject& obj) {
                
       const auto methodID = methodID_asReadOnly();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_readerIndex() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("readerIndex", "readerIndex", "", "", "readerIndex"), "()I");
    }

    static jint readerIndex(const jobject& obj) {
                
       const auto methodID = methodID_readerIndex();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID__readerIndex() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "readerIndex", "method_52988", "readerIndex", "readerIndex"), "(I)Lvw;");
    }

    static jobject _readerIndex(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID__readerIndex();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_writerIndex() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("writerIndex", "writerIndex", "", "", "writerIndex"), "()I");
    }

    static jint writerIndex(const jobject& obj) {
                
       const auto methodID = methodID_writerIndex();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID__writerIndex() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "writerIndex", "method_52990", "writerIndex", "writerIndex"), "(I)Lvw;");
    }

    static jobject _writerIndex(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID__writerIndex();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setIndex() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setIndex", "method_52944", "setIndex", "setIndex"), "(II)Lvw;");
    }

    static jobject setIndex(const jobject& obj, const jint& arg0, const jint& arg1) {
                
       const auto methodID = methodID_setIndex();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_readableBytes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("readableBytes", "readableBytes", "", "", "readableBytes"), "()I");
    }

    static jint readableBytes(const jobject& obj) {
                
       const auto methodID = methodID_readableBytes();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_writableBytes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("writableBytes", "writableBytes", "", "", "writableBytes"), "()I");
    }

    static jint writableBytes(const jobject& obj) {
                
       const auto methodID = methodID_writableBytes();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_maxWritableBytes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("maxWritableBytes", "maxWritableBytes", "", "", "maxWritableBytes"), "()I");
    }

    static jint maxWritableBytes(const jobject& obj) {
                
       const auto methodID = methodID_maxWritableBytes();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_isReadable() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("isReadable", "isReadable", "", "", "isReadable"), "()Z");
    }

    static jboolean isReadable(const jobject& obj) {
                
       const auto methodID = methodID_isReadable();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID__isReadable() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("isReadable", "isReadable", "isReadable", "isReadable", "isReadable"), "(I)Z");
    }

    static jboolean _isReadable(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID__isReadable();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isWritable() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("isWritable", "isWritable", "", "", "isWritable"), "()Z");
    }

    static jboolean isWritable(const jobject& obj) {
                
       const auto methodID = methodID_isWritable();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID__isWritable() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("isWritable", "isWritable", "isWritable", "isWritable", "isWritable"), "(I)Z");
    }

    static jboolean _isWritable(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID__isWritable();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_clear() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("x", "clear", "method_52931", "clear", "clear"), "()Lvw;");
    }

    static jobject clear(const jobject& obj) {
                
       const auto methodID = methodID_clear();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_markReaderIndex() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("y", "markReaderIndex", "method_52932", "markReaderIndex", "markReaderIndex"), "()Lvw;");
    }

    static jobject markReaderIndex(const jobject& obj) {
                
       const auto methodID = methodID_markReaderIndex();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_resetReaderIndex() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("z", "resetReaderIndex", "method_52933", "resetReaderIndex", "resetReaderIndex"), "()Lvw;");
    }

    static jobject resetReaderIndex(const jobject& obj) {
                
       const auto methodID = methodID_resetReaderIndex();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_markWriterIndex() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("A", "markWriterIndex", "method_52934", "markWriterIndex", "markWriterIndex"), "()Lvw;");
    }

    static jobject markWriterIndex(const jobject& obj) {
                
       const auto methodID = methodID_markWriterIndex();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_resetWriterIndex() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("B", "resetWriterIndex", "method_52935", "resetWriterIndex", "resetWriterIndex"), "()Lvw;");
    }

    static jobject resetWriterIndex(const jobject& obj) {
                
       const auto methodID = methodID_resetWriterIndex();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_discardReadBytes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("C", "discardReadBytes", "method_52936", "discardReadBytes", "discardReadBytes"), "()Lvw;");
    }

    static jobject discardReadBytes(const jobject& obj) {
                
       const auto methodID = methodID_discardReadBytes();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_discardSomeReadBytes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("D", "discardSomeReadBytes", "method_52937", "discardSomeReadBytes", "discardSomeReadBytes"), "()Lvw;");
    }

    static jobject discardSomeReadBytes(const jobject& obj) {
                
       const auto methodID = methodID_discardSomeReadBytes();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_ensureWritable() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("i", "ensureWritable", "method_52992", "ensureWritable", "ensureWritable"), "(I)Lvw;");
    }

    static jobject ensureWritable(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_ensureWritable();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__ensureWritable() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("ensureWritable", "ensureWritable", "ensureWritable", "ensureWritable", "ensureWritable"), "(IZ)I");
    }

    static jint _ensureWritable(const jobject& obj, const jint& arg0, const jboolean& arg1) {
                
       const auto methodID = methodID__ensureWritable();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getBoolean() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("getBoolean", "getBoolean", "getBoolean", "getBoolean", "getBoolean"), "(I)Z");
    }

    static jboolean getBoolean(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_getBoolean();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getByte() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("getByte", "getByte", "getByte", "getByte", "getByte"), "(I)B");
    }

    static jbyte getByte(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_getByte();
       return MinecraftSDK::env->CallByteMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getUnsignedByte() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("getUnsignedByte", "getUnsignedByte", "getUnsignedByte", "getUnsignedByte", "getUnsignedByte"), "(I)S");
    }

    static jshort getUnsignedByte(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_getUnsignedByte();
       return MinecraftSDK::env->CallShortMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getShort() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("getShort", "getShort", "getShort", "getShort", "getShort"), "(I)S");
    }

    static jshort getShort(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_getShort();
       return MinecraftSDK::env->CallShortMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getShortLE() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("getShortLE", "getShortLE", "getShortLE", "getShortLE", "getShortLE"), "(I)S");
    }

    static jshort getShortLE(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_getShortLE();
       return MinecraftSDK::env->CallShortMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getUnsignedShort() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("getUnsignedShort", "getUnsignedShort", "getUnsignedShort", "getUnsignedShort", "getUnsignedShort"), "(I)I");
    }

    static jint getUnsignedShort(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_getUnsignedShort();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getUnsignedShortLE() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("getUnsignedShortLE", "getUnsignedShortLE", "getUnsignedShortLE", "getUnsignedShortLE", "getUnsignedShortLE"), "(I)I");
    }

    static jint getUnsignedShortLE(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_getUnsignedShortLE();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getMedium() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("getMedium", "getMedium", "getMedium", "getMedium", "getMedium"), "(I)I");
    }

    static jint getMedium(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_getMedium();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getMediumLE() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("getMediumLE", "getMediumLE", "getMediumLE", "getMediumLE", "getMediumLE"), "(I)I");
    }

    static jint getMediumLE(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_getMediumLE();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getUnsignedMedium() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("getUnsignedMedium", "getUnsignedMedium", "getUnsignedMedium", "getUnsignedMedium", "getUnsignedMedium"), "(I)I");
    }

    static jint getUnsignedMedium(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_getUnsignedMedium();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getUnsignedMediumLE() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("getUnsignedMediumLE", "getUnsignedMediumLE", "getUnsignedMediumLE", "getUnsignedMediumLE", "getUnsignedMediumLE"), "(I)I");
    }

    static jint getUnsignedMediumLE(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_getUnsignedMediumLE();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getInt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("getInt", "getInt", "getInt", "getInt", "getInt"), "(I)I");
    }

    static jint getInt(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_getInt();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getIntLE() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("getIntLE", "getIntLE", "getIntLE", "getIntLE", "getIntLE"), "(I)I");
    }

    static jint getIntLE(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_getIntLE();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getUnsignedInt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("getUnsignedInt", "getUnsignedInt", "getUnsignedInt", "getUnsignedInt", "getUnsignedInt"), "(I)J");
    }

    static jlong getUnsignedInt(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_getUnsignedInt();
       return MinecraftSDK::env->CallLongMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getUnsignedIntLE() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("getUnsignedIntLE", "getUnsignedIntLE", "getUnsignedIntLE", "getUnsignedIntLE", "getUnsignedIntLE"), "(I)J");
    }

    static jlong getUnsignedIntLE(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_getUnsignedIntLE();
       return MinecraftSDK::env->CallLongMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getLong() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("getLong", "getLong", "getLong", "getLong", "getLong"), "(I)J");
    }

    static jlong getLong(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_getLong();
       return MinecraftSDK::env->CallLongMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getLongLE() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("getLongLE", "getLongLE", "getLongLE", "getLongLE", "getLongLE"), "(I)J");
    }

    static jlong getLongLE(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_getLongLE();
       return MinecraftSDK::env->CallLongMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getChar() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("getChar", "getChar", "getChar", "getChar", "getChar"), "(I)C");
    }

    static jchar getChar(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_getChar();
       return MinecraftSDK::env->CallCharMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getFloat() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("getFloat", "getFloat", "getFloat", "getFloat", "getFloat"), "(I)F");
    }

    static jfloat getFloat(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_getFloat();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getDouble() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("getDouble", "getDouble", "getDouble", "getDouble", "getDouble"), "(I)D");
    }

    static jdouble getDouble(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_getDouble();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getBytes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getBytes", "method_52946", "getBytes", "getBytes"), "(ILio/netty/buffer/ByteBuf;)Lvw;");
    }

    static jobject getBytes(const jobject& obj, const jint& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_getBytes();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__getBytes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getBytes", "method_52947", "getBytes", "getBytes"), "(ILio/netty/buffer/ByteBuf;I)Lvw;");
    }

    static jobject _getBytes(const jobject& obj, const jint& arg0, const jobject& arg1, const jint& arg2) {
                
       const auto methodID = methodID__getBytes();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID___getBytes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getBytes", "method_52948", "getBytes", "getBytes"), "(ILio/netty/buffer/ByteBuf;II)Lvw;");
    }

    static jobject __getBytes(const jobject& obj, const jint& arg0, const jobject& arg1, const jint& arg2, const jint& arg3) {
                
       const auto methodID = methodID___getBytes();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID____getBytes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getBytes", "method_52952", "getBytes", "getBytes"), "(I[B)Lvw;");
    }

    static jobject ___getBytes(const jobject& obj, const jint& arg0, const jarray& arg1, const jbyte& arg2) {
                
       const auto methodID = methodID____getBytes();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_____getBytes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getBytes", "method_52953", "getBytes", "getBytes"), "(I[BII)Lvw;");
    }

    static jobject ____getBytes(const jobject& obj, const jint& arg0, const jarray& arg1, const jbyte& arg2, const jint& arg3, const jint& arg4) {
                
       const auto methodID = methodID_____getBytes();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID______getBytes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getBytes", "method_52950", "getBytes", "getBytes"), "(ILjava/nio/ByteBuffer;)Lvw;");
    }

    static jobject _____getBytes(const jobject& obj, const jint& arg0, const jobject& arg1) {
                
       const auto methodID = methodID______getBytes();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_______getBytes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getBytes", "method_52949", "getBytes", "getBytes"), "(ILjava/io/OutputStream;I)Lvw;");
    }

    static jobject ______getBytes(const jobject& obj, const jint& arg0, const jobject& arg1, const jint& arg2) {
                
       const auto methodID = methodID_______getBytes();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID________getBytes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("getBytes", "getBytes", "getBytes", "getBytes", "getBytes"), "(ILjava/nio/channels/GatheringByteChannel;I)I");
    }

    static jint _______getBytes(const jobject& obj, const jint& arg0, const jobject& arg1, const jint& arg2) {
                
       const auto methodID = methodID________getBytes();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_________getBytes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("getBytes", "getBytes", "getBytes", "getBytes", "getBytes"), "(ILjava/nio/channels/FileChannel;JI)I");
    }

    static jint ________getBytes(const jobject& obj, const jint& arg0, const jobject& arg1, const jlong& arg2, const jint& arg3) {
                
       const auto methodID = methodID_________getBytes();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_getCharSequence() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("getCharSequence", "getCharSequence", "getCharSequence", "getCharSequence", "getCharSequence"), "(IILjava/nio/charset/Charset;)Ljava/lang/CharSequence;");
    }

    static jobject getCharSequence(const jobject& obj, const jint& arg0, const jint& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_getCharSequence();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_setBoolean() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setBoolean", "method_52951", "setBoolean", "setBoolean"), "(IZ)Lvw;");
    }

    static jobject setBoolean(const jobject& obj, const jint& arg0, const jboolean& arg1) {
                
       const auto methodID = methodID_setBoolean();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_setByte() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "setByte", "method_52966", "setByte", "setByte"), "(II)Lvw;");
    }

    static jobject setByte(const jobject& obj, const jint& arg0, const jint& arg1) {
                
       const auto methodID = methodID_setByte();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_setShort() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "setShort", "method_52981", "setShort", "setShort"), "(II)Lvw;");
    }

    static jobject setShort(const jobject& obj, const jint& arg0, const jint& arg1) {
                
       const auto methodID = methodID_setShort();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_setShortLE() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "setShortLE", "method_52984", "setShortLE", "setShortLE"), "(II)Lvw;");
    }

    static jobject setShortLE(const jobject& obj, const jint& arg0, const jint& arg1) {
                
       const auto methodID = methodID_setShortLE();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_setMedium() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "setMedium", "method_52985", "setMedium", "setMedium"), "(II)Lvw;");
    }

    static jobject setMedium(const jobject& obj, const jint& arg0, const jint& arg1) {
                
       const auto methodID = methodID_setMedium();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_setMediumLE() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "setMediumLE", "method_52987", "setMediumLE", "setMediumLE"), "(II)Lvw;");
    }

    static jobject setMediumLE(const jobject& obj, const jint& arg0, const jint& arg1) {
                
       const auto methodID = methodID_setMediumLE();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_setInt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "setInt", "method_52989", "setInt", "setInt"), "(II)Lvw;");
    }

    static jobject setInt(const jobject& obj, const jint& arg0, const jint& arg1) {
                
       const auto methodID = methodID_setInt();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_setIntLE() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "setIntLE", "method_52991", "setIntLE", "setIntLE"), "(II)Lvw;");
    }

    static jobject setIntLE(const jobject& obj, const jint& arg0, const jint& arg1) {
                
       const auto methodID = methodID_setIntLE();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_setLong() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setLong", "method_52945", "setLong", "setLong"), "(IJ)Lvw;");
    }

    static jobject setLong(const jobject& obj, const jint& arg0, const jlong& arg1) {
                
       const auto methodID = methodID_setLong();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_setLongLE() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "setLongLE", "method_52967", "setLongLE", "setLongLE"), "(IJ)Lvw;");
    }

    static jobject setLongLE(const jobject& obj, const jint& arg0, const jlong& arg1) {
                
       const auto methodID = methodID_setLongLE();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_setChar() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("i", "setChar", "method_52993", "setChar", "setChar"), "(II)Lvw;");
    }

    static jobject setChar(const jobject& obj, const jint& arg0, const jint& arg1) {
                
       const auto methodID = methodID_setChar();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_setFloat() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setFloat", "method_52943", "setFloat", "setFloat"), "(IF)Lvw;");
    }

    static jobject setFloat(const jobject& obj, const jint& arg0, const jfloat& arg1) {
                
       const auto methodID = methodID_setFloat();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_setDouble() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setDouble", "method_52942", "setDouble", "setDouble"), "(ID)Lvw;");
    }

    static jobject setDouble(const jobject& obj, const jint& arg0, const jdouble& arg1) {
                
       const auto methodID = methodID_setDouble();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_setBytes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "setBytes", "method_52968", "setBytes", "setBytes"), "(ILio/netty/buffer/ByteBuf;)Lvw;");
    }

    static jobject setBytes(const jobject& obj, const jint& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_setBytes();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__setBytes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "setBytes", "method_52969", "setBytes", "setBytes"), "(ILio/netty/buffer/ByteBuf;I)Lvw;");
    }

    static jobject _setBytes(const jobject& obj, const jint& arg0, const jobject& arg1, const jint& arg2) {
                
       const auto methodID = methodID__setBytes();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID___setBytes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "setBytes", "method_52970", "setBytes", "setBytes"), "(ILio/netty/buffer/ByteBuf;II)Lvw;");
    }

    static jobject __setBytes(const jobject& obj, const jint& arg0, const jobject& arg1, const jint& arg2, const jint& arg3) {
                
       const auto methodID = methodID___setBytes();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID____setBytes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "setBytes", "method_52972", "setBytes", "setBytes"), "(I[B)Lvw;");
    }

    static jobject ___setBytes(const jobject& obj, const jint& arg0, const jarray& arg1, const jbyte& arg2) {
                
       const auto methodID = methodID____setBytes();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_____setBytes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "setBytes", "method_52973", "setBytes", "setBytes"), "(I[BII)Lvw;");
    }

    static jobject ____setBytes(const jobject& obj, const jint& arg0, const jarray& arg1, const jbyte& arg2, const jint& arg3, const jint& arg4) {
                
       const auto methodID = methodID_____setBytes();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID______setBytes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "setBytes", "method_52971", "setBytes", "setBytes"), "(ILjava/nio/ByteBuffer;)Lvw;");
    }

    static jobject _____setBytes(const jobject& obj, const jint& arg0, const jobject& arg1) {
                
       const auto methodID = methodID______setBytes();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_______setBytes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("setBytes", "setBytes", "setBytes", "setBytes", "setBytes"), "(ILjava/io/InputStream;I)I");
    }

    static jint ______setBytes(const jobject& obj, const jint& arg0, const jobject& arg1, const jint& arg2) {
                
       const auto methodID = methodID_______setBytes();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID________setBytes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("setBytes", "setBytes", "setBytes", "setBytes", "setBytes"), "(ILjava/nio/channels/ScatteringByteChannel;I)I");
    }

    static jint _______setBytes(const jobject& obj, const jint& arg0, const jobject& arg1, const jint& arg2) {
                
       const auto methodID = methodID________setBytes();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_________setBytes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("setBytes", "setBytes", "setBytes", "setBytes", "setBytes"), "(ILjava/nio/channels/FileChannel;JI)I");
    }

    static jint ________setBytes(const jobject& obj, const jint& arg0, const jobject& arg1, const jlong& arg2, const jint& arg3) {
                
       const auto methodID = methodID_________setBytes();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_setZero() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("j", "setZero", "method_52995", "setZero", "setZero"), "(II)Lvw;");
    }

    static jobject setZero(const jobject& obj, const jint& arg0, const jint& arg1) {
                
       const auto methodID = methodID_setZero();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_setCharSequence() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("setCharSequence", "setCharSequence", "setCharSequence", "setCharSequence", "setCharSequence"), "(ILjava/lang/CharSequence;Ljava/nio/charset/Charset;)I");
    }

    static jint setCharSequence(const jobject& obj, const jint& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_setCharSequence();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_readBoolean() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("readBoolean", "readBoolean", "", "", "readBoolean"), "()Z");
    }

    static jboolean readBoolean(const jobject& obj) {
                
       const auto methodID = methodID_readBoolean();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_readByte() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("readByte", "readByte", "", "", "readByte"), "()B");
    }

    static jbyte readByte(const jobject& obj) {
                
       const auto methodID = methodID_readByte();
       return MinecraftSDK::env->CallByteMethod(obj, methodID);
    };
    
    static jmethodID methodID_readUnsignedByte() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("readUnsignedByte", "readUnsignedByte", "", "", "readUnsignedByte"), "()S");
    }

    static jshort readUnsignedByte(const jobject& obj) {
                
       const auto methodID = methodID_readUnsignedByte();
       return MinecraftSDK::env->CallShortMethod(obj, methodID);
    };
    
    static jmethodID methodID_readShort() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("readShort", "readShort", "", "", "readShort"), "()S");
    }

    static jshort readShort(const jobject& obj) {
                
       const auto methodID = methodID_readShort();
       return MinecraftSDK::env->CallShortMethod(obj, methodID);
    };
    
    static jmethodID methodID_readShortLE() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("readShortLE", "readShortLE", "", "", "readShortLE"), "()S");
    }

    static jshort readShortLE(const jobject& obj) {
                
       const auto methodID = methodID_readShortLE();
       return MinecraftSDK::env->CallShortMethod(obj, methodID);
    };
    
    static jmethodID methodID_readUnsignedShort() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("readUnsignedShort", "readUnsignedShort", "", "", "readUnsignedShort"), "()I");
    }

    static jint readUnsignedShort(const jobject& obj) {
                
       const auto methodID = methodID_readUnsignedShort();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_readUnsignedShortLE() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("readUnsignedShortLE", "readUnsignedShortLE", "", "", "readUnsignedShortLE"), "()I");
    }

    static jint readUnsignedShortLE(const jobject& obj) {
                
       const auto methodID = methodID_readUnsignedShortLE();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_readMedium() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("readMedium", "readMedium", "", "", "readMedium"), "()I");
    }

    static jint readMedium(const jobject& obj) {
                
       const auto methodID = methodID_readMedium();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_readMediumLE() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("readMediumLE", "readMediumLE", "", "", "readMediumLE"), "()I");
    }

    static jint readMediumLE(const jobject& obj) {
                
       const auto methodID = methodID_readMediumLE();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_readUnsignedMedium() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("readUnsignedMedium", "readUnsignedMedium", "", "", "readUnsignedMedium"), "()I");
    }

    static jint readUnsignedMedium(const jobject& obj) {
                
       const auto methodID = methodID_readUnsignedMedium();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_readUnsignedMediumLE() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("readUnsignedMediumLE", "readUnsignedMediumLE", "", "", "readUnsignedMediumLE"), "()I");
    }

    static jint readUnsignedMediumLE(const jobject& obj) {
                
       const auto methodID = methodID_readUnsignedMediumLE();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_readInt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("readInt", "readInt", "", "", "readInt"), "()I");
    }

    static jint readInt(const jobject& obj) {
                
       const auto methodID = methodID_readInt();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_readIntLE() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("readIntLE", "readIntLE", "", "", "readIntLE"), "()I");
    }

    static jint readIntLE(const jobject& obj) {
                
       const auto methodID = methodID_readIntLE();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_readUnsignedInt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("readUnsignedInt", "readUnsignedInt", "", "", "readUnsignedInt"), "()J");
    }

    static jlong readUnsignedInt(const jobject& obj) {
                
       const auto methodID = methodID_readUnsignedInt();
       return MinecraftSDK::env->CallLongMethod(obj, methodID);
    };
    
    static jmethodID methodID_readUnsignedIntLE() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("readUnsignedIntLE", "readUnsignedIntLE", "", "", "readUnsignedIntLE"), "()J");
    }

    static jlong readUnsignedIntLE(const jobject& obj) {
                
       const auto methodID = methodID_readUnsignedIntLE();
       return MinecraftSDK::env->CallLongMethod(obj, methodID);
    };
    
    static jmethodID methodID_readLong() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("readLong", "readLong", "", "", "readLong"), "()J");
    }

    static jlong readLong(const jobject& obj) {
                
       const auto methodID = methodID_readLong();
       return MinecraftSDK::env->CallLongMethod(obj, methodID);
    };
    
    static jmethodID methodID_readLongLE() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("readLongLE", "readLongLE", "", "", "readLongLE"), "()J");
    }

    static jlong readLongLE(const jobject& obj) {
                
       const auto methodID = methodID_readLongLE();
       return MinecraftSDK::env->CallLongMethod(obj, methodID);
    };
    
    static jmethodID methodID_readChar() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("readChar", "readChar", "", "", "readChar"), "()C");
    }

    static jchar readChar(const jobject& obj) {
                
       const auto methodID = methodID_readChar();
       return MinecraftSDK::env->CallCharMethod(obj, methodID);
    };
    
    static jmethodID methodID_readFloat() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("readFloat", "readFloat", "", "", "readFloat"), "()F");
    }

    static jfloat readFloat(const jobject& obj) {
                
       const auto methodID = methodID_readFloat();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID_readDouble() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("readDouble", "readDouble", "", "", "readDouble"), "()D");
    }

    static jdouble readDouble(const jobject& obj) {
                
       const auto methodID = methodID_readDouble();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID);
    };
    
    static jmethodID methodID_readBytes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("readBytes", "readBytes", "readBytes", "readBytes", "readBytes"), "(I)Lio/netty/buffer/ByteBuf;");
    }

    static jobject readBytes(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_readBytes();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_readSlice() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("readSlice", "readSlice", "readSlice", "readSlice", "readSlice"), "(I)Lio/netty/buffer/ByteBuf;");
    }

    static jobject readSlice(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_readSlice();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_readRetainedSlice() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("readRetainedSlice", "readRetainedSlice", "readRetainedSlice", "readRetainedSlice", "readRetainedSlice"), "(I)Lio/netty/buffer/ByteBuf;");
    }

    static jobject readRetainedSlice(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_readRetainedSlice();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__readBytes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "readBytes", "method_52956", "readBytes", "readBytes"), "(Lio/netty/buffer/ByteBuf;)Lvw;");
    }

    static jobject _readBytes(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__readBytes();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID___readBytes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "readBytes", "method_52957", "readBytes", "readBytes"), "(Lio/netty/buffer/ByteBuf;I)Lvw;");
    }

    static jobject __readBytes(const jobject& obj, const jobject& arg0, const jint& arg1) {
                
       const auto methodID = methodID___readBytes();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID____readBytes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "readBytes", "method_52958", "readBytes", "readBytes"), "(Lio/netty/buffer/ByteBuf;II)Lvw;");
    }

    static jobject ___readBytes(const jobject& obj, const jobject& arg0, const jint& arg1, const jint& arg2) {
                
       const auto methodID = methodID____readBytes();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_____readBytes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "readBytes", "method_52979", "readBytes", "readBytes"), "([B)Lvw;");
    }

    static jobject ____readBytes(const jobject& obj, const jarray& arg0, const jbyte& arg1) {
                
       const auto methodID = methodID_____readBytes();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID______readBytes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "readBytes", "method_52965", "readBytes", "readBytes"), "([BII)Lvw;");
    }

    static jobject _____readBytes(const jobject& obj, const jarray& arg0, const jbyte& arg1, const jint& arg2, const jint& arg3) {
                
       const auto methodID = methodID______readBytes();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_______readBytes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "readBytes", "method_52961", "readBytes", "readBytes"), "(Ljava/nio/ByteBuffer;)Lvw;");
    }

    static jobject ______readBytes(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_______readBytes();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID________readBytes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "readBytes", "method_52959", "readBytes", "readBytes"), "(Ljava/io/OutputStream;I)Lvw;");
    }

    static jobject _______readBytes(const jobject& obj, const jobject& arg0, const jint& arg1) {
                
       const auto methodID = methodID________readBytes();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_________readBytes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("readBytes", "readBytes", "readBytes", "readBytes", "readBytes"), "(Ljava/nio/channels/GatheringByteChannel;I)I");
    }

    static jint ________readBytes(const jobject& obj, const jobject& arg0, const jint& arg1) {
                
       const auto methodID = methodID_________readBytes();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_readCharSequence() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("readCharSequence", "readCharSequence", "readCharSequence", "readCharSequence", "readCharSequence"), "(ILjava/nio/charset/Charset;)Ljava/lang/CharSequence;");
    }

    static jobject readCharSequence(const jobject& obj, const jint& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_readCharSequence();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__________readBytes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("readBytes", "readBytes", "readBytes", "readBytes", "readBytes"), "(Ljava/nio/channels/FileChannel;JI)I");
    }

    static jint _________readBytes(const jobject& obj, const jobject& arg0, const jlong& arg1, const jint& arg2) {
                
       const auto methodID = methodID__________readBytes();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_skipBytes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("j", "skipBytes", "method_52994", "skipBytes", "skipBytes"), "(I)Lvw;");
    }

    static jobject skipBytes(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_skipBytes();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_writeBoolean() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "writeBoolean", "method_52964", "writeBoolean", "writeBoolean"), "(Z)Lvw;");
    }

    static jobject writeBoolean(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_writeBoolean();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_writeByte() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("k", "writeByte", "method_52997", "writeByte", "writeByte"), "(I)Lvw;");
    }

    static jobject writeByte(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_writeByte();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_writeShort() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("l", "writeShort", "method_52998", "writeShort", "writeShort"), "(I)Lvw;");
    }

    static jobject writeShort(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_writeShort();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_writeShortLE() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("m", "writeShortLE", "method_52999", "writeShortLE", "writeShortLE"), "(I)Lvw;");
    }

    static jobject writeShortLE(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_writeShortLE();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_writeMedium() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("n", "writeMedium", "method_53000", "writeMedium", "writeMedium"), "(I)Lvw;");
    }

    static jobject writeMedium(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_writeMedium();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_writeMediumLE() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("o", "writeMediumLE", "method_53001", "writeMediumLE", "writeMediumLE"), "(I)Lvw;");
    }

    static jobject writeMediumLE(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_writeMediumLE();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_writeInt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("p", "writeInt", "method_53002", "writeInt", "writeInt"), "(I)Lvw;");
    }

    static jobject writeInt(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_writeInt();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_writeIntLE() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("q", "writeIntLE", "method_53003", "writeIntLE", "writeIntLE"), "(I)Lvw;");
    }

    static jobject writeIntLE(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_writeIntLE();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_writeLong() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "writeLong", "method_52974", "writeLong", "writeLong"), "(J)Lvw;");
    }

    static jobject writeLong(const jobject& obj, const jlong& arg0) {
                
       const auto methodID = methodID_writeLong();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_writeLongLE() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "writeLongLE", "method_52982", "writeLongLE", "writeLongLE"), "(J)Lvw;");
    }

    static jobject writeLongLE(const jobject& obj, const jlong& arg0) {
                
       const auto methodID = methodID_writeLongLE();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_writeChar() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("r", "writeChar", "method_53004", "writeChar", "writeChar"), "(I)Lvw;");
    }

    static jobject writeChar(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_writeChar();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_writeFloat() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "writeFloat", "method_52941", "writeFloat", "writeFloat"), "(F)Lvw;");
    }

    static jobject writeFloat(const jobject& obj, const jfloat& arg0) {
                
       const auto methodID = methodID_writeFloat();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_writeDouble() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "writeDouble", "method_52940", "writeDouble", "writeDouble"), "(D)Lvw;");
    }

    static jobject writeDouble(const jobject& obj, const jdouble& arg0) {
                
       const auto methodID = methodID_writeDouble();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_writeBytes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "writeBytes", "method_52975", "writeBytes", "writeBytes"), "(Lio/netty/buffer/ByteBuf;)Lvw;");
    }

    static jobject writeBytes(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_writeBytes();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__writeBytes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "writeBytes", "method_52976", "writeBytes", "writeBytes"), "(Lio/netty/buffer/ByteBuf;I)Lvw;");
    }

    static jobject _writeBytes(const jobject& obj, const jobject& arg0, const jint& arg1) {
                
       const auto methodID = methodID__writeBytes();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID___writeBytes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "writeBytes", "method_52977", "writeBytes", "writeBytes"), "(Lio/netty/buffer/ByteBuf;II)Lvw;");
    }

    static jobject __writeBytes(const jobject& obj, const jobject& arg0, const jint& arg1, const jint& arg2) {
                
       const auto methodID = methodID___writeBytes();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID____writeBytes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "writeBytes", "method_52983", "writeBytes", "writeBytes"), "([B)Lvw;");
    }

    static jobject ___writeBytes(const jobject& obj, const jarray& arg0, const jbyte& arg1) {
                
       const auto methodID = methodID____writeBytes();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_____writeBytes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "writeBytes", "method_52980", "writeBytes", "writeBytes"), "([BII)Lvw;");
    }

    static jobject ____writeBytes(const jobject& obj, const jarray& arg0, const jbyte& arg1, const jint& arg2, const jint& arg3) {
                
       const auto methodID = methodID_____writeBytes();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID______writeBytes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "writeBytes", "method_52978", "writeBytes", "writeBytes"), "(Ljava/nio/ByteBuffer;)Lvw;");
    }

    static jobject _____writeBytes(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID______writeBytes();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_______writeBytes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("writeBytes", "writeBytes", "writeBytes", "writeBytes", "writeBytes"), "(Ljava/io/InputStream;I)I");
    }

    static jint ______writeBytes(const jobject& obj, const jobject& arg0, const jint& arg1) {
                
       const auto methodID = methodID_______writeBytes();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID________writeBytes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("writeBytes", "writeBytes", "writeBytes", "writeBytes", "writeBytes"), "(Ljava/nio/channels/ScatteringByteChannel;I)I");
    }

    static jint _______writeBytes(const jobject& obj, const jobject& arg0, const jint& arg1) {
                
       const auto methodID = methodID________writeBytes();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_________writeBytes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("writeBytes", "writeBytes", "writeBytes", "writeBytes", "writeBytes"), "(Ljava/nio/channels/FileChannel;JI)I");
    }

    static jint ________writeBytes(const jobject& obj, const jobject& arg0, const jlong& arg1, const jint& arg2) {
                
       const auto methodID = methodID_________writeBytes();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_writeZero() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("s", "writeZero", "method_53005", "writeZero", "writeZero"), "(I)Lvw;");
    }

    static jobject writeZero(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_writeZero();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_writeCharSequence() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("writeCharSequence", "writeCharSequence", "writeCharSequence", "writeCharSequence", "writeCharSequence"), "(Ljava/lang/CharSequence;Ljava/nio/charset/Charset;)I");
    }

    static jint writeCharSequence(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_writeCharSequence();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_indexOf() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("indexOf", "indexOf", "indexOf", "indexOf", "indexOf"), "(IIB)I");
    }

    static jint indexOf(const jobject& obj, const jint& arg0, const jint& arg1, const jbyte& arg2) {
                
       const auto methodID = methodID_indexOf();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_bytesBefore() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("bytesBefore", "bytesBefore", "bytesBefore", "bytesBefore", "bytesBefore"), "(B)I");
    }

    static jint bytesBefore(const jobject& obj, const jbyte& arg0) {
                
       const auto methodID = methodID_bytesBefore();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__bytesBefore() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("bytesBefore", "bytesBefore", "bytesBefore", "bytesBefore", "bytesBefore"), "(IB)I");
    }

    static jint _bytesBefore(const jobject& obj, const jint& arg0, const jbyte& arg1) {
                
       const auto methodID = methodID__bytesBefore();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID___bytesBefore() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("bytesBefore", "bytesBefore", "bytesBefore", "bytesBefore", "bytesBefore"), "(IIB)I");
    }

    static jint __bytesBefore(const jobject& obj, const jint& arg0, const jint& arg1, const jbyte& arg2) {
                
       const auto methodID = methodID___bytesBefore();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_forEachByte() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("forEachByte", "forEachByte", "forEachByte", "forEachByte", "forEachByte"), "(Lio/netty/util/ByteProcessor;)I");
    }

    static jint forEachByte(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_forEachByte();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__forEachByte() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("forEachByte", "forEachByte", "forEachByte", "forEachByte", "forEachByte"), "(IILio/netty/util/ByteProcessor;)I");
    }

    static jint _forEachByte(const jobject& obj, const jint& arg0, const jint& arg1, const jobject& arg2) {
                
       const auto methodID = methodID__forEachByte();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_forEachByteDesc() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("forEachByteDesc", "forEachByteDesc", "forEachByteDesc", "forEachByteDesc", "forEachByteDesc"), "(Lio/netty/util/ByteProcessor;)I");
    }

    static jint forEachByteDesc(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_forEachByteDesc();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__forEachByteDesc() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("forEachByteDesc", "forEachByteDesc", "forEachByteDesc", "forEachByteDesc", "forEachByteDesc"), "(IILio/netty/util/ByteProcessor;)I");
    }

    static jint _forEachByteDesc(const jobject& obj, const jint& arg0, const jint& arg1, const jobject& arg2) {
                
       const auto methodID = methodID__forEachByteDesc();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_copy() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("copy", "copy", "", "", "copy"), "()Lio/netty/buffer/ByteBuf;");
    }

    static jobject copy(const jobject& obj) {
                
       const auto methodID = methodID_copy();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__copy() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("copy", "copy", "copy", "copy", "copy"), "(II)Lio/netty/buffer/ByteBuf;");
    }

    static jobject _copy(const jobject& obj, const jint& arg0, const jint& arg1) {
                
       const auto methodID = methodID__copy();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_slice() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("slice", "slice", "", "", "slice"), "()Lio/netty/buffer/ByteBuf;");
    }

    static jobject slice(const jobject& obj) {
                
       const auto methodID = methodID_slice();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_retainedSlice() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("retainedSlice", "retainedSlice", "", "", "retainedSlice"), "()Lio/netty/buffer/ByteBuf;");
    }

    static jobject retainedSlice(const jobject& obj) {
                
       const auto methodID = methodID_retainedSlice();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__slice() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("slice", "slice", "slice", "slice", "slice"), "(II)Lio/netty/buffer/ByteBuf;");
    }

    static jobject _slice(const jobject& obj, const jint& arg0, const jint& arg1) {
                
       const auto methodID = methodID__slice();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__retainedSlice() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("retainedSlice", "retainedSlice", "retainedSlice", "retainedSlice", "retainedSlice"), "(II)Lio/netty/buffer/ByteBuf;");
    }

    static jobject _retainedSlice(const jobject& obj, const jint& arg0, const jint& arg1) {
                
       const auto methodID = methodID__retainedSlice();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_duplicate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("duplicate", "duplicate", "", "", "duplicate"), "()Lio/netty/buffer/ByteBuf;");
    }

    static jobject duplicate(const jobject& obj) {
                
       const auto methodID = methodID_duplicate();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_retainedDuplicate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("retainedDuplicate", "retainedDuplicate", "", "", "retainedDuplicate"), "()Lio/netty/buffer/ByteBuf;");
    }

    static jobject retainedDuplicate(const jobject& obj) {
                
       const auto methodID = methodID_retainedDuplicate();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_nioBufferCount() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("nioBufferCount", "nioBufferCount", "", "", "nioBufferCount"), "()I");
    }

    static jint nioBufferCount(const jobject& obj) {
                
       const auto methodID = methodID_nioBufferCount();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_nioBuffer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("nioBuffer", "nioBuffer", "", "", "nioBuffer"), "()Ljava/nio/ByteBuffer;");
    }

    static jobject nioBuffer(const jobject& obj) {
                
       const auto methodID = methodID_nioBuffer();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__nioBuffer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("nioBuffer", "nioBuffer", "nioBuffer", "nioBuffer", "nioBuffer"), "(II)Ljava/nio/ByteBuffer;");
    }

    static jobject _nioBuffer(const jobject& obj, const jint& arg0, const jint& arg1) {
                
       const auto methodID = methodID__nioBuffer();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_internalNioBuffer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("internalNioBuffer", "internalNioBuffer", "internalNioBuffer", "internalNioBuffer", "internalNioBuffer"), "(II)Ljava/nio/ByteBuffer;");
    }

    static jobject internalNioBuffer(const jobject& obj, const jint& arg0, const jint& arg1) {
                
       const auto methodID = methodID_internalNioBuffer();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_nioBuffers() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("nioBuffers", "nioBuffers", "", "", "nioBuffers"), "()[Ljava/nio/ByteBuffer;");
    }

    static jobject nioBuffers(const jobject& obj) {
                
       const auto methodID = methodID_nioBuffers();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__nioBuffers() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("nioBuffers", "nioBuffers", "nioBuffers", "nioBuffers", "nioBuffers"), "(II)[Ljava/nio/ByteBuffer;");
    }

    static jobject _nioBuffers(const jobject& obj, const jint& arg0, const jint& arg1) {
                
       const auto methodID = methodID__nioBuffers();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_hasArray() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("hasArray", "hasArray", "", "", "hasArray"), "()Z");
    }

    static jboolean hasArray(const jobject& obj) {
                
       const auto methodID = methodID_hasArray();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_array() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("array", "array", "", "", "array"), "()[B");
    }

    static jbyte array(const jobject& obj) {
                
       const auto methodID = methodID_array();
       return MinecraftSDK::env->CallByteMethod(obj, methodID);
    };
    
    static jmethodID methodID_arrayOffset() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("arrayOffset", "arrayOffset", "", "", "arrayOffset"), "()I");
    }

    static jint arrayOffset(const jobject& obj) {
                
       const auto methodID = methodID_arrayOffset();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_hasMemoryAddress() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("hasMemoryAddress", "hasMemoryAddress", "", "", "hasMemoryAddress"), "()Z");
    }

    static jboolean hasMemoryAddress(const jobject& obj) {
                
       const auto methodID = methodID_hasMemoryAddress();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_memoryAddress() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("memoryAddress", "memoryAddress", "", "", "memoryAddress"), "()J");
    }

    static jlong memoryAddress(const jobject& obj) {
                
       const auto methodID = methodID_memoryAddress();
       return MinecraftSDK::env->CallLongMethod(obj, methodID);
    };
    
    static jmethodID methodID_toString() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("toString", "toString", "toString", "toString", "toString"), "(Ljava/nio/charset/Charset;)Ljava/lang/String;");
    }

    static jobject toString(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_toString();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__toString() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("toString", "toString", "toString", "toString", "toString"), "(IILjava/nio/charset/Charset;)Ljava/lang/String;");
    }

    static jobject _toString(const jobject& obj, const jint& arg0, const jint& arg1, const jobject& arg2) {
                
       const auto methodID = methodID__toString();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_compareTo() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("compareTo", "compareTo", "compareTo", "compareTo", "compareTo"), "(Lio/netty/buffer/ByteBuf;)I");
    }

    static jint compareTo(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_compareTo();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_retain() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("t", "retain", "method_53007", "retain", "retain"), "(I)Lvw;");
    }

    static jobject retain(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_retain();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__retain() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("E", "retain", "method_52938", "retain", "retain"), "()Lvw;");
    }

    static jobject _retain(const jobject& obj) {
                
       const auto methodID = methodID__retain();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_touch() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("F", "touch", "method_52939", "touch", "touch"), "()Lvw;");
    }

    static jobject touch(const jobject& obj) {
                
       const auto methodID = methodID_touch();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__touch() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "touch", "method_52960", "touch", "touch"), "(Ljava/lang/Object;)Lvw;");
    }

    static jobject _touch(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__touch();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_refCnt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("refCnt", "refCnt", "", "", "refCnt"), "()I");
    }

    static jint refCnt(const jobject& obj) {
                
       const auto methodID = methodID_refCnt();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_release() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("release", "release", "", "", "release"), "()Z");
    }

    static jboolean release(const jobject& obj) {
                
       const auto methodID = methodID_release();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID__release() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("release", "release", "release", "release", "release"), "(I)Z");
    }

    static jboolean _release(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID__release();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_NETWORK_PACKETBYTEBUF_HPP