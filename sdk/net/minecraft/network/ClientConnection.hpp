// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_NETWORK_CLIENTCONNECTION_HPP
#define NET_MINECRAFT_NETWORK_CLIENTCONNECTION_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.network.ClientConnection
 * Remapped: vt
 */
namespace ClientConnection {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("vt", "net/minecraft/network/Connection", "net/minecraft/class_2535", "net/minecraft/network/ClientConnection", "net/minecraft/src/C_4961_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.network.ClientConnection#CURRENT_PACKET_COUNTER_WEIGHT
    [[maybe_unused]] static jfloat get_field_CURRENT_PACKET_COUNTER_WEIGHT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "AVERAGE_PACKETS_SMOOTHING", "field_33280", "CURRENT_PACKET_COUNTER_WEIGHT", "f_178299_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.network.ClientConnection#CURRENT_PACKET_COUNTER_WEIGHT
    [[maybe_unused]] static void set_field_CURRENT_PACKET_COUNTER_WEIGHT(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "AVERAGE_PACKETS_SMOOTHING", "field_33280", "CURRENT_PACKET_COUNTER_WEIGHT", "f_178299_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.network.ClientConnection#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "LOGGER", "field_11642", "LOGGER", "f_129465_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.network.ClientConnection#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "LOGGER", "field_11642", "LOGGER", "f_129465_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.network.ClientConnection#NETWORK_MARKER
    [[maybe_unused]] static jobject get_field_NETWORK_MARKER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "ROOT_MARKER", "field_11641", "NETWORK_MARKER", "f_129459_"), "Lorg/slf4j/Marker;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.network.ClientConnection#NETWORK_MARKER
    [[maybe_unused]] static void set_field_NETWORK_MARKER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "ROOT_MARKER", "field_11641", "NETWORK_MARKER", "f_129459_"), "Lorg/slf4j/Marker;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.network.ClientConnection#NETWORK_PACKETS_MARKER
    [[maybe_unused]] static jobject get_field_NETWORK_PACKETS_MARKER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "PACKET_MARKER", "field_11639", "NETWORK_PACKETS_MARKER", "f_129460_"), "Lorg/slf4j/Marker;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.network.ClientConnection#NETWORK_PACKETS_MARKER
    [[maybe_unused]] static void set_field_NETWORK_PACKETS_MARKER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "PACKET_MARKER", "field_11639", "NETWORK_PACKETS_MARKER", "f_129460_"), "Lorg/slf4j/Marker;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.network.ClientConnection#PACKET_RECEIVED_MARKER
    [[maybe_unused]] static jobject get_field_PACKET_RECEIVED_MARKER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "PACKET_RECEIVED_MARKER", "field_36379", "PACKET_RECEIVED_MARKER", "f_202554_"), "Lorg/slf4j/Marker;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.network.ClientConnection#PACKET_RECEIVED_MARKER
    [[maybe_unused]] static void set_field_PACKET_RECEIVED_MARKER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "PACKET_RECEIVED_MARKER", "field_36379", "PACKET_RECEIVED_MARKER", "f_202554_"), "Lorg/slf4j/Marker;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.network.ClientConnection#PACKET_SENT_MARKER
    [[maybe_unused]] static jobject get_field_PACKET_SENT_MARKER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "PACKET_SENT_MARKER", "field_36380", "PACKET_SENT_MARKER", "f_202555_"), "Lorg/slf4j/Marker;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.network.ClientConnection#PACKET_SENT_MARKER
    [[maybe_unused]] static void set_field_PACKET_SENT_MARKER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "PACKET_SENT_MARKER", "field_36380", "PACKET_SENT_MARKER", "f_202555_"), "Lorg/slf4j/Marker;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.network.ClientConnection#CLIENT_IO_GROUP
    [[maybe_unused]] static jobject get_field_CLIENT_IO_GROUP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "NETWORK_WORKER_GROUP", "field_11650", "CLIENT_IO_GROUP", "f_129462_"), "Ljava/util/function/Supplier;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.network.ClientConnection#CLIENT_IO_GROUP
    [[maybe_unused]] static void set_field_CLIENT_IO_GROUP(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "NETWORK_WORKER_GROUP", "field_11650", "CLIENT_IO_GROUP", "f_129462_"), "Ljava/util/function/Supplier;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.network.ClientConnection#EPOLL_CLIENT_IO_GROUP
    [[maybe_unused]] static jobject get_field_EPOLL_CLIENT_IO_GROUP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "NETWORK_EPOLL_WORKER_GROUP", "field_11657", "EPOLL_CLIENT_IO_GROUP", "f_129463_"), "Ljava/util/function/Supplier;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.network.ClientConnection#EPOLL_CLIENT_IO_GROUP
    [[maybe_unused]] static void set_field_EPOLL_CLIENT_IO_GROUP(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "NETWORK_EPOLL_WORKER_GROUP", "field_11657", "EPOLL_CLIENT_IO_GROUP", "f_129463_"), "Ljava/util/function/Supplier;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.network.ClientConnection#LOCAL_CLIENT_IO_GROUP
    [[maybe_unused]] static jobject get_field_LOCAL_CLIENT_IO_GROUP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "LOCAL_WORKER_GROUP", "field_11649", "LOCAL_CLIENT_IO_GROUP", "f_129464_"), "Ljava/util/function/Supplier;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.network.ClientConnection#LOCAL_CLIENT_IO_GROUP
    [[maybe_unused]] static void set_field_LOCAL_CLIENT_IO_GROUP(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "LOCAL_WORKER_GROUP", "field_11649", "LOCAL_CLIENT_IO_GROUP", "f_129464_"), "Ljava/util/function/Supplier;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.network.ClientConnection#C2S_HANDSHAKE_STATE
    [[maybe_unused]] static jobject get_field_C2S_HANDSHAKE_STATE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "INITIAL_PROTOCOL", "field_48514", "C2S_HANDSHAKE_STATE", "f_315400_"), "Lwh;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.network.ClientConnection#C2S_HANDSHAKE_STATE
    [[maybe_unused]] static void set_field_C2S_HANDSHAKE_STATE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "INITIAL_PROTOCOL", "field_48514", "C2S_HANDSHAKE_STATE", "f_315400_"), "Lwh;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.network.ClientConnection#side
    static jobject get_field_side(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "receiving", "field_11643", "side", "f_129466_"), "Lzh;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.network.ClientConnection#side
    static void set_field_side(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "receiving", "field_11643", "side", "f_129466_"), "Lzh;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.network.ClientConnection#duringLogin
    static jboolean get_field_duringLogin(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "sendLoginDisconnect", "field_48515", "duringLogin", "f_316930_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.network.ClientConnection#duringLogin
    static void set_field_duringLogin(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "sendLoginDisconnect", "field_48515", "duringLogin", "f_316930_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.network.ClientConnection#queuedTasks
    static jobject get_field_queuedTasks(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "pendingActions", "field_45668", "queuedTasks", "f_290881_"), "Ljava/util/Queue;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.network.ClientConnection#queuedTasks
    static void set_field_queuedTasks(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "pendingActions", "field_45668", "queuedTasks", "f_290881_"), "Ljava/util/Queue;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.network.ClientConnection#channel
    static jobject get_field_channel(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "channel", "field_11651", "channel", "f_129468_"), "Lio/netty/channel/Channel;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.network.ClientConnection#channel
    static void set_field_channel(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "channel", "field_11651", "channel", "f_129468_"), "Lio/netty/channel/Channel;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.network.ClientConnection#address
    static jobject get_field_address(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("o", "address", "field_11645", "address", "f_129469_"), "Ljava/net/SocketAddress;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.network.ClientConnection#address
    static void set_field_address(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("o", "address", "field_11645", "address", "f_129469_"), "Ljava/net/SocketAddress;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.network.ClientConnection#prePlayStateListener
    static jobject get_field_prePlayStateListener(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("p", "disconnectListener", "field_45669", "prePlayStateListener", "f_290681_"), "Lwf;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.network.ClientConnection#prePlayStateListener
    static void set_field_prePlayStateListener(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("p", "disconnectListener", "field_45669", "prePlayStateListener", "f_290681_"), "Lwf;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.network.ClientConnection#packetListener
    static jobject get_field_packetListener(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("q", "packetListener", "field_11652", "packetListener", "f_129470_"), "Lwf;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.network.ClientConnection#packetListener
    static void set_field_packetListener(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("q", "packetListener", "field_11652", "packetListener", "f_129470_"), "Lwf;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.network.ClientConnection#disconnectionInfo
    static jobject get_field_disconnectionInfo(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("r", "disconnectionDetails", "field_52180", "disconnectionInfo", "f_337253_"), "Lvv;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.network.ClientConnection#disconnectionInfo
    static void set_field_disconnectionInfo(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("r", "disconnectionDetails", "field_52180", "disconnectionInfo", "f_337253_"), "Lvv;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.network.ClientConnection#encrypted
    static jboolean get_field_encrypted(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("s", "encrypted", "field_11647", "encrypted", "f_129472_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.network.ClientConnection#encrypted
    static void set_field_encrypted(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("s", "encrypted", "field_11647", "encrypted", "f_129472_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.network.ClientConnection#disconnected
    static jboolean get_field_disconnected(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("t", "disconnectionHandled", "field_11646", "disconnected", "f_129473_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.network.ClientConnection#disconnected
    static void set_field_disconnected(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("t", "disconnectionHandled", "field_11646", "disconnected", "f_129473_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.network.ClientConnection#packetsReceivedCounter
    static jint get_field_packetsReceivedCounter(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("u", "receivedPackets", "field_11658", "packetsReceivedCounter", "f_129474_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.network.ClientConnection#packetsReceivedCounter
    static void set_field_packetsReceivedCounter(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("u", "receivedPackets", "field_11658", "packetsReceivedCounter", "f_129474_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.network.ClientConnection#packetsSentCounter
    static jint get_field_packetsSentCounter(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("v", "sentPackets", "field_11656", "packetsSentCounter", "f_129475_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.network.ClientConnection#packetsSentCounter
    static void set_field_packetsSentCounter(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("v", "sentPackets", "field_11656", "packetsSentCounter", "f_129475_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.network.ClientConnection#averagePacketsReceived
    static jfloat get_field_averagePacketsReceived(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("w", "averageReceivedPackets", "field_11654", "averagePacketsReceived", "f_129476_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.network.ClientConnection#averagePacketsReceived
    static void set_field_averagePacketsReceived(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("w", "averageReceivedPackets", "field_11654", "averagePacketsReceived", "f_129476_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.network.ClientConnection#averagePacketsSent
    static jfloat get_field_averagePacketsSent(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("x", "averageSentPackets", "field_11653", "averagePacketsSent", "f_129477_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.network.ClientConnection#averagePacketsSent
    static void set_field_averagePacketsSent(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("x", "averageSentPackets", "field_11653", "averagePacketsSent", "f_129477_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.network.ClientConnection#ticks
    static jint get_field_ticks(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("y", "tickCount", "field_11655", "ticks", "f_129478_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.network.ClientConnection#ticks
    static void set_field_ticks(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("y", "tickCount", "field_11655", "ticks", "f_129478_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.network.ClientConnection#errored
    static jboolean get_field_errored(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("z", "handlingFault", "field_11640", "errored", "f_129479_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.network.ClientConnection#errored
    static void set_field_errored(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("z", "handlingFault", "field_11640", "errored", "f_129479_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.network.ClientConnection#pendingDisconnectionInfo
    static jobject get_field_pendingDisconnectionInfo(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("A", "delayedDisconnect", "field_44972", "pendingDisconnectionInfo", "f_290021_"), "Lvv;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.network.ClientConnection#pendingDisconnectionInfo
    static void set_field_pendingDisconnectionInfo(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("A", "delayedDisconnect", "field_44972", "pendingDisconnectionInfo", "f_290021_"), "Lvv;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.network.ClientConnection#packetSizeLogger
    static jobject get_field_packetSizeLogger(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("B", "bandwidthDebugMonitor", "field_45955", "packetSizeLogger", "f_291520_"), "Lvm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.network.ClientConnection#packetSizeLogger
    static void set_field_packetSizeLogger(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("B", "bandwidthDebugMonitor", "field_45955", "packetSizeLogger", "f_291520_"), "Lvm;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_channelActive() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("channelActive", "channelActive", "channelActive", "channelActive", "channelActive"), "(Lio/netty/channel/ChannelHandlerContext;)V");
    }

    static void channelActive(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_channelActive();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_channelInactive() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("channelInactive", "channelInactive", "channelInactive", "channelInactive", "channelInactive"), "(Lio/netty/channel/ChannelHandlerContext;)V");
    }

    static void channelInactive(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_channelInactive();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_exceptionCaught() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("exceptionCaught", "exceptionCaught", "exceptionCaught", "exceptionCaught", "exceptionCaught"), "(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Throwable;)V");
    }

    static void exceptionCaught(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_exceptionCaught();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_channelRead0() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "channelRead0", "method_10770", "channelRead0", "channelRead0"), "(Lio/netty/channel/ChannelHandlerContext;Lzg;)V");
    }

    static void channelRead0(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_channelRead0();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_handlePacket() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "genericsFtw", "method_10759", "handlePacket", "m_129517_"), "(Lzg;Lwf;)V");
    }

    static void handlePacket(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_handlePacket();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_setPacketListener() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "validateListener", "method_56332", "setPacketListener", "m_318737_"), "(Lwh;Lwf;)V");
    }

    static void setPacketListener(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_setPacketListener();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_syncUninterruptibly() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "syncAfterConfigurationChange", "method_59851", "syncUninterruptibly", "m_319552_"), "(Lio/netty/channel/ChannelFuture;)V");
    }

    static void syncUninterruptibly(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_syncUninterruptibly();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_transitionInbound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setupInboundProtocol", "method_56330", "transitionInbound", "m_324855_"), "(Lwh;Lwf;)V");
    }

    static void transitionInbound(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_transitionInbound();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_transitionOutbound() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setupOutboundProtocol", "method_56329", "transitionOutbound", "m_319763_"), "(Lwh;)V");
    }

    static void transitionOutbound(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_transitionOutbound();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setInitialPacketListener() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setListenerForServerboundHandshake", "method_52912", "setInitialPacketListener", "m_294587_"), "(Lwf;)V");
    }

    static void setInitialPacketListener(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setInitialPacketListener();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_connect() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "initiateServerboundStatusConnection", "method_52903", "connect", "m_292894_"), "(Ljava/lang/String;ILajo;)V");
    }

    static void connect(const jobject& obj, const jobject& arg0, const jint& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_connect();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID__connect() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "initiateServerboundPlayConnection", "method_52902", "connect", "m_295889_"), "(Ljava/lang/String;ILaio;)V");
    }

    static void _connect(const jobject& obj, const jobject& arg0, const jint& arg1, const jobject& arg2) {
                
       const auto methodID = methodID__connect();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID___connect() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "initiateServerboundPlayConnection", "method_56326", "connect", "m_321635_"), "(Ljava/lang/String;ILwh;Lwh;Lvq;Z)V");
    }

    static void __connect(const jobject& obj, const jobject& arg0, const jint& arg1, const jobject& arg2, const jobject& arg3, const jobject& arg4, const jboolean& arg5) {
                
       const auto methodID = methodID___connect();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5);
    };
    
    static jmethodID methodID____connect() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "initiateServerboundConnection", "method_52904", "connect", "m_295796_"), "(Ljava/lang/String;ILwh;Lwh;Lvq;Laii;)V");
    }

    static void ___connect(const jobject& obj, const jobject& arg0, const jint& arg1, const jobject& arg2, const jobject& arg3, const jobject& arg4, const jobject& arg5) {
                
       const auto methodID = methodID____connect();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5);
    };
    
    static jmethodID methodID_send() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "send", "method_10743", "send", "m_129512_"), "(Lzg;)V");
    }

    static void send(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_send();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__send() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "send", "method_10752", "send", "m_243124_"), "(Lzg;Lwg;)V");
    }

    static void _send(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID__send();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID___send() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "send", "method_52906", "send", "m_294750_"), "(Lzg;Lwg;Z)V");
    }

    static void __send(const jobject& obj, const jobject& arg0, const jobject& arg1, const jboolean& arg2) {
                
       const auto methodID = methodID___send();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_submit() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "runOnceConnected", "method_52905", "submit", "m_295864_"), "(Ljava/util/function/Consumer;)V");
    }

    static void submit(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_submit();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_sendImmediately() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "sendPacket", "method_10764", "sendImmediately", "m_129520_"), "(Lzg;Lwg;Z)V");
    }

    static void sendImmediately(const jobject& obj, const jobject& arg0, const jobject& arg1, const jboolean& arg2) {
                
       const auto methodID = methodID_sendImmediately();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_sendInternal() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "doSendPacket", "method_36942", "sendInternal", "m_243087_"), "(Lzg;Lwg;Z)V");
    }

    static void sendInternal(const jobject& obj, const jobject& arg0, const jobject& arg1, const jboolean& arg2) {
                
       const auto methodID = methodID_sendInternal();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_flush() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "flushChannel", "method_52915", "flush", "m_295610_"), "()V");
    }

    static void flush(const jobject& obj) {
                
       const auto methodID = methodID_flush();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_flushInternal() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("q", "flush", "method_52918", "flushInternal", "m_294674_"), "()V");
    }

    static void flushInternal(const jobject& obj) {
                
       const auto methodID = methodID_flushInternal();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_handleQueuedTasks() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("r", "flushQueue", "method_10751", "handleQueuedTasks", "m_129544_"), "()V");
    }

    static void handleQueuedTasks(const jobject& obj) {
                
       const auto methodID = methodID_handleQueuedTasks();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_tick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "tick", "method_10754", "tick", "m_129483_"), "()V");
    }

    static void tick(const jobject& obj) {
                
       const auto methodID = methodID_tick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_updateStats() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "tickSecond", "method_30615", "updateStats", "m_7073_"), "()V");
    }

    static void updateStats(const jobject& obj) {
                
       const auto methodID = methodID_updateStats();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getAddress() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getRemoteAddress", "method_10755", "getAddress", "m_129523_"), "()Ljava/net/SocketAddress;");
    }

    static jobject getAddress(const jobject& obj) {
                
       const auto methodID = methodID_getAddress();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getAddressAsString() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getLoggableAddress", "method_52909", "getAddressAsString", "m_295656_"), "(Z)Ljava/lang/String;");
    }

    static jobject getAddressAsString(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_getAddressAsString();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_disconnect() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "disconnect", "method_10747", "disconnect", "m_129507_"), "(Lwz;)V");
    }

    static void disconnect(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_disconnect();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__disconnect() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "disconnect", "method_60924", "disconnect", "m_339805_"), "(Lvv;)V");
    }

    static void _disconnect(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__disconnect();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isLocal() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "isMemoryConnection", "method_10756", "isLocal", "m_129531_"), "()Z");
    }

    static jboolean isLocal(const jobject& obj) {
                
       const auto methodID = methodID_isLocal();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getSide() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "getReceiving", "method_36121", "getSide", "m_178313_"), "()Lzh;");
    }

    static jobject getSide(const jobject& obj) {
                
       const auto methodID = methodID_getSide();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getOppositeSide() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "getSending", "method_36122", "getOppositeSide", "m_178314_"), "()Lzh;");
    }

    static jobject getOppositeSide(const jobject& obj) {
                
       const auto methodID = methodID_getOppositeSide();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_____connect() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "connectToServer", "method_10753", "connect", "m_178300_"), "(Ljava/net/InetSocketAddress;ZLblr;)Lvt;");
    }

    static jobject ____connect(const jobject& arg0, const jboolean& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_____connect();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID______connect() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "connect", "method_52271", "connect", "m_290025_"), "(Ljava/net/InetSocketAddress;ZLvt;)Lio/netty/channel/ChannelFuture;");
    }

    static jobject _____connect(const jobject& arg0, const jboolean& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID______connect();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_getOutboundHandlerName() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "outboundHandlerName", "method_56333", "getOutboundHandlerName", "m_323525_"), "(Z)Ljava/lang/String;");
    }

    static jobject getOutboundHandlerName(const jboolean& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getOutboundHandlerName();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getInboundHandlerName() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "inboundHandlerName", "method_56334", "getInboundHandlerName", "m_323969_"), "(Z)Ljava/lang/String;");
    }

    static jobject getInboundHandlerName(const jboolean& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getInboundHandlerName();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_addFlowControlHandler() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "configurePacketHandler", "method_53859", "addFlowControlHandler", "m_295611_"), "(Lio/netty/channel/ChannelPipeline;)V");
    }

    static void addFlowControlHandler(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_addFlowControlHandler();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_addHandlers() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "configureSerialization", "method_48311", "addHandlers", "m_264299_"), "(Lio/netty/channel/ChannelPipeline;Lzh;ZLvm;)V");
    }

    static void addHandlers(const jobject& arg0, const jobject& arg1, const jboolean& arg2, const jobject& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_addHandlers();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_getPrepender() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("d", "createFrameEncoder", "method_59853", "getPrepender", "m_322880_"), "(Z)Lio/netty/channel/ChannelOutboundHandler;");
    }

    static jobject getPrepender(const jboolean& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getPrepender();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getSplitter() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "createFrameDecoder", "method_59852", "getSplitter", "m_320433_"), "(Lvm;Z)Lio/netty/channel/ChannelInboundHandler;");
    }

    static jobject getSplitter(const jobject& arg0, const jboolean& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_getSplitter();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_addLocalValidator() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "configureInMemoryPipeline", "method_52911", "addLocalValidator", "m_294700_"), "(Lio/netty/channel/ChannelPipeline;Lzh;)V");
    }

    static void addLocalValidator(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_addLocalValidator();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_connectLocal() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "connectToLocalServer", "method_10769", "connectLocal", "m_129493_"), "(Ljava/net/SocketAddress;)Lvt;");
    }

    static jobject connectLocal(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_connectLocal();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_setupEncryption() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setEncryptionKey", "method_10746", "setupEncryption", "m_129495_"), "(Ljavax/crypto/Cipher;Ljavax/crypto/Cipher;)V");
    }

    static void setupEncryption(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_setupEncryption();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_isEncrypted() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "isEncrypted", "method_10771", "isEncrypted", "m_129535_"), "()Z");
    }

    static jboolean isEncrypted(const jobject& obj) {
                
       const auto methodID = methodID_isEncrypted();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isOpen() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("i", "isConnected", "method_10758", "isOpen", "m_129536_"), "()Z");
    }

    static jboolean isOpen(const jobject& obj) {
                
       const auto methodID = methodID_isOpen();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isChannelAbsent() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("j", "isConnecting", "method_10772", "isChannelAbsent", "m_129537_"), "()Z");
    }

    static jboolean isChannelAbsent(const jobject& obj) {
                
       const auto methodID = methodID_isChannelAbsent();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getPacketListener() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("k", "getPacketListener", "method_10744", "getPacketListener", "m_129538_"), "()Lwf;");
    }

    static jobject getPacketListener(const jobject& obj) {
                
       const auto methodID = methodID_getPacketListener();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_method_60926() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("l", "getDisconnectionDetails", "method_60926", "method_60926", "m_339542_"), "()Lvv;");
    }

    static jobject method_60926(const jobject& obj) {
                
       const auto methodID = methodID_method_60926();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_tryDisableAutoRead() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("m", "setReadOnly", "method_10757", "tryDisableAutoRead", "m_129540_"), "()V");
    }

    static void tryDisableAutoRead(const jobject& obj) {
                
       const auto methodID = methodID_tryDisableAutoRead();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_setCompressionThreshold() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setupCompression", "method_10760", "setCompressionThreshold", "m_129484_"), "(IZ)V");
    }

    static void setCompressionThreshold(const jobject& obj, const jint& arg0, const jboolean& arg1) {
                
       const auto methodID = methodID_setCompressionThreshold();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_handleDisconnection() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("n", "handleDisconnection", "method_10768", "handleDisconnection", "m_129541_"), "()V");
    }

    static void handleDisconnection(const jobject& obj) {
                
       const auto methodID = methodID_handleDisconnection();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getAveragePacketsReceived() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("o", "getAverageReceivedPackets", "method_10762", "getAveragePacketsReceived", "m_129542_"), "()F");
    }

    static jfloat getAveragePacketsReceived(const jobject& obj) {
                
       const auto methodID = methodID_getAveragePacketsReceived();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID_getAveragePacketsSent() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("p", "getAverageSentPackets", "method_10745", "getAveragePacketsSent", "m_129543_"), "()F");
    }

    static jfloat getAveragePacketsSent(const jobject& obj) {
                
       const auto methodID = methodID_getAveragePacketsSent();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID_resetPacketSizeLog() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setBandwidthLogger", "method_53505", "resetPacketSizeLog", "m_292855_"), "(Lblr;)V");
    }

    static void resetPacketSizeLog(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_resetPacketSizeLog();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_NETWORK_CLIENTCONNECTION_HPP