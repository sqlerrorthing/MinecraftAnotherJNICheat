// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_NETWORK_ENCRYPTION_PACKETENCRYPTIONMANAGER_HPP
#define NET_MINECRAFT_NETWORK_ENCRYPTION_PACKETENCRYPTIONMANAGER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.network.encryption.PacketEncryptionManager
 * Remapped: vn
 */
namespace PacketEncryptionManager {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("vn", "net/minecraft/network/CipherBase", "net/minecraft/class_2524", "net/minecraft/network/encryption/PacketEncryptionManager", "net/minecraft/src/C_4955_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.network.encryption.PacketEncryptionManager#cipher
    static jobject get_field_cipher(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "cipher", "field_11612", "cipher", "f_129399_"), "Ljavax/crypto/Cipher;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.network.encryption.PacketEncryptionManager#cipher
    static void set_field_cipher(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "cipher", "field_11612", "cipher", "f_129399_"), "Ljavax/crypto/Cipher;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.network.encryption.PacketEncryptionManager#conversionBuffer
    static jbyte get_field_conversionBuffer(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "heapIn", "field_11613", "conversionBuffer", "f_129400_"), "[B");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetByteField(obj, fieldID);
    };

    // setter for static private field net.minecraft.network.encryption.PacketEncryptionManager#conversionBuffer
    static void set_field_conversionBuffer(const jobject &obj, const jbyte &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "heapIn", "field_11613", "conversionBuffer", "f_129400_"), "[B");
        return MinecraftSDK::env->SetByteField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.network.encryption.PacketEncryptionManager#encryptionBuffer
    static jbyte get_field_encryptionBuffer(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "heapOut", "field_11614", "encryptionBuffer", "f_129401_"), "[B");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetByteField(obj, fieldID);
    };

    // setter for static private field net.minecraft.network.encryption.PacketEncryptionManager#encryptionBuffer
    static void set_field_encryptionBuffer(const jobject &obj, const jbyte &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "heapOut", "field_11614", "encryptionBuffer", "f_129401_"), "[B");
        return MinecraftSDK::env->SetByteField(obj, fieldID, value);
    };

    static jmethodID methodID_toByteArray() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "bufToByte", "method_10733", "toByteArray", "m_129404_"), "(Lio/netty/buffer/ByteBuf;)[B");
    }

    static jbyte toByteArray(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_toByteArray();
       return MinecraftSDK::env->CallByteMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_decrypt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "decipher", "method_10734", "decrypt", "m_129409_"), "(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;)Lio/netty/buffer/ByteBuf;");
    }

    static jobject decrypt(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_decrypt();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_encrypt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "encipher", "method_10732", "encrypt", "m_129406_"), "(Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)V");
    }

    static void encrypt(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_encrypt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_NETWORK_ENCRYPTION_PACKETENCRYPTIONMANAGER_HPP