// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_NETWORK_ENCRYPTION_SIGNATUREVERIFIER_HPP
#define NET_MINECRAFT_NETWORK_ENCRYPTION_SIGNATUREVERIFIER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.network.encryption.SignatureVerifier
 * Remapped: azb
 */
namespace SignatureVerifier {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("azb", "net/minecraft/util/SignatureValidator", "net/minecraft/class_7500", "net/minecraft/network/encryption/SignatureVerifier", "net/minecraft/src/C_212977_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.network.encryption.SignatureVerifier#NOOP
    [[maybe_unused]] static jobject get_field_NOOP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "NO_VALIDATION", "field_39397", "NOOP", "f_216348_"), "Lazb;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.network.encryption.SignatureVerifier#NOOP
    [[maybe_unused]] static void set_field_NOOP(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "NO_VALIDATION", "field_39397", "NOOP", "f_216348_"), "Lazb;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.network.encryption.SignatureVerifier#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "LOGGER", "field_39398", "LOGGER", "f_216349_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.network.encryption.SignatureVerifier#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "LOGGER", "field_39398", "LOGGER", "f_216349_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_validate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("validate", "validate", "validate", "validate", "m_216378_"), "(Laza;[B)Z");
    }

    static jboolean validate(const jobject& obj, const jobject& arg0, const jarray& arg1, const jbyte& arg2) {
                
       const auto methodID = methodID_validate();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID__validate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "validate", "method_44177", "validate", "m_216375_"), "([B[B)Z");
    }

    static jboolean _validate(const jobject& obj, const jarray& arg0, const jbyte& arg1, const jarray& arg2, const jbyte& arg3) {
                
       const auto methodID = methodID__validate();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_verify() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "verifySignature", "method_44171", "verify", "m_216354_"), "(Laza;[BLjava/security/Signature;)Z");
    }

    static jboolean verify(const jobject& arg0, const jarray& arg1, const jbyte& arg2, const jobject& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_verify();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_create() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "from", "method_44175", "create", "m_216369_"), "(Ljava/security/PublicKey;Ljava/lang/String;)Lazb;");
    }

    static jobject create(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_create();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__create() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "from", "method_44172", "create", "m_284488_"), "(Lcom/mojang/authlib/yggdrasil/ServicesKeySet;Lcom/mojang/authlib/yggdrasil/ServicesKeyType;)Lazb;");
    }

    static jobject _create(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID__create();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_NETWORK_ENCRYPTION_SIGNATUREVERIFIER_HPP