// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_NETWORK_ENCRYPTION_PUBLICPLAYERSESSION_HPP
#define NET_MINECRAFT_NETWORK_ENCRYPTION_PUBLICPLAYERSESSION_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.network.encryption.PublicPlayerSession
 * Remapped: xq
 */
namespace PublicPlayerSession {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("xq", "net/minecraft/network/chat/RemoteChatSession", "net/minecraft/class_7822", "net/minecraft/network/encryption/PublicPlayerSession", "net/minecraft/src/C_243633_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.network.encryption.PublicPlayerSession#sessionId
    static jobject get_field_sessionId(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "sessionId", "comp_1085", "sessionId", "f_244448_"), "Ljava/util/UUID;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.network.encryption.PublicPlayerSession#sessionId
    static void set_field_sessionId(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "sessionId", "comp_1085", "sessionId", "f_244448_"), "Ljava/util/UUID;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.network.encryption.PublicPlayerSession#publicKeyData
    static jobject get_field_publicKeyData(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "profilePublicKey", "comp_1086", "publicKeyData", "f_243855_"), "Lcna;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.network.encryption.PublicPlayerSession#publicKeyData
    static void set_field_publicKeyData(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "profilePublicKey", "comp_1086", "publicKeyData", "f_243855_"), "Lcna;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_createVerifier() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "createMessageValidator", "method_46296", "createVerifier", "m_245949_"), "(Ljava/time/Duration;)Lxv;");
    }

    static jobject createVerifier(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_createVerifier();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_createUnpacker() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "createMessageDecoder", "method_46297", "createUnpacker", "m_245959_"), "(Ljava/util/UUID;)Lxt$b;");
    }

    static jobject createUnpacker(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_createUnpacker();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_toSerialized() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "asData", "method_46298", "toSerialized", "m_245986_"), "()Lxq$a;");
    }

    static jobject toSerialized(const jobject& obj) {
                
       const auto methodID = methodID_toSerialized();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_isKeyExpired() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "hasExpired", "method_51466", "isKeyExpired", "m_280521_"), "()Z");
    }

    static jboolean isKeyExpired(const jobject& obj) {
                
       const auto methodID = methodID_isKeyExpired();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID__sessionId() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "sessionId", "comp_1085", "sessionId", "f_244448_"), "()Ljava/util/UUID;");
    }

    static jobject _sessionId(const jobject& obj) {
                
       const auto methodID = methodID__sessionId();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__publicKeyData() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "profilePublicKey", "comp_1086", "publicKeyData", "f_243855_"), "()Lcna;");
    }

    static jobject _publicKeyData(const jobject& obj) {
                
       const auto methodID = methodID__publicKeyData();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_NETWORK_ENCRYPTION_PUBLICPLAYERSESSION_HPP