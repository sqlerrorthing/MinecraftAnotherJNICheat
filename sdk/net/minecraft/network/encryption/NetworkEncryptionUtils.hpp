// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_NETWORK_ENCRYPTION_NETWORKENCRYPTIONUTILS_HPP
#define NET_MINECRAFT_NETWORK_ENCRYPTION_NETWORKENCRYPTIONUTILS_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.network.encryption.NetworkEncryptionUtils
 * Remapped: axl
 */
namespace NetworkEncryptionUtils {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("axl", "net/minecraft/util/Crypt", "net/minecraft/class_3515", "net/minecraft/network/encryption/NetworkEncryptionUtils", "net/minecraft/src/C_166_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.network.encryption.NetworkEncryptionUtils#AES
    [[maybe_unused]] static jobject get_field_AES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "SYMMETRIC_ALGORITHM", "field_29830", "AES", "f_144611_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.network.encryption.NetworkEncryptionUtils#AES
    [[maybe_unused]] static void set_field_AES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "SYMMETRIC_ALGORITHM", "field_29830", "AES", "f_144611_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.network.encryption.NetworkEncryptionUtils#AES_KEY_LENGTH
    [[maybe_unused]] static jint get_field_AES_KEY_LENGTH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "SYMMETRIC_BITS", "field_29831", "AES_KEY_LENGTH", "f_144612_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.network.encryption.NetworkEncryptionUtils#AES_KEY_LENGTH
    [[maybe_unused]] static void set_field_AES_KEY_LENGTH(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "SYMMETRIC_BITS", "field_29831", "AES_KEY_LENGTH", "f_144612_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.network.encryption.NetworkEncryptionUtils#RSA
    [[maybe_unused]] static jobject get_field_RSA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "ASYMMETRIC_ALGORITHM", "field_29832", "RSA", "f_144613_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.network.encryption.NetworkEncryptionUtils#RSA
    [[maybe_unused]] static void set_field_RSA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "ASYMMETRIC_ALGORITHM", "field_29832", "RSA", "f_144613_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.network.encryption.NetworkEncryptionUtils#RSA_KEY_LENGTH
    [[maybe_unused]] static jint get_field_RSA_KEY_LENGTH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "ASYMMETRIC_BITS", "field_29833", "RSA_KEY_LENGTH", "f_144614_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.network.encryption.NetworkEncryptionUtils#RSA_KEY_LENGTH
    [[maybe_unused]] static void set_field_RSA_KEY_LENGTH(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "ASYMMETRIC_BITS", "field_29833", "RSA_KEY_LENGTH", "f_144614_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.network.encryption.NetworkEncryptionUtils#ISO_8859_1
    [[maybe_unused]] static jobject get_field_ISO_8859_1() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "BYTE_ENCODING", "field_29834", "ISO_8859_1", "f_144615_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.network.encryption.NetworkEncryptionUtils#ISO_8859_1
    [[maybe_unused]] static void set_field_ISO_8859_1(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "BYTE_ENCODING", "field_29834", "ISO_8859_1", "f_144615_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.network.encryption.NetworkEncryptionUtils#SHA1
    [[maybe_unused]] static jobject get_field_SHA1() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "HASH_ALGORITHM", "field_29835", "SHA1", "f_144616_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.network.encryption.NetworkEncryptionUtils#SHA1
    [[maybe_unused]] static void set_field_SHA1(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "HASH_ALGORITHM", "field_29835", "SHA1", "f_144616_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.network.encryption.NetworkEncryptionUtils#SHA256_WITH_RSA
    [[maybe_unused]] static jobject get_field_SHA256_WITH_RSA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "SIGNING_ALGORITHM", "field_39109", "SHA256_WITH_RSA", "f_216059_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.network.encryption.NetworkEncryptionUtils#SHA256_WITH_RSA
    [[maybe_unused]] static void set_field_SHA256_WITH_RSA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "SIGNING_ALGORITHM", "field_39109", "SHA256_WITH_RSA", "f_216059_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.network.encryption.NetworkEncryptionUtils#SHA256_BITS
    [[maybe_unused]] static jint get_field_SHA256_BITS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "SIGNATURE_BYTES", "field_40111", "SHA256_BITS", "f_244257_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.network.encryption.NetworkEncryptionUtils#SHA256_BITS
    [[maybe_unused]] static void set_field_SHA256_BITS(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "SIGNATURE_BYTES", "field_40111", "SHA256_BITS", "f_244257_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.network.encryption.NetworkEncryptionUtils#RSA_PRIVATE_KEY_PREFIX
    [[maybe_unused]] static jobject get_field_RSA_PRIVATE_KEY_PREFIX() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "PEM_RSA_PRIVATE_KEY_HEADER", "field_39037", "RSA_PRIVATE_KEY_PREFIX", "f_216065_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.network.encryption.NetworkEncryptionUtils#RSA_PRIVATE_KEY_PREFIX
    [[maybe_unused]] static void set_field_RSA_PRIVATE_KEY_PREFIX(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "PEM_RSA_PRIVATE_KEY_HEADER", "field_39037", "RSA_PRIVATE_KEY_PREFIX", "f_216065_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.network.encryption.NetworkEncryptionUtils#RSA_PRIVATE_KEY_SUFFIX
    [[maybe_unused]] static jobject get_field_RSA_PRIVATE_KEY_SUFFIX() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "PEM_RSA_PRIVATE_KEY_FOOTER", "field_39038", "RSA_PRIVATE_KEY_SUFFIX", "f_216066_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.network.encryption.NetworkEncryptionUtils#RSA_PRIVATE_KEY_SUFFIX
    [[maybe_unused]] static void set_field_RSA_PRIVATE_KEY_SUFFIX(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "PEM_RSA_PRIVATE_KEY_FOOTER", "field_39038", "RSA_PRIVATE_KEY_SUFFIX", "f_216066_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.network.encryption.NetworkEncryptionUtils#RSA_PUBLIC_KEY_PREFIX
    [[maybe_unused]] static jobject get_field_RSA_PUBLIC_KEY_PREFIX() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "RSA_PUBLIC_KEY_HEADER", "field_39033", "RSA_PUBLIC_KEY_PREFIX", "f_216060_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.network.encryption.NetworkEncryptionUtils#RSA_PUBLIC_KEY_PREFIX
    [[maybe_unused]] static void set_field_RSA_PUBLIC_KEY_PREFIX(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "RSA_PUBLIC_KEY_HEADER", "field_39033", "RSA_PUBLIC_KEY_PREFIX", "f_216060_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.network.encryption.NetworkEncryptionUtils#RSA_PUBLIC_KEY_SUFFIX
    [[maybe_unused]] static jobject get_field_RSA_PUBLIC_KEY_SUFFIX() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "RSA_PUBLIC_KEY_FOOTER", "field_39039", "RSA_PUBLIC_KEY_SUFFIX", "f_216067_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.network.encryption.NetworkEncryptionUtils#RSA_PUBLIC_KEY_SUFFIX
    [[maybe_unused]] static void set_field_RSA_PUBLIC_KEY_SUFFIX(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "RSA_PUBLIC_KEY_FOOTER", "field_39039", "RSA_PUBLIC_KEY_SUFFIX", "f_216067_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.network.encryption.NetworkEncryptionUtils#LINEBREAK
    [[maybe_unused]] static jobject get_field_LINEBREAK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "MIME_LINE_SEPARATOR", "field_39034", "LINEBREAK", "f_216061_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.network.encryption.NetworkEncryptionUtils#LINEBREAK
    [[maybe_unused]] static void set_field_LINEBREAK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "MIME_LINE_SEPARATOR", "field_39034", "LINEBREAK", "f_216061_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.network.encryption.NetworkEncryptionUtils#BASE64_ENCODER
    [[maybe_unused]] static jobject get_field_BASE64_ENCODER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "MIME_ENCODER", "field_39272", "BASE64_ENCODER", "f_216062_"), "Ljava/util/Base64$Encoder;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.network.encryption.NetworkEncryptionUtils#BASE64_ENCODER
    [[maybe_unused]] static void set_field_BASE64_ENCODER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "MIME_ENCODER", "field_39272", "BASE64_ENCODER", "f_216062_"), "Ljava/util/Base64$Encoder;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.network.encryption.NetworkEncryptionUtils#RSA_PUBLIC_KEY_CODEC
    [[maybe_unused]] static jobject get_field_RSA_PUBLIC_KEY_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "PUBLIC_KEY_CODEC", "field_39035", "RSA_PUBLIC_KEY_CODEC", "f_216063_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.network.encryption.NetworkEncryptionUtils#RSA_PUBLIC_KEY_CODEC
    [[maybe_unused]] static void set_field_RSA_PUBLIC_KEY_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "PUBLIC_KEY_CODEC", "field_39035", "RSA_PUBLIC_KEY_CODEC", "f_216063_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.network.encryption.NetworkEncryptionUtils#RSA_PRIVATE_KEY_CODEC
    [[maybe_unused]] static jobject get_field_RSA_PRIVATE_KEY_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "PRIVATE_KEY_CODEC", "field_39036", "RSA_PRIVATE_KEY_CODEC", "f_216064_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.network.encryption.NetworkEncryptionUtils#RSA_PRIVATE_KEY_CODEC
    [[maybe_unused]] static void set_field_RSA_PRIVATE_KEY_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "PRIVATE_KEY_CODEC", "field_39036", "RSA_PRIVATE_KEY_CODEC", "f_216064_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_generateSecretKey() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "generateSecretKey", "method_15239", "generateSecretKey", "m_13578_"), "()Ljavax/crypto/SecretKey;");
    }

    static jobject generateSecretKey() {
       const auto clazz = self();
       const auto methodID = methodID_generateSecretKey();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_generateServerKeyPair() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "generateKeyPair", "method_15237", "generateServerKeyPair", "m_13604_"), "()Ljava/security/KeyPair;");
    }

    static jobject generateServerKeyPair() {
       const auto clazz = self();
       const auto methodID = methodID_generateServerKeyPair();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_computeServerId() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "digestData", "method_15240", "computeServerId", "m_13590_"), "(Ljava/lang/String;Ljava/security/PublicKey;Ljavax/crypto/SecretKey;)[B");
    }

    static jbyte computeServerId(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_computeServerId();
       return MinecraftSDK::env->CallStaticByteMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_hash() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "digestData", "method_15236", "hash", "m_13602_"), "([[B)[B");
    }

    static jbyte hash(const jarray& arg0, const jarray& arg1, const jbyte& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_hash();
       return MinecraftSDK::env->CallStaticByteMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_decodePem() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "rsaStringToKey", "method_43520", "decodePem", "m_216071_"), "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Laxl$a;)Ljava/security/Key;");
    }

    static jobject decodePem(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_decodePem();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_decodeRsaPrivateKeyPem() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "stringToPemRsaPrivateKey", "method_43519", "decodeRsaPrivateKeyPem", "m_216069_"), "(Ljava/lang/String;)Ljava/security/PrivateKey;");
    }

    static jobject decodeRsaPrivateKeyPem(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_decodeRsaPrivateKeyPem();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_decodeRsaPublicKeyPem() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "stringToRsaPublicKey", "method_43524", "decodeRsaPublicKeyPem", "m_216080_"), "(Ljava/lang/String;)Ljava/security/PublicKey;");
    }

    static jobject decodeRsaPublicKeyPem(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_decodeRsaPublicKeyPem();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_encodeRsaPublicKey() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "rsaPublicKeyToString", "method_43522", "encodeRsaPublicKey", "m_216078_"), "(Ljava/security/PublicKey;)Ljava/lang/String;");
    }

    static jobject encodeRsaPublicKey(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_encodeRsaPublicKey();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_encodeRsaPrivateKey() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "pemRsaPrivateKeyToString", "method_43521", "encodeRsaPrivateKey", "m_216076_"), "(Ljava/security/PrivateKey;)Ljava/lang/String;");
    }

    static jobject encodeRsaPrivateKey(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_encodeRsaPrivateKey();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_decodeEncodedRsaPrivateKey() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "byteToPrivateKey", "method_43525", "decodeEncodedRsaPrivateKey", "m_216082_"), "([B)Ljava/security/PrivateKey;");
    }

    static jobject decodeEncodedRsaPrivateKey(const jarray& arg0, const jbyte& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_decodeEncodedRsaPrivateKey();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_decodeEncodedRsaPublicKey() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "byteToPublicKey", "method_15242", "decodeEncodedRsaPublicKey", "m_13600_"), "([B)Ljava/security/PublicKey;");
    }

    static jobject decodeEncodedRsaPublicKey(const jarray& arg0, const jbyte& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_decodeEncodedRsaPublicKey();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_decryptSecretKey() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "decryptByteToSecretKey", "method_15234", "decryptSecretKey", "m_13597_"), "(Ljava/security/PrivateKey;[B)Ljavax/crypto/SecretKey;");
    }

    static jobject decryptSecretKey(const jobject& arg0, const jarray& arg1, const jbyte& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_decryptSecretKey();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_encrypt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "encryptUsingKey", "method_15238", "encrypt", "m_13594_"), "(Ljava/security/Key;[B)[B");
    }

    static jbyte encrypt(const jobject& arg0, const jarray& arg1, const jbyte& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_encrypt();
       return MinecraftSDK::env->CallStaticByteMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_decrypt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "decryptUsingKey", "method_15243", "decrypt", "m_13605_"), "(Ljava/security/Key;[B)[B");
    }

    static jbyte decrypt(const jobject& arg0, const jarray& arg1, const jbyte& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_decrypt();
       return MinecraftSDK::env->CallStaticByteMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_crypt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "cipherData", "method_15244", "crypt", "m_13586_"), "(ILjava/security/Key;[B)[B");
    }

    static jbyte crypt(const jint& arg0, const jobject& arg1, const jarray& arg2, const jbyte& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_crypt();
       return MinecraftSDK::env->CallStaticByteMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_createCipher() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "setupCipher", "method_15241", "createCipher", "m_13579_"), "(ILjava/lang/String;Ljava/security/Key;)Ljavax/crypto/Cipher;");
    }

    static jobject createCipher(const jint& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_createCipher();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_cipherFromKey() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getCipher", "method_15235", "cipherFromKey", "m_13583_"), "(ILjava/security/Key;)Ljavax/crypto/Cipher;");
    }

    static jobject cipherFromKey(const jint& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_cipherFromKey();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_NETWORK_ENCRYPTION_NETWORKENCRYPTIONUTILS_HPP