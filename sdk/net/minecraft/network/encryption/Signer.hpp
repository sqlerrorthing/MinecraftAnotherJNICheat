// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_NETWORK_ENCRYPTION_SIGNER_HPP
#define NET_MINECRAFT_NETWORK_ENCRYPTION_SIGNER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.network.encryption.Signer
 * Remapped: azc
 */
namespace Signer {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("azc", "net/minecraft/util/Signer", "net/minecraft/class_7501", "net/minecraft/network/encryption/Signer", "net/minecraft/src/C_212978_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.network.encryption.Signer#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LOGGER", "field_39399", "LOGGER", "f_216381_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.network.encryption.Signer#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LOGGER", "field_39399", "LOGGER", "f_216381_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_sign() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("sign", "sign", "sign", "sign", "m_216395_"), "(Laza;)[B");
    }

    static jbyte sign(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_sign();
       return MinecraftSDK::env->CallByteMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__sign() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "sign", "method_44180", "sign", "m_216390_"), "([B)[B");
    }

    static jbyte _sign(const jobject& obj, const jarray& arg0, const jbyte& arg1) {
                
       const auto methodID = methodID__sign();
       return MinecraftSDK::env->CallByteMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_create() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "from", "method_44179", "create", "m_216387_"), "(Ljava/security/PrivateKey;Ljava/lang/String;)Lazc;");
    }

    static jobject create(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_create();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_NETWORK_ENCRYPTION_SIGNER_HPP