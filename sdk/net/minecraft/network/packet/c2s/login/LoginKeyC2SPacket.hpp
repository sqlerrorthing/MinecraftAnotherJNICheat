// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_NETWORK_PACKET_C2S_LOGIN_LOGINKEYC2SPACKET_HPP
#define NET_MINECRAFT_NETWORK_PACKET_C2S_LOGIN_LOGINKEYC2SPACKET_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.network.packet.c2s.login.LoginKeyC2SPacket
 * Remapped: aiz
 */
namespace LoginKeyC2SPacket {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("aiz", "net/minecraft/network/protocol/login/ServerboundKeyPacket", "net/minecraft/class_2917", "net/minecraft/network/packet/c2s/login/LoginKeyC2SPacket", "net/minecraft/src/C_5212_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.network.packet.c2s.login.LoginKeyC2SPacket#CODEC
    [[maybe_unused]] static jobject get_field_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "STREAM_CODEC", "field_48251", "CODEC", "f_313962_"), "Lyx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.network.packet.c2s.login.LoginKeyC2SPacket#CODEC
    [[maybe_unused]] static void set_field_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "STREAM_CODEC", "field_48251", "CODEC", "f_313962_"), "Lyx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.network.packet.c2s.login.LoginKeyC2SPacket#encryptedSecretKey
    static jbyte get_field_encryptedSecretKey(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "keybytes", "field_13274", "encryptedSecretKey", "f_134852_"), "[B");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetByteField(obj, fieldID);
    };

    // setter for static private field net.minecraft.network.packet.c2s.login.LoginKeyC2SPacket#encryptedSecretKey
    static void set_field_encryptedSecretKey(const jobject &obj, const jbyte &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "keybytes", "field_13274", "encryptedSecretKey", "f_134852_"), "[B");
        return MinecraftSDK::env->SetByteField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.network.packet.c2s.login.LoginKeyC2SPacket#nonce
    static jbyte get_field_nonce(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "encryptedChallenge", "field_39089", "nonce", "f_252408_"), "[B");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetByteField(obj, fieldID);
    };

    // setter for static private field net.minecraft.network.packet.c2s.login.LoginKeyC2SPacket#nonce
    static void set_field_nonce(const jobject &obj, const jbyte &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "encryptedChallenge", "field_39089", "nonce", "f_252408_"), "[B");
        return MinecraftSDK::env->SetByteField(obj, fieldID, value);
    };

    static jmethodID methodID_write() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "write", "method_56021", "write", "m_134869_"), "(Lvw;)V");
    }

    static void write(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_write();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getPacketId() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "type", "method_55846", "getPacketId", "m_5779_"), "()Lzi;");
    }

    static jobject getPacketId(const jobject& obj) {
                
       const auto methodID = methodID_getPacketId();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_apply() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "handle", "method_12653", "apply", "m_5797_"), "(Laiw;)V");
    }

    static void apply(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_apply();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_decryptSecretKey() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getSecretKey", "method_12654", "decryptSecretKey", "m_134859_"), "(Ljava/security/PrivateKey;)Ljavax/crypto/SecretKey;");
    }

    static jobject decryptSecretKey(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_decryptSecretKey();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_verifySignedNonce() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "isChallengeValid", "method_43643", "verifySignedNonce", "m_253194_"), "([BLjava/security/PrivateKey;)Z");
    }

    static jboolean verifySignedNonce(const jobject& obj, const jarray& arg0, const jbyte& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_verifySignedNonce();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2);
    };
    
};

#endif // NET_MINECRAFT_NETWORK_PACKET_C2S_LOGIN_LOGINKEYC2SPACKET_HPP