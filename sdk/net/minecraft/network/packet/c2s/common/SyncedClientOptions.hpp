// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_NETWORK_PACKET_C2S_COMMON_SYNCEDCLIENTOPTIONS_HPP
#define NET_MINECRAFT_NETWORK_PACKET_C2S_COMMON_SYNCEDCLIENTOPTIONS_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.network.packet.c2s.common.SyncedClientOptions
 * Remapped: aqh
 */
namespace SyncedClientOptions {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("aqh", "net/minecraft/server/level/ClientInformation", "net/minecraft/class_8791", "net/minecraft/network/packet/c2s/common/SyncedClientOptions", "net/minecraft/src/C_290276_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.network.packet.c2s.common.SyncedClientOptions#language
    static jobject get_field_language(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "language", "comp_1951", "language", "f_290932_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.network.packet.c2s.common.SyncedClientOptions#language
    static void set_field_language(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "language", "comp_1951", "language", "f_290932_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.network.packet.c2s.common.SyncedClientOptions#viewDistance
    static jint get_field_viewDistance(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "viewDistance", "comp_1952", "viewDistance", "f_291199_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.network.packet.c2s.common.SyncedClientOptions#viewDistance
    static void set_field_viewDistance(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "viewDistance", "comp_1952", "viewDistance", "f_291199_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.network.packet.c2s.common.SyncedClientOptions#chatVisibility
    static jobject get_field_chatVisibility(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "chatVisibility", "comp_1953", "chatVisibility", "f_291339_"), "Lcmv;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.network.packet.c2s.common.SyncedClientOptions#chatVisibility
    static void set_field_chatVisibility(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "chatVisibility", "comp_1953", "chatVisibility", "f_291339_"), "Lcmv;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.network.packet.c2s.common.SyncedClientOptions#chatColorsEnabled
    static jboolean get_field_chatColorsEnabled(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "chatColors", "comp_1954", "chatColorsEnabled", "f_290356_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.network.packet.c2s.common.SyncedClientOptions#chatColorsEnabled
    static void set_field_chatColorsEnabled(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "chatColors", "comp_1954", "chatColorsEnabled", "f_290356_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.network.packet.c2s.common.SyncedClientOptions#playerModelParts
    static jint get_field_playerModelParts(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "modelCustomisation", "comp_1955", "playerModelParts", "f_290798_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.network.packet.c2s.common.SyncedClientOptions#playerModelParts
    static void set_field_playerModelParts(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "modelCustomisation", "comp_1955", "playerModelParts", "f_290798_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.network.packet.c2s.common.SyncedClientOptions#mainArm
    static jobject get_field_mainArm(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "mainHand", "comp_1956", "mainArm", "f_291270_"), "Lbtg;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.network.packet.c2s.common.SyncedClientOptions#mainArm
    static void set_field_mainArm(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "mainHand", "comp_1956", "mainArm", "f_291270_"), "Lbtg;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.network.packet.c2s.common.SyncedClientOptions#filtersText
    static jboolean get_field_filtersText(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "textFilteringEnabled", "comp_1957", "filtersText", "f_291351_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.network.packet.c2s.common.SyncedClientOptions#filtersText
    static void set_field_filtersText(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "textFilteringEnabled", "comp_1957", "filtersText", "f_291351_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.network.packet.c2s.common.SyncedClientOptions#allowsServerListing
    static jboolean get_field_allowsServerListing(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "allowsListing", "comp_1958", "allowsServerListing", "f_290665_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.network.packet.c2s.common.SyncedClientOptions#allowsServerListing
    static void set_field_allowsServerListing(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "allowsListing", "comp_1958", "allowsServerListing", "f_290665_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for static public field net.minecraft.network.packet.c2s.common.SyncedClientOptions#MAX_LANGUAGE_CODE_LENGTH
    [[maybe_unused]] static jint get_field_MAX_LANGUAGE_CODE_LENGTH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "MAX_LANGUAGE_LENGTH", "field_46155", "MAX_LANGUAGE_CODE_LENGTH", "f_291196_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.network.packet.c2s.common.SyncedClientOptions#MAX_LANGUAGE_CODE_LENGTH
    [[maybe_unused]] static void set_field_MAX_LANGUAGE_CODE_LENGTH(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "MAX_LANGUAGE_LENGTH", "field_46155", "MAX_LANGUAGE_CODE_LENGTH", "f_291196_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    static jmethodID methodID_write() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "write", "method_53822", "write", "m_293760_"), "(Lvw;)V");
    }

    static void write(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_write();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_createDefault() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "createDefault", "method_53821", "createDefault", "m_293662_"), "()Laqh;");
    }

    static jobject createDefault() {
       const auto clazz = self();
       const auto methodID = methodID_createDefault();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID__language() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "language", "comp_1951", "language", "f_290932_"), "()Ljava/lang/String;");
    }

    static jobject _language(const jobject& obj) {
                
       const auto methodID = methodID__language();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__viewDistance() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "viewDistance", "comp_1952", "viewDistance", "f_291199_"), "()I");
    }

    static jint _viewDistance(const jobject& obj) {
                
       const auto methodID = methodID__viewDistance();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID__chatVisibility() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "chatVisibility", "comp_1953", "chatVisibility", "f_291339_"), "()Lcmv;");
    }

    static jobject _chatVisibility(const jobject& obj) {
                
       const auto methodID = methodID__chatVisibility();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__chatColorsEnabled() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "chatColors", "comp_1954", "chatColorsEnabled", "f_290356_"), "()Z");
    }

    static jboolean _chatColorsEnabled(const jobject& obj) {
                
       const auto methodID = methodID__chatColorsEnabled();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID__playerModelParts() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "modelCustomisation", "comp_1955", "playerModelParts", "f_290798_"), "()I");
    }

    static jint _playerModelParts(const jobject& obj) {
                
       const auto methodID = methodID__playerModelParts();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID__mainArm() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "mainHand", "comp_1956", "mainArm", "f_291270_"), "()Lbtg;");
    }

    static jobject _mainArm(const jobject& obj) {
                
       const auto methodID = methodID__mainArm();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__filtersText() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "textFilteringEnabled", "comp_1957", "filtersText", "f_291351_"), "()Z");
    }

    static jboolean _filtersText(const jobject& obj) {
                
       const auto methodID = methodID__filtersText();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID__allowsServerListing() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("i", "allowsListing", "comp_1958", "allowsServerListing", "f_290665_"), "()Z");
    }

    static jboolean _allowsServerListing(const jobject& obj) {
                
       const auto methodID = methodID__allowsServerListing();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_NETWORK_PACKET_C2S_COMMON_SYNCEDCLIENTOPTIONS_HPP