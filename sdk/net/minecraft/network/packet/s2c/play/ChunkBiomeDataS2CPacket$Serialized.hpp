// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_NETWORK_PACKET_S2C_PLAY_CHUNKBIOMEDATAS2CPACKET$SERIALIZED_HPP
#define NET_MINECRAFT_NETWORK_PACKET_S2C_PLAY_CHUNKBIOMEDATAS2CPACKET$SERIALIZED_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.network.packet.s2c.play.ChunkBiomeDataS2CPacket$Serialized
 * Remapped: ack$a
 */
namespace ChunkBiomeDataS2CPacket$Serialized {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("ack$a", "net/minecraft/network/protocol/game/ClientboundChunksBiomesPacket$ChunkBiomeData", "net/minecraft/class_8212$class_8213", "net/minecraft/network/packet/s2c/play/ChunkBiomeDataS2CPacket$Serialized", "net/minecraft/src/C_273796_$C_273801_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.network.packet.s2c.play.ChunkBiomeDataS2CPacket$Serialized#pos
    static jobject get_field_pos(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "pos", "comp_1314", "pos", "f_273927_"), "Ldcd;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.network.packet.s2c.play.ChunkBiomeDataS2CPacket$Serialized#pos
    static void set_field_pos(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "pos", "comp_1314", "pos", "f_273927_"), "Ldcd;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.network.packet.s2c.play.ChunkBiomeDataS2CPacket$Serialized#buffer
    static jbyte get_field_buffer(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "buffer", "comp_1315", "buffer", "f_273848_"), "[B");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetByteField(obj, fieldID);
    };

    // setter for static private field net.minecraft.network.packet.s2c.play.ChunkBiomeDataS2CPacket$Serialized#buffer
    static void set_field_buffer(const jobject &obj, const jbyte &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "buffer", "comp_1315", "buffer", "f_273848_"), "[B");
        return MinecraftSDK::env->SetByteField(obj, fieldID, value);
    };

    static jmethodID methodID_getTotalPacketSize() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "calculateChunkSize", "method_49689", "getTotalPacketSize", "m_274587_"), "(Ldvi;)I");
    }

    static jint getTotalPacketSize(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getTotalPacketSize();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_toReadingBuf() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getReadBuffer", "method_49688", "toReadingBuf", "m_274543_"), "()Lvw;");
    }

    static jobject toReadingBuf(const jobject& obj) {
                
       const auto methodID = methodID_toReadingBuf();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_toWritingBuf() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getWriteBuffer", "method_49692", "toWritingBuf", "m_274523_"), "()Lio/netty/buffer/ByteBuf;");
    }

    static jobject toWritingBuf(const jobject& obj) {
                
       const auto methodID = methodID_toWritingBuf();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_write() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "extractChunkData", "method_49691", "write", "m_274308_"), "(Lvw;Ldvi;)V");
    }

    static void write(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_write();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__write() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "write", "method_49690", "write", "m_274304_"), "(Lvw;)V");
    }

    static void _write(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__write();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__pos() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "pos", "comp_1314", "pos", "f_273927_"), "()Ldcd;");
    }

    static jobject _pos(const jobject& obj) {
                
       const auto methodID = methodID__pos();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__buffer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "buffer", "comp_1315", "buffer", "f_273848_"), "()[B");
    }

    static jbyte _buffer(const jobject& obj) {
                
       const auto methodID = methodID__buffer();
       return MinecraftSDK::env->CallByteMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_NETWORK_PACKET_S2C_PLAY_CHUNKBIOMEDATAS2CPACKET$SERIALIZED_HPP