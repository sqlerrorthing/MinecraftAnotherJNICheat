// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_NETWORK_PACKET_S2C_PLAY_PLAYERABILITIESS2CPACKET_HPP
#define NET_MINECRAFT_NETWORK_PACKET_S2C_PLAY_PLAYERABILITIESS2CPACKET_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.network.packet.s2c.play.PlayerAbilitiesS2CPacket
 * Remapped: adu
 */
namespace PlayerAbilitiesS2CPacket {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("adu", "net/minecraft/network/protocol/game/ClientboundPlayerAbilitiesPacket", "net/minecraft/class_2696", "net/minecraft/network/packet/s2c/play/PlayerAbilitiesS2CPacket", "net/minecraft/src/C_5087_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.network.packet.s2c.play.PlayerAbilitiesS2CPacket#CODEC
    [[maybe_unused]] static jobject get_field_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "STREAM_CODEC", "field_47948", "CODEC", "f_315591_"), "Lyx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.network.packet.s2c.play.PlayerAbilitiesS2CPacket#CODEC
    [[maybe_unused]] static void set_field_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "STREAM_CODEC", "field_47948", "CODEC", "f_315591_"), "Lyx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.network.packet.s2c.play.PlayerAbilitiesS2CPacket#INVULNERABLE_MASK
    [[maybe_unused]] static jint get_field_INVULNERABLE_MASK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "FLAG_INVULNERABLE", "field_33336", "INVULNERABLE_MASK", "f_179028_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.network.packet.s2c.play.PlayerAbilitiesS2CPacket#INVULNERABLE_MASK
    [[maybe_unused]] static void set_field_INVULNERABLE_MASK(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "FLAG_INVULNERABLE", "field_33336", "INVULNERABLE_MASK", "f_179028_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.network.packet.s2c.play.PlayerAbilitiesS2CPacket#FLYING_MASK
    [[maybe_unused]] static jint get_field_FLYING_MASK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "FLAG_FLYING", "field_33337", "FLYING_MASK", "f_179029_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.network.packet.s2c.play.PlayerAbilitiesS2CPacket#FLYING_MASK
    [[maybe_unused]] static void set_field_FLYING_MASK(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "FLAG_FLYING", "field_33337", "FLYING_MASK", "f_179029_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.network.packet.s2c.play.PlayerAbilitiesS2CPacket#ALLOW_FLYING_MASK
    [[maybe_unused]] static jint get_field_ALLOW_FLYING_MASK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "FLAG_CAN_FLY", "field_33338", "ALLOW_FLYING_MASK", "f_179030_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.network.packet.s2c.play.PlayerAbilitiesS2CPacket#ALLOW_FLYING_MASK
    [[maybe_unused]] static void set_field_ALLOW_FLYING_MASK(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "FLAG_CAN_FLY", "field_33338", "ALLOW_FLYING_MASK", "f_179030_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.network.packet.s2c.play.PlayerAbilitiesS2CPacket#CREATIVE_MODE_MASK
    [[maybe_unused]] static jint get_field_CREATIVE_MODE_MASK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "FLAG_INSTABUILD", "field_33339", "CREATIVE_MODE_MASK", "f_179031_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.network.packet.s2c.play.PlayerAbilitiesS2CPacket#CREATIVE_MODE_MASK
    [[maybe_unused]] static void set_field_CREATIVE_MODE_MASK(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "FLAG_INSTABUILD", "field_33339", "CREATIVE_MODE_MASK", "f_179031_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.network.packet.s2c.play.PlayerAbilitiesS2CPacket#invulnerable
    static jboolean get_field_invulnerable(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "invulnerable", "field_12339", "invulnerable", "f_132659_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.network.packet.s2c.play.PlayerAbilitiesS2CPacket#invulnerable
    static void set_field_invulnerable(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "invulnerable", "field_12339", "invulnerable", "f_132659_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.network.packet.s2c.play.PlayerAbilitiesS2CPacket#flying
    static jboolean get_field_flying(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "isFlying", "field_12338", "flying", "f_132660_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.network.packet.s2c.play.PlayerAbilitiesS2CPacket#flying
    static void set_field_flying(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "isFlying", "field_12338", "flying", "f_132660_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.network.packet.s2c.play.PlayerAbilitiesS2CPacket#allowFlying
    static jboolean get_field_allowFlying(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "canFly", "field_12337", "allowFlying", "f_132661_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.network.packet.s2c.play.PlayerAbilitiesS2CPacket#allowFlying
    static void set_field_allowFlying(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "canFly", "field_12337", "allowFlying", "f_132661_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.network.packet.s2c.play.PlayerAbilitiesS2CPacket#creativeMode
    static jboolean get_field_creativeMode(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "instabuild", "field_12336", "creativeMode", "f_132662_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.network.packet.s2c.play.PlayerAbilitiesS2CPacket#creativeMode
    static void set_field_creativeMode(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "instabuild", "field_12336", "creativeMode", "f_132662_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.network.packet.s2c.play.PlayerAbilitiesS2CPacket#flySpeed
    static jfloat get_field_flySpeed(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "flyingSpeed", "field_12335", "flySpeed", "f_132663_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.network.packet.s2c.play.PlayerAbilitiesS2CPacket#flySpeed
    static void set_field_flySpeed(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "flyingSpeed", "field_12335", "flySpeed", "f_132663_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.network.packet.s2c.play.PlayerAbilitiesS2CPacket#walkSpeed
    static jfloat get_field_walkSpeed(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "walkingSpeed", "field_12334", "walkSpeed", "f_132664_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.network.packet.s2c.play.PlayerAbilitiesS2CPacket#walkSpeed
    static void set_field_walkSpeed(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "walkingSpeed", "field_12334", "walkSpeed", "f_132664_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    static jmethodID methodID_write() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "write", "method_55897", "write", "m_132675_"), "(Lvw;)V");
    }

    static void write(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_write();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getPacketId() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "type", "method_55846", "getPacketId", "m_5779_"), "()Lzi;");
    }

    static jobject getPacketId(const jobject& obj) {
                
       const auto methodID = methodID_getPacketId();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_apply() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "handle", "method_11697", "apply", "m_5797_"), "(Labu;)V");
    }

    static void apply(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_apply();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isInvulnerable() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "isInvulnerable", "method_11695", "isInvulnerable", "m_132674_"), "()Z");
    }

    static jboolean isInvulnerable(const jobject& obj) {
                
       const auto methodID = methodID_isInvulnerable();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isFlying() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "isFlying", "method_11698", "isFlying", "m_132677_"), "()Z");
    }

    static jboolean isFlying(const jobject& obj) {
                
       const auto methodID = methodID_isFlying();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID__allowFlying() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "canFly", "method_11699", "allowFlying", "m_132678_"), "()Z");
    }

    static jboolean _allowFlying(const jobject& obj) {
                
       const auto methodID = methodID__allowFlying();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isCreativeMode() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "canInstabuild", "method_11696", "isCreativeMode", "m_132679_"), "()Z");
    }

    static jboolean isCreativeMode(const jobject& obj) {
                
       const auto methodID = methodID_isCreativeMode();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getFlySpeed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "getFlyingSpeed", "method_11690", "getFlySpeed", "m_132680_"), "()F");
    }

    static jfloat getFlySpeed(const jobject& obj) {
                
       const auto methodID = methodID_getFlySpeed();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID_getWalkSpeed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("i", "getWalkingSpeed", "method_11691", "getWalkSpeed", "m_132681_"), "()F");
    }

    static jfloat getWalkSpeed(const jobject& obj) {
                
       const auto methodID = methodID_getWalkSpeed();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_NETWORK_PACKET_S2C_PLAY_PLAYERABILITIESS2CPACKET_HPP