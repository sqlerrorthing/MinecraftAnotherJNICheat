// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_NETWORK_PACKET_S2C_PLAY_TEAMS2CPACKET_HPP
#define NET_MINECRAFT_NETWORK_PACKET_S2C_PLAY_TEAMS2CPACKET_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.network.packet.s2c.play.TeamS2CPacket
 * Remapped: afh
 */
namespace TeamS2CPacket {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("afh", "net/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket", "net/minecraft/class_5900", "net/minecraft/network/packet/s2c/play/TeamS2CPacket", "net/minecraft/src/C_5124_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.network.packet.s2c.play.TeamS2CPacket#CODEC
    [[maybe_unused]] static jobject get_field_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "STREAM_CODEC", "field_47987", "CODEC", "f_315711_"), "Lyx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.network.packet.s2c.play.TeamS2CPacket#CODEC
    [[maybe_unused]] static void set_field_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "STREAM_CODEC", "field_47987", "CODEC", "f_315711_"), "Lyx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.network.packet.s2c.play.TeamS2CPacket#ADD
    [[maybe_unused]] static jint get_field_ADD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "METHOD_ADD", "field_33346", "ADD", "f_179309_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.network.packet.s2c.play.TeamS2CPacket#ADD
    [[maybe_unused]] static void set_field_ADD(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "METHOD_ADD", "field_33346", "ADD", "f_179309_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.network.packet.s2c.play.TeamS2CPacket#REMOVE
    [[maybe_unused]] static jint get_field_REMOVE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "METHOD_REMOVE", "field_33347", "REMOVE", "f_179310_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.network.packet.s2c.play.TeamS2CPacket#REMOVE
    [[maybe_unused]] static void set_field_REMOVE(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "METHOD_REMOVE", "field_33347", "REMOVE", "f_179310_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.network.packet.s2c.play.TeamS2CPacket#UPDATE
    [[maybe_unused]] static jint get_field_UPDATE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "METHOD_CHANGE", "field_33348", "UPDATE", "f_179311_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.network.packet.s2c.play.TeamS2CPacket#UPDATE
    [[maybe_unused]] static void set_field_UPDATE(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "METHOD_CHANGE", "field_33348", "UPDATE", "f_179311_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.network.packet.s2c.play.TeamS2CPacket#ADD_PLAYERS
    [[maybe_unused]] static jint get_field_ADD_PLAYERS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "METHOD_JOIN", "field_33349", "ADD_PLAYERS", "f_179312_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.network.packet.s2c.play.TeamS2CPacket#ADD_PLAYERS
    [[maybe_unused]] static void set_field_ADD_PLAYERS(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "METHOD_JOIN", "field_33349", "ADD_PLAYERS", "f_179312_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.network.packet.s2c.play.TeamS2CPacket#REMOVE_PLAYERS
    [[maybe_unused]] static jint get_field_REMOVE_PLAYERS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "METHOD_LEAVE", "field_33350", "REMOVE_PLAYERS", "f_179313_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.network.packet.s2c.play.TeamS2CPacket#REMOVE_PLAYERS
    [[maybe_unused]] static void set_field_REMOVE_PLAYERS(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "METHOD_LEAVE", "field_33350", "REMOVE_PLAYERS", "f_179313_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.network.packet.s2c.play.TeamS2CPacket#FIRST_MAX_VISIBILITY_OR_COLLISION_RULE_LENGTH
    [[maybe_unused]] static jint get_field_FIRST_MAX_VISIBILITY_OR_COLLISION_RULE_LENGTH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "MAX_VISIBILITY_LENGTH", "field_33351", "FIRST_MAX_VISIBILITY_OR_COLLISION_RULE_LENGTH", "f_179314_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.network.packet.s2c.play.TeamS2CPacket#FIRST_MAX_VISIBILITY_OR_COLLISION_RULE_LENGTH
    [[maybe_unused]] static void set_field_FIRST_MAX_VISIBILITY_OR_COLLISION_RULE_LENGTH(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "MAX_VISIBILITY_LENGTH", "field_33351", "FIRST_MAX_VISIBILITY_OR_COLLISION_RULE_LENGTH", "f_179314_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.network.packet.s2c.play.TeamS2CPacket#SECOND_MAX_VISIBILITY_OR_COLLISION_RULE_LENGTH
    [[maybe_unused]] static jint get_field_SECOND_MAX_VISIBILITY_OR_COLLISION_RULE_LENGTH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "MAX_COLLISION_LENGTH", "field_33352", "SECOND_MAX_VISIBILITY_OR_COLLISION_RULE_LENGTH", "f_179315_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.network.packet.s2c.play.TeamS2CPacket#SECOND_MAX_VISIBILITY_OR_COLLISION_RULE_LENGTH
    [[maybe_unused]] static void set_field_SECOND_MAX_VISIBILITY_OR_COLLISION_RULE_LENGTH(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "MAX_COLLISION_LENGTH", "field_33352", "SECOND_MAX_VISIBILITY_OR_COLLISION_RULE_LENGTH", "f_179315_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.network.packet.s2c.play.TeamS2CPacket#packetType
    static jint get_field_packetType(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "method", "field_29151", "packetType", "f_133295_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.network.packet.s2c.play.TeamS2CPacket#packetType
    static void set_field_packetType(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "method", "field_29151", "packetType", "f_133295_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.network.packet.s2c.play.TeamS2CPacket#teamName
    static jobject get_field_teamName(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "name", "field_29152", "teamName", "f_133287_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.network.packet.s2c.play.TeamS2CPacket#teamName
    static void set_field_teamName(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "name", "field_29152", "teamName", "f_133287_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.network.packet.s2c.play.TeamS2CPacket#playerNames
    static jobject get_field_playerNames(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "players", "field_29153", "playerNames", "f_133294_"), "Ljava/util/Collection;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.network.packet.s2c.play.TeamS2CPacket#playerNames
    static void set_field_playerNames(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "players", "field_29153", "playerNames", "f_133294_"), "Ljava/util/Collection;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.network.packet.s2c.play.TeamS2CPacket#team
    static jobject get_field_team(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "parameters", "field_29154", "team", "f_179316_"), "Ljava/util/Optional;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.network.packet.s2c.play.TeamS2CPacket#team
    static void set_field_team(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "parameters", "field_29154", "team", "f_179316_"), "Ljava/util/Optional;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_updateTeam() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "createAddOrModifyPacket", "method_34172", "updateTeam", "m_179332_"), "(Leyb;Z)Lafh;");
    }

    static jobject updateTeam(const jobject& arg0, const jboolean& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_updateTeam();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_updateRemovedTeam() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "createRemovePacket", "method_34170", "updateRemovedTeam", "m_179326_"), "(Leyb;)Lafh;");
    }

    static jobject updateRemovedTeam(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_updateRemovedTeam();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_changePlayerTeam() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "createPlayerPacket", "method_34171", "changePlayerTeam", "m_179328_"), "(Leyb;Ljava/lang/String;Lafh$a;)Lafh;");
    }

    static jobject changePlayerTeam(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_changePlayerTeam();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_write() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "write", "method_55934", "write", "m_133312_"), "(Lwk;)V");
    }

    static void write(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_write();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_containsPlayers() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "shouldHavePlayerList", "method_34169", "containsPlayers", "m_179324_"), "(I)Z");
    }

    static jboolean containsPlayers(const jint& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_containsPlayers();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_containsTeamInfo() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "shouldHaveParameters", "method_34175", "containsTeamInfo", "m_179336_"), "(I)Z");
    }

    static jboolean containsTeamInfo(const jint& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_containsTeamInfo();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getPlayerListOperation() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getPlayerAction", "method_34174", "getPlayerListOperation", "m_179335_"), "()Lafh$a;");
    }

    static jobject getPlayerListOperation(const jobject& obj) {
                
       const auto methodID = methodID_getPlayerListOperation();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getTeamOperation() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "getTeamAction", "method_34176", "getTeamOperation", "m_179338_"), "()Lafh$a;");
    }

    static jobject getTeamOperation(const jobject& obj) {
                
       const auto methodID = methodID_getTeamOperation();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getPacketId() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "type", "method_55846", "getPacketId", "m_5779_"), "()Lzi;");
    }

    static jobject getPacketId(const jobject& obj) {
                
       const auto methodID = methodID_getPacketId();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_apply() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "handle", "method_34173", "apply", "m_5797_"), "(Labu;)V");
    }

    static void apply(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_apply();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getTeamName() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "getName", "method_34177", "getTeamName", "m_133311_"), "()Ljava/lang/String;");
    }

    static jobject getTeamName(const jobject& obj) {
                
       const auto methodID = methodID_getTeamName();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getPlayerNames() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "getPlayers", "method_34178", "getPlayerNames", "m_133315_"), "()Ljava/util/Collection;");
    }

    static jobject getPlayerNames(const jobject& obj) {
                
       const auto methodID = methodID_getPlayerNames();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getTeam() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "getParameters", "method_34179", "getTeam", "m_179339_"), "()Ljava/util/Optional;");
    }

    static jobject getTeam(const jobject& obj) {
                
       const auto methodID = methodID_getTeam();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_NETWORK_PACKET_S2C_PLAY_TEAMS2CPACKET_HPP