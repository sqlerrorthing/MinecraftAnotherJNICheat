// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_NETWORK_PACKET_S2C_PLAY_COMMANDTREES2CPACKET_HPP
#define NET_MINECRAFT_NETWORK_PACKET_S2C_PLAY_COMMANDTREES2CPACKET_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.network.packet.s2c.play.CommandTreeS2CPacket
 * Remapped: acn
 */
namespace CommandTreeS2CPacket {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("acn", "net/minecraft/network/protocol/game/ClientboundCommandsPacket", "net/minecraft/class_2641", "net/minecraft/network/packet/s2c/play/CommandTreeS2CPacket", "net/minecraft/src/C_5051_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.network.packet.s2c.play.CommandTreeS2CPacket#CODEC
    [[maybe_unused]] static jobject get_field_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "STREAM_CODEC", "field_47914", "CODEC", "f_316838_"), "Lyx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.network.packet.s2c.play.CommandTreeS2CPacket#CODEC
    [[maybe_unused]] static void set_field_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "STREAM_CODEC", "field_47914", "CODEC", "f_316838_"), "Lyx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.network.packet.s2c.play.CommandTreeS2CPacket#field_33317
    [[maybe_unused]] static jbyte get_field_field_33317() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "MASK_TYPE", "field_33317", "field_33317", "f_178797_"), "B");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticByteField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.network.packet.s2c.play.CommandTreeS2CPacket#field_33317
    [[maybe_unused]] static void set_field_field_33317(const jbyte &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "MASK_TYPE", "field_33317", "field_33317", "f_178797_"), "B");
        return MinecraftSDK::env->SetStaticByteField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.network.packet.s2c.play.CommandTreeS2CPacket#field_33318
    [[maybe_unused]] static jbyte get_field_field_33318() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "FLAG_EXECUTABLE", "field_33318", "field_33318", "f_178798_"), "B");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticByteField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.network.packet.s2c.play.CommandTreeS2CPacket#field_33318
    [[maybe_unused]] static void set_field_field_33318(const jbyte &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "FLAG_EXECUTABLE", "field_33318", "field_33318", "f_178798_"), "B");
        return MinecraftSDK::env->SetStaticByteField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.network.packet.s2c.play.CommandTreeS2CPacket#field_33319
    [[maybe_unused]] static jbyte get_field_field_33319() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "FLAG_REDIRECT", "field_33319", "field_33319", "f_178799_"), "B");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticByteField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.network.packet.s2c.play.CommandTreeS2CPacket#field_33319
    [[maybe_unused]] static void set_field_field_33319(const jbyte &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "FLAG_REDIRECT", "field_33319", "field_33319", "f_178799_"), "B");
        return MinecraftSDK::env->SetStaticByteField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.network.packet.s2c.play.CommandTreeS2CPacket#field_33320
    [[maybe_unused]] static jbyte get_field_field_33320() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "FLAG_CUSTOM_SUGGESTIONS", "field_33320", "field_33320", "f_178800_"), "B");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticByteField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.network.packet.s2c.play.CommandTreeS2CPacket#field_33320
    [[maybe_unused]] static void set_field_field_33320(const jbyte &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "FLAG_CUSTOM_SUGGESTIONS", "field_33320", "field_33320", "f_178800_"), "B");
        return MinecraftSDK::env->SetStaticByteField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.network.packet.s2c.play.CommandTreeS2CPacket#field_33321
    [[maybe_unused]] static jbyte get_field_field_33321() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "TYPE_ROOT", "field_33321", "field_33321", "f_178801_"), "B");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticByteField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.network.packet.s2c.play.CommandTreeS2CPacket#field_33321
    [[maybe_unused]] static void set_field_field_33321(const jbyte &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "TYPE_ROOT", "field_33321", "field_33321", "f_178801_"), "B");
        return MinecraftSDK::env->SetStaticByteField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.network.packet.s2c.play.CommandTreeS2CPacket#field_33322
    [[maybe_unused]] static jbyte get_field_field_33322() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "TYPE_LITERAL", "field_33322", "field_33322", "f_178802_"), "B");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticByteField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.network.packet.s2c.play.CommandTreeS2CPacket#field_33322
    [[maybe_unused]] static void set_field_field_33322(const jbyte &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "TYPE_LITERAL", "field_33322", "field_33322", "f_178802_"), "B");
        return MinecraftSDK::env->SetStaticByteField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.network.packet.s2c.play.CommandTreeS2CPacket#field_33323
    [[maybe_unused]] static jbyte get_field_field_33323() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "TYPE_ARGUMENT", "field_33323", "field_33323", "f_178803_"), "B");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticByteField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.network.packet.s2c.play.CommandTreeS2CPacket#field_33323
    [[maybe_unused]] static void set_field_field_33323(const jbyte &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "TYPE_ARGUMENT", "field_33323", "field_33323", "f_178803_"), "B");
        return MinecraftSDK::env->SetStaticByteField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.network.packet.s2c.play.CommandTreeS2CPacket#rootSize
    static jint get_field_rootSize(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "rootIndex", "field_38038", "rootSize", "f_237619_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.network.packet.s2c.play.CommandTreeS2CPacket#rootSize
    static void set_field_rootSize(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "rootIndex", "field_38038", "rootSize", "f_237619_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.network.packet.s2c.play.CommandTreeS2CPacket#nodes
    static jobject get_field_nodes(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "entries", "field_38039", "nodes", "f_237620_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.network.packet.s2c.play.CommandTreeS2CPacket#nodes
    static void set_field_nodes(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "entries", "field_38039", "nodes", "f_237620_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_write() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "write", "method_55867", "write", "m_131885_"), "(Lvw;)V");
    }

    static void write(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_write();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_validate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "validateEntries", "method_42067", "validate", "m_237630_"), "(Ljava/util/List;Ljava/util/function/BiPredicate;)V");
    }

    static void validate(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_validate();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__validate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "validateEntries", "method_30946", "validate", "m_237628_"), "(Ljava/util/List;)V");
    }

    static void _validate(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID__validate();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_traverse() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "enumerateNodes", "method_30944", "traverse", "m_131862_"), "(Lcom/mojang/brigadier/tree/RootCommandNode;)Lit/unimi/dsi/fastutil/objects/Object2IntMap;");
    }

    static jobject traverse(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_traverse();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_collectNodes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "createEntries", "method_30945", "collectNodes", "m_237626_"), "(Lit/unimi/dsi/fastutil/objects/Object2IntMap;)Ljava/util/List;");
    }

    static jobject collectNodes(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_collectNodes();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_readCommandNode() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "readNode", "method_11405", "readCommandNode", "m_131887_"), "(Lvw;)Lacn$b;");
    }

    static jobject readCommandNode(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_readCommandNode();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_readArgumentBuilder() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "read", "method_11402", "readArgumentBuilder", "m_237638_"), "(Lvw;B)Lacn$e;");
    }

    static jobject readArgumentBuilder(const jobject& arg0, const jbyte& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_readArgumentBuilder();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_createNodeData() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "createEntry", "method_11401", "createNodeData", "m_237621_"), "(Lcom/mojang/brigadier/tree/CommandNode;Lit/unimi/dsi/fastutil/objects/Object2IntMap;)Lacn$b;");
    }

    static jobject createNodeData(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_createNodeData();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getPacketId() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "type", "method_55846", "getPacketId", "m_5779_"), "()Lzi;");
    }

    static jobject getPacketId(const jobject& obj) {
                
       const auto methodID = methodID_getPacketId();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_apply() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "handle", "method_11404", "apply", "m_5797_"), "(Labu;)V");
    }

    static void apply(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_apply();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getCommandTree() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getRoot", "method_11403", "getCommandTree", "m_237624_"), "(Lep;)Lcom/mojang/brigadier/tree/RootCommandNode;");
    }

    static jobject getCommandTree(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getCommandTree();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_NETWORK_PACKET_S2C_PLAY_COMMANDTREES2CPACKET_HPP