// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_NETWORK_PACKET_S2C_LOGIN_LOGINHELLOS2CPACKET_HPP
#define NET_MINECRAFT_NETWORK_PACKET_S2C_LOGIN_LOGINHELLOS2CPACKET_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.network.packet.s2c.login.LoginHelloS2CPacket
 * Remapped: air
 */
namespace LoginHelloS2CPacket {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("air", "net/minecraft/network/protocol/login/ClientboundHelloPacket", "net/minecraft/class_2905", "net/minecraft/network/packet/s2c/login/LoginHelloS2CPacket", "net/minecraft/src/C_5206_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.network.packet.s2c.login.LoginHelloS2CPacket#CODEC
    [[maybe_unused]] static jobject get_field_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "STREAM_CODEC", "field_48234", "CODEC", "f_317006_"), "Lyx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.network.packet.s2c.login.LoginHelloS2CPacket#CODEC
    [[maybe_unused]] static void set_field_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "STREAM_CODEC", "field_48234", "CODEC", "f_317006_"), "Lyx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.network.packet.s2c.login.LoginHelloS2CPacket#serverId
    static jobject get_field_serverId(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "serverId", "field_13209", "serverId", "f_134777_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.network.packet.s2c.login.LoginHelloS2CPacket#serverId
    static void set_field_serverId(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "serverId", "field_13209", "serverId", "f_134777_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.network.packet.s2c.login.LoginHelloS2CPacket#publicKey
    static jbyte get_field_publicKey(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "publicKey", "field_13211", "publicKey", "f_134778_"), "[B");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetByteField(obj, fieldID);
    };

    // setter for static private field net.minecraft.network.packet.s2c.login.LoginHelloS2CPacket#publicKey
    static void set_field_publicKey(const jobject &obj, const jbyte &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "publicKey", "field_13211", "publicKey", "f_134778_"), "[B");
        return MinecraftSDK::env->SetByteField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.network.packet.s2c.login.LoginHelloS2CPacket#nonce
    static jbyte get_field_nonce(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "challenge", "field_13210", "nonce", "f_252397_"), "[B");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetByteField(obj, fieldID);
    };

    // setter for static private field net.minecraft.network.packet.s2c.login.LoginHelloS2CPacket#nonce
    static void set_field_nonce(const jobject &obj, const jbyte &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "challenge", "field_13210", "nonce", "f_252397_"), "[B");
        return MinecraftSDK::env->SetByteField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.network.packet.s2c.login.LoginHelloS2CPacket#needsAuthentication
    static jboolean get_field_needsAuthentication(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "shouldAuthenticate", "field_48235", "needsAuthentication", "f_314872_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.network.packet.s2c.login.LoginHelloS2CPacket#needsAuthentication
    static void set_field_needsAuthentication(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "shouldAuthenticate", "field_48235", "needsAuthentication", "f_314872_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    static jmethodID methodID_write() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "write", "method_56012", "write", "m_134792_"), "(Lvw;)V");
    }

    static void write(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_write();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getPacketId() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "type", "method_55846", "getPacketId", "m_5779_"), "()Lzi;");
    }

    static jobject getPacketId(const jobject& obj) {
                
       const auto methodID = methodID_getPacketId();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_apply() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "handle", "method_12612", "apply", "m_5797_"), "(Laio;)V");
    }

    static void apply(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_apply();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getServerId() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getServerId", "method_12610", "getServerId", "m_134791_"), "()Ljava/lang/String;");
    }

    static jobject getServerId(const jobject& obj) {
                
       const auto methodID = methodID_getServerId();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getPublicKey() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "getPublicKey", "method_12611", "getPublicKey", "m_134794_"), "()Ljava/security/PublicKey;");
    }

    static jobject getPublicKey(const jobject& obj) {
                
       const auto methodID = methodID_getPublicKey();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getNonce() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "getChallenge", "method_12613", "getNonce", "m_252784_"), "()[B");
    }

    static jbyte getNonce(const jobject& obj) {
                
       const auto methodID = methodID_getNonce();
       return MinecraftSDK::env->CallByteMethod(obj, methodID);
    };
    
    static jmethodID methodID__needsAuthentication() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "shouldAuthenticate", "method_56013", "needsAuthentication", "m_319283_"), "()Z");
    }

    static jboolean _needsAuthentication(const jobject& obj) {
                
       const auto methodID = methodID__needsAuthentication();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_NETWORK_PACKET_S2C_LOGIN_LOGINHELLOS2CPACKET_HPP