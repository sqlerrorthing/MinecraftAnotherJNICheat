// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_NETWORK_MESSAGE_MESSAGESIGNATUREDATA_HPP
#define NET_MINECRAFT_NETWORK_MESSAGE_MESSAGESIGNATUREDATA_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.network.message.MessageSignatureData
 * Remapped: xl
 */
namespace MessageSignatureData {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("xl", "net/minecraft/network/chat/MessageSignature", "net/minecraft/class_7469", "net/minecraft/network/message/MessageSignatureData", "net/minecraft/src/C_213508_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.network.message.MessageSignatureData#data
    static jbyte get_field_data(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "bytes", "comp_925", "data", "f_240884_"), "[B");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetByteField(obj, fieldID);
    };

    // setter for static private field net.minecraft.network.message.MessageSignatureData#data
    static void set_field_data(const jobject &obj, const jbyte &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "bytes", "comp_925", "data", "f_240884_"), "[B");
        return MinecraftSDK::env->SetByteField(obj, fieldID, value);
    };

    // getter for static public field net.minecraft.network.message.MessageSignatureData#CODEC
    [[maybe_unused]] static jobject get_field_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CODEC", "field_40844", "CODEC", "f_252463_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.network.message.MessageSignatureData#CODEC
    [[maybe_unused]] static void set_field_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CODEC", "field_40844", "CODEC", "f_252463_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.network.message.MessageSignatureData#SIZE
    [[maybe_unused]] static jint get_field_SIZE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "BYTES", "field_40683", "SIZE", "f_244417_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.network.message.MessageSignatureData#SIZE
    [[maybe_unused]] static void set_field_SIZE(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "BYTES", "field_40683", "SIZE", "f_244417_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    static jmethodID methodID_fromBuf() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "read", "method_46276", "fromBuf", "m_245099_"), "(Lvw;)Lxl;");
    }

    static jobject fromBuf(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_fromBuf();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_write() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "write", "method_44845", "write", "m_246050_"), "(Lvw;Lxl;)V");
    }

    static void write(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_write();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_verify() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "verify", "method_44843", "verify", "m_245457_"), "(Lazb;Laza;)Z");
    }

    static jboolean verify(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_verify();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_toByteBuffer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "asByteBuffer", "method_44994", "toByteBuffer", "m_241929_"), "()Ljava/nio/ByteBuffer;");
    }

    static jobject toByteBuffer(const jobject& obj) {
                
       const auto methodID = methodID_toByteBuffer();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_pack() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "pack", "method_46277", "pack", "m_252849_"), "(Lxm;)Lxl$a;");
    }

    static jobject pack(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_pack();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__data() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "bytes", "comp_925", "data", "f_240884_"), "()[B");
    }

    static jbyte _data(const jobject& obj) {
                
       const auto methodID = methodID__data();
       return MinecraftSDK::env->CallByteMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_NETWORK_MESSAGE_MESSAGESIGNATUREDATA_HPP