// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_NETWORK_MESSAGE_FILTERMASK_HPP
#define NET_MINECRAFT_NETWORK_MESSAGE_FILTERMASK_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.network.message.FilterMask
 * Remapped: xd
 */
namespace FilterMask {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("xd", "net/minecraft/network/chat/FilterMask", "net/minecraft/class_7649", "net/minecraft/network/message/FilterMask", "net/minecraft/src/C_242983_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.network.message.FilterMask#CODEC
    [[maybe_unused]] static jobject get_field_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CODEC", "field_40837", "CODEC", "f_252533_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.network.message.FilterMask#CODEC
    [[maybe_unused]] static void set_field_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CODEC", "field_40837", "CODEC", "f_252533_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.network.message.FilterMask#FULLY_FILTERED
    [[maybe_unused]] static jobject get_field_FULLY_FILTERED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "FULLY_FILTERED", "field_39941", "FULLY_FILTERED", "f_243007_"), "Lxd;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.network.message.FilterMask#FULLY_FILTERED
    [[maybe_unused]] static void set_field_FULLY_FILTERED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "FULLY_FILTERED", "field_39941", "FULLY_FILTERED", "f_243007_"), "Lxd;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.network.message.FilterMask#PASS_THROUGH
    [[maybe_unused]] static jobject get_field_PASS_THROUGH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "PASS_THROUGH", "field_39942", "PASS_THROUGH", "f_242999_"), "Lxd;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.network.message.FilterMask#PASS_THROUGH
    [[maybe_unused]] static void set_field_PASS_THROUGH(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "PASS_THROUGH", "field_39942", "PASS_THROUGH", "f_242999_"), "Lxd;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.network.message.FilterMask#FILTERED_STYLE
    [[maybe_unused]] static jobject get_field_FILTERED_STYLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "FILTERED_STYLE", "field_40674", "FILTERED_STYLE", "f_244521_"), "Lxw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.network.message.FilterMask#FILTERED_STYLE
    [[maybe_unused]] static void set_field_FILTERED_STYLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "FILTERED_STYLE", "field_40674", "FILTERED_STYLE", "f_244521_"), "Lxw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static default field net.minecraft.network.message.FilterMask#PASS_THROUGH_CODEC
    [[maybe_unused]] static jobject get_field_PASS_THROUGH_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "PASS_THROUGH_CODEC", "field_40838", "PASS_THROUGH_CODEC", "f_252488_"), "Lcom/mojang/serialization/MapCodec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static default field net.minecraft.network.message.FilterMask#PASS_THROUGH_CODEC
    [[maybe_unused]] static void set_field_PASS_THROUGH_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "PASS_THROUGH_CODEC", "field_40838", "PASS_THROUGH_CODEC", "f_252488_"), "Lcom/mojang/serialization/MapCodec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static default field net.minecraft.network.message.FilterMask#FULLY_FILTERED_CODEC
    [[maybe_unused]] static jobject get_field_FULLY_FILTERED_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "FULLY_FILTERED_CODEC", "field_40839", "FULLY_FILTERED_CODEC", "f_252493_"), "Lcom/mojang/serialization/MapCodec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static default field net.minecraft.network.message.FilterMask#FULLY_FILTERED_CODEC
    [[maybe_unused]] static void set_field_FULLY_FILTERED_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "FULLY_FILTERED_CODEC", "field_40839", "FULLY_FILTERED_CODEC", "f_252493_"), "Lcom/mojang/serialization/MapCodec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static default field net.minecraft.network.message.FilterMask#PARTIALLY_FILTERED_CODEC
    [[maybe_unused]] static jobject get_field_PARTIALLY_FILTERED_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "PARTIALLY_FILTERED_CODEC", "field_40840", "PARTIALLY_FILTERED_CODEC", "f_252450_"), "Lcom/mojang/serialization/MapCodec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static default field net.minecraft.network.message.FilterMask#PARTIALLY_FILTERED_CODEC
    [[maybe_unused]] static void set_field_PARTIALLY_FILTERED_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "PARTIALLY_FILTERED_CODEC", "field_40840", "PARTIALLY_FILTERED_CODEC", "f_252450_"), "Lcom/mojang/serialization/MapCodec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.network.message.FilterMask#FILTERED
    [[maybe_unused]] static jchar get_field_FILTERED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "HASH", "field_39943", "FILTERED", "f_243009_"), "C");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticCharField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.network.message.FilterMask#FILTERED
    [[maybe_unused]] static void set_field_FILTERED(const jchar &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "HASH", "field_39943", "FILTERED", "f_243009_"), "C");
        return MinecraftSDK::env->SetStaticCharField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.network.message.FilterMask#mask
    static jobject get_field_mask(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "mask", "field_39944", "mask", "f_242988_"), "Ljava/util/BitSet;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.network.message.FilterMask#mask
    static void set_field_mask(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "mask", "field_39944", "mask", "f_242988_"), "Ljava/util/BitSet;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.network.message.FilterMask#status
    static jobject get_field_status(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "type", "field_39945", "status", "f_242996_"), "Lxd$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.network.message.FilterMask#status
    static void set_field_status(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "type", "field_39945", "status", "f_242996_"), "Lxd$a;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_getStatus() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "type", "method_46600", "getStatus", "m_252945_"), "()Lxd$a;");
    }

    static jobject getStatus(const jobject& obj) {
                
       const auto methodID = methodID_getStatus();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getMask() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "mask", "method_46601", "getMask", "m_252818_"), "()Ljava/util/BitSet;");
    }

    static jobject getMask(const jobject& obj) {
                
       const auto methodID = methodID_getMask();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_readMask() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "read", "method_45090", "readMask", "m_243104_"), "(Lvw;)Lxd;");
    }

    static jobject readMask(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_readMask();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_writeMask() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "write", "method_45091", "writeMask", "m_243105_"), "(Lvw;Lxd;)V");
    }

    static void writeMask(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_writeMask();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_markFiltered() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setFiltered", "method_45088", "markFiltered", "m_243123_"), "(I)V");
    }

    static void markFiltered(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_markFiltered();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_filter() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "apply", "method_45089", "filter", "m_243114_"), "(Ljava/lang/String;)Ljava/lang/String;");
    }

    static jobject filter(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_filter();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getFilteredText() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "applyWithFormatting", "method_46256", "getFilteredText", "m_246134_"), "(Ljava/lang/String;)Lwz;");
    }

    static jobject getFilteredText(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getFilteredText();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isPassThrough() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "isEmpty", "method_45087", "isPassThrough", "m_243095_"), "()Z");
    }

    static jboolean isPassThrough(const jobject& obj) {
                
       const auto methodID = methodID_isPassThrough();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isFullyFiltered() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "isFullyFiltered", "method_45093", "isFullyFiltered", "m_243067_"), "()Z");
    }

    static jboolean isFullyFiltered(const jobject& obj) {
                
       const auto methodID = methodID_isFullyFiltered();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_NETWORK_MESSAGE_FILTERMASK_HPP