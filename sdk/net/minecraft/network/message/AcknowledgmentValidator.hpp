// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_NETWORK_MESSAGE_ACKNOWLEDGMENTVALIDATOR_HPP
#define NET_MINECRAFT_NETWORK_MESSAGE_ACKNOWLEDGMENTVALIDATOR_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.network.message.AcknowledgmentValidator
 * Remapped: xi
 */
namespace AcknowledgmentValidator {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("xi", "net/minecraft/network/chat/LastSeenMessagesValidator", "net/minecraft/class_7638", "net/minecraft/network/message/AcknowledgmentValidator", "net/minecraft/src/C_241595_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.network.message.AcknowledgmentValidator#size
    static jint get_field_size(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "lastSeenCount", "field_40680", "size", "f_244465_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.network.message.AcknowledgmentValidator#size
    static void set_field_size(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "lastSeenCount", "field_40680", "size", "f_244465_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.network.message.AcknowledgmentValidator#messages
    static jobject get_field_messages(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "trackedMessages", "field_40681", "messages", "f_243950_"), "Lit/unimi/dsi/fastutil/objects/ObjectList;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.network.message.AcknowledgmentValidator#messages
    static void set_field_messages(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "trackedMessages", "field_40681", "messages", "f_243950_"), "Lit/unimi/dsi/fastutil/objects/ObjectList;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.network.message.AcknowledgmentValidator#lastSignature
    static jobject get_field_lastSignature(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "lastPendingMessage", "field_40682", "lastSignature", "f_244339_"), "Lxl;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.network.message.AcknowledgmentValidator#lastSignature
    static void set_field_lastSignature(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "lastPendingMessage", "field_40682", "lastSignature", "f_244339_"), "Lxl;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_addPending() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "addPending", "method_44989", "addPending", "m_247482_"), "(Lxl;)V");
    }

    static void addPending(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_addPending();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getMessageCount() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "trackedMessagesCount", "method_46268", "getMessageCount", "m_245741_"), "()I");
    }

    static jint getMessageCount(const jobject& obj) {
                
       const auto methodID = methodID_getMessageCount();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_removeUntil() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "applyOffset", "method_46269", "removeUntil", "m_245398_"), "(I)Z");
    }

    static jboolean removeUntil(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_removeUntil();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_validate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "applyUpdate", "method_46270", "validate", "m_247119_"), "(Lxg$b;)Ljava/util/Optional;");
    }

    static jobject validate(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_validate();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_NETWORK_MESSAGE_ACKNOWLEDGMENTVALIDATOR_HPP