// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_NETWORK_MESSAGE_ACKNOWLEDGEDMESSAGE_HPP
#define NET_MINECRAFT_NETWORK_MESSAGE_ACKNOWLEDGEDMESSAGE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.network.message.AcknowledgedMessage
 * Remapped: xj
 */
namespace AcknowledgedMessage {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("xj", "net/minecraft/network/chat/LastSeenTrackedEntry", "net/minecraft/class_7817", "net/minecraft/network/message/AcknowledgedMessage", "net/minecraft/src/C_243644_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.network.message.AcknowledgedMessage#signature
    static jobject get_field_signature(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "signature", "comp_1075", "signature", "f_243846_"), "Lxl;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.network.message.AcknowledgedMessage#signature
    static void set_field_signature(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "signature", "comp_1075", "signature", "f_243846_"), "Lxl;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.network.message.AcknowledgedMessage#pending
    static jboolean get_field_pending(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "pending", "comp_1076", "pending", "f_243942_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.network.message.AcknowledgedMessage#pending
    static void set_field_pending(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "pending", "comp_1076", "pending", "f_243942_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    static jmethodID methodID_unmarkAsPending() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "acknowledge", "method_46271", "unmarkAsPending", "m_247448_"), "()Lxj;");
    }

    static jobject unmarkAsPending(const jobject& obj) {
                
       const auto methodID = methodID_unmarkAsPending();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__signature() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "signature", "comp_1075", "signature", "f_243846_"), "()Lxl;");
    }

    static jobject _signature(const jobject& obj) {
                
       const auto methodID = methodID__signature();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__pending() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "pending", "comp_1076", "pending", "f_243942_"), "()Z");
    }

    static jboolean _pending(const jobject& obj) {
                
       const auto methodID = methodID__pending();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_NETWORK_MESSAGE_ACKNOWLEDGEDMESSAGE_HPP