// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_NETWORK_HANDLER_HANDLERNAMES_HPP
#define NET_MINECRAFT_NETWORK_HANDLER_HANDLERNAMES_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.network.handler.HandlerNames
 * Remapped: vx
 */
namespace HandlerNames {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("vx", "net/minecraft/network/HandlerNames", "net/minecraft/class_9126", "net/minecraft/network/handler/HandlerNames", "net/minecraft/src/C_313583_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.network.handler.HandlerNames#DECOMPRESS
    [[maybe_unused]] static jobject get_field_DECOMPRESS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "DECOMPRESS", "field_48518", "DECOMPRESS", "f_316826_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.network.handler.HandlerNames#DECOMPRESS
    [[maybe_unused]] static void set_field_DECOMPRESS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "DECOMPRESS", "field_48518", "DECOMPRESS", "f_316826_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.network.handler.HandlerNames#COMPRESS
    [[maybe_unused]] static jobject get_field_COMPRESS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "COMPRESS", "field_48519", "COMPRESS", "f_314494_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.network.handler.HandlerNames#COMPRESS
    [[maybe_unused]] static void set_field_COMPRESS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "COMPRESS", "field_48519", "COMPRESS", "f_314494_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.network.handler.HandlerNames#DECODER
    [[maybe_unused]] static jobject get_field_DECODER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "DECODER", "field_48520", "DECODER", "f_316157_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.network.handler.HandlerNames#DECODER
    [[maybe_unused]] static void set_field_DECODER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "DECODER", "field_48520", "DECODER", "f_316157_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.network.handler.HandlerNames#ENCODER
    [[maybe_unused]] static jobject get_field_ENCODER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "ENCODER", "field_48521", "ENCODER", "f_314539_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.network.handler.HandlerNames#ENCODER
    [[maybe_unused]] static void set_field_ENCODER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "ENCODER", "field_48521", "ENCODER", "f_314539_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.network.handler.HandlerNames#INBOUND_CONFIG
    [[maybe_unused]] static jobject get_field_INBOUND_CONFIG() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "INBOUND_CONFIG", "field_48522", "INBOUND_CONFIG", "f_315222_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.network.handler.HandlerNames#INBOUND_CONFIG
    [[maybe_unused]] static void set_field_INBOUND_CONFIG(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "INBOUND_CONFIG", "field_48522", "INBOUND_CONFIG", "f_315222_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.network.handler.HandlerNames#OUTBOUND_CONFIG
    [[maybe_unused]] static jobject get_field_OUTBOUND_CONFIG() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "OUTBOUND_CONFIG", "field_48523", "OUTBOUND_CONFIG", "f_315617_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.network.handler.HandlerNames#OUTBOUND_CONFIG
    [[maybe_unused]] static void set_field_OUTBOUND_CONFIG(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "OUTBOUND_CONFIG", "field_48523", "OUTBOUND_CONFIG", "f_315617_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.network.handler.HandlerNames#SPLITTER
    [[maybe_unused]] static jobject get_field_SPLITTER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "SPLITTER", "field_48524", "SPLITTER", "f_316847_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.network.handler.HandlerNames#SPLITTER
    [[maybe_unused]] static void set_field_SPLITTER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "SPLITTER", "field_48524", "SPLITTER", "f_316847_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.network.handler.HandlerNames#PREPENDER
    [[maybe_unused]] static jobject get_field_PREPENDER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "PREPENDER", "field_48525", "PREPENDER", "f_314748_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.network.handler.HandlerNames#PREPENDER
    [[maybe_unused]] static void set_field_PREPENDER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "PREPENDER", "field_48525", "PREPENDER", "f_314748_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.network.handler.HandlerNames#DECRYPT
    [[maybe_unused]] static jobject get_field_DECRYPT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "DECRYPT", "field_48526", "DECRYPT", "f_315153_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.network.handler.HandlerNames#DECRYPT
    [[maybe_unused]] static void set_field_DECRYPT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "DECRYPT", "field_48526", "DECRYPT", "f_315153_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.network.handler.HandlerNames#ENCRYPT
    [[maybe_unused]] static jobject get_field_ENCRYPT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "ENCRYPT", "field_48527", "ENCRYPT", "f_316446_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.network.handler.HandlerNames#ENCRYPT
    [[maybe_unused]] static void set_field_ENCRYPT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "ENCRYPT", "field_48527", "ENCRYPT", "f_316446_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.network.handler.HandlerNames#UNBUNDLER
    [[maybe_unused]] static jobject get_field_UNBUNDLER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "UNBUNDLER", "field_48528", "UNBUNDLER", "f_314506_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.network.handler.HandlerNames#UNBUNDLER
    [[maybe_unused]] static void set_field_UNBUNDLER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "UNBUNDLER", "field_48528", "UNBUNDLER", "f_314506_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.network.handler.HandlerNames#BUNDLER
    [[maybe_unused]] static jobject get_field_BUNDLER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "BUNDLER", "field_48529", "BUNDLER", "f_316693_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.network.handler.HandlerNames#BUNDLER
    [[maybe_unused]] static void set_field_BUNDLER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "BUNDLER", "field_48529", "BUNDLER", "f_316693_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.network.handler.HandlerNames#PACKET_HANDLER
    [[maybe_unused]] static jobject get_field_PACKET_HANDLER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "PACKET_HANDLER", "field_48530", "PACKET_HANDLER", "f_315455_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.network.handler.HandlerNames#PACKET_HANDLER
    [[maybe_unused]] static void set_field_PACKET_HANDLER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "PACKET_HANDLER", "field_48530", "PACKET_HANDLER", "f_315455_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.network.handler.HandlerNames#TIMEOUT
    [[maybe_unused]] static jobject get_field_TIMEOUT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "TIMEOUT", "field_48531", "TIMEOUT", "f_314664_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.network.handler.HandlerNames#TIMEOUT
    [[maybe_unused]] static void set_field_TIMEOUT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "TIMEOUT", "field_48531", "TIMEOUT", "f_314664_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.network.handler.HandlerNames#LEGACY_QUERY
    [[maybe_unused]] static jobject get_field_LEGACY_QUERY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "LEGACY_QUERY", "field_48532", "LEGACY_QUERY", "f_314737_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.network.handler.HandlerNames#LEGACY_QUERY
    [[maybe_unused]] static void set_field_LEGACY_QUERY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "LEGACY_QUERY", "field_48532", "LEGACY_QUERY", "f_314737_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.network.handler.HandlerNames#LATENCY
    [[maybe_unused]] static jobject get_field_LATENCY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "LATENCY", "field_48533", "LATENCY", "f_314683_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.network.handler.HandlerNames#LATENCY
    [[maybe_unused]] static void set_field_LATENCY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "LATENCY", "field_48533", "LATENCY", "f_314683_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

};

#endif // NET_MINECRAFT_NETWORK_HANDLER_HANDLERNAMES_HPP