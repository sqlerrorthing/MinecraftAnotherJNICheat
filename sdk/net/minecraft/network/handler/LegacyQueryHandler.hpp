// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_NETWORK_HANDLER_LEGACYQUERYHANDLER_HPP
#define NET_MINECRAFT_NETWORK_HANDLER_LEGACYQUERYHANDLER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.network.handler.LegacyQueryHandler
 * Remapped: aro
 */
namespace LegacyQueryHandler {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("aro", "net/minecraft/server/network/LegacyQueryHandler", "net/minecraft/class_3238", "net/minecraft/network/handler/LegacyQueryHandler", "net/minecraft/src/C_26_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.network.handler.LegacyQueryHandler#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LOGGER", "field_14101", "LOGGER", "f_9675_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.network.handler.LegacyQueryHandler#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LOGGER", "field_14101", "LOGGER", "f_9675_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.network.handler.LegacyQueryHandler#server
    static jobject get_field_server(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "server", "field_44998", "server", "f_291585_"), "Lalh;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.network.handler.LegacyQueryHandler#server
    static void set_field_server(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "server", "field_44998", "server", "f_291585_"), "Lalh;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_channelRead() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("channelRead", "channelRead", "channelRead", "channelRead", "channelRead"), "(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;)V");
    }

    static void channelRead(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_channelRead();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_isLegacyQuery() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "readCustomPayloadPacket", "method_52380", "isLegacyQuery", "m_294298_"), "(Lio/netty/buffer/ByteBuf;)Z");
    }

    static jboolean isLegacyQuery(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_isLegacyQuery();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getResponseFor1_2() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "createVersion0Response", "method_52379", "getResponseFor1_2", "m_293505_"), "(Lalh;)Ljava/lang/String;");
    }

    static jobject getResponseFor1_2(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getResponseFor1_2();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getResponse() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "createVersion1Response", "method_52382", "getResponse", "m_295367_"), "(Lalh;)Ljava/lang/String;");
    }

    static jobject getResponse(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getResponse();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_reply() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "sendFlushAndClose", "method_14344", "reply", "m_9680_"), "(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;)V");
    }

    static void reply(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_reply();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_createBuf() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "createLegacyDisconnectPacket", "method_52381", "createBuf", "m_294988_"), "(Lio/netty/buffer/ByteBufAllocator;Ljava/lang/String;)Lio/netty/buffer/ByteBuf;");
    }

    static jobject createBuf(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_createBuf();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_NETWORK_HANDLER_LEGACYQUERYHANDLER_HPP