// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_NETWORK_HANDLER_SIZEPREPENDER_HPP
#define NET_MINECRAFT_NETWORK_HANDLER_SIZEPREPENDER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.network.handler.SizePrepender
 * Remapped: wt
 */
namespace SizePrepender {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("wt", "net/minecraft/network/Varint21LengthFieldPrepender", "net/minecraft/class_2552", "net/minecraft/network/handler/SizePrepender", "net/minecraft/src/C_4990_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.network.handler.SizePrepender#MAX_PREPEND_LENGTH
    [[maybe_unused]] static jint get_field_MAX_PREPEND_LENGTH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "MAX_VARINT21_BYTES", "field_33288", "MAX_PREPEND_LENGTH", "f_291509_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.network.handler.SizePrepender#MAX_PREPEND_LENGTH
    [[maybe_unused]] static void set_field_MAX_PREPEND_LENGTH(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "MAX_VARINT21_BYTES", "field_33288", "MAX_PREPEND_LENGTH", "f_291509_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    static jmethodID methodID_encode() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "encode", "method_10840", "encode", "encode"), "(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)V");
    }

    static void encode(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_encode();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
};

#endif // NET_MINECRAFT_NETWORK_HANDLER_SIZEPREPENDER_HPP