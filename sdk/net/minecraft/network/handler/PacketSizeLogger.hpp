// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_NETWORK_HANDLER_PACKETSIZELOGGER_HPP
#define NET_MINECRAFT_NETWORK_HANDLER_PACKETSIZELOGGER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.network.handler.PacketSizeLogger
 * Remapped: vm
 */
namespace PacketSizeLogger {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("vm", "net/minecraft/network/BandwidthDebugMonitor", "net/minecraft/class_8762", "net/minecraft/network/handler/PacketSizeLogger", "net/minecraft/src/C_290249_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.network.handler.PacketSizeLogger#packetSizeInBytes
    static jobject get_field_packetSizeInBytes(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "bytesReceived", "field_45953", "packetSizeInBytes", "f_290775_"), "Ljava/util/concurrent/atomic/AtomicInteger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.network.handler.PacketSizeLogger#packetSizeInBytes
    static void set_field_packetSizeInBytes(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "bytesReceived", "field_45953", "packetSizeInBytes", "f_290775_"), "Ljava/util/concurrent/atomic/AtomicInteger;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.network.handler.PacketSizeLogger#log
    static jobject get_field_log(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "bandwidthLogger", "field_45954", "log", "f_291451_"), "Lblr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.network.handler.PacketSizeLogger#log
    static void set_field_log(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "bandwidthLogger", "field_45954", "log", "f_291451_"), "Lblr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_increment() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "onReceive", "method_53504", "increment", "m_295508_"), "(I)V");
    }

    static void increment(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_increment();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_push() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "tick", "method_53503", "push", "m_293130_"), "()V");
    }

    static void push(const jobject& obj) {
                
       const auto methodID = methodID_push();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_NETWORK_HANDLER_PACKETSIZELOGGER_HPP