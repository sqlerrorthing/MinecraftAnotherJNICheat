// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_NETWORK_LISTENER_PACKETLISTENER_HPP
#define NET_MINECRAFT_NETWORK_LISTENER_PACKETLISTENER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.network.listener.PacketListener
 * Remapped: wf
 */
namespace PacketListener {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("wf", "net/minecraft/network/PacketListener", "net/minecraft/class_2547", "net/minecraft/network/listener/PacketListener", "net/minecraft/src/C_4986_"));
        }
        return cachedClass;
    };

    static jmethodID methodID_getSide() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "flow", "method_52895", "getSide", "m_292762_"), "()Lzh;");
    }

    static jobject getSide(const jobject& obj) {
                
       const auto methodID = methodID_getSide();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getPhase() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "protocol", "method_52280", "getPhase", "m_292716_"), "()Lvu;");
    }

    static jobject getPhase(const jobject& obj) {
                
       const auto methodID = methodID_getPhase();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_onDisconnected() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "onDisconnect", "method_10839", "onDisconnected", "m_7026_"), "(Lvv;)V");
    }

    static void onDisconnected(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onDisconnected();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_onPacketException() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "onPacketError", "method_59807", "onPacketException", "m_322364_"), "(Lzg;Ljava/lang/Exception;)V");
    }

    static void onPacketException(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_onPacketException();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_createDisconnectionInfo() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "createDisconnectionInfo", "method_60881", "createDisconnectionInfo", "m_339360_"), "(Lwz;Ljava/lang/Throwable;)Lvv;");
    }

    static jobject createDisconnectionInfo(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_createDisconnectionInfo();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_isConnectionOpen() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "isAcceptingMessages", "method_48106", "isConnectionOpen", "m_6198_"), "()Z");
    }

    static jboolean isConnectionOpen(const jobject& obj) {
                
       const auto methodID = methodID_isConnectionOpen();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_accepts() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "shouldHandleMessage", "method_52413", "accepts", "m_294638_"), "(Lzg;)Z");
    }

    static jboolean accepts(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_accepts();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_fillCrashReport() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "fillCrashReport", "method_55622", "fillCrashReport", "m_307358_"), "(Lo;)V");
    }

    static void fillCrashReport(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_fillCrashReport();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_addCustomCrashReportInfo() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "fillListenerSpecificCrashDetails", "method_55597", "addCustomCrashReportInfo", "m_306579_"), "(Lo;Lp;)V");
    }

    static void addCustomCrashReportInfo(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_addCustomCrashReportInfo();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_NETWORK_LISTENER_PACKETLISTENER_HPP