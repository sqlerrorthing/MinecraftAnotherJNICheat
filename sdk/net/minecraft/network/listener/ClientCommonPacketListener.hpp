// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_NETWORK_LISTENER_CLIENTCOMMONPACKETLISTENER_HPP
#define NET_MINECRAFT_NETWORK_LISTENER_CLIENTCOMMONPACKETLISTENER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.network.listener.ClientCommonPacketListener
 * Remapped: zm
 */
namespace ClientCommonPacketListener {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("zm", "net/minecraft/network/protocol/common/ClientCommonPacketListener", "net/minecraft/class_8705", "net/minecraft/network/listener/ClientCommonPacketListener", "net/minecraft/src/C_290099_"));
        }
        return cachedClass;
    };

    static jmethodID methodID_onKeepAlive() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "handleKeepAlive", "method_52782", "onKeepAlive", "m_292764_"), "(Lzq;)V");
    }

    static void onKeepAlive(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onKeepAlive();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_onPing() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "handlePing", "method_52783", "onPing", "m_293992_"), "(Lzr;)V");
    }

    static void onPing(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onPing();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_onCustomPayload() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "handleCustomPayload", "method_52780", "onCustomPayload", "m_293213_"), "(Lzn;)V");
    }

    static void onCustomPayload(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onCustomPayload();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_onDisconnect() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "handleDisconnect", "method_52781", "onDisconnect", "m_293975_"), "(Lzp;)V");
    }

    static void onDisconnect(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onDisconnect();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_onResourcePackSend() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "handleResourcePackPush", "method_52784", "onResourcePackSend", "m_305543_"), "(Lzt;)V");
    }

    static void onResourcePackSend(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onResourcePackSend();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_onResourcePackRemove() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "handleResourcePackPop", "method_55512", "onResourcePackRemove", "m_292941_"), "(Lzs;)V");
    }

    static void onResourcePackRemove(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onResourcePackRemove();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_onSynchronizeTags() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "handleUpdateTags", "method_11126", "onSynchronizeTags", "m_105133_"), "(Lzx;)V");
    }

    static void onSynchronizeTags(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onSynchronizeTags();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_onStoreCookie() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "handleStoreCookie", "method_56149", "onStoreCookie", "m_320373_"), "(Lzv;)V");
    }

    static void onStoreCookie(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onStoreCookie();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_onServerTransfer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "handleTransfer", "method_56150", "onServerTransfer", "m_319408_"), "(Lzw;)V");
    }

    static void onServerTransfer(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onServerTransfer();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_onCustomReportDetails() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "handleCustomReportDetails", "method_60883", "onCustomReportDetails", "m_338478_"), "(Lzo;)V");
    }

    static void onCustomReportDetails(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onCustomReportDetails();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_onServerLinks() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "handleServerLinks", "method_60884", "onServerLinks", "m_338934_"), "(Lzu;)V");
    }

    static void onServerLinks(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_onServerLinks();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_NETWORK_LISTENER_CLIENTCOMMONPACKETLISTENER_HPP