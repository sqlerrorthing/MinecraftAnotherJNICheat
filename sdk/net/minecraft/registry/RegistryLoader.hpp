// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_REGISTRY_REGISTRYLOADER_HPP
#define NET_MINECRAFT_REGISTRY_REGISTRYLOADER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.registry.RegistryLoader
 * Remapped: akm
 */
namespace RegistryLoader {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("akm", "net/minecraft/resources/RegistryDataLoader", "net/minecraft/class_7655", "net/minecraft/registry/RegistryLoader", "net/minecraft/src/C_243574_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.registry.RegistryLoader#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "LOGGER", "field_39970", "LOGGER", "f_243935_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.registry.RegistryLoader#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "LOGGER", "field_39970", "LOGGER", "f_243935_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.registry.RegistryLoader#EXPERIMENTAL_ENTRY_INFO
    [[maybe_unused]] static jobject get_field_EXPERIMENTAL_ENTRY_INFO() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "NETWORK_REGISTRATION_INFO", "field_49024", "EXPERIMENTAL_ENTRY_INFO", "f_315375_"), "Ljy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.registry.RegistryLoader#EXPERIMENTAL_ENTRY_INFO
    [[maybe_unused]] static void set_field_EXPERIMENTAL_ENTRY_INFO(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "NETWORK_REGISTRATION_INFO", "field_49024", "EXPERIMENTAL_ENTRY_INFO", "f_315375_"), "Ljy;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.registry.RegistryLoader#RESOURCE_ENTRY_INFO_GETTER
    [[maybe_unused]] static jobject get_field_RESOURCE_ENTRY_INFO_GETTER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "REGISTRATION_INFO_CACHE", "field_49025", "RESOURCE_ENTRY_INFO_GETTER", "f_315605_"), "Ljava/util/function/Function;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.registry.RegistryLoader#RESOURCE_ENTRY_INFO_GETTER
    [[maybe_unused]] static void set_field_RESOURCE_ENTRY_INFO_GETTER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "REGISTRATION_INFO_CACHE", "field_49025", "RESOURCE_ENTRY_INFO_GETTER", "f_315605_"), "Ljava/util/function/Function;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.RegistryLoader#DYNAMIC_REGISTRIES
    [[maybe_unused]] static jobject get_field_DYNAMIC_REGISTRIES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "WORLDGEN_REGISTRIES", "field_39968", "DYNAMIC_REGISTRIES", "f_243803_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.RegistryLoader#DYNAMIC_REGISTRIES
    [[maybe_unused]] static void set_field_DYNAMIC_REGISTRIES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "WORLDGEN_REGISTRIES", "field_39968", "DYNAMIC_REGISTRIES", "f_243803_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.RegistryLoader#DIMENSION_REGISTRIES
    [[maybe_unused]] static jobject get_field_DIMENSION_REGISTRIES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "DIMENSION_REGISTRIES", "field_39969", "DIMENSION_REGISTRIES", "f_244547_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.RegistryLoader#DIMENSION_REGISTRIES
    [[maybe_unused]] static void set_field_DIMENSION_REGISTRIES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "DIMENSION_REGISTRIES", "field_39969", "DIMENSION_REGISTRIES", "f_244547_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.RegistryLoader#SYNCED_REGISTRIES
    [[maybe_unused]] static jobject get_field_SYNCED_REGISTRIES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "SYNCHRONIZED_REGISTRIES", "field_48709", "SYNCED_REGISTRIES", "f_314951_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.RegistryLoader#SYNCED_REGISTRIES
    [[maybe_unused]] static void set_field_SYNCED_REGISTRIES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "SYNCHRONIZED_REGISTRIES", "field_48709", "SYNCED_REGISTRIES", "f_314951_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_loadFromResource() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "load", "method_56515", "loadFromResource", "m_247207_"), "(Laue;Lka;Ljava/util/List;)Lka$b;");
    }

    static jobject loadFromResource(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_loadFromResource();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_loadFromNetwork() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "load", "method_56519", "loadFromNetwork", "m_321840_"), "(Ljava/util/Map;Lauh;Lka;Ljava/util/List;)Lka$b;");
    }

    static jobject loadFromNetwork(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_loadFromNetwork();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_load() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "load", "method_45121", "load", "m_324686_"), "(Lakm$b;Lka;Ljava/util/List;)Lka$b;");
    }

    static jobject load(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_load();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_createInfoGetter() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "createContext", "method_46619", "createInfoGetter", "m_255261_"), "(Lka;Ljava/util/List;)Lakp$c;");
    }

    static jobject createInfoGetter(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_createInfoGetter();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_createInfo() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "createInfoForNewRegistry", "method_46620", "createInfo", "m_255259_"), "(Lki;)Lakp$b;");
    }

    static jobject createInfo(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_createInfo();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID__createInfo() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "createInfoForContextRegistry", "method_46618", "createInfo", "m_255016_"), "(Ljz;)Lakp$b;");
    }

    static jobject _createInfo(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID__createInfo();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_writeLoadingError() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "logErrors", "method_45126", "writeLoadingError", "m_245896_"), "(Ljava/util/Map;)V");
    }

    static void writeLoadingError(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_writeLoadingError();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_parseAndAdd() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "loadElementFromResource", "method_56915", "parseAndAdd", "m_323888_"), "(Lki;Lcom/mojang/serialization/Decoder;Lakp;Lakq;Lauc;Ljy;)V");
    }

    static void parseAndAdd(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jobject& arg4, const jobject& arg5) {
       const auto clazz = self();
       const auto methodID = methodID_parseAndAdd();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4, arg5);
    };
    
    static jmethodID methodID__loadFromResource() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "loadContentsFromManager", "method_45122", "loadFromResource", "m_324595_"), "(Laue;Lakp$c;Lki;Lcom/mojang/serialization/Decoder;Ljava/util/Map;)V");
    }

    static void _loadFromResource(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jobject& arg4) {
       const auto clazz = self();
       const auto methodID = methodID__loadFromResource();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID__loadFromNetwork() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "loadContentsFromNetwork", "method_56518", "loadFromNetwork", "m_321304_"), "(Ljava/util/Map;Lauh;Lakp$c;Lki;Lcom/mojang/serialization/Decoder;Ljava/util/Map;)V");
    }

    static void _loadFromNetwork(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jobject& arg4, const jobject& arg5) {
       const auto clazz = self();
       const auto methodID = methodID__loadFromNetwork();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4, arg5);
    };
    
};

#endif // NET_MINECRAFT_REGISTRY_REGISTRYLOADER_HPP