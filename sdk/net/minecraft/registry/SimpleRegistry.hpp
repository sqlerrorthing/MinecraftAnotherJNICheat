// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_REGISTRY_SIMPLEREGISTRY_HPP
#define NET_MINECRAFT_REGISTRY_SIMPLEREGISTRY_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.registry.SimpleRegistry
 * Remapped: ju
 */
namespace SimpleRegistry {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("ju", "net/minecraft/core/MappedRegistry", "net/minecraft/class_2370", "net/minecraft/registry/SimpleRegistry", "net/minecraft/src/C_4700_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.registry.SimpleRegistry#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "LOGGER", "field_36635", "LOGGER", "f_211050_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.registry.SimpleRegistry#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "LOGGER", "field_36635", "LOGGER", "f_211050_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for default field net.minecraft.registry.SimpleRegistry#key
    static jobject get_field_key(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "key", "field_41126", "key", "f_256817_"), "Lakq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.registry.SimpleRegistry#key
    static void set_field_key(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "key", "field_41126", "key", "f_256817_"), "Lakq;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.registry.SimpleRegistry#rawIdToEntry
    static jobject get_field_rawIdToEntry(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "byId", "field_26682", "rawIdToEntry", "f_122672_"), "Lit/unimi/dsi/fastutil/objects/ObjectList;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.registry.SimpleRegistry#rawIdToEntry
    static void set_field_rawIdToEntry(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "byId", "field_26682", "rawIdToEntry", "f_122672_"), "Lit/unimi/dsi/fastutil/objects/ObjectList;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.registry.SimpleRegistry#entryToRawId
    static jobject get_field_entryToRawId(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "toId", "field_26683", "entryToRawId", "f_122673_"), "Lit/unimi/dsi/fastutil/objects/Reference2IntMap;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.registry.SimpleRegistry#entryToRawId
    static void set_field_entryToRawId(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "toId", "field_26683", "entryToRawId", "f_122673_"), "Lit/unimi/dsi/fastutil/objects/Reference2IntMap;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.registry.SimpleRegistry#idToEntry
    static jobject get_field_idToEntry(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "byLocation", "field_11107", "idToEntry", "f_205841_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.registry.SimpleRegistry#idToEntry
    static void set_field_idToEntry(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "byLocation", "field_11107", "idToEntry", "f_205841_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.registry.SimpleRegistry#keyToEntry
    static jobject get_field_keyToEntry(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "byKey", "field_25067", "keyToEntry", "f_205842_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.registry.SimpleRegistry#keyToEntry
    static void set_field_keyToEntry(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "byKey", "field_25067", "keyToEntry", "f_205842_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.registry.SimpleRegistry#valueToEntry
    static jobject get_field_valueToEntry(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "byValue", "field_36461", "valueToEntry", "f_205843_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.registry.SimpleRegistry#valueToEntry
    static void set_field_valueToEntry(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "byValue", "field_36461", "valueToEntry", "f_205843_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.registry.SimpleRegistry#keyToEntryInfo
    static jobject get_field_keyToEntryInfo(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "registrationInfos", "field_49135", "keyToEntryInfo", "f_314552_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.registry.SimpleRegistry#keyToEntryInfo
    static void set_field_keyToEntryInfo(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "registrationInfos", "field_49135", "keyToEntryInfo", "f_314552_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.registry.SimpleRegistry#lifecycle
    static jobject get_field_lifecycle(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "registryLifecycle", "field_26732", "lifecycle", "f_256989_"), "Lcom/mojang/serialization/Lifecycle;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.registry.SimpleRegistry#lifecycle
    static void set_field_lifecycle(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "registryLifecycle", "field_26732", "lifecycle", "f_256989_"), "Lcom/mojang/serialization/Lifecycle;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.registry.SimpleRegistry#tagToEntryList
    static jobject get_field_tagToEntryList(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "tags", "field_36462", "tagToEntryList", "f_205844_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.registry.SimpleRegistry#tagToEntryList
    static void set_field_tagToEntryList(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "tags", "field_36462", "tagToEntryList", "f_205844_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.registry.SimpleRegistry#frozen
    static jboolean get_field_frozen(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "frozen", "field_36463", "frozen", "f_205845_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.registry.SimpleRegistry#frozen
    static void set_field_frozen(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "frozen", "field_36463", "frozen", "f_205845_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.registry.SimpleRegistry#intrusiveValueToEntry
    static jobject get_field_intrusiveValueToEntry(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "unregisteredIntrusiveHolders", "field_40584", "intrusiveValueToEntry", "f_244282_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.registry.SimpleRegistry#intrusiveValueToEntry
    static void set_field_intrusiveValueToEntry(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "unregisteredIntrusiveHolders", "field_40584", "intrusiveValueToEntry", "f_244282_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.registry.SimpleRegistry#wrapper
    static jobject get_field_wrapper(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "lookup", "field_41127", "wrapper", "f_256971_"), "Ljo$b;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.registry.SimpleRegistry#wrapper
    static void set_field_wrapper(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "lookup", "field_41127", "wrapper", "f_256971_"), "Ljo$b;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.registry.SimpleRegistry#tagLock
    static jobject get_field_tagLock(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("o", "tagAdditionLock", "field_51521", "tagLock", "f_336400_"), "Ljava/lang/Object;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.registry.SimpleRegistry#tagLock
    static void set_field_tagLock(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("o", "tagAdditionLock", "field_51521", "tagLock", "f_336400_"), "Ljava/lang/Object;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_getKey() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "key", "method_30517", "getKey", "m_123023_"), "()Lakq;");
    }

    static jobject getKey(const jobject& obj) {
                
       const auto methodID = methodID_getKey();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_assertNotFrozen() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "validateWrite", "method_45939", "assertNotFrozen", "m_245419_"), "()V");
    }

    static void assertNotFrozen(const jobject& obj) {
                
       const auto methodID = methodID_assertNotFrozen();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID__assertNotFrozen() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "validateWrite", "method_40274", "assertNotFrozen", "m_205921_"), "(Lakq;)V");
    }

    static void _assertNotFrozen(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__assertNotFrozen();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_add() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "register", "method_10272", "add", "m_255290_"), "(Lakq;Ljava/lang/Object;Ljy;)Ljm$c;");
    }

    static jobject add(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_add();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_getId() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getKey", "method_10221", "getId", "m_7981_"), "(Ljava/lang/Object;)Lakr;");
    }

    static jobject getId(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getId();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__getKey() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getResourceKey", "method_29113", "getKey", "m_7854_"), "(Ljava/lang/Object;)Ljava/util/Optional;");
    }

    static jobject _getKey(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__getKey();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getRawId() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getId", "method_10206", "getRawId", "m_7447_"), "(Ljava/lang/Object;)I");
    }

    static jint getRawId(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getRawId();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_get() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "get", "method_29107", "get", "m_6246_"), "(Lakq;)Ljava/lang/Object;");
    }

    static jobject get(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_get();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__get() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "byId", "method_10200", "get", "m_7942_"), "(I)Ljava/lang/Object;");
    }

    static jobject _get(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID__get();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getEntry() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getHolder", "method_40265", "getEntry", "m_203300_"), "(I)Ljava/util/Optional;");
    }

    static jobject getEntry(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_getEntry();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__getEntry() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getHolder", "method_55841", "getEntry", "m_320017_"), "(Lakr;)Ljava/util/Optional;");
    }

    static jobject _getEntry(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__getEntry();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID___getEntry() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getHolder", "method_40264", "getEntry", "m_203636_"), "(Lakq;)Ljava/util/Optional;");
    }

    static jobject __getEntry(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID___getEntry();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getDefaultEntry() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getAny", "method_60385", "getDefaultEntry", "m_338366_"), "()Ljava/util/Optional;");
    }

    static jobject getDefaultEntry(const jobject& obj) {
                
       const auto methodID = methodID_getDefaultEntry();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID____getEntry() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "wrapAsHolder", "method_47983", "getEntry", "m_263177_"), "(Ljava/lang/Object;)Ljm;");
    }

    static jobject ___getEntry(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID____getEntry();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getOrCreateEntry() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("i", "getOrCreateHolderOrThrow", "method_44298", "getOrCreateEntry", "m_245420_"), "(Lakq;)Ljm$c;");
    }

    static jobject getOrCreateEntry(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getOrCreateEntry();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_size() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "size", "method_10204", "size", "m_13562_"), "()I");
    }

    static jint size(const jobject& obj) {
                
       const auto methodID = methodID_size();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getEntryInfo() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "registrationInfo", "method_57058", "getEntryInfo", "m_6228_"), "(Lakq;)Ljava/util/Optional;");
    }

    static jobject getEntryInfo(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getEntryInfo();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getLifecycle() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "registryLifecycle", "method_31138", "getLifecycle", "m_203658_"), "()Lcom/mojang/serialization/Lifecycle;");
    }

    static jobject getLifecycle(const jobject& obj) {
                
       const auto methodID = methodID_getLifecycle();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_iterator() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("iterator", "iterator", "", "", "iterator"), "()Ljava/util/Iterator;");
    }

    static jobject iterator(const jobject& obj) {
                
       const auto methodID = methodID_iterator();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID___get() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "get", "method_10223", "get", "m_7745_"), "(Lakr;)Ljava/lang/Object;");
    }

    static jobject __get(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID___get();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getValue() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getValueFromNullable", "method_40253", "getValue", "m_205865_"), "(Ljm$c;)Ljava/lang/Object;");
    }

    static jobject getValue(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getValue();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getIds() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "keySet", "method_10235", "getIds", "m_6566_"), "()Ljava/util/Set;");
    }

    static jobject getIds(const jobject& obj) {
                
       const auto methodID = methodID_getIds();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getKeys() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "registryKeySet", "method_42021", "getKeys", "m_214010_"), "()Ljava/util/Set;");
    }

    static jobject getKeys(const jobject& obj) {
                
       const auto methodID = methodID_getKeys();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getEntrySet() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "entrySet", "method_29722", "getEntrySet", "m_6579_"), "()Ljava/util/Set;");
    }

    static jobject getEntrySet(const jobject& obj) {
                
       const auto methodID = methodID_getEntrySet();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_streamEntries() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("i", "holders", "method_40270", "streamEntries", "m_203611_"), "()Ljava/util/stream/Stream;");
    }

    static jobject streamEntries(const jobject& obj) {
                
       const auto methodID = methodID_streamEntries();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_streamTagsAndEntries() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("j", "getTags", "method_40272", "streamTagsAndEntries", "m_203612_"), "()Ljava/util/stream/Stream;");
    }

    static jobject streamTagsAndEntries(const jobject& obj) {
                
       const auto methodID = methodID_streamTagsAndEntries();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getOrCreateEntryList() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getOrCreateTag", "method_40260", "getOrCreateEntryList", "m_203561_"), "(Lawu;)Ljq$c;");
    }

    static jobject getOrCreateEntryList(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getOrCreateEntryList();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_createNamedEntryList() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "createTag", "method_40562", "createNamedEntryList", "m_211067_"), "(Lawu;)Ljq$c;");
    }

    static jobject createNamedEntryList(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_createNamedEntryList();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_streamTags() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("k", "getTagNames", "method_40273", "streamTags", "m_203613_"), "()Ljava/util/stream/Stream;");
    }

    static jobject streamTags(const jobject& obj) {
                
       const auto methodID = methodID_streamTags();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_isEmpty() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("l", "isEmpty", "method_35863", "isEmpty", "m_142427_"), "()Z");
    }

    static jboolean isEmpty(const jobject& obj) {
                
       const auto methodID = methodID_isEmpty();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getRandom() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getRandom", "method_10240", "getRandom", "m_213642_"), "(Layw;)Ljava/util/Optional;");
    }

    static jobject getRandom(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getRandom();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_containsId() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "containsKey", "method_10250", "containsId", "m_7804_"), "(Lakr;)Z");
    }

    static jboolean containsId(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_containsId();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_contains() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "containsKey", "method_35842", "contains", "m_142003_"), "(Lakq;)Z");
    }

    static jboolean contains(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_contains();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_freeze() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("m", "freeze", "method_40276", "freeze", "m_203521_"), "()Ljz;");
    }

    static jobject freeze(const jobject& obj) {
                
       const auto methodID = methodID_freeze();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_createEntry() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "createIntrusiveHolder", "method_40269", "createEntry", "m_203693_"), "(Ljava/lang/Object;)Ljm$c;");
    }

    static jobject createEntry(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_createEntry();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getEntryList() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getTag", "method_40266", "getEntryList", "m_203431_"), "(Lawu;)Ljava/util/Optional;");
    }

    static jobject getEntryList(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getEntryList();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_populateTags() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "bindTags", "method_40257", "populateTags", "m_203652_"), "(Ljava/util/Map;)V");
    }

    static void populateTags(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_populateTags();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_clearTags() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("n", "resetTags", "method_40278", "clearTags", "m_203635_"), "()V");
    }

    static void clearTags(const jobject& obj) {
                
       const auto methodID = methodID_clearTags();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_createMutableEntryLookup() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("o", "createRegistrationLookup", "method_46769", "createMutableEntryLookup", "m_203505_"), "()Ljn;");
    }

    static jobject createMutableEntryLookup(const jobject& obj) {
                
       const auto methodID = methodID_createMutableEntryLookup();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getEntryOwner() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("p", "holderOwner", "method_46770", "getEntryOwner", "m_255331_"), "()Ljp;");
    }

    static jobject getEntryOwner(const jobject& obj) {
                
       const auto methodID = methodID_getEntryOwner();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getReadOnlyWrapper() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("q", "asLookup", "method_46771", "getReadOnlyWrapper", "m_255303_"), "()Ljo$b;");
    }

    static jobject getReadOnlyWrapper(const jobject& obj) {
                
       const auto methodID = methodID_getReadOnlyWrapper();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_REGISTRY_SIMPLEREGISTRY_HPP