// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_REGISTRY_REGISTRYOPS_HPP
#define NET_MINECRAFT_REGISTRY_REGISTRYOPS_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.registry.RegistryOps
 * Remapped: akp
 */
namespace RegistryOps {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("akp", "net/minecraft/resources/RegistryOps", "net/minecraft/class_6903", "net/minecraft/registry/RegistryOps", "net/minecraft/src/C_203255_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.registry.RegistryOps#registryInfoGetter
    static jobject get_field_registryInfoGetter(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "lookupProvider", "field_40852", "registryInfoGetter", "f_254668_"), "Lakp$c;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.registry.RegistryOps#registryInfoGetter
    static void set_field_registryInfoGetter(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "lookupProvider", "field_40852", "registryInfoGetter", "f_254668_"), "Lakp$c;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_of() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "create", "method_46632", "of", "m_255058_"), "(Lcom/mojang/serialization/DynamicOps;Ljo$a;)Lakp;");
    }

    static jobject of(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_of();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__of() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "create", "method_40414", "of", "m_255060_"), "(Lcom/mojang/serialization/DynamicOps;Lakp$c;)Lakp;");
    }

    static jobject _of(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID__of();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_withRegistry() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "injectRegistryContext", "method_56622", "withRegistry", "m_321059_"), "(Lcom/mojang/serialization/Dynamic;Ljo$a;)Lcom/mojang/serialization/Dynamic;");
    }

    static jobject withRegistry(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_withRegistry();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_withDelegate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "withParent", "method_57110", "withDelegate", "m_322470_"), "(Lcom/mojang/serialization/DynamicOps;)Lakp;");
    }

    static jobject withDelegate(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_withDelegate();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getOwner() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "owner", "method_46628", "getOwner", "m_255056_"), "(Lakq;)Ljava/util/Optional;");
    }

    static jobject getOwner(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getOwner();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getEntryLookup() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getter", "method_46634", "getEntryLookup", "m_255006_"), "(Lakq;)Ljava/util/Optional;");
    }

    static jobject getEntryLookup(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getEntryLookup();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getEntryLookupCodec() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "retrieveGetter", "method_46636", "getEntryLookupCodec", "m_255175_"), "(Lakq;)Lcom/mojang/serialization/codecs/RecordCodecBuilder;");
    }

    static jobject getEntryLookupCodec(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getEntryLookupCodec();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getEntryCodec() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("d", "retrieveElement", "method_46637", "getEntryCodec", "m_254866_"), "(Lakq;)Lcom/mojang/serialization/codecs/RecordCodecBuilder;");
    }

    static jobject getEntryCodec(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getEntryCodec();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_REGISTRY_REGISTRYOPS_HPP