// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_REGISTRY_REGISTRIES_HPP
#define NET_MINECRAFT_REGISTRY_REGISTRIES_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.registry.Registries
 * Remapped: lt
 */
namespace Registries {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("lt", "net/minecraft/core/registries/BuiltInRegistries", "net/minecraft/class_7923", "net/minecraft/registry/Registries", "net/minecraft/src/C_256712_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.registry.Registries#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aB", "LOGGER", "field_41168", "LOGGER", "f_256744_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.registry.Registries#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aB", "LOGGER", "field_41168", "LOGGER", "f_256744_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.registry.Registries#DEFAULT_ENTRIES
    [[maybe_unused]] static jobject get_field_DEFAULT_ENTRIES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aC", "LOADERS", "field_41169", "DEFAULT_ENTRIES", "f_256751_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.registry.Registries#DEFAULT_ENTRIES
    [[maybe_unused]] static void set_field_DEFAULT_ENTRIES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aC", "LOADERS", "field_41169", "DEFAULT_ENTRIES", "f_256751_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.registry.Registries#ROOT
    [[maybe_unused]] static jobject get_field_ROOT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aD", "WRITABLE_REGISTRY", "field_41170", "ROOT", "f_256935_"), "Lki;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.registry.Registries#ROOT
    [[maybe_unused]] static void set_field_ROOT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aD", "WRITABLE_REGISTRY", "field_41170", "ROOT", "f_256935_"), "Lki;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.Registries#GAME_EVENT
    [[maybe_unused]] static jobject get_field_GAME_EVENT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "GAME_EVENT", "field_41171", "GAME_EVENT", "f_256726_"), "Ljh;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.Registries#GAME_EVENT
    [[maybe_unused]] static void set_field_GAME_EVENT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "GAME_EVENT", "field_41171", "GAME_EVENT", "f_256726_"), "Ljh;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.Registries#SOUND_EVENT
    [[maybe_unused]] static jobject get_field_SOUND_EVENT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "SOUND_EVENT", "field_41172", "SOUND_EVENT", "f_256894_"), "Ljz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.Registries#SOUND_EVENT
    [[maybe_unused]] static void set_field_SOUND_EVENT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "SOUND_EVENT", "field_41172", "SOUND_EVENT", "f_256894_"), "Ljz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.Registries#FLUID
    [[maybe_unused]] static jobject get_field_FLUID() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "FLUID", "field_41173", "FLUID", "f_257020_"), "Ljh;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.Registries#FLUID
    [[maybe_unused]] static void set_field_FLUID(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "FLUID", "field_41173", "FLUID", "f_257020_"), "Ljh;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.Registries#STATUS_EFFECT
    [[maybe_unused]] static jobject get_field_STATUS_EFFECT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "MOB_EFFECT", "field_41174", "STATUS_EFFECT", "f_256974_"), "Ljz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.Registries#STATUS_EFFECT
    [[maybe_unused]] static void set_field_STATUS_EFFECT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "MOB_EFFECT", "field_41174", "STATUS_EFFECT", "f_256974_"), "Ljz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.Registries#BLOCK
    [[maybe_unused]] static jobject get_field_BLOCK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "BLOCK", "field_41175", "BLOCK", "f_256975_"), "Ljh;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.Registries#BLOCK
    [[maybe_unused]] static void set_field_BLOCK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "BLOCK", "field_41175", "BLOCK", "f_256975_"), "Ljh;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.Registries#ENTITY_TYPE
    [[maybe_unused]] static jobject get_field_ENTITY_TYPE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "ENTITY_TYPE", "field_41177", "ENTITY_TYPE", "f_256780_"), "Ljh;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.Registries#ENTITY_TYPE
    [[maybe_unused]] static void set_field_ENTITY_TYPE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "ENTITY_TYPE", "field_41177", "ENTITY_TYPE", "f_256780_"), "Ljh;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.Registries#ITEM
    [[maybe_unused]] static jobject get_field_ITEM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "ITEM", "field_41178", "ITEM", "f_257033_"), "Ljh;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.Registries#ITEM
    [[maybe_unused]] static void set_field_ITEM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "ITEM", "field_41178", "ITEM", "f_257033_"), "Ljh;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.Registries#POTION
    [[maybe_unused]] static jobject get_field_POTION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "POTION", "field_41179", "POTION", "f_256980_"), "Ljz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.Registries#POTION
    [[maybe_unused]] static void set_field_POTION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "POTION", "field_41179", "POTION", "f_256980_"), "Ljz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.Registries#PARTICLE_TYPE
    [[maybe_unused]] static jobject get_field_PARTICLE_TYPE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "PARTICLE_TYPE", "field_41180", "PARTICLE_TYPE", "f_257034_"), "Ljz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.Registries#PARTICLE_TYPE
    [[maybe_unused]] static void set_field_PARTICLE_TYPE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "PARTICLE_TYPE", "field_41180", "PARTICLE_TYPE", "f_257034_"), "Ljz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.Registries#BLOCK_ENTITY_TYPE
    [[maybe_unused]] static jobject get_field_BLOCK_ENTITY_TYPE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "BLOCK_ENTITY_TYPE", "field_41181", "BLOCK_ENTITY_TYPE", "f_257049_"), "Ljz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.Registries#BLOCK_ENTITY_TYPE
    [[maybe_unused]] static void set_field_BLOCK_ENTITY_TYPE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "BLOCK_ENTITY_TYPE", "field_41181", "BLOCK_ENTITY_TYPE", "f_257049_"), "Ljz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.Registries#CUSTOM_STAT
    [[maybe_unused]] static jobject get_field_CUSTOM_STAT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "CUSTOM_STAT", "field_41183", "CUSTOM_STAT", "f_256771_"), "Ljz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.Registries#CUSTOM_STAT
    [[maybe_unused]] static void set_field_CUSTOM_STAT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "CUSTOM_STAT", "field_41183", "CUSTOM_STAT", "f_256771_"), "Ljz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.Registries#CHUNK_STATUS
    [[maybe_unused]] static jobject get_field_CHUNK_STATUS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "CHUNK_STATUS", "field_41184", "CHUNK_STATUS", "f_256940_"), "Ljh;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.Registries#CHUNK_STATUS
    [[maybe_unused]] static void set_field_CHUNK_STATUS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "CHUNK_STATUS", "field_41184", "CHUNK_STATUS", "f_256940_"), "Ljh;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.Registries#RULE_TEST
    [[maybe_unused]] static jobject get_field_RULE_TEST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "RULE_TEST", "field_41185", "RULE_TEST", "f_256978_"), "Ljz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.Registries#RULE_TEST
    [[maybe_unused]] static void set_field_RULE_TEST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "RULE_TEST", "field_41185", "RULE_TEST", "f_256978_"), "Ljz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.Registries#RULE_BLOCK_ENTITY_MODIFIER
    [[maybe_unused]] static jobject get_field_RULE_BLOCK_ENTITY_MODIFIER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "RULE_BLOCK_ENTITY_MODIFIER", "field_43381", "RULE_BLOCK_ENTITY_MODIFIER", "f_276464_"), "Ljz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.Registries#RULE_BLOCK_ENTITY_MODIFIER
    [[maybe_unused]] static void set_field_RULE_BLOCK_ENTITY_MODIFIER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "RULE_BLOCK_ENTITY_MODIFIER", "field_43381", "RULE_BLOCK_ENTITY_MODIFIER", "f_276464_"), "Ljz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.Registries#POS_RULE_TEST
    [[maybe_unused]] static jobject get_field_POS_RULE_TEST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "POS_RULE_TEST", "field_41186", "POS_RULE_TEST", "f_256957_"), "Ljz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.Registries#POS_RULE_TEST
    [[maybe_unused]] static void set_field_POS_RULE_TEST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "POS_RULE_TEST", "field_41186", "POS_RULE_TEST", "f_256957_"), "Ljz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.Registries#SCREEN_HANDLER
    [[maybe_unused]] static jobject get_field_SCREEN_HANDLER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "MENU", "field_41187", "SCREEN_HANDLER", "f_256818_"), "Ljz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.Registries#SCREEN_HANDLER
    [[maybe_unused]] static void set_field_SCREEN_HANDLER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "MENU", "field_41187", "SCREEN_HANDLER", "f_256818_"), "Ljz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.Registries#RECIPE_TYPE
    [[maybe_unused]] static jobject get_field_RECIPE_TYPE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "RECIPE_TYPE", "field_41188", "RECIPE_TYPE", "f_256990_"), "Ljz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.Registries#RECIPE_TYPE
    [[maybe_unused]] static void set_field_RECIPE_TYPE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "RECIPE_TYPE", "field_41188", "RECIPE_TYPE", "f_256990_"), "Ljz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.Registries#RECIPE_SERIALIZER
    [[maybe_unused]] static jobject get_field_RECIPE_SERIALIZER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "RECIPE_SERIALIZER", "field_41189", "RECIPE_SERIALIZER", "f_256769_"), "Ljz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.Registries#RECIPE_SERIALIZER
    [[maybe_unused]] static void set_field_RECIPE_SERIALIZER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "RECIPE_SERIALIZER", "field_41189", "RECIPE_SERIALIZER", "f_256769_"), "Ljz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.Registries#ATTRIBUTE
    [[maybe_unused]] static jobject get_field_ATTRIBUTE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "ATTRIBUTE", "field_41190", "ATTRIBUTE", "f_256951_"), "Ljz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.Registries#ATTRIBUTE
    [[maybe_unused]] static void set_field_ATTRIBUTE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "ATTRIBUTE", "field_41190", "ATTRIBUTE", "f_256951_"), "Ljz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.Registries#POSITION_SOURCE_TYPE
    [[maybe_unused]] static jobject get_field_POSITION_SOURCE_TYPE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "POSITION_SOURCE_TYPE", "field_41191", "POSITION_SOURCE_TYPE", "f_256972_"), "Ljz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.Registries#POSITION_SOURCE_TYPE
    [[maybe_unused]] static void set_field_POSITION_SOURCE_TYPE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "POSITION_SOURCE_TYPE", "field_41191", "POSITION_SOURCE_TYPE", "f_256972_"), "Ljz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.Registries#COMMAND_ARGUMENT_TYPE
    [[maybe_unused]] static jobject get_field_COMMAND_ARGUMENT_TYPE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "COMMAND_ARGUMENT_TYPE", "field_41192", "COMMAND_ARGUMENT_TYPE", "f_256979_"), "Ljz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.Registries#COMMAND_ARGUMENT_TYPE
    [[maybe_unused]] static void set_field_COMMAND_ARGUMENT_TYPE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "COMMAND_ARGUMENT_TYPE", "field_41192", "COMMAND_ARGUMENT_TYPE", "f_256979_"), "Ljz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.Registries#STAT_TYPE
    [[maybe_unused]] static jobject get_field_STAT_TYPE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "STAT_TYPE", "field_41193", "STAT_TYPE", "f_256899_"), "Ljz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.Registries#STAT_TYPE
    [[maybe_unused]] static void set_field_STAT_TYPE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "STAT_TYPE", "field_41193", "STAT_TYPE", "f_256899_"), "Ljz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.Registries#VILLAGER_TYPE
    [[maybe_unused]] static jobject get_field_VILLAGER_TYPE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "VILLAGER_TYPE", "field_41194", "VILLAGER_TYPE", "f_256934_"), "Ljh;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.Registries#VILLAGER_TYPE
    [[maybe_unused]] static void set_field_VILLAGER_TYPE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "VILLAGER_TYPE", "field_41194", "VILLAGER_TYPE", "f_256934_"), "Ljh;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.Registries#VILLAGER_PROFESSION
    [[maybe_unused]] static jobject get_field_VILLAGER_PROFESSION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "VILLAGER_PROFESSION", "field_41195", "VILLAGER_PROFESSION", "f_256735_"), "Ljh;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.Registries#VILLAGER_PROFESSION
    [[maybe_unused]] static void set_field_VILLAGER_PROFESSION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "VILLAGER_PROFESSION", "field_41195", "VILLAGER_PROFESSION", "f_256735_"), "Ljh;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.Registries#POINT_OF_INTEREST_TYPE
    [[maybe_unused]] static jobject get_field_POINT_OF_INTEREST_TYPE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("y", "POINT_OF_INTEREST_TYPE", "field_41128", "POINT_OF_INTEREST_TYPE", "f_256941_"), "Ljz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.Registries#POINT_OF_INTEREST_TYPE
    [[maybe_unused]] static void set_field_POINT_OF_INTEREST_TYPE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("y", "POINT_OF_INTEREST_TYPE", "field_41128", "POINT_OF_INTEREST_TYPE", "f_256941_"), "Ljz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.Registries#MEMORY_MODULE_TYPE
    [[maybe_unused]] static jobject get_field_MEMORY_MODULE_TYPE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("z", "MEMORY_MODULE_TYPE", "field_41129", "MEMORY_MODULE_TYPE", "f_256784_"), "Ljh;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.Registries#MEMORY_MODULE_TYPE
    [[maybe_unused]] static void set_field_MEMORY_MODULE_TYPE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("z", "MEMORY_MODULE_TYPE", "field_41129", "MEMORY_MODULE_TYPE", "f_256784_"), "Ljh;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.Registries#SENSOR_TYPE
    [[maybe_unused]] static jobject get_field_SENSOR_TYPE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("A", "SENSOR_TYPE", "field_41130", "SENSOR_TYPE", "f_256733_"), "Ljh;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.Registries#SENSOR_TYPE
    [[maybe_unused]] static void set_field_SENSOR_TYPE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("A", "SENSOR_TYPE", "field_41130", "SENSOR_TYPE", "f_256733_"), "Ljh;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.Registries#SCHEDULE
    [[maybe_unused]] static jobject get_field_SCHEDULE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("B", "SCHEDULE", "field_41131", "SCHEDULE", "f_256962_"), "Ljz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.Registries#SCHEDULE
    [[maybe_unused]] static void set_field_SCHEDULE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("B", "SCHEDULE", "field_41131", "SCHEDULE", "f_256962_"), "Ljz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.Registries#ACTIVITY
    [[maybe_unused]] static jobject get_field_ACTIVITY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("C", "ACTIVITY", "field_41132", "ACTIVITY", "f_256785_"), "Ljz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.Registries#ACTIVITY
    [[maybe_unused]] static void set_field_ACTIVITY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("C", "ACTIVITY", "field_41132", "ACTIVITY", "f_256785_"), "Ljz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.Registries#LOOT_POOL_ENTRY_TYPE
    [[maybe_unused]] static jobject get_field_LOOT_POOL_ENTRY_TYPE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("D", "LOOT_POOL_ENTRY_TYPE", "field_41133", "LOOT_POOL_ENTRY_TYPE", "f_257035_"), "Ljz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.Registries#LOOT_POOL_ENTRY_TYPE
    [[maybe_unused]] static void set_field_LOOT_POOL_ENTRY_TYPE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("D", "LOOT_POOL_ENTRY_TYPE", "field_41133", "LOOT_POOL_ENTRY_TYPE", "f_257035_"), "Ljz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.Registries#LOOT_FUNCTION_TYPE
    [[maybe_unused]] static jobject get_field_LOOT_FUNCTION_TYPE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("E", "LOOT_FUNCTION_TYPE", "field_41134", "LOOT_FUNCTION_TYPE", "f_256753_"), "Ljz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.Registries#LOOT_FUNCTION_TYPE
    [[maybe_unused]] static void set_field_LOOT_FUNCTION_TYPE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("E", "LOOT_FUNCTION_TYPE", "field_41134", "LOOT_FUNCTION_TYPE", "f_256753_"), "Ljz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.Registries#LOOT_CONDITION_TYPE
    [[maybe_unused]] static jobject get_field_LOOT_CONDITION_TYPE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("F", "LOOT_CONDITION_TYPE", "field_41135", "LOOT_CONDITION_TYPE", "f_256991_"), "Ljz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.Registries#LOOT_CONDITION_TYPE
    [[maybe_unused]] static void set_field_LOOT_CONDITION_TYPE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("F", "LOOT_CONDITION_TYPE", "field_41135", "LOOT_CONDITION_TYPE", "f_256991_"), "Ljz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.Registries#LOOT_NUMBER_PROVIDER_TYPE
    [[maybe_unused]] static jobject get_field_LOOT_NUMBER_PROVIDER_TYPE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("G", "LOOT_NUMBER_PROVIDER_TYPE", "field_41136", "LOOT_NUMBER_PROVIDER_TYPE", "f_257029_"), "Ljz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.Registries#LOOT_NUMBER_PROVIDER_TYPE
    [[maybe_unused]] static void set_field_LOOT_NUMBER_PROVIDER_TYPE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("G", "LOOT_NUMBER_PROVIDER_TYPE", "field_41136", "LOOT_NUMBER_PROVIDER_TYPE", "f_257029_"), "Ljz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.Registries#LOOT_NBT_PROVIDER_TYPE
    [[maybe_unused]] static jobject get_field_LOOT_NBT_PROVIDER_TYPE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("H", "LOOT_NBT_PROVIDER_TYPE", "field_41137", "LOOT_NBT_PROVIDER_TYPE", "f_256736_"), "Ljz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.Registries#LOOT_NBT_PROVIDER_TYPE
    [[maybe_unused]] static void set_field_LOOT_NBT_PROVIDER_TYPE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("H", "LOOT_NBT_PROVIDER_TYPE", "field_41137", "LOOT_NBT_PROVIDER_TYPE", "f_256736_"), "Ljz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.Registries#LOOT_SCORE_PROVIDER_TYPE
    [[maybe_unused]] static jobject get_field_LOOT_SCORE_PROVIDER_TYPE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("I", "LOOT_SCORE_PROVIDER_TYPE", "field_41138", "LOOT_SCORE_PROVIDER_TYPE", "f_256719_"), "Ljz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.Registries#LOOT_SCORE_PROVIDER_TYPE
    [[maybe_unused]] static void set_field_LOOT_SCORE_PROVIDER_TYPE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("I", "LOOT_SCORE_PROVIDER_TYPE", "field_41138", "LOOT_SCORE_PROVIDER_TYPE", "f_256719_"), "Ljz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.Registries#FLOAT_PROVIDER_TYPE
    [[maybe_unused]] static jobject get_field_FLOAT_PROVIDER_TYPE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("J", "FLOAT_PROVIDER_TYPE", "field_41139", "FLOAT_PROVIDER_TYPE", "f_256926_"), "Ljz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.Registries#FLOAT_PROVIDER_TYPE
    [[maybe_unused]] static void set_field_FLOAT_PROVIDER_TYPE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("J", "FLOAT_PROVIDER_TYPE", "field_41139", "FLOAT_PROVIDER_TYPE", "f_256926_"), "Ljz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.Registries#INT_PROVIDER_TYPE
    [[maybe_unused]] static jobject get_field_INT_PROVIDER_TYPE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("K", "INT_PROVIDER_TYPE", "field_41140", "INT_PROVIDER_TYPE", "f_256942_"), "Ljz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.Registries#INT_PROVIDER_TYPE
    [[maybe_unused]] static void set_field_INT_PROVIDER_TYPE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("K", "INT_PROVIDER_TYPE", "field_41140", "INT_PROVIDER_TYPE", "f_256942_"), "Ljz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.Registries#HEIGHT_PROVIDER_TYPE
    [[maybe_unused]] static jobject get_field_HEIGHT_PROVIDER_TYPE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("L", "HEIGHT_PROVIDER_TYPE", "field_41141", "HEIGHT_PROVIDER_TYPE", "f_256870_"), "Ljz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.Registries#HEIGHT_PROVIDER_TYPE
    [[maybe_unused]] static void set_field_HEIGHT_PROVIDER_TYPE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("L", "HEIGHT_PROVIDER_TYPE", "field_41141", "HEIGHT_PROVIDER_TYPE", "f_256870_"), "Ljz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.Registries#BLOCK_PREDICATE_TYPE
    [[maybe_unused]] static jobject get_field_BLOCK_PREDICATE_TYPE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("M", "BLOCK_PREDICATE_TYPE", "field_41142", "BLOCK_PREDICATE_TYPE", "f_256906_"), "Ljz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.Registries#BLOCK_PREDICATE_TYPE
    [[maybe_unused]] static void set_field_BLOCK_PREDICATE_TYPE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("M", "BLOCK_PREDICATE_TYPE", "field_41142", "BLOCK_PREDICATE_TYPE", "f_256906_"), "Ljz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.Registries#CARVER
    [[maybe_unused]] static jobject get_field_CARVER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("N", "CARVER", "field_41143", "CARVER", "f_257001_"), "Ljz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.Registries#CARVER
    [[maybe_unused]] static void set_field_CARVER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("N", "CARVER", "field_41143", "CARVER", "f_257001_"), "Ljz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.Registries#FEATURE
    [[maybe_unused]] static jobject get_field_FEATURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("O", "FEATURE", "field_41144", "FEATURE", "f_256810_"), "Ljz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.Registries#FEATURE
    [[maybe_unused]] static void set_field_FEATURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("O", "FEATURE", "field_41144", "FEATURE", "f_256810_"), "Ljz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.Registries#STRUCTURE_PLACEMENT
    [[maybe_unused]] static jobject get_field_STRUCTURE_PLACEMENT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("P", "STRUCTURE_PLACEMENT", "field_41145", "STRUCTURE_PLACEMENT", "f_256950_"), "Ljz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.Registries#STRUCTURE_PLACEMENT
    [[maybe_unused]] static void set_field_STRUCTURE_PLACEMENT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("P", "STRUCTURE_PLACEMENT", "field_41145", "STRUCTURE_PLACEMENT", "f_256950_"), "Ljz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.Registries#STRUCTURE_PIECE
    [[maybe_unused]] static jobject get_field_STRUCTURE_PIECE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Q", "STRUCTURE_PIECE", "field_41146", "STRUCTURE_PIECE", "f_257014_"), "Ljz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.Registries#STRUCTURE_PIECE
    [[maybe_unused]] static void set_field_STRUCTURE_PIECE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Q", "STRUCTURE_PIECE", "field_41146", "STRUCTURE_PIECE", "f_257014_"), "Ljz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.Registries#STRUCTURE_TYPE
    [[maybe_unused]] static jobject get_field_STRUCTURE_TYPE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("R", "STRUCTURE_TYPE", "field_41147", "STRUCTURE_TYPE", "f_256763_"), "Ljz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.Registries#STRUCTURE_TYPE
    [[maybe_unused]] static void set_field_STRUCTURE_TYPE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("R", "STRUCTURE_TYPE", "field_41147", "STRUCTURE_TYPE", "f_256763_"), "Ljz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.Registries#PLACEMENT_MODIFIER_TYPE
    [[maybe_unused]] static jobject get_field_PLACEMENT_MODIFIER_TYPE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("S", "PLACEMENT_MODIFIER_TYPE", "field_41148", "PLACEMENT_MODIFIER_TYPE", "f_256986_"), "Ljz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.Registries#PLACEMENT_MODIFIER_TYPE
    [[maybe_unused]] static void set_field_PLACEMENT_MODIFIER_TYPE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("S", "PLACEMENT_MODIFIER_TYPE", "field_41148", "PLACEMENT_MODIFIER_TYPE", "f_256986_"), "Ljz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.Registries#BLOCK_STATE_PROVIDER_TYPE
    [[maybe_unused]] static jobject get_field_BLOCK_STATE_PROVIDER_TYPE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("T", "BLOCKSTATE_PROVIDER_TYPE", "field_41149", "BLOCK_STATE_PROVIDER_TYPE", "f_256760_"), "Ljz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.Registries#BLOCK_STATE_PROVIDER_TYPE
    [[maybe_unused]] static void set_field_BLOCK_STATE_PROVIDER_TYPE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("T", "BLOCKSTATE_PROVIDER_TYPE", "field_41149", "BLOCK_STATE_PROVIDER_TYPE", "f_256760_"), "Ljz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.Registries#FOLIAGE_PLACER_TYPE
    [[maybe_unused]] static jobject get_field_FOLIAGE_PLACER_TYPE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("U", "FOLIAGE_PLACER_TYPE", "field_41150", "FOLIAGE_PLACER_TYPE", "f_256861_"), "Ljz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.Registries#FOLIAGE_PLACER_TYPE
    [[maybe_unused]] static void set_field_FOLIAGE_PLACER_TYPE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("U", "FOLIAGE_PLACER_TYPE", "field_41150", "FOLIAGE_PLACER_TYPE", "f_256861_"), "Ljz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.Registries#TRUNK_PLACER_TYPE
    [[maybe_unused]] static jobject get_field_TRUNK_PLACER_TYPE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("V", "TRUNK_PLACER_TYPE", "field_41151", "TRUNK_PLACER_TYPE", "f_256920_"), "Ljz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.Registries#TRUNK_PLACER_TYPE
    [[maybe_unused]] static void set_field_TRUNK_PLACER_TYPE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("V", "TRUNK_PLACER_TYPE", "field_41151", "TRUNK_PLACER_TYPE", "f_256920_"), "Ljz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.Registries#ROOT_PLACER_TYPE
    [[maybe_unused]] static jobject get_field_ROOT_PLACER_TYPE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("W", "ROOT_PLACER_TYPE", "field_41152", "ROOT_PLACER_TYPE", "f_256742_"), "Ljz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.Registries#ROOT_PLACER_TYPE
    [[maybe_unused]] static void set_field_ROOT_PLACER_TYPE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("W", "ROOT_PLACER_TYPE", "field_41152", "ROOT_PLACER_TYPE", "f_256742_"), "Ljz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.Registries#TREE_DECORATOR_TYPE
    [[maybe_unused]] static jobject get_field_TREE_DECORATOR_TYPE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("X", "TREE_DECORATOR_TYPE", "field_41153", "TREE_DECORATOR_TYPE", "f_256987_"), "Ljz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.Registries#TREE_DECORATOR_TYPE
    [[maybe_unused]] static void set_field_TREE_DECORATOR_TYPE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("X", "TREE_DECORATOR_TYPE", "field_41153", "TREE_DECORATOR_TYPE", "f_256987_"), "Ljz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.Registries#FEATURE_SIZE_TYPE
    [[maybe_unused]] static jobject get_field_FEATURE_SIZE_TYPE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Y", "FEATURE_SIZE_TYPE", "field_41155", "FEATURE_SIZE_TYPE", "f_256958_"), "Ljz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.Registries#FEATURE_SIZE_TYPE
    [[maybe_unused]] static void set_field_FEATURE_SIZE_TYPE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Y", "FEATURE_SIZE_TYPE", "field_41155", "FEATURE_SIZE_TYPE", "f_256958_"), "Ljz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.Registries#BIOME_SOURCE
    [[maybe_unused]] static jobject get_field_BIOME_SOURCE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Z", "BIOME_SOURCE", "field_41156", "BIOME_SOURCE", "f_256737_"), "Ljz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.Registries#BIOME_SOURCE
    [[maybe_unused]] static void set_field_BIOME_SOURCE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Z", "BIOME_SOURCE", "field_41156", "BIOME_SOURCE", "f_256737_"), "Ljz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.Registries#CHUNK_GENERATOR
    [[maybe_unused]] static jobject get_field_CHUNK_GENERATOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aa", "CHUNK_GENERATOR", "field_41157", "CHUNK_GENERATOR", "f_256914_"), "Ljz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.Registries#CHUNK_GENERATOR
    [[maybe_unused]] static void set_field_CHUNK_GENERATOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aa", "CHUNK_GENERATOR", "field_41157", "CHUNK_GENERATOR", "f_256914_"), "Ljz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.Registries#MATERIAL_CONDITION
    [[maybe_unused]] static jobject get_field_MATERIAL_CONDITION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ab", "MATERIAL_CONDITION", "field_41158", "MATERIAL_CONDITION", "f_256885_"), "Ljz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.Registries#MATERIAL_CONDITION
    [[maybe_unused]] static void set_field_MATERIAL_CONDITION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ab", "MATERIAL_CONDITION", "field_41158", "MATERIAL_CONDITION", "f_256885_"), "Ljz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.Registries#MATERIAL_RULE
    [[maybe_unused]] static jobject get_field_MATERIAL_RULE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ac", "MATERIAL_RULE", "field_41159", "MATERIAL_RULE", "f_256898_"), "Ljz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.Registries#MATERIAL_RULE
    [[maybe_unused]] static void set_field_MATERIAL_RULE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ac", "MATERIAL_RULE", "field_41159", "MATERIAL_RULE", "f_256898_"), "Ljz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.Registries#DENSITY_FUNCTION_TYPE
    [[maybe_unused]] static jobject get_field_DENSITY_FUNCTION_TYPE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ad", "DENSITY_FUNCTION_TYPE", "field_41160", "DENSITY_FUNCTION_TYPE", "f_257002_"), "Ljz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.Registries#DENSITY_FUNCTION_TYPE
    [[maybe_unused]] static void set_field_DENSITY_FUNCTION_TYPE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ad", "DENSITY_FUNCTION_TYPE", "field_41160", "DENSITY_FUNCTION_TYPE", "f_257002_"), "Ljz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.Registries#BLOCK_TYPE
    [[maybe_unused]] static jobject get_field_BLOCK_TYPE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ae", "BLOCK_TYPE", "field_46591", "BLOCK_TYPE", "f_303045_"), "Ljz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.Registries#BLOCK_TYPE
    [[maybe_unused]] static void set_field_BLOCK_TYPE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ae", "BLOCK_TYPE", "field_46591", "BLOCK_TYPE", "f_303045_"), "Ljz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.Registries#STRUCTURE_PROCESSOR
    [[maybe_unused]] static jobject get_field_STRUCTURE_PROCESSOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("af", "STRUCTURE_PROCESSOR", "field_41161", "STRUCTURE_PROCESSOR", "f_256897_"), "Ljz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.Registries#STRUCTURE_PROCESSOR
    [[maybe_unused]] static void set_field_STRUCTURE_PROCESSOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("af", "STRUCTURE_PROCESSOR", "field_41161", "STRUCTURE_PROCESSOR", "f_256897_"), "Ljz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.Registries#STRUCTURE_POOL_ELEMENT
    [[maybe_unused]] static jobject get_field_STRUCTURE_POOL_ELEMENT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ag", "STRUCTURE_POOL_ELEMENT", "field_41162", "STRUCTURE_POOL_ELEMENT", "f_256846_"), "Ljz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.Registries#STRUCTURE_POOL_ELEMENT
    [[maybe_unused]] static void set_field_STRUCTURE_POOL_ELEMENT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ag", "STRUCTURE_POOL_ELEMENT", "field_41162", "STRUCTURE_POOL_ELEMENT", "f_256846_"), "Ljz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.Registries#POOL_ALIAS_BINDING
    [[maybe_unused]] static jobject get_field_POOL_ALIAS_BINDING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ah", "POOL_ALIAS_BINDING_TYPE", "field_46912", "POOL_ALIAS_BINDING", "f_302795_"), "Ljz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.Registries#POOL_ALIAS_BINDING
    [[maybe_unused]] static void set_field_POOL_ALIAS_BINDING(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ah", "POOL_ALIAS_BINDING_TYPE", "field_46912", "POOL_ALIAS_BINDING", "f_302795_"), "Ljz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.Registries#CAT_VARIANT
    [[maybe_unused]] static jobject get_field_CAT_VARIANT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ai", "CAT_VARIANT", "field_41163", "CAT_VARIANT", "f_256754_"), "Ljz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.Registries#CAT_VARIANT
    [[maybe_unused]] static void set_field_CAT_VARIANT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ai", "CAT_VARIANT", "field_41163", "CAT_VARIANT", "f_256754_"), "Ljz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.Registries#FROG_VARIANT
    [[maybe_unused]] static jobject get_field_FROG_VARIANT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aj", "FROG_VARIANT", "field_41164", "FROG_VARIANT", "f_256770_"), "Ljz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.Registries#FROG_VARIANT
    [[maybe_unused]] static void set_field_FROG_VARIANT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aj", "FROG_VARIANT", "field_41164", "FROG_VARIANT", "f_256770_"), "Ljz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.Registries#INSTRUMENT
    [[maybe_unused]] static jobject get_field_INSTRUMENT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ak", "INSTRUMENT", "field_41166", "INSTRUMENT", "f_256896_"), "Ljz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.Registries#INSTRUMENT
    [[maybe_unused]] static void set_field_INSTRUMENT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ak", "INSTRUMENT", "field_41166", "INSTRUMENT", "f_256896_"), "Ljz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.Registries#DECORATED_POT_PATTERN
    [[maybe_unused]] static jobject get_field_DECORATED_POT_PATTERN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("al", "DECORATED_POT_PATTERN", "field_42940", "DECORATED_POT_PATTERN", "f_337699_"), "Ljz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.Registries#DECORATED_POT_PATTERN
    [[maybe_unused]] static void set_field_DECORATED_POT_PATTERN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("al", "DECORATED_POT_PATTERN", "field_42940", "DECORATED_POT_PATTERN", "f_337699_"), "Ljz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.Registries#ITEM_GROUP
    [[maybe_unused]] static jobject get_field_ITEM_GROUP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("am", "CREATIVE_MODE_TAB", "field_44687", "ITEM_GROUP", "f_279662_"), "Ljz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.Registries#ITEM_GROUP
    [[maybe_unused]] static void set_field_ITEM_GROUP(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("am", "CREATIVE_MODE_TAB", "field_44687", "ITEM_GROUP", "f_279662_"), "Ljz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.Registries#CRITERION
    [[maybe_unused]] static jobject get_field_CRITERION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("an", "TRIGGER_TYPES", "field_47496", "CRITERION", "f_302882_"), "Ljz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.Registries#CRITERION
    [[maybe_unused]] static void set_field_CRITERION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("an", "TRIGGER_TYPES", "field_47496", "CRITERION", "f_302882_"), "Ljz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.Registries#NUMBER_FORMAT_TYPE
    [[maybe_unused]] static jobject get_field_NUMBER_FORMAT_TYPE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ao", "NUMBER_FORMAT_TYPE", "field_47555", "NUMBER_FORMAT_TYPE", "f_303198_"), "Ljz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.Registries#NUMBER_FORMAT_TYPE
    [[maybe_unused]] static void set_field_NUMBER_FORMAT_TYPE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ao", "NUMBER_FORMAT_TYPE", "field_47555", "NUMBER_FORMAT_TYPE", "f_303198_"), "Ljz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.Registries#ARMOR_MATERIAL
    [[maybe_unused]] static jobject get_field_ARMOR_MATERIAL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ap", "ARMOR_MATERIAL", "field_48976", "ARMOR_MATERIAL", "f_315942_"), "Ljz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.Registries#ARMOR_MATERIAL
    [[maybe_unused]] static void set_field_ARMOR_MATERIAL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ap", "ARMOR_MATERIAL", "field_48976", "ARMOR_MATERIAL", "f_315942_"), "Ljz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.Registries#DATA_COMPONENT_TYPE
    [[maybe_unused]] static jobject get_field_DATA_COMPONENT_TYPE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aq", "DATA_COMPONENT_TYPE", "field_49658", "DATA_COMPONENT_TYPE", "f_315333_"), "Ljz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.Registries#DATA_COMPONENT_TYPE
    [[maybe_unused]] static void set_field_DATA_COMPONENT_TYPE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aq", "DATA_COMPONENT_TYPE", "field_49658", "DATA_COMPONENT_TYPE", "f_315333_"), "Ljz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.Registries#ENTITY_SUB_PREDICATE_TYPE
    [[maybe_unused]] static jobject get_field_ENTITY_SUB_PREDICATE_TYPE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ar", "ENTITY_SUB_PREDICATE_TYPE", "field_49911", "ENTITY_SUB_PREDICATE_TYPE", "f_313902_"), "Ljz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.Registries#ENTITY_SUB_PREDICATE_TYPE
    [[maybe_unused]] static void set_field_ENTITY_SUB_PREDICATE_TYPE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ar", "ENTITY_SUB_PREDICATE_TYPE", "field_49911", "ENTITY_SUB_PREDICATE_TYPE", "f_313902_"), "Ljz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.Registries#ITEM_SUB_PREDICATE_TYPE
    [[maybe_unused]] static jobject get_field_ITEM_SUB_PREDICATE_TYPE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("as", "ITEM_SUB_PREDICATE_TYPE", "field_49912", "ITEM_SUB_PREDICATE_TYPE", "f_315468_"), "Ljz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.Registries#ITEM_SUB_PREDICATE_TYPE
    [[maybe_unused]] static void set_field_ITEM_SUB_PREDICATE_TYPE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("as", "ITEM_SUB_PREDICATE_TYPE", "field_49912", "ITEM_SUB_PREDICATE_TYPE", "f_315468_"), "Ljz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.Registries#MAP_DECORATION_TYPE
    [[maybe_unused]] static jobject get_field_MAP_DECORATION_TYPE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("at", "MAP_DECORATION_TYPE", "field_50078", "MAP_DECORATION_TYPE", "f_315353_"), "Ljz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.Registries#MAP_DECORATION_TYPE
    [[maybe_unused]] static void set_field_MAP_DECORATION_TYPE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("at", "MAP_DECORATION_TYPE", "field_50078", "MAP_DECORATION_TYPE", "f_315353_"), "Ljz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.Registries#ENCHANTMENT_EFFECT_COMPONENT_TYPE
    [[maybe_unused]] static jobject get_field_ENCHANTMENT_EFFECT_COMPONENT_TYPE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("au", "ENCHANTMENT_EFFECT_COMPONENT_TYPE", "field_51832", "ENCHANTMENT_EFFECT_COMPONENT_TYPE", "f_337117_"), "Ljz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.Registries#ENCHANTMENT_EFFECT_COMPONENT_TYPE
    [[maybe_unused]] static void set_field_ENCHANTMENT_EFFECT_COMPONENT_TYPE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("au", "ENCHANTMENT_EFFECT_COMPONENT_TYPE", "field_51832", "ENCHANTMENT_EFFECT_COMPONENT_TYPE", "f_337117_"), "Ljz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.Registries#ENCHANTMENT_LEVEL_BASED_VALUE_TYPE
    [[maybe_unused]] static jobject get_field_ENCHANTMENT_LEVEL_BASED_VALUE_TYPE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("av", "ENCHANTMENT_LEVEL_BASED_VALUE_TYPE", "field_51833", "ENCHANTMENT_LEVEL_BASED_VALUE_TYPE", "f_337172_"), "Ljz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.Registries#ENCHANTMENT_LEVEL_BASED_VALUE_TYPE
    [[maybe_unused]] static void set_field_ENCHANTMENT_LEVEL_BASED_VALUE_TYPE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("av", "ENCHANTMENT_LEVEL_BASED_VALUE_TYPE", "field_51833", "ENCHANTMENT_LEVEL_BASED_VALUE_TYPE", "f_337172_"), "Ljz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.Registries#ENCHANTMENT_ENTITY_EFFECT_TYPE
    [[maybe_unused]] static jobject get_field_ENCHANTMENT_ENTITY_EFFECT_TYPE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aw", "ENCHANTMENT_ENTITY_EFFECT_TYPE", "field_51834", "ENCHANTMENT_ENTITY_EFFECT_TYPE", "f_337487_"), "Ljz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.Registries#ENCHANTMENT_ENTITY_EFFECT_TYPE
    [[maybe_unused]] static void set_field_ENCHANTMENT_ENTITY_EFFECT_TYPE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aw", "ENCHANTMENT_ENTITY_EFFECT_TYPE", "field_51834", "ENCHANTMENT_ENTITY_EFFECT_TYPE", "f_337487_"), "Ljz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.Registries#ENCHANTMENT_LOCATION_BASED_EFFECT_TYPE
    [[maybe_unused]] static jobject get_field_ENCHANTMENT_LOCATION_BASED_EFFECT_TYPE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ax", "ENCHANTMENT_LOCATION_BASED_EFFECT_TYPE", "field_51835", "ENCHANTMENT_LOCATION_BASED_EFFECT_TYPE", "f_337194_"), "Ljz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.Registries#ENCHANTMENT_LOCATION_BASED_EFFECT_TYPE
    [[maybe_unused]] static void set_field_ENCHANTMENT_LOCATION_BASED_EFFECT_TYPE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ax", "ENCHANTMENT_LOCATION_BASED_EFFECT_TYPE", "field_51835", "ENCHANTMENT_LOCATION_BASED_EFFECT_TYPE", "f_337194_"), "Ljz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.Registries#ENCHANTMENT_VALUE_EFFECT_TYPE
    [[maybe_unused]] static jobject get_field_ENCHANTMENT_VALUE_EFFECT_TYPE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ay", "ENCHANTMENT_VALUE_EFFECT_TYPE", "field_51836", "ENCHANTMENT_VALUE_EFFECT_TYPE", "f_337549_"), "Ljz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.Registries#ENCHANTMENT_VALUE_EFFECT_TYPE
    [[maybe_unused]] static void set_field_ENCHANTMENT_VALUE_EFFECT_TYPE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ay", "ENCHANTMENT_VALUE_EFFECT_TYPE", "field_51836", "ENCHANTMENT_VALUE_EFFECT_TYPE", "f_337549_"), "Ljz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.Registries#ENCHANTMENT_PROVIDER_TYPE
    [[maybe_unused]] static jobject get_field_ENCHANTMENT_PROVIDER_TYPE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("az", "ENCHANTMENT_PROVIDER_TYPE", "field_51837", "ENCHANTMENT_PROVIDER_TYPE", "f_336653_"), "Ljz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.Registries#ENCHANTMENT_PROVIDER_TYPE
    [[maybe_unused]] static void set_field_ENCHANTMENT_PROVIDER_TYPE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("az", "ENCHANTMENT_PROVIDER_TYPE", "field_51837", "ENCHANTMENT_PROVIDER_TYPE", "f_336653_"), "Ljz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.Registries#REGISTRIES
    [[maybe_unused]] static jobject get_field_REGISTRIES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aA", "REGISTRY", "field_41167", "REGISTRIES", "f_257047_"), "Ljz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.Registries#REGISTRIES
    [[maybe_unused]] static void set_field_REGISTRIES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aA", "REGISTRY", "field_41167", "REGISTRIES", "f_257047_"), "Ljz;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_create() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "registerSimple", "method_47479", "create", "m_258002_"), "(Lakq;Llt$a;)Ljz;");
    }

    static jobject create(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_create();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_createIntrusive() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "registerSimpleWithIntrusiveHolders", "method_53495", "createIntrusive", "m_293167_"), "(Lakq;Llt$a;)Ljz;");
    }

    static jobject createIntrusive(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_createIntrusive();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__create() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "registerDefaulted", "method_47481", "create", "m_257988_"), "(Lakq;Ljava/lang/String;Llt$a;)Ljh;");
    }

    static jobject _create(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID__create();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID__createIntrusive() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "registerDefaultedWithIntrusiveHolders", "method_47489", "createIntrusive", "m_257834_"), "(Lakq;Ljava/lang/String;Llt$a;)Ljh;");
    }

    static jobject _createIntrusive(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID__createIntrusive();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID___create() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "internalRegister", "method_47478", "create", "m_257895_"), "(Lakq;Lki;Llt$a;)Lki;");
    }

    static jobject __create(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID___create();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_bootstrap() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "bootStrap", "method_47476", "bootstrap", "m_257498_"), "()V");
    }

    static void bootstrap() {
       const auto clazz = self();
       const auto methodID = methodID_bootstrap();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID);
    };
    
    static jmethodID methodID_init() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "createContents", "method_47487", "init", "m_257453_"), "()V");
    }

    static void init() {
       const auto clazz = self();
       const auto methodID = methodID_init();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID);
    };
    
    static jmethodID methodID_freezeRegistries() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "freeze", "method_47491", "freezeRegistries", "m_257604_"), "()V");
    }

    static void freezeRegistries() {
       const auto clazz = self();
       const auto methodID = methodID_freezeRegistries();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID);
    };
    
    static jmethodID methodID_validate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "validate", "method_47483", "validate", "m_257864_"), "(Ljz;)V");
    }

    static void validate(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_validate();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_REGISTRY_REGISTRIES_HPP