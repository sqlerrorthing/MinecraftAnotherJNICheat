// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_REGISTRY_DYNAMICREGISTRYMANAGER$1_HPP
#define NET_MINECRAFT_REGISTRY_DYNAMICREGISTRYMANAGER$1_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.registry.DynamicRegistryManager$1
 * Remapped: ka$1
 */
namespace DynamicRegistryManager$1 {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("ka$1", "net/minecraft/core/RegistryAccess$1", "net/minecraft/class_5455$1", "net/minecraft/registry/DynamicRegistryManager$1", "net/minecraft/src/C_4706_$C_203239_"));
        }
        return cachedClass;
    };

    static jmethodID methodID_getOptional() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "registry", "method_33310", "getOptional", "m_6632_"), "(Lakq;)Ljava/util/Optional;");
    }

    static jobject getOptional(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getOptional();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_streamAllRegistries() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "registries", "method_40311", "streamAllRegistries", "m_206193_"), "()Ljava/util/stream/Stream;");
    }

    static jobject streamAllRegistries(const jobject& obj) {
                
       const auto methodID = methodID_streamAllRegistries();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_toImmutable() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "freeze", "method_40316", "toImmutable", "m_203557_"), "()Lka$b;");
    }

    static jobject toImmutable(const jobject& obj) {
                
       const auto methodID = methodID_toImmutable();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_REGISTRY_DYNAMICREGISTRYMANAGER$1_HPP