// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_REGISTRY_REGISTRYOPS$CACHEDREGISTRYINFOGETTER_HPP
#define NET_MINECRAFT_REGISTRY_REGISTRYOPS$CACHEDREGISTRYINFOGETTER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.registry.RegistryOps$CachedRegistryInfoGetter
 * Remapped: akp$a
 */
namespace RegistryOps$CachedRegistryInfoGetter {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("akp$a", "net/minecraft/resources/RegistryOps$HolderLookupAdapter", "net/minecraft/class_6903$class_9683", "net/minecraft/registry/RegistryOps$CachedRegistryInfoGetter", "net/minecraft/src/C_203255_$C_313495_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.registry.RegistryOps$CachedRegistryInfoGetter#registriesLookup
    static jobject get_field_registriesLookup(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "lookupProvider", "field_51501", "registriesLookup", "f_315402_"), "Ljo$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.registry.RegistryOps$CachedRegistryInfoGetter#registriesLookup
    static void set_field_registriesLookup(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "lookupProvider", "field_51501", "registriesLookup", "f_315402_"), "Ljo$a;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.registry.RegistryOps$CachedRegistryInfoGetter#cache
    static jobject get_field_cache(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "lookups", "field_51502", "cache", "f_316306_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.registry.RegistryOps$CachedRegistryInfoGetter#cache
    static void set_field_cache(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "lookups", "field_51502", "cache", "f_316306_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_getRegistryInfo() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "lookup", "method_46623", "getRegistryInfo", "m_254838_"), "(Lakq;)Ljava/util/Optional;");
    }

    static jobject getRegistryInfo(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getRegistryInfo();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_compute() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "createLookup", "method_59855", "compute", "m_320069_"), "(Lakq;)Ljava/util/Optional;");
    }

    static jobject compute(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_compute();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_REGISTRY_REGISTRYOPS$CACHEDREGISTRYINFOGETTER_HPP