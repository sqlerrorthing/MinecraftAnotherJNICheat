// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_REGISTRY_TAG_BIOMETAGS_HPP
#define NET_MINECRAFT_REGISTRY_TAG_BIOMETAGS_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.registry.tag.BiomeTags
 * Remapped: awd
 */
namespace BiomeTags {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("awd", "net/minecraft/tags/BiomeTags", "net/minecraft/class_6908", "net/minecraft/registry/tag/BiomeTags", "net/minecraft/src/C_206957_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.registry.tag.BiomeTags#IS_DEEP_OCEAN
    [[maybe_unused]] static jobject get_field_IS_DEEP_OCEAN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "IS_DEEP_OCEAN", "field_36508", "IS_DEEP_OCEAN", "f_207602_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BiomeTags#IS_DEEP_OCEAN
    [[maybe_unused]] static void set_field_IS_DEEP_OCEAN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "IS_DEEP_OCEAN", "field_36508", "IS_DEEP_OCEAN", "f_207602_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BiomeTags#IS_OCEAN
    [[maybe_unused]] static jobject get_field_IS_OCEAN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "IS_OCEAN", "field_36509", "IS_OCEAN", "f_207603_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BiomeTags#IS_OCEAN
    [[maybe_unused]] static void set_field_IS_OCEAN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "IS_OCEAN", "field_36509", "IS_OCEAN", "f_207603_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BiomeTags#IS_BEACH
    [[maybe_unused]] static jobject get_field_IS_BEACH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "IS_BEACH", "field_36510", "IS_BEACH", "f_207604_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BiomeTags#IS_BEACH
    [[maybe_unused]] static void set_field_IS_BEACH(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "IS_BEACH", "field_36510", "IS_BEACH", "f_207604_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BiomeTags#IS_RIVER
    [[maybe_unused]] static jobject get_field_IS_RIVER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "IS_RIVER", "field_36511", "IS_RIVER", "f_207605_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BiomeTags#IS_RIVER
    [[maybe_unused]] static void set_field_IS_RIVER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "IS_RIVER", "field_36511", "IS_RIVER", "f_207605_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BiomeTags#IS_MOUNTAIN
    [[maybe_unused]] static jobject get_field_IS_MOUNTAIN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "IS_MOUNTAIN", "field_36512", "IS_MOUNTAIN", "f_207606_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BiomeTags#IS_MOUNTAIN
    [[maybe_unused]] static void set_field_IS_MOUNTAIN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "IS_MOUNTAIN", "field_36512", "IS_MOUNTAIN", "f_207606_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BiomeTags#IS_BADLANDS
    [[maybe_unused]] static jobject get_field_IS_BADLANDS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "IS_BADLANDS", "field_36513", "IS_BADLANDS", "f_207607_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BiomeTags#IS_BADLANDS
    [[maybe_unused]] static void set_field_IS_BADLANDS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "IS_BADLANDS", "field_36513", "IS_BADLANDS", "f_207607_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BiomeTags#IS_HILL
    [[maybe_unused]] static jobject get_field_IS_HILL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "IS_HILL", "field_36514", "IS_HILL", "f_207608_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BiomeTags#IS_HILL
    [[maybe_unused]] static void set_field_IS_HILL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "IS_HILL", "field_36514", "IS_HILL", "f_207608_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BiomeTags#IS_TAIGA
    [[maybe_unused]] static jobject get_field_IS_TAIGA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "IS_TAIGA", "field_36515", "IS_TAIGA", "f_207609_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BiomeTags#IS_TAIGA
    [[maybe_unused]] static void set_field_IS_TAIGA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "IS_TAIGA", "field_36515", "IS_TAIGA", "f_207609_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BiomeTags#IS_JUNGLE
    [[maybe_unused]] static jobject get_field_IS_JUNGLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "IS_JUNGLE", "field_36516", "IS_JUNGLE", "f_207610_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BiomeTags#IS_JUNGLE
    [[maybe_unused]] static void set_field_IS_JUNGLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "IS_JUNGLE", "field_36516", "IS_JUNGLE", "f_207610_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BiomeTags#IS_FOREST
    [[maybe_unused]] static jobject get_field_IS_FOREST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "IS_FOREST", "field_36517", "IS_FOREST", "f_207611_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BiomeTags#IS_FOREST
    [[maybe_unused]] static void set_field_IS_FOREST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "IS_FOREST", "field_36517", "IS_FOREST", "f_207611_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BiomeTags#IS_SAVANNA
    [[maybe_unused]] static jobject get_field_IS_SAVANNA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "IS_SAVANNA", "field_37392", "IS_SAVANNA", "f_215816_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BiomeTags#IS_SAVANNA
    [[maybe_unused]] static void set_field_IS_SAVANNA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "IS_SAVANNA", "field_37392", "IS_SAVANNA", "f_215816_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BiomeTags#IS_OVERWORLD
    [[maybe_unused]] static jobject get_field_IS_OVERWORLD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "IS_OVERWORLD", "field_37393", "IS_OVERWORLD", "f_215817_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BiomeTags#IS_OVERWORLD
    [[maybe_unused]] static void set_field_IS_OVERWORLD(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "IS_OVERWORLD", "field_37393", "IS_OVERWORLD", "f_215817_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BiomeTags#IS_NETHER
    [[maybe_unused]] static jobject get_field_IS_NETHER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "IS_NETHER", "field_36518", "IS_NETHER", "f_207612_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BiomeTags#IS_NETHER
    [[maybe_unused]] static void set_field_IS_NETHER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "IS_NETHER", "field_36518", "IS_NETHER", "f_207612_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BiomeTags#IS_END
    [[maybe_unused]] static jobject get_field_IS_END() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "IS_END", "field_37394", "IS_END", "f_215818_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BiomeTags#IS_END
    [[maybe_unused]] static void set_field_IS_END(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "IS_END", "field_37394", "IS_END", "f_215818_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BiomeTags#STRONGHOLD_BIASED_TO
    [[maybe_unused]] static jobject get_field_STRONGHOLD_BIASED_TO() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "STRONGHOLD_BIASED_TO", "field_37395", "STRONGHOLD_BIASED_TO", "f_215819_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BiomeTags#STRONGHOLD_BIASED_TO
    [[maybe_unused]] static void set_field_STRONGHOLD_BIASED_TO(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "STRONGHOLD_BIASED_TO", "field_37395", "STRONGHOLD_BIASED_TO", "f_215819_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BiomeTags#BURIED_TREASURE_HAS_STRUCTURE
    [[maybe_unused]] static jobject get_field_BURIED_TREASURE_HAS_STRUCTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "HAS_BURIED_TREASURE", "field_36519", "BURIED_TREASURE_HAS_STRUCTURE", "f_207613_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BiomeTags#BURIED_TREASURE_HAS_STRUCTURE
    [[maybe_unused]] static void set_field_BURIED_TREASURE_HAS_STRUCTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "HAS_BURIED_TREASURE", "field_36519", "BURIED_TREASURE_HAS_STRUCTURE", "f_207613_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BiomeTags#DESERT_PYRAMID_HAS_STRUCTURE
    [[maybe_unused]] static jobject get_field_DESERT_PYRAMID_HAS_STRUCTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "HAS_DESERT_PYRAMID", "field_36520", "DESERT_PYRAMID_HAS_STRUCTURE", "f_207614_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BiomeTags#DESERT_PYRAMID_HAS_STRUCTURE
    [[maybe_unused]] static void set_field_DESERT_PYRAMID_HAS_STRUCTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "HAS_DESERT_PYRAMID", "field_36520", "DESERT_PYRAMID_HAS_STRUCTURE", "f_207614_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BiomeTags#IGLOO_HAS_STRUCTURE
    [[maybe_unused]] static jobject get_field_IGLOO_HAS_STRUCTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "HAS_IGLOO", "field_36521", "IGLOO_HAS_STRUCTURE", "f_207615_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BiomeTags#IGLOO_HAS_STRUCTURE
    [[maybe_unused]] static void set_field_IGLOO_HAS_STRUCTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "HAS_IGLOO", "field_36521", "IGLOO_HAS_STRUCTURE", "f_207615_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BiomeTags#JUNGLE_TEMPLE_HAS_STRUCTURE
    [[maybe_unused]] static jobject get_field_JUNGLE_TEMPLE_HAS_STRUCTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "HAS_JUNGLE_TEMPLE", "field_36522", "JUNGLE_TEMPLE_HAS_STRUCTURE", "f_207616_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BiomeTags#JUNGLE_TEMPLE_HAS_STRUCTURE
    [[maybe_unused]] static void set_field_JUNGLE_TEMPLE_HAS_STRUCTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "HAS_JUNGLE_TEMPLE", "field_36522", "JUNGLE_TEMPLE_HAS_STRUCTURE", "f_207616_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BiomeTags#MINESHAFT_HAS_STRUCTURE
    [[maybe_unused]] static jobject get_field_MINESHAFT_HAS_STRUCTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "HAS_MINESHAFT", "field_36523", "MINESHAFT_HAS_STRUCTURE", "f_207617_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BiomeTags#MINESHAFT_HAS_STRUCTURE
    [[maybe_unused]] static void set_field_MINESHAFT_HAS_STRUCTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "HAS_MINESHAFT", "field_36523", "MINESHAFT_HAS_STRUCTURE", "f_207617_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BiomeTags#MINESHAFT_MESA_HAS_STRUCTURE
    [[maybe_unused]] static jobject get_field_MINESHAFT_MESA_HAS_STRUCTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "HAS_MINESHAFT_MESA", "field_36524", "MINESHAFT_MESA_HAS_STRUCTURE", "f_207618_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BiomeTags#MINESHAFT_MESA_HAS_STRUCTURE
    [[maybe_unused]] static void set_field_MINESHAFT_MESA_HAS_STRUCTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "HAS_MINESHAFT_MESA", "field_36524", "MINESHAFT_MESA_HAS_STRUCTURE", "f_207618_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BiomeTags#OCEAN_MONUMENT_HAS_STRUCTURE
    [[maybe_unused]] static jobject get_field_OCEAN_MONUMENT_HAS_STRUCTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "HAS_OCEAN_MONUMENT", "field_36525", "OCEAN_MONUMENT_HAS_STRUCTURE", "f_207619_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BiomeTags#OCEAN_MONUMENT_HAS_STRUCTURE
    [[maybe_unused]] static void set_field_OCEAN_MONUMENT_HAS_STRUCTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "HAS_OCEAN_MONUMENT", "field_36525", "OCEAN_MONUMENT_HAS_STRUCTURE", "f_207619_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BiomeTags#OCEAN_RUIN_COLD_HAS_STRUCTURE
    [[maybe_unused]] static jobject get_field_OCEAN_RUIN_COLD_HAS_STRUCTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "HAS_OCEAN_RUIN_COLD", "field_36526", "OCEAN_RUIN_COLD_HAS_STRUCTURE", "f_207620_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BiomeTags#OCEAN_RUIN_COLD_HAS_STRUCTURE
    [[maybe_unused]] static void set_field_OCEAN_RUIN_COLD_HAS_STRUCTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "HAS_OCEAN_RUIN_COLD", "field_36526", "OCEAN_RUIN_COLD_HAS_STRUCTURE", "f_207620_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BiomeTags#OCEAN_RUIN_WARM_HAS_STRUCTURE
    [[maybe_unused]] static jobject get_field_OCEAN_RUIN_WARM_HAS_STRUCTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "HAS_OCEAN_RUIN_WARM", "field_36527", "OCEAN_RUIN_WARM_HAS_STRUCTURE", "f_207621_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BiomeTags#OCEAN_RUIN_WARM_HAS_STRUCTURE
    [[maybe_unused]] static void set_field_OCEAN_RUIN_WARM_HAS_STRUCTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "HAS_OCEAN_RUIN_WARM", "field_36527", "OCEAN_RUIN_WARM_HAS_STRUCTURE", "f_207621_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BiomeTags#PILLAGER_OUTPOST_HAS_STRUCTURE
    [[maybe_unused]] static jobject get_field_PILLAGER_OUTPOST_HAS_STRUCTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("y", "HAS_PILLAGER_OUTPOST", "field_36528", "PILLAGER_OUTPOST_HAS_STRUCTURE", "f_207622_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BiomeTags#PILLAGER_OUTPOST_HAS_STRUCTURE
    [[maybe_unused]] static void set_field_PILLAGER_OUTPOST_HAS_STRUCTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("y", "HAS_PILLAGER_OUTPOST", "field_36528", "PILLAGER_OUTPOST_HAS_STRUCTURE", "f_207622_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BiomeTags#RUINED_PORTAL_DESERT_HAS_STRUCTURE
    [[maybe_unused]] static jobject get_field_RUINED_PORTAL_DESERT_HAS_STRUCTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("z", "HAS_RUINED_PORTAL_DESERT", "field_36529", "RUINED_PORTAL_DESERT_HAS_STRUCTURE", "f_207623_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BiomeTags#RUINED_PORTAL_DESERT_HAS_STRUCTURE
    [[maybe_unused]] static void set_field_RUINED_PORTAL_DESERT_HAS_STRUCTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("z", "HAS_RUINED_PORTAL_DESERT", "field_36529", "RUINED_PORTAL_DESERT_HAS_STRUCTURE", "f_207623_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BiomeTags#RUINED_PORTAL_JUNGLE_HAS_STRUCTURE
    [[maybe_unused]] static jobject get_field_RUINED_PORTAL_JUNGLE_HAS_STRUCTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("A", "HAS_RUINED_PORTAL_JUNGLE", "field_36530", "RUINED_PORTAL_JUNGLE_HAS_STRUCTURE", "f_207624_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BiomeTags#RUINED_PORTAL_JUNGLE_HAS_STRUCTURE
    [[maybe_unused]] static void set_field_RUINED_PORTAL_JUNGLE_HAS_STRUCTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("A", "HAS_RUINED_PORTAL_JUNGLE", "field_36530", "RUINED_PORTAL_JUNGLE_HAS_STRUCTURE", "f_207624_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BiomeTags#RUINED_PORTAL_OCEAN_HAS_STRUCTURE
    [[maybe_unused]] static jobject get_field_RUINED_PORTAL_OCEAN_HAS_STRUCTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("B", "HAS_RUINED_PORTAL_OCEAN", "field_36531", "RUINED_PORTAL_OCEAN_HAS_STRUCTURE", "f_207625_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BiomeTags#RUINED_PORTAL_OCEAN_HAS_STRUCTURE
    [[maybe_unused]] static void set_field_RUINED_PORTAL_OCEAN_HAS_STRUCTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("B", "HAS_RUINED_PORTAL_OCEAN", "field_36531", "RUINED_PORTAL_OCEAN_HAS_STRUCTURE", "f_207625_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BiomeTags#RUINED_PORTAL_SWAMP_HAS_STRUCTURE
    [[maybe_unused]] static jobject get_field_RUINED_PORTAL_SWAMP_HAS_STRUCTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("C", "HAS_RUINED_PORTAL_SWAMP", "field_36532", "RUINED_PORTAL_SWAMP_HAS_STRUCTURE", "f_207626_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BiomeTags#RUINED_PORTAL_SWAMP_HAS_STRUCTURE
    [[maybe_unused]] static void set_field_RUINED_PORTAL_SWAMP_HAS_STRUCTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("C", "HAS_RUINED_PORTAL_SWAMP", "field_36532", "RUINED_PORTAL_SWAMP_HAS_STRUCTURE", "f_207626_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BiomeTags#RUINED_PORTAL_MOUNTAIN_HAS_STRUCTURE
    [[maybe_unused]] static jobject get_field_RUINED_PORTAL_MOUNTAIN_HAS_STRUCTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("D", "HAS_RUINED_PORTAL_MOUNTAIN", "field_36533", "RUINED_PORTAL_MOUNTAIN_HAS_STRUCTURE", "f_207627_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BiomeTags#RUINED_PORTAL_MOUNTAIN_HAS_STRUCTURE
    [[maybe_unused]] static void set_field_RUINED_PORTAL_MOUNTAIN_HAS_STRUCTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("D", "HAS_RUINED_PORTAL_MOUNTAIN", "field_36533", "RUINED_PORTAL_MOUNTAIN_HAS_STRUCTURE", "f_207627_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BiomeTags#RUINED_PORTAL_STANDARD_HAS_STRUCTURE
    [[maybe_unused]] static jobject get_field_RUINED_PORTAL_STANDARD_HAS_STRUCTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("E", "HAS_RUINED_PORTAL_STANDARD", "field_36492", "RUINED_PORTAL_STANDARD_HAS_STRUCTURE", "f_207586_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BiomeTags#RUINED_PORTAL_STANDARD_HAS_STRUCTURE
    [[maybe_unused]] static void set_field_RUINED_PORTAL_STANDARD_HAS_STRUCTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("E", "HAS_RUINED_PORTAL_STANDARD", "field_36492", "RUINED_PORTAL_STANDARD_HAS_STRUCTURE", "f_207586_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BiomeTags#SHIPWRECK_BEACHED_HAS_STRUCTURE
    [[maybe_unused]] static jobject get_field_SHIPWRECK_BEACHED_HAS_STRUCTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("F", "HAS_SHIPWRECK_BEACHED", "field_36493", "SHIPWRECK_BEACHED_HAS_STRUCTURE", "f_207587_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BiomeTags#SHIPWRECK_BEACHED_HAS_STRUCTURE
    [[maybe_unused]] static void set_field_SHIPWRECK_BEACHED_HAS_STRUCTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("F", "HAS_SHIPWRECK_BEACHED", "field_36493", "SHIPWRECK_BEACHED_HAS_STRUCTURE", "f_207587_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BiomeTags#SHIPWRECK_HAS_STRUCTURE
    [[maybe_unused]] static jobject get_field_SHIPWRECK_HAS_STRUCTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("G", "HAS_SHIPWRECK", "field_36494", "SHIPWRECK_HAS_STRUCTURE", "f_207588_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BiomeTags#SHIPWRECK_HAS_STRUCTURE
    [[maybe_unused]] static void set_field_SHIPWRECK_HAS_STRUCTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("G", "HAS_SHIPWRECK", "field_36494", "SHIPWRECK_HAS_STRUCTURE", "f_207588_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BiomeTags#STRONGHOLD_HAS_STRUCTURE
    [[maybe_unused]] static jobject get_field_STRONGHOLD_HAS_STRUCTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("H", "HAS_STRONGHOLD", "field_36502", "STRONGHOLD_HAS_STRUCTURE", "f_207596_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BiomeTags#STRONGHOLD_HAS_STRUCTURE
    [[maybe_unused]] static void set_field_STRONGHOLD_HAS_STRUCTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("H", "HAS_STRONGHOLD", "field_36502", "STRONGHOLD_HAS_STRUCTURE", "f_207596_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BiomeTags#TRIAL_CHAMBERS_HAS_STRUCTURE
    [[maybe_unused]] static jobject get_field_TRIAL_CHAMBERS_HAS_STRUCTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("I", "HAS_TRIAL_CHAMBERS", "field_47213", "TRIAL_CHAMBERS_HAS_STRUCTURE", "f_303725_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BiomeTags#TRIAL_CHAMBERS_HAS_STRUCTURE
    [[maybe_unused]] static void set_field_TRIAL_CHAMBERS_HAS_STRUCTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("I", "HAS_TRIAL_CHAMBERS", "field_47213", "TRIAL_CHAMBERS_HAS_STRUCTURE", "f_303725_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BiomeTags#SWAMP_HUT_HAS_STRUCTURE
    [[maybe_unused]] static jobject get_field_SWAMP_HUT_HAS_STRUCTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("J", "HAS_SWAMP_HUT", "field_36495", "SWAMP_HUT_HAS_STRUCTURE", "f_207589_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BiomeTags#SWAMP_HUT_HAS_STRUCTURE
    [[maybe_unused]] static void set_field_SWAMP_HUT_HAS_STRUCTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("J", "HAS_SWAMP_HUT", "field_36495", "SWAMP_HUT_HAS_STRUCTURE", "f_207589_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BiomeTags#VILLAGE_DESERT_HAS_STRUCTURE
    [[maybe_unused]] static jobject get_field_VILLAGE_DESERT_HAS_STRUCTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("K", "HAS_VILLAGE_DESERT", "field_36496", "VILLAGE_DESERT_HAS_STRUCTURE", "f_207590_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BiomeTags#VILLAGE_DESERT_HAS_STRUCTURE
    [[maybe_unused]] static void set_field_VILLAGE_DESERT_HAS_STRUCTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("K", "HAS_VILLAGE_DESERT", "field_36496", "VILLAGE_DESERT_HAS_STRUCTURE", "f_207590_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BiomeTags#VILLAGE_PLAINS_HAS_STRUCTURE
    [[maybe_unused]] static jobject get_field_VILLAGE_PLAINS_HAS_STRUCTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("L", "HAS_VILLAGE_PLAINS", "field_36497", "VILLAGE_PLAINS_HAS_STRUCTURE", "f_207591_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BiomeTags#VILLAGE_PLAINS_HAS_STRUCTURE
    [[maybe_unused]] static void set_field_VILLAGE_PLAINS_HAS_STRUCTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("L", "HAS_VILLAGE_PLAINS", "field_36497", "VILLAGE_PLAINS_HAS_STRUCTURE", "f_207591_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BiomeTags#VILLAGE_SAVANNA_HAS_STRUCTURE
    [[maybe_unused]] static jobject get_field_VILLAGE_SAVANNA_HAS_STRUCTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("M", "HAS_VILLAGE_SAVANNA", "field_36498", "VILLAGE_SAVANNA_HAS_STRUCTURE", "f_207592_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BiomeTags#VILLAGE_SAVANNA_HAS_STRUCTURE
    [[maybe_unused]] static void set_field_VILLAGE_SAVANNA_HAS_STRUCTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("M", "HAS_VILLAGE_SAVANNA", "field_36498", "VILLAGE_SAVANNA_HAS_STRUCTURE", "f_207592_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BiomeTags#VILLAGE_SNOWY_HAS_STRUCTURE
    [[maybe_unused]] static jobject get_field_VILLAGE_SNOWY_HAS_STRUCTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("N", "HAS_VILLAGE_SNOWY", "field_36499", "VILLAGE_SNOWY_HAS_STRUCTURE", "f_207593_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BiomeTags#VILLAGE_SNOWY_HAS_STRUCTURE
    [[maybe_unused]] static void set_field_VILLAGE_SNOWY_HAS_STRUCTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("N", "HAS_VILLAGE_SNOWY", "field_36499", "VILLAGE_SNOWY_HAS_STRUCTURE", "f_207593_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BiomeTags#VILLAGE_TAIGA_HAS_STRUCTURE
    [[maybe_unused]] static jobject get_field_VILLAGE_TAIGA_HAS_STRUCTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("O", "HAS_VILLAGE_TAIGA", "field_36500", "VILLAGE_TAIGA_HAS_STRUCTURE", "f_207594_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BiomeTags#VILLAGE_TAIGA_HAS_STRUCTURE
    [[maybe_unused]] static void set_field_VILLAGE_TAIGA_HAS_STRUCTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("O", "HAS_VILLAGE_TAIGA", "field_36500", "VILLAGE_TAIGA_HAS_STRUCTURE", "f_207594_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BiomeTags#TRAIL_RUINS_HAS_STRUCTURE
    [[maybe_unused]] static jobject get_field_TRAIL_RUINS_HAS_STRUCTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("P", "HAS_TRAIL_RUINS", "field_43168", "TRAIL_RUINS_HAS_STRUCTURE", "f_276517_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BiomeTags#TRAIL_RUINS_HAS_STRUCTURE
    [[maybe_unused]] static void set_field_TRAIL_RUINS_HAS_STRUCTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("P", "HAS_TRAIL_RUINS", "field_43168", "TRAIL_RUINS_HAS_STRUCTURE", "f_276517_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BiomeTags#WOODLAND_MANSION_HAS_STRUCTURE
    [[maybe_unused]] static jobject get_field_WOODLAND_MANSION_HAS_STRUCTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Q", "HAS_WOODLAND_MANSION", "field_36501", "WOODLAND_MANSION_HAS_STRUCTURE", "f_207595_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BiomeTags#WOODLAND_MANSION_HAS_STRUCTURE
    [[maybe_unused]] static void set_field_WOODLAND_MANSION_HAS_STRUCTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Q", "HAS_WOODLAND_MANSION", "field_36501", "WOODLAND_MANSION_HAS_STRUCTURE", "f_207595_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BiomeTags#NETHER_FORTRESS_HAS_STRUCTURE
    [[maybe_unused]] static jobject get_field_NETHER_FORTRESS_HAS_STRUCTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("R", "HAS_NETHER_FORTRESS", "field_36503", "NETHER_FORTRESS_HAS_STRUCTURE", "f_207597_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BiomeTags#NETHER_FORTRESS_HAS_STRUCTURE
    [[maybe_unused]] static void set_field_NETHER_FORTRESS_HAS_STRUCTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("R", "HAS_NETHER_FORTRESS", "field_36503", "NETHER_FORTRESS_HAS_STRUCTURE", "f_207597_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BiomeTags#NETHER_FOSSIL_HAS_STRUCTURE
    [[maybe_unused]] static jobject get_field_NETHER_FOSSIL_HAS_STRUCTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("S", "HAS_NETHER_FOSSIL", "field_36504", "NETHER_FOSSIL_HAS_STRUCTURE", "f_207598_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BiomeTags#NETHER_FOSSIL_HAS_STRUCTURE
    [[maybe_unused]] static void set_field_NETHER_FOSSIL_HAS_STRUCTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("S", "HAS_NETHER_FOSSIL", "field_36504", "NETHER_FOSSIL_HAS_STRUCTURE", "f_207598_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BiomeTags#BASTION_REMNANT_HAS_STRUCTURE
    [[maybe_unused]] static jobject get_field_BASTION_REMNANT_HAS_STRUCTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("T", "HAS_BASTION_REMNANT", "field_36505", "BASTION_REMNANT_HAS_STRUCTURE", "f_207599_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BiomeTags#BASTION_REMNANT_HAS_STRUCTURE
    [[maybe_unused]] static void set_field_BASTION_REMNANT_HAS_STRUCTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("T", "HAS_BASTION_REMNANT", "field_36505", "BASTION_REMNANT_HAS_STRUCTURE", "f_207599_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BiomeTags#ANCIENT_CITY_HAS_STRUCTURE
    [[maybe_unused]] static jobject get_field_ANCIENT_CITY_HAS_STRUCTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("U", "HAS_ANCIENT_CITY", "field_38372", "ANCIENT_CITY_HAS_STRUCTURE", "f_215799_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BiomeTags#ANCIENT_CITY_HAS_STRUCTURE
    [[maybe_unused]] static void set_field_ANCIENT_CITY_HAS_STRUCTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("U", "HAS_ANCIENT_CITY", "field_38372", "ANCIENT_CITY_HAS_STRUCTURE", "f_215799_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BiomeTags#RUINED_PORTAL_NETHER_HAS_STRUCTURE
    [[maybe_unused]] static jobject get_field_RUINED_PORTAL_NETHER_HAS_STRUCTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("V", "HAS_RUINED_PORTAL_NETHER", "field_36506", "RUINED_PORTAL_NETHER_HAS_STRUCTURE", "f_207600_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BiomeTags#RUINED_PORTAL_NETHER_HAS_STRUCTURE
    [[maybe_unused]] static void set_field_RUINED_PORTAL_NETHER_HAS_STRUCTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("V", "HAS_RUINED_PORTAL_NETHER", "field_36506", "RUINED_PORTAL_NETHER_HAS_STRUCTURE", "f_207600_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BiomeTags#END_CITY_HAS_STRUCTURE
    [[maybe_unused]] static jobject get_field_END_CITY_HAS_STRUCTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("W", "HAS_END_CITY", "field_36507", "END_CITY_HAS_STRUCTURE", "f_207601_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BiomeTags#END_CITY_HAS_STRUCTURE
    [[maybe_unused]] static void set_field_END_CITY_HAS_STRUCTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("W", "HAS_END_CITY", "field_36507", "END_CITY_HAS_STRUCTURE", "f_207601_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BiomeTags#REQUIRED_OCEAN_MONUMENT_SURROUNDING
    [[maybe_unused]] static jobject get_field_REQUIRED_OCEAN_MONUMENT_SURROUNDING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("X", "REQUIRED_OCEAN_MONUMENT_SURROUNDING", "field_37376", "REQUIRED_OCEAN_MONUMENT_SURROUNDING", "f_215800_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BiomeTags#REQUIRED_OCEAN_MONUMENT_SURROUNDING
    [[maybe_unused]] static void set_field_REQUIRED_OCEAN_MONUMENT_SURROUNDING(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("X", "REQUIRED_OCEAN_MONUMENT_SURROUNDING", "field_37376", "REQUIRED_OCEAN_MONUMENT_SURROUNDING", "f_215800_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BiomeTags#MINESHAFT_BLOCKING
    [[maybe_unused]] static jobject get_field_MINESHAFT_BLOCKING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Y", "MINESHAFT_BLOCKING", "field_39444", "MINESHAFT_BLOCKING", "f_238171_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BiomeTags#MINESHAFT_BLOCKING
    [[maybe_unused]] static void set_field_MINESHAFT_BLOCKING(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Y", "MINESHAFT_BLOCKING", "field_39444", "MINESHAFT_BLOCKING", "f_238171_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BiomeTags#PLAYS_UNDERWATER_MUSIC
    [[maybe_unused]] static jobject get_field_PLAYS_UNDERWATER_MUSIC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Z", "PLAYS_UNDERWATER_MUSIC", "field_37377", "PLAYS_UNDERWATER_MUSIC", "f_215801_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BiomeTags#PLAYS_UNDERWATER_MUSIC
    [[maybe_unused]] static void set_field_PLAYS_UNDERWATER_MUSIC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Z", "PLAYS_UNDERWATER_MUSIC", "field_37377", "PLAYS_UNDERWATER_MUSIC", "f_215801_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BiomeTags#HAS_CLOSER_WATER_FOG
    [[maybe_unused]] static jobject get_field_HAS_CLOSER_WATER_FOG() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aa", "HAS_CLOSER_WATER_FOG", "field_37378", "HAS_CLOSER_WATER_FOG", "f_215802_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BiomeTags#HAS_CLOSER_WATER_FOG
    [[maybe_unused]] static void set_field_HAS_CLOSER_WATER_FOG(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aa", "HAS_CLOSER_WATER_FOG", "field_37378", "HAS_CLOSER_WATER_FOG", "f_215802_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BiomeTags#WATER_ON_MAP_OUTLINES
    [[maybe_unused]] static jobject get_field_WATER_ON_MAP_OUTLINES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ab", "WATER_ON_MAP_OUTLINES", "field_37379", "WATER_ON_MAP_OUTLINES", "f_215803_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BiomeTags#WATER_ON_MAP_OUTLINES
    [[maybe_unused]] static void set_field_WATER_ON_MAP_OUTLINES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ab", "WATER_ON_MAP_OUTLINES", "field_37379", "WATER_ON_MAP_OUTLINES", "f_215803_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BiomeTags#PRODUCES_CORALS_FROM_BONEMEAL
    [[maybe_unused]] static jobject get_field_PRODUCES_CORALS_FROM_BONEMEAL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ac", "PRODUCES_CORALS_FROM_BONEMEAL", "field_37380", "PRODUCES_CORALS_FROM_BONEMEAL", "f_215804_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BiomeTags#PRODUCES_CORALS_FROM_BONEMEAL
    [[maybe_unused]] static void set_field_PRODUCES_CORALS_FROM_BONEMEAL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ac", "PRODUCES_CORALS_FROM_BONEMEAL", "field_37380", "PRODUCES_CORALS_FROM_BONEMEAL", "f_215804_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BiomeTags#INCREASED_FIRE_BURNOUT
    [[maybe_unused]] static jobject get_field_INCREASED_FIRE_BURNOUT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ad", "INCREASED_FIRE_BURNOUT", "field_41752", "INCREASED_FIRE_BURNOUT", "f_263839_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BiomeTags#INCREASED_FIRE_BURNOUT
    [[maybe_unused]] static void set_field_INCREASED_FIRE_BURNOUT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ad", "INCREASED_FIRE_BURNOUT", "field_41752", "INCREASED_FIRE_BURNOUT", "f_263839_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BiomeTags#SNOW_GOLEM_MELTS
    [[maybe_unused]] static jobject get_field_SNOW_GOLEM_MELTS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ae", "SNOW_GOLEM_MELTS", "field_41753", "SNOW_GOLEM_MELTS", "f_263828_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BiomeTags#SNOW_GOLEM_MELTS
    [[maybe_unused]] static void set_field_SNOW_GOLEM_MELTS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ae", "SNOW_GOLEM_MELTS", "field_41753", "SNOW_GOLEM_MELTS", "f_263828_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BiomeTags#WITHOUT_ZOMBIE_SIEGES
    [[maybe_unused]] static jobject get_field_WITHOUT_ZOMBIE_SIEGES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("af", "WITHOUT_ZOMBIE_SIEGES", "field_37381", "WITHOUT_ZOMBIE_SIEGES", "f_215805_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BiomeTags#WITHOUT_ZOMBIE_SIEGES
    [[maybe_unused]] static void set_field_WITHOUT_ZOMBIE_SIEGES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("af", "WITHOUT_ZOMBIE_SIEGES", "field_37381", "WITHOUT_ZOMBIE_SIEGES", "f_215805_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BiomeTags#WITHOUT_PATROL_SPAWNS
    [[maybe_unused]] static jobject get_field_WITHOUT_PATROL_SPAWNS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ag", "WITHOUT_PATROL_SPAWNS", "field_37382", "WITHOUT_PATROL_SPAWNS", "f_215806_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BiomeTags#WITHOUT_PATROL_SPAWNS
    [[maybe_unused]] static void set_field_WITHOUT_PATROL_SPAWNS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ag", "WITHOUT_PATROL_SPAWNS", "field_37382", "WITHOUT_PATROL_SPAWNS", "f_215806_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BiomeTags#WITHOUT_WANDERING_TRADER_SPAWNS
    [[maybe_unused]] static jobject get_field_WITHOUT_WANDERING_TRADER_SPAWNS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ah", "WITHOUT_WANDERING_TRADER_SPAWNS", "field_37383", "WITHOUT_WANDERING_TRADER_SPAWNS", "f_215807_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BiomeTags#WITHOUT_WANDERING_TRADER_SPAWNS
    [[maybe_unused]] static void set_field_WITHOUT_WANDERING_TRADER_SPAWNS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ah", "WITHOUT_WANDERING_TRADER_SPAWNS", "field_37383", "WITHOUT_WANDERING_TRADER_SPAWNS", "f_215807_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BiomeTags#SPAWNS_COLD_VARIANT_FROGS
    [[maybe_unused]] static jobject get_field_SPAWNS_COLD_VARIANT_FROGS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ai", "SPAWNS_COLD_VARIANT_FROGS", "field_37384", "SPAWNS_COLD_VARIANT_FROGS", "f_215808_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BiomeTags#SPAWNS_COLD_VARIANT_FROGS
    [[maybe_unused]] static void set_field_SPAWNS_COLD_VARIANT_FROGS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ai", "SPAWNS_COLD_VARIANT_FROGS", "field_37384", "SPAWNS_COLD_VARIANT_FROGS", "f_215808_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BiomeTags#SPAWNS_WARM_VARIANT_FROGS
    [[maybe_unused]] static jobject get_field_SPAWNS_WARM_VARIANT_FROGS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aj", "SPAWNS_WARM_VARIANT_FROGS", "field_37385", "SPAWNS_WARM_VARIANT_FROGS", "f_215809_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BiomeTags#SPAWNS_WARM_VARIANT_FROGS
    [[maybe_unused]] static void set_field_SPAWNS_WARM_VARIANT_FROGS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aj", "SPAWNS_WARM_VARIANT_FROGS", "field_37385", "SPAWNS_WARM_VARIANT_FROGS", "f_215809_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BiomeTags#SPAWNS_GOLD_RABBITS
    [[maybe_unused]] static jobject get_field_SPAWNS_GOLD_RABBITS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ak", "SPAWNS_GOLD_RABBITS", "field_41754", "SPAWNS_GOLD_RABBITS", "f_263796_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BiomeTags#SPAWNS_GOLD_RABBITS
    [[maybe_unused]] static void set_field_SPAWNS_GOLD_RABBITS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ak", "SPAWNS_GOLD_RABBITS", "field_41754", "SPAWNS_GOLD_RABBITS", "f_263796_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BiomeTags#SPAWNS_WHITE_RABBITS
    [[maybe_unused]] static jobject get_field_SPAWNS_WHITE_RABBITS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("al", "SPAWNS_WHITE_RABBITS", "field_41755", "SPAWNS_WHITE_RABBITS", "f_263794_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BiomeTags#SPAWNS_WHITE_RABBITS
    [[maybe_unused]] static void set_field_SPAWNS_WHITE_RABBITS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("al", "SPAWNS_WHITE_RABBITS", "field_41755", "SPAWNS_WHITE_RABBITS", "f_263794_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BiomeTags#REDUCE_WATER_AMBIENT_SPAWNS
    [[maybe_unused]] static jobject get_field_REDUCE_WATER_AMBIENT_SPAWNS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("am", "REDUCED_WATER_AMBIENT_SPAWNS", "field_37387", "REDUCE_WATER_AMBIENT_SPAWNS", "f_215811_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BiomeTags#REDUCE_WATER_AMBIENT_SPAWNS
    [[maybe_unused]] static void set_field_REDUCE_WATER_AMBIENT_SPAWNS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("am", "REDUCED_WATER_AMBIENT_SPAWNS", "field_37387", "REDUCE_WATER_AMBIENT_SPAWNS", "f_215811_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BiomeTags#ALLOWS_TROPICAL_FISH_SPAWNS_AT_ANY_HEIGHT
    [[maybe_unused]] static jobject get_field_ALLOWS_TROPICAL_FISH_SPAWNS_AT_ANY_HEIGHT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("an", "ALLOWS_TROPICAL_FISH_SPAWNS_AT_ANY_HEIGHT", "field_37388", "ALLOWS_TROPICAL_FISH_SPAWNS_AT_ANY_HEIGHT", "f_215812_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BiomeTags#ALLOWS_TROPICAL_FISH_SPAWNS_AT_ANY_HEIGHT
    [[maybe_unused]] static void set_field_ALLOWS_TROPICAL_FISH_SPAWNS_AT_ANY_HEIGHT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("an", "ALLOWS_TROPICAL_FISH_SPAWNS_AT_ANY_HEIGHT", "field_37388", "ALLOWS_TROPICAL_FISH_SPAWNS_AT_ANY_HEIGHT", "f_215812_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BiomeTags#POLAR_BEARS_SPAWN_ON_ALTERNATE_BLOCKS
    [[maybe_unused]] static jobject get_field_POLAR_BEARS_SPAWN_ON_ALTERNATE_BLOCKS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ao", "POLAR_BEARS_SPAWN_ON_ALTERNATE_BLOCKS", "field_37389", "POLAR_BEARS_SPAWN_ON_ALTERNATE_BLOCKS", "f_215813_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BiomeTags#POLAR_BEARS_SPAWN_ON_ALTERNATE_BLOCKS
    [[maybe_unused]] static void set_field_POLAR_BEARS_SPAWN_ON_ALTERNATE_BLOCKS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ao", "POLAR_BEARS_SPAWN_ON_ALTERNATE_BLOCKS", "field_37389", "POLAR_BEARS_SPAWN_ON_ALTERNATE_BLOCKS", "f_215813_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BiomeTags#MORE_FREQUENT_DROWNED_SPAWNS
    [[maybe_unused]] static jobject get_field_MORE_FREQUENT_DROWNED_SPAWNS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ap", "MORE_FREQUENT_DROWNED_SPAWNS", "field_37390", "MORE_FREQUENT_DROWNED_SPAWNS", "f_215814_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BiomeTags#MORE_FREQUENT_DROWNED_SPAWNS
    [[maybe_unused]] static void set_field_MORE_FREQUENT_DROWNED_SPAWNS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ap", "MORE_FREQUENT_DROWNED_SPAWNS", "field_37390", "MORE_FREQUENT_DROWNED_SPAWNS", "f_215814_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BiomeTags#ALLOWS_SURFACE_SLIME_SPAWNS
    [[maybe_unused]] static jobject get_field_ALLOWS_SURFACE_SLIME_SPAWNS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aq", "ALLOWS_SURFACE_SLIME_SPAWNS", "field_37391", "ALLOWS_SURFACE_SLIME_SPAWNS", "f_215815_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BiomeTags#ALLOWS_SURFACE_SLIME_SPAWNS
    [[maybe_unused]] static void set_field_ALLOWS_SURFACE_SLIME_SPAWNS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aq", "ALLOWS_SURFACE_SLIME_SPAWNS", "field_37391", "ALLOWS_SURFACE_SLIME_SPAWNS", "f_215815_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BiomeTags#SPAWNS_SNOW_FOXES
    [[maybe_unused]] static jobject get_field_SPAWNS_SNOW_FOXES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ar", "SPAWNS_SNOW_FOXES", "field_41756", "SPAWNS_SNOW_FOXES", "f_263748_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BiomeTags#SPAWNS_SNOW_FOXES
    [[maybe_unused]] static void set_field_SPAWNS_SNOW_FOXES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ar", "SPAWNS_SNOW_FOXES", "field_41756", "SPAWNS_SNOW_FOXES", "f_263748_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_of() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "create", "method_40434", "of", "m_207630_"), "(Ljava/lang/String;)Lawu;");
    }

    static jobject of(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_of();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_REGISTRY_TAG_BIOMETAGS_HPP