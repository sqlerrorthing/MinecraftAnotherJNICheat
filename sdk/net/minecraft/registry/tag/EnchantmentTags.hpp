// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_REGISTRY_TAG_ENCHANTMENTTAGS_HPP
#define NET_MINECRAFT_REGISTRY_TAG_ENCHANTMENTTAGS_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.registry.tag.EnchantmentTags
 * Remapped: awh
 */
namespace EnchantmentTags {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("awh", "net/minecraft/tags/EnchantmentTags", "net/minecraft/class_9636", "net/minecraft/registry/tag/EnchantmentTags", "net/minecraft/src/C_313355_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.registry.tag.EnchantmentTags#TOOLTIP_ORDER
    [[maybe_unused]] static jobject get_field_TOOLTIP_ORDER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "TOOLTIP_ORDER", "field_51362", "TOOLTIP_ORDER", "f_315440_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.EnchantmentTags#TOOLTIP_ORDER
    [[maybe_unused]] static void set_field_TOOLTIP_ORDER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "TOOLTIP_ORDER", "field_51362", "TOOLTIP_ORDER", "f_315440_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.EnchantmentTags#ARMOR_EXCLUSIVE_SET
    [[maybe_unused]] static jobject get_field_ARMOR_EXCLUSIVE_SET() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "ARMOR_EXCLUSIVE", "field_51538", "ARMOR_EXCLUSIVE_SET", "f_336974_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.EnchantmentTags#ARMOR_EXCLUSIVE_SET
    [[maybe_unused]] static void set_field_ARMOR_EXCLUSIVE_SET(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "ARMOR_EXCLUSIVE", "field_51538", "ARMOR_EXCLUSIVE_SET", "f_336974_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.EnchantmentTags#BOOTS_EXCLUSIVE_SET
    [[maybe_unused]] static jobject get_field_BOOTS_EXCLUSIVE_SET() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "BOOTS_EXCLUSIVE", "field_51539", "BOOTS_EXCLUSIVE_SET", "f_337073_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.EnchantmentTags#BOOTS_EXCLUSIVE_SET
    [[maybe_unused]] static void set_field_BOOTS_EXCLUSIVE_SET(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "BOOTS_EXCLUSIVE", "field_51539", "BOOTS_EXCLUSIVE_SET", "f_337073_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.EnchantmentTags#BOW_EXCLUSIVE_SET
    [[maybe_unused]] static jobject get_field_BOW_EXCLUSIVE_SET() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "BOW_EXCLUSIVE", "field_51540", "BOW_EXCLUSIVE_SET", "f_336618_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.EnchantmentTags#BOW_EXCLUSIVE_SET
    [[maybe_unused]] static void set_field_BOW_EXCLUSIVE_SET(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "BOW_EXCLUSIVE", "field_51540", "BOW_EXCLUSIVE_SET", "f_336618_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.EnchantmentTags#CROSSBOW_EXCLUSIVE_SET
    [[maybe_unused]] static jobject get_field_CROSSBOW_EXCLUSIVE_SET() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "CROSSBOW_EXCLUSIVE", "field_51541", "CROSSBOW_EXCLUSIVE_SET", "f_337051_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.EnchantmentTags#CROSSBOW_EXCLUSIVE_SET
    [[maybe_unused]] static void set_field_CROSSBOW_EXCLUSIVE_SET(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "CROSSBOW_EXCLUSIVE", "field_51541", "CROSSBOW_EXCLUSIVE_SET", "f_337051_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.EnchantmentTags#DAMAGE_EXCLUSIVE_SET
    [[maybe_unused]] static jobject get_field_DAMAGE_EXCLUSIVE_SET() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "DAMAGE_EXCLUSIVE", "field_51542", "DAMAGE_EXCLUSIVE_SET", "f_337308_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.EnchantmentTags#DAMAGE_EXCLUSIVE_SET
    [[maybe_unused]] static void set_field_DAMAGE_EXCLUSIVE_SET(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "DAMAGE_EXCLUSIVE", "field_51542", "DAMAGE_EXCLUSIVE_SET", "f_337308_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.EnchantmentTags#MINING_EXCLUSIVE_SET
    [[maybe_unused]] static jobject get_field_MINING_EXCLUSIVE_SET() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "MINING_EXCLUSIVE", "field_51543", "MINING_EXCLUSIVE_SET", "f_336676_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.EnchantmentTags#MINING_EXCLUSIVE_SET
    [[maybe_unused]] static void set_field_MINING_EXCLUSIVE_SET(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "MINING_EXCLUSIVE", "field_51543", "MINING_EXCLUSIVE_SET", "f_336676_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.EnchantmentTags#RIPTIDE_EXCLUSIVE_SET
    [[maybe_unused]] static jobject get_field_RIPTIDE_EXCLUSIVE_SET() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "RIPTIDE_EXCLUSIVE", "field_51544", "RIPTIDE_EXCLUSIVE_SET", "f_337670_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.EnchantmentTags#RIPTIDE_EXCLUSIVE_SET
    [[maybe_unused]] static void set_field_RIPTIDE_EXCLUSIVE_SET(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "RIPTIDE_EXCLUSIVE", "field_51544", "RIPTIDE_EXCLUSIVE_SET", "f_337670_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.EnchantmentTags#TRADEABLE
    [[maybe_unused]] static jobject get_field_TRADEABLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "TRADEABLE", "field_51545", "TRADEABLE", "f_337617_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.EnchantmentTags#TRADEABLE
    [[maybe_unused]] static void set_field_TRADEABLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "TRADEABLE", "field_51545", "TRADEABLE", "f_337617_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.EnchantmentTags#DOUBLE_TRADE_PRICE
    [[maybe_unused]] static jobject get_field_DOUBLE_TRADE_PRICE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "DOUBLE_TRADE_PRICE", "field_51546", "DOUBLE_TRADE_PRICE", "f_337440_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.EnchantmentTags#DOUBLE_TRADE_PRICE
    [[maybe_unused]] static void set_field_DOUBLE_TRADE_PRICE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "DOUBLE_TRADE_PRICE", "field_51546", "DOUBLE_TRADE_PRICE", "f_337440_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.EnchantmentTags#IN_ENCHANTING_TABLE
    [[maybe_unused]] static jobject get_field_IN_ENCHANTING_TABLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "IN_ENCHANTING_TABLE", "field_51547", "IN_ENCHANTING_TABLE", "f_337561_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.EnchantmentTags#IN_ENCHANTING_TABLE
    [[maybe_unused]] static void set_field_IN_ENCHANTING_TABLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "IN_ENCHANTING_TABLE", "field_51547", "IN_ENCHANTING_TABLE", "f_337561_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.EnchantmentTags#ON_MOB_SPAWN_EQUIPMENT
    [[maybe_unused]] static jobject get_field_ON_MOB_SPAWN_EQUIPMENT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "ON_MOB_SPAWN_EQUIPMENT", "field_51548", "ON_MOB_SPAWN_EQUIPMENT", "f_337381_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.EnchantmentTags#ON_MOB_SPAWN_EQUIPMENT
    [[maybe_unused]] static void set_field_ON_MOB_SPAWN_EQUIPMENT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "ON_MOB_SPAWN_EQUIPMENT", "field_51548", "ON_MOB_SPAWN_EQUIPMENT", "f_337381_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.EnchantmentTags#ON_TRADED_EQUIPMENT
    [[maybe_unused]] static jobject get_field_ON_TRADED_EQUIPMENT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "ON_TRADED_EQUIPMENT", "field_51549", "ON_TRADED_EQUIPMENT", "f_337106_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.EnchantmentTags#ON_TRADED_EQUIPMENT
    [[maybe_unused]] static void set_field_ON_TRADED_EQUIPMENT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "ON_TRADED_EQUIPMENT", "field_51549", "ON_TRADED_EQUIPMENT", "f_337106_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.EnchantmentTags#ON_RANDOM_LOOT
    [[maybe_unused]] static jobject get_field_ON_RANDOM_LOOT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "ON_RANDOM_LOOT", "field_51550", "ON_RANDOM_LOOT", "f_337721_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.EnchantmentTags#ON_RANDOM_LOOT
    [[maybe_unused]] static void set_field_ON_RANDOM_LOOT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "ON_RANDOM_LOOT", "field_51550", "ON_RANDOM_LOOT", "f_337721_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.EnchantmentTags#CURSE
    [[maybe_unused]] static jobject get_field_CURSE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "CURSE", "field_51551", "CURSE", "f_336740_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.EnchantmentTags#CURSE
    [[maybe_unused]] static void set_field_CURSE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "CURSE", "field_51551", "CURSE", "f_336740_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.EnchantmentTags#SMELTS_LOOT
    [[maybe_unused]] static jobject get_field_SMELTS_LOOT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "SMELTS_LOOT", "field_51552", "SMELTS_LOOT", "f_337243_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.EnchantmentTags#SMELTS_LOOT
    [[maybe_unused]] static void set_field_SMELTS_LOOT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "SMELTS_LOOT", "field_51552", "SMELTS_LOOT", "f_337243_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.EnchantmentTags#PREVENTS_BEE_SPAWNS_WHEN_MINING
    [[maybe_unused]] static jobject get_field_PREVENTS_BEE_SPAWNS_WHEN_MINING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "PREVENTS_BEE_SPAWNS_WHEN_MINING", "field_51553", "PREVENTS_BEE_SPAWNS_WHEN_MINING", "f_337256_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.EnchantmentTags#PREVENTS_BEE_SPAWNS_WHEN_MINING
    [[maybe_unused]] static void set_field_PREVENTS_BEE_SPAWNS_WHEN_MINING(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "PREVENTS_BEE_SPAWNS_WHEN_MINING", "field_51553", "PREVENTS_BEE_SPAWNS_WHEN_MINING", "f_337256_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.EnchantmentTags#PREVENTS_DECORATED_POT_SHATTERING
    [[maybe_unused]] static jobject get_field_PREVENTS_DECORATED_POT_SHATTERING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "PREVENTS_DECORATED_POT_SHATTERING", "field_51554", "PREVENTS_DECORATED_POT_SHATTERING", "f_337373_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.EnchantmentTags#PREVENTS_DECORATED_POT_SHATTERING
    [[maybe_unused]] static void set_field_PREVENTS_DECORATED_POT_SHATTERING(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "PREVENTS_DECORATED_POT_SHATTERING", "field_51554", "PREVENTS_DECORATED_POT_SHATTERING", "f_337373_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.EnchantmentTags#PREVENTS_ICE_MELTING
    [[maybe_unused]] static jobject get_field_PREVENTS_ICE_MELTING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "PREVENTS_ICE_MELTING", "field_51555", "PREVENTS_ICE_MELTING", "f_337037_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.EnchantmentTags#PREVENTS_ICE_MELTING
    [[maybe_unused]] static void set_field_PREVENTS_ICE_MELTING(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "PREVENTS_ICE_MELTING", "field_51555", "PREVENTS_ICE_MELTING", "f_337037_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.EnchantmentTags#PREVENTS_INFESTED_SPAWNS
    [[maybe_unused]] static jobject get_field_PREVENTS_INFESTED_SPAWNS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "PREVENTS_INFESTED_SPAWNS", "field_51556", "PREVENTS_INFESTED_SPAWNS", "f_337131_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.EnchantmentTags#PREVENTS_INFESTED_SPAWNS
    [[maybe_unused]] static void set_field_PREVENTS_INFESTED_SPAWNS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "PREVENTS_INFESTED_SPAWNS", "field_51556", "PREVENTS_INFESTED_SPAWNS", "f_337131_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.EnchantmentTags#TREASURE
    [[maybe_unused]] static jobject get_field_TREASURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "TREASURE", "field_51557", "TREASURE", "f_336920_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.EnchantmentTags#TREASURE
    [[maybe_unused]] static void set_field_TREASURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "TREASURE", "field_51557", "TREASURE", "f_336920_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.EnchantmentTags#NON_TREASURE
    [[maybe_unused]] static jobject get_field_NON_TREASURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "NON_TREASURE", "field_51558", "NON_TREASURE", "f_337545_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.EnchantmentTags#NON_TREASURE
    [[maybe_unused]] static void set_field_NON_TREASURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "NON_TREASURE", "field_51558", "NON_TREASURE", "f_337545_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.EnchantmentTags#DESERT_COMMON_TRADE
    [[maybe_unused]] static jobject get_field_DESERT_COMMON_TRADE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "TRADES_DESERT_COMMON", "field_51559", "DESERT_COMMON_TRADE", "f_337091_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.EnchantmentTags#DESERT_COMMON_TRADE
    [[maybe_unused]] static void set_field_DESERT_COMMON_TRADE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "TRADES_DESERT_COMMON", "field_51559", "DESERT_COMMON_TRADE", "f_337091_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.EnchantmentTags#JUNGLE_COMMON_TRADE
    [[maybe_unused]] static jobject get_field_JUNGLE_COMMON_TRADE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "TRADES_JUNGLE_COMMON", "field_51560", "JUNGLE_COMMON_TRADE", "f_337030_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.EnchantmentTags#JUNGLE_COMMON_TRADE
    [[maybe_unused]] static void set_field_JUNGLE_COMMON_TRADE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "TRADES_JUNGLE_COMMON", "field_51560", "JUNGLE_COMMON_TRADE", "f_337030_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.EnchantmentTags#PLAINS_COMMON_TRADE
    [[maybe_unused]] static jobject get_field_PLAINS_COMMON_TRADE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("y", "TRADES_PLAINS_COMMON", "field_51561", "PLAINS_COMMON_TRADE", "f_336780_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.EnchantmentTags#PLAINS_COMMON_TRADE
    [[maybe_unused]] static void set_field_PLAINS_COMMON_TRADE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("y", "TRADES_PLAINS_COMMON", "field_51561", "PLAINS_COMMON_TRADE", "f_336780_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.EnchantmentTags#SAVANNA_COMMON_TRADE
    [[maybe_unused]] static jobject get_field_SAVANNA_COMMON_TRADE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("z", "TRADES_SAVANNA_COMMON", "field_51562", "SAVANNA_COMMON_TRADE", "f_337419_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.EnchantmentTags#SAVANNA_COMMON_TRADE
    [[maybe_unused]] static void set_field_SAVANNA_COMMON_TRADE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("z", "TRADES_SAVANNA_COMMON", "field_51562", "SAVANNA_COMMON_TRADE", "f_337419_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.EnchantmentTags#SNOW_COMMON_TRADE
    [[maybe_unused]] static jobject get_field_SNOW_COMMON_TRADE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("A", "TRADES_SNOW_COMMON", "field_51528", "SNOW_COMMON_TRADE", "f_337060_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.EnchantmentTags#SNOW_COMMON_TRADE
    [[maybe_unused]] static void set_field_SNOW_COMMON_TRADE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("A", "TRADES_SNOW_COMMON", "field_51528", "SNOW_COMMON_TRADE", "f_337060_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.EnchantmentTags#SWAMP_COMMON_TRADE
    [[maybe_unused]] static jobject get_field_SWAMP_COMMON_TRADE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("B", "TRADES_SWAMP_COMMON", "field_51529", "SWAMP_COMMON_TRADE", "f_336693_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.EnchantmentTags#SWAMP_COMMON_TRADE
    [[maybe_unused]] static void set_field_SWAMP_COMMON_TRADE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("B", "TRADES_SWAMP_COMMON", "field_51529", "SWAMP_COMMON_TRADE", "f_336693_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.EnchantmentTags#TAIGA_COMMON_TRADE
    [[maybe_unused]] static jobject get_field_TAIGA_COMMON_TRADE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("C", "TRADES_TAIGA_COMMON", "field_51530", "TAIGA_COMMON_TRADE", "f_337145_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.EnchantmentTags#TAIGA_COMMON_TRADE
    [[maybe_unused]] static void set_field_TAIGA_COMMON_TRADE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("C", "TRADES_TAIGA_COMMON", "field_51530", "TAIGA_COMMON_TRADE", "f_337145_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.EnchantmentTags#DESERT_SPECIAL_TRADE
    [[maybe_unused]] static jobject get_field_DESERT_SPECIAL_TRADE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("D", "TRADES_DESERT_SPECIAL", "field_51531", "DESERT_SPECIAL_TRADE", "f_337168_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.EnchantmentTags#DESERT_SPECIAL_TRADE
    [[maybe_unused]] static void set_field_DESERT_SPECIAL_TRADE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("D", "TRADES_DESERT_SPECIAL", "field_51531", "DESERT_SPECIAL_TRADE", "f_337168_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.EnchantmentTags#JUNGLE_SPECIAL_TRADE
    [[maybe_unused]] static jobject get_field_JUNGLE_SPECIAL_TRADE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("E", "TRADES_JUNGLE_SPECIAL", "field_51532", "JUNGLE_SPECIAL_TRADE", "f_337098_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.EnchantmentTags#JUNGLE_SPECIAL_TRADE
    [[maybe_unused]] static void set_field_JUNGLE_SPECIAL_TRADE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("E", "TRADES_JUNGLE_SPECIAL", "field_51532", "JUNGLE_SPECIAL_TRADE", "f_337098_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.EnchantmentTags#PLAINS_SPECIAL_TRADE
    [[maybe_unused]] static jobject get_field_PLAINS_SPECIAL_TRADE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("F", "TRADES_PLAINS_SPECIAL", "field_51533", "PLAINS_SPECIAL_TRADE", "f_337634_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.EnchantmentTags#PLAINS_SPECIAL_TRADE
    [[maybe_unused]] static void set_field_PLAINS_SPECIAL_TRADE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("F", "TRADES_PLAINS_SPECIAL", "field_51533", "PLAINS_SPECIAL_TRADE", "f_337634_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.EnchantmentTags#SAVANNA_SPECIAL_TRADE
    [[maybe_unused]] static jobject get_field_SAVANNA_SPECIAL_TRADE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("G", "TRADES_SAVANNA_SPECIAL", "field_51534", "SAVANNA_SPECIAL_TRADE", "f_336990_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.EnchantmentTags#SAVANNA_SPECIAL_TRADE
    [[maybe_unused]] static void set_field_SAVANNA_SPECIAL_TRADE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("G", "TRADES_SAVANNA_SPECIAL", "field_51534", "SAVANNA_SPECIAL_TRADE", "f_336990_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.EnchantmentTags#SNOW_SPECIAL_TRADE
    [[maybe_unused]] static jobject get_field_SNOW_SPECIAL_TRADE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("H", "TRADES_SNOW_SPECIAL", "field_51535", "SNOW_SPECIAL_TRADE", "f_337654_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.EnchantmentTags#SNOW_SPECIAL_TRADE
    [[maybe_unused]] static void set_field_SNOW_SPECIAL_TRADE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("H", "TRADES_SNOW_SPECIAL", "field_51535", "SNOW_SPECIAL_TRADE", "f_337654_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.EnchantmentTags#SWAMP_SPECIAL_TRADE
    [[maybe_unused]] static jobject get_field_SWAMP_SPECIAL_TRADE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("I", "TRADES_SWAMP_SPECIAL", "field_51536", "SWAMP_SPECIAL_TRADE", "f_336638_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.EnchantmentTags#SWAMP_SPECIAL_TRADE
    [[maybe_unused]] static void set_field_SWAMP_SPECIAL_TRADE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("I", "TRADES_SWAMP_SPECIAL", "field_51536", "SWAMP_SPECIAL_TRADE", "f_336638_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.EnchantmentTags#TAIGA_SPECIAL_TRADE
    [[maybe_unused]] static jobject get_field_TAIGA_SPECIAL_TRADE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("J", "TRADES_TAIGA_SPECIAL", "field_51537", "TAIGA_SPECIAL_TRADE", "f_336783_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.EnchantmentTags#TAIGA_SPECIAL_TRADE
    [[maybe_unused]] static void set_field_TAIGA_SPECIAL_TRADE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("J", "TRADES_TAIGA_SPECIAL", "field_51537", "TAIGA_SPECIAL_TRADE", "f_336783_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_of() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "create", "method_59548", "of", "m_323146_"), "(Ljava/lang/String;)Lawu;");
    }

    static jobject of(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_of();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_REGISTRY_TAG_ENCHANTMENTTAGS_HPP