// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_REGISTRY_TAG_BLOCKTAGS_HPP
#define NET_MINECRAFT_REGISTRY_TAG_BLOCKTAGS_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.registry.tag.BlockTags
 * Remapped: awe
 */
namespace BlockTags {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("awe", "net/minecraft/tags/BlockTags", "net/minecraft/class_3481", "net/minecraft/registry/tag/BlockTags", "net/minecraft/src/C_137_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#WOOL
    [[maybe_unused]] static jobject get_field_WOOL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "WOOL", "field_15481", "WOOL", "f_13089_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#WOOL
    [[maybe_unused]] static void set_field_WOOL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "WOOL", "field_15481", "WOOL", "f_13089_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#PLANKS
    [[maybe_unused]] static jobject get_field_PLANKS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "PLANKS", "field_15471", "PLANKS", "f_13090_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#PLANKS
    [[maybe_unused]] static void set_field_PLANKS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "PLANKS", "field_15471", "PLANKS", "f_13090_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#STONE_BRICKS
    [[maybe_unused]] static jobject get_field_STONE_BRICKS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "STONE_BRICKS", "field_15465", "STONE_BRICKS", "f_13091_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#STONE_BRICKS
    [[maybe_unused]] static void set_field_STONE_BRICKS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "STONE_BRICKS", "field_15465", "STONE_BRICKS", "f_13091_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#WOODEN_BUTTONS
    [[maybe_unused]] static jobject get_field_WOODEN_BUTTONS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "WOODEN_BUTTONS", "field_15499", "WOODEN_BUTTONS", "f_13092_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#WOODEN_BUTTONS
    [[maybe_unused]] static void set_field_WOODEN_BUTTONS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "WOODEN_BUTTONS", "field_15499", "WOODEN_BUTTONS", "f_13092_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#STONE_BUTTONS
    [[maybe_unused]] static jobject get_field_STONE_BUTTONS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "STONE_BUTTONS", "field_44590", "STONE_BUTTONS", "f_279568_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#STONE_BUTTONS
    [[maybe_unused]] static void set_field_STONE_BUTTONS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "STONE_BUTTONS", "field_44590", "STONE_BUTTONS", "f_279568_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#BUTTONS
    [[maybe_unused]] static jobject get_field_BUTTONS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "BUTTONS", "field_15493", "BUTTONS", "f_13093_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#BUTTONS
    [[maybe_unused]] static void set_field_BUTTONS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "BUTTONS", "field_15493", "BUTTONS", "f_13093_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#WOOL_CARPETS
    [[maybe_unused]] static jobject get_field_WOOL_CARPETS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "WOOL_CARPETS", "field_15479", "WOOL_CARPETS", "f_215838_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#WOOL_CARPETS
    [[maybe_unused]] static void set_field_WOOL_CARPETS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "WOOL_CARPETS", "field_15479", "WOOL_CARPETS", "f_215838_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#WOODEN_DOORS
    [[maybe_unused]] static jobject get_field_WOODEN_DOORS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "WOODEN_DOORS", "field_15494", "WOODEN_DOORS", "f_13095_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#WOODEN_DOORS
    [[maybe_unused]] static void set_field_WOODEN_DOORS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "WOODEN_DOORS", "field_15494", "WOODEN_DOORS", "f_13095_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#MOB_INTERACTABLE_DOORS
    [[maybe_unused]] static jobject get_field_MOB_INTERACTABLE_DOORS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "MOB_INTERACTABLE_DOORS", "field_52288", "MOB_INTERACTABLE_DOORS", "f_337473_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#MOB_INTERACTABLE_DOORS
    [[maybe_unused]] static void set_field_MOB_INTERACTABLE_DOORS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "MOB_INTERACTABLE_DOORS", "field_52288", "MOB_INTERACTABLE_DOORS", "f_337473_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#WOODEN_STAIRS
    [[maybe_unused]] static jobject get_field_WOODEN_STAIRS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "WOODEN_STAIRS", "field_15502", "WOODEN_STAIRS", "f_13096_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#WOODEN_STAIRS
    [[maybe_unused]] static void set_field_WOODEN_STAIRS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "WOODEN_STAIRS", "field_15502", "WOODEN_STAIRS", "f_13096_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#WOODEN_SLABS
    [[maybe_unused]] static jobject get_field_WOODEN_SLABS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "WOODEN_SLABS", "field_15468", "WOODEN_SLABS", "f_13097_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#WOODEN_SLABS
    [[maybe_unused]] static void set_field_WOODEN_SLABS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "WOODEN_SLABS", "field_15468", "WOODEN_SLABS", "f_13097_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#WOODEN_FENCES
    [[maybe_unused]] static jobject get_field_WOODEN_FENCES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "WOODEN_FENCES", "field_17619", "WOODEN_FENCES", "f_13098_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#WOODEN_FENCES
    [[maybe_unused]] static void set_field_WOODEN_FENCES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "WOODEN_FENCES", "field_17619", "WOODEN_FENCES", "f_13098_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#PRESSURE_PLATES
    [[maybe_unused]] static jobject get_field_PRESSURE_PLATES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "PRESSURE_PLATES", "field_24076", "PRESSURE_PLATES", "f_13099_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#PRESSURE_PLATES
    [[maybe_unused]] static void set_field_PRESSURE_PLATES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "PRESSURE_PLATES", "field_24076", "PRESSURE_PLATES", "f_13099_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#WOODEN_PRESSURE_PLATES
    [[maybe_unused]] static jobject get_field_WOODEN_PRESSURE_PLATES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "WOODEN_PRESSURE_PLATES", "field_15477", "WOODEN_PRESSURE_PLATES", "f_13100_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#WOODEN_PRESSURE_PLATES
    [[maybe_unused]] static void set_field_WOODEN_PRESSURE_PLATES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "WOODEN_PRESSURE_PLATES", "field_15477", "WOODEN_PRESSURE_PLATES", "f_13100_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#STONE_PRESSURE_PLATES
    [[maybe_unused]] static jobject get_field_STONE_PRESSURE_PLATES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "STONE_PRESSURE_PLATES", "field_24077", "STONE_PRESSURE_PLATES", "f_13101_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#STONE_PRESSURE_PLATES
    [[maybe_unused]] static void set_field_STONE_PRESSURE_PLATES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "STONE_PRESSURE_PLATES", "field_24077", "STONE_PRESSURE_PLATES", "f_13101_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#WOODEN_TRAPDOORS
    [[maybe_unused]] static jobject get_field_WOODEN_TRAPDOORS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "WOODEN_TRAPDOORS", "field_15491", "WOODEN_TRAPDOORS", "f_13102_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#WOODEN_TRAPDOORS
    [[maybe_unused]] static void set_field_WOODEN_TRAPDOORS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "WOODEN_TRAPDOORS", "field_15491", "WOODEN_TRAPDOORS", "f_13102_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#DOORS
    [[maybe_unused]] static jobject get_field_DOORS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "DOORS", "field_15495", "DOORS", "f_13103_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#DOORS
    [[maybe_unused]] static void set_field_DOORS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "DOORS", "field_15495", "DOORS", "f_13103_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#SAPLINGS
    [[maybe_unused]] static jobject get_field_SAPLINGS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "SAPLINGS", "field_15462", "SAPLINGS", "f_13104_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#SAPLINGS
    [[maybe_unused]] static void set_field_SAPLINGS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "SAPLINGS", "field_15462", "SAPLINGS", "f_13104_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#LOGS_THAT_BURN
    [[maybe_unused]] static jobject get_field_LOGS_THAT_BURN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "LOGS_THAT_BURN", "field_23210", "LOGS_THAT_BURN", "f_13105_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#LOGS_THAT_BURN
    [[maybe_unused]] static void set_field_LOGS_THAT_BURN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "LOGS_THAT_BURN", "field_23210", "LOGS_THAT_BURN", "f_13105_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#OVERWORLD_NATURAL_LOGS
    [[maybe_unused]] static jobject get_field_OVERWORLD_NATURAL_LOGS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "OVERWORLD_NATURAL_LOGS", "field_39030", "OVERWORLD_NATURAL_LOGS", "f_215839_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#OVERWORLD_NATURAL_LOGS
    [[maybe_unused]] static void set_field_OVERWORLD_NATURAL_LOGS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "OVERWORLD_NATURAL_LOGS", "field_39030", "OVERWORLD_NATURAL_LOGS", "f_215839_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#LOGS
    [[maybe_unused]] static jobject get_field_LOGS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "LOGS", "field_15475", "LOGS", "f_13106_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#LOGS
    [[maybe_unused]] static void set_field_LOGS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "LOGS", "field_15475", "LOGS", "f_13106_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#DARK_OAK_LOGS
    [[maybe_unused]] static jobject get_field_DARK_OAK_LOGS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "DARK_OAK_LOGS", "field_15485", "DARK_OAK_LOGS", "f_13107_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#DARK_OAK_LOGS
    [[maybe_unused]] static void set_field_DARK_OAK_LOGS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "DARK_OAK_LOGS", "field_15485", "DARK_OAK_LOGS", "f_13107_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#OAK_LOGS
    [[maybe_unused]] static jobject get_field_OAK_LOGS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "OAK_LOGS", "field_15482", "OAK_LOGS", "f_13108_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#OAK_LOGS
    [[maybe_unused]] static void set_field_OAK_LOGS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "OAK_LOGS", "field_15482", "OAK_LOGS", "f_13108_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#BIRCH_LOGS
    [[maybe_unused]] static jobject get_field_BIRCH_LOGS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "BIRCH_LOGS", "field_15498", "BIRCH_LOGS", "f_13109_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#BIRCH_LOGS
    [[maybe_unused]] static void set_field_BIRCH_LOGS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "BIRCH_LOGS", "field_15498", "BIRCH_LOGS", "f_13109_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#ACACIA_LOGS
    [[maybe_unused]] static jobject get_field_ACACIA_LOGS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("y", "ACACIA_LOGS", "field_15458", "ACACIA_LOGS", "f_13110_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#ACACIA_LOGS
    [[maybe_unused]] static void set_field_ACACIA_LOGS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("y", "ACACIA_LOGS", "field_15458", "ACACIA_LOGS", "f_13110_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#CHERRY_LOGS
    [[maybe_unused]] static jobject get_field_CHERRY_LOGS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("z", "CHERRY_LOGS", "field_42608", "CHERRY_LOGS", "f_271212_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#CHERRY_LOGS
    [[maybe_unused]] static void set_field_CHERRY_LOGS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("z", "CHERRY_LOGS", "field_42608", "CHERRY_LOGS", "f_271212_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#JUNGLE_LOGS
    [[maybe_unused]] static jobject get_field_JUNGLE_LOGS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("A", "JUNGLE_LOGS", "field_15474", "JUNGLE_LOGS", "f_13111_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#JUNGLE_LOGS
    [[maybe_unused]] static void set_field_JUNGLE_LOGS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("A", "JUNGLE_LOGS", "field_15474", "JUNGLE_LOGS", "f_13111_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#SPRUCE_LOGS
    [[maybe_unused]] static jobject get_field_SPRUCE_LOGS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("B", "SPRUCE_LOGS", "field_15489", "SPRUCE_LOGS", "f_13112_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#SPRUCE_LOGS
    [[maybe_unused]] static void set_field_SPRUCE_LOGS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("B", "SPRUCE_LOGS", "field_15489", "SPRUCE_LOGS", "f_13112_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#MANGROVE_LOGS
    [[maybe_unused]] static jobject get_field_MANGROVE_LOGS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("C", "MANGROVE_LOGS", "field_37401", "MANGROVE_LOGS", "f_215840_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#MANGROVE_LOGS
    [[maybe_unused]] static void set_field_MANGROVE_LOGS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("C", "MANGROVE_LOGS", "field_37401", "MANGROVE_LOGS", "f_215840_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#CRIMSON_STEMS
    [[maybe_unused]] static jobject get_field_CRIMSON_STEMS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("D", "CRIMSON_STEMS", "field_21955", "CRIMSON_STEMS", "f_13113_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#CRIMSON_STEMS
    [[maybe_unused]] static void set_field_CRIMSON_STEMS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("D", "CRIMSON_STEMS", "field_21955", "CRIMSON_STEMS", "f_13113_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#WARPED_STEMS
    [[maybe_unused]] static jobject get_field_WARPED_STEMS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("E", "WARPED_STEMS", "field_21956", "WARPED_STEMS", "f_13027_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#WARPED_STEMS
    [[maybe_unused]] static void set_field_WARPED_STEMS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("E", "WARPED_STEMS", "field_21956", "WARPED_STEMS", "f_13027_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#BAMBOO_BLOCKS
    [[maybe_unused]] static jobject get_field_BAMBOO_BLOCKS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("F", "BAMBOO_BLOCKS", "field_40986", "BAMBOO_BLOCKS", "f_257016_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#BAMBOO_BLOCKS
    [[maybe_unused]] static void set_field_BAMBOO_BLOCKS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("F", "BAMBOO_BLOCKS", "field_40986", "BAMBOO_BLOCKS", "f_257016_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#WART_BLOCKS
    [[maybe_unused]] static jobject get_field_WART_BLOCKS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("G", "WART_BLOCKS", "field_21954", "WART_BLOCKS", "f_13078_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#WART_BLOCKS
    [[maybe_unused]] static void set_field_WART_BLOCKS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("G", "WART_BLOCKS", "field_21954", "WART_BLOCKS", "f_13078_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#BANNERS
    [[maybe_unused]] static jobject get_field_BANNERS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("H", "BANNERS", "field_15501", "BANNERS", "f_13028_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#BANNERS
    [[maybe_unused]] static void set_field_BANNERS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("H", "BANNERS", "field_15501", "BANNERS", "f_13028_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#SAND
    [[maybe_unused]] static jobject get_field_SAND() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("I", "SAND", "field_15466", "SAND", "f_13029_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#SAND
    [[maybe_unused]] static void set_field_SAND(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("I", "SAND", "field_15466", "SAND", "f_13029_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#SMELTS_TO_GLASS
    [[maybe_unused]] static jobject get_field_SMELTS_TO_GLASS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("J", "SMELTS_TO_GLASS", "field_42968", "SMELTS_TO_GLASS", "f_273845_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#SMELTS_TO_GLASS
    [[maybe_unused]] static void set_field_SMELTS_TO_GLASS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("J", "SMELTS_TO_GLASS", "field_42968", "SMELTS_TO_GLASS", "f_273845_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#STAIRS
    [[maybe_unused]] static jobject get_field_STAIRS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("K", "STAIRS", "field_15459", "STAIRS", "f_13030_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#STAIRS
    [[maybe_unused]] static void set_field_STAIRS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("K", "STAIRS", "field_15459", "STAIRS", "f_13030_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#SLABS
    [[maybe_unused]] static jobject get_field_SLABS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("L", "SLABS", "field_15469", "SLABS", "f_13031_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#SLABS
    [[maybe_unused]] static void set_field_SLABS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("L", "SLABS", "field_15469", "SLABS", "f_13031_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#WALLS
    [[maybe_unused]] static jobject get_field_WALLS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("M", "WALLS", "field_15504", "WALLS", "f_13032_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#WALLS
    [[maybe_unused]] static void set_field_WALLS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("M", "WALLS", "field_15504", "WALLS", "f_13032_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#ANVIL
    [[maybe_unused]] static jobject get_field_ANVIL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("N", "ANVIL", "field_15486", "ANVIL", "f_13033_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#ANVIL
    [[maybe_unused]] static void set_field_ANVIL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("N", "ANVIL", "field_15486", "ANVIL", "f_13033_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#RAILS
    [[maybe_unused]] static jobject get_field_RAILS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("O", "RAILS", "field_15463", "RAILS", "f_13034_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#RAILS
    [[maybe_unused]] static void set_field_RAILS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("O", "RAILS", "field_15463", "RAILS", "f_13034_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#LEAVES
    [[maybe_unused]] static jobject get_field_LEAVES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("P", "LEAVES", "field_15503", "LEAVES", "f_13035_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#LEAVES
    [[maybe_unused]] static void set_field_LEAVES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("P", "LEAVES", "field_15503", "LEAVES", "f_13035_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#TRAPDOORS
    [[maybe_unused]] static jobject get_field_TRAPDOORS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Q", "TRAPDOORS", "field_15487", "TRAPDOORS", "f_13036_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#TRAPDOORS
    [[maybe_unused]] static void set_field_TRAPDOORS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Q", "TRAPDOORS", "field_15487", "TRAPDOORS", "f_13036_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#SMALL_FLOWERS
    [[maybe_unused]] static jobject get_field_SMALL_FLOWERS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("R", "SMALL_FLOWERS", "field_15480", "SMALL_FLOWERS", "f_13037_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#SMALL_FLOWERS
    [[maybe_unused]] static void set_field_SMALL_FLOWERS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("R", "SMALL_FLOWERS", "field_15480", "SMALL_FLOWERS", "f_13037_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#BEDS
    [[maybe_unused]] static jobject get_field_BEDS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("S", "BEDS", "field_16443", "BEDS", "f_13038_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#BEDS
    [[maybe_unused]] static void set_field_BEDS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("S", "BEDS", "field_16443", "BEDS", "f_13038_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#FENCES
    [[maybe_unused]] static jobject get_field_FENCES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("T", "FENCES", "field_16584", "FENCES", "f_13039_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#FENCES
    [[maybe_unused]] static void set_field_FENCES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("T", "FENCES", "field_16584", "FENCES", "f_13039_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#TALL_FLOWERS
    [[maybe_unused]] static jobject get_field_TALL_FLOWERS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("U", "TALL_FLOWERS", "field_20338", "TALL_FLOWERS", "f_13040_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#TALL_FLOWERS
    [[maybe_unused]] static void set_field_TALL_FLOWERS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("U", "TALL_FLOWERS", "field_20338", "TALL_FLOWERS", "f_13040_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#FLOWERS
    [[maybe_unused]] static jobject get_field_FLOWERS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("V", "FLOWERS", "field_20339", "FLOWERS", "f_13041_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#FLOWERS
    [[maybe_unused]] static void set_field_FLOWERS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("V", "FLOWERS", "field_20339", "FLOWERS", "f_13041_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#PIGLIN_REPELLENTS
    [[maybe_unused]] static jobject get_field_PIGLIN_REPELLENTS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("W", "PIGLIN_REPELLENTS", "field_22465", "PIGLIN_REPELLENTS", "f_13042_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#PIGLIN_REPELLENTS
    [[maybe_unused]] static void set_field_PIGLIN_REPELLENTS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("W", "PIGLIN_REPELLENTS", "field_22465", "PIGLIN_REPELLENTS", "f_13042_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#GOLD_ORES
    [[maybe_unused]] static jobject get_field_GOLD_ORES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("X", "GOLD_ORES", "field_23062", "GOLD_ORES", "f_13043_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#GOLD_ORES
    [[maybe_unused]] static void set_field_GOLD_ORES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("X", "GOLD_ORES", "field_23062", "GOLD_ORES", "f_13043_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#IRON_ORES
    [[maybe_unused]] static jobject get_field_IRON_ORES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Y", "IRON_ORES", "field_28988", "IRON_ORES", "f_144258_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#IRON_ORES
    [[maybe_unused]] static void set_field_IRON_ORES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Y", "IRON_ORES", "field_28988", "IRON_ORES", "f_144258_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#DIAMOND_ORES
    [[maybe_unused]] static jobject get_field_DIAMOND_ORES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Z", "DIAMOND_ORES", "field_28989", "DIAMOND_ORES", "f_144259_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#DIAMOND_ORES
    [[maybe_unused]] static void set_field_DIAMOND_ORES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Z", "DIAMOND_ORES", "field_28989", "DIAMOND_ORES", "f_144259_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#REDSTONE_ORES
    [[maybe_unused]] static jobject get_field_REDSTONE_ORES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aa", "REDSTONE_ORES", "field_28990", "REDSTONE_ORES", "f_144260_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#REDSTONE_ORES
    [[maybe_unused]] static void set_field_REDSTONE_ORES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aa", "REDSTONE_ORES", "field_28990", "REDSTONE_ORES", "f_144260_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#LAPIS_ORES
    [[maybe_unused]] static jobject get_field_LAPIS_ORES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ab", "LAPIS_ORES", "field_28991", "LAPIS_ORES", "f_144261_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#LAPIS_ORES
    [[maybe_unused]] static void set_field_LAPIS_ORES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ab", "LAPIS_ORES", "field_28991", "LAPIS_ORES", "f_144261_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#COAL_ORES
    [[maybe_unused]] static jobject get_field_COAL_ORES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ac", "COAL_ORES", "field_29193", "COAL_ORES", "f_144262_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#COAL_ORES
    [[maybe_unused]] static void set_field_COAL_ORES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ac", "COAL_ORES", "field_29193", "COAL_ORES", "f_144262_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#EMERALD_ORES
    [[maybe_unused]] static jobject get_field_EMERALD_ORES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ad", "EMERALD_ORES", "field_29194", "EMERALD_ORES", "f_144263_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#EMERALD_ORES
    [[maybe_unused]] static void set_field_EMERALD_ORES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ad", "EMERALD_ORES", "field_29194", "EMERALD_ORES", "f_144263_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#COPPER_ORES
    [[maybe_unused]] static jobject get_field_COPPER_ORES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ae", "COPPER_ORES", "field_29195", "COPPER_ORES", "f_144264_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#COPPER_ORES
    [[maybe_unused]] static void set_field_COPPER_ORES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ae", "COPPER_ORES", "field_29195", "COPPER_ORES", "f_144264_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#CANDLES
    [[maybe_unused]] static jobject get_field_CANDLES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("af", "CANDLES", "field_26983", "CANDLES", "f_144265_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#CANDLES
    [[maybe_unused]] static void set_field_CANDLES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("af", "CANDLES", "field_26983", "CANDLES", "f_144265_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#DIRT
    [[maybe_unused]] static jobject get_field_DIRT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ag", "DIRT", "field_29822", "DIRT", "f_144274_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#DIRT
    [[maybe_unused]] static void set_field_DIRT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ag", "DIRT", "field_29822", "DIRT", "f_144274_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#TERRACOTTA
    [[maybe_unused]] static jobject get_field_TERRACOTTA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ah", "TERRACOTTA", "field_36265", "TERRACOTTA", "f_198156_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#TERRACOTTA
    [[maybe_unused]] static void set_field_TERRACOTTA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ah", "TERRACOTTA", "field_36265", "TERRACOTTA", "f_198156_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#BADLANDS_TERRACOTTA
    [[maybe_unused]] static jobject get_field_BADLANDS_TERRACOTTA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ai", "BADLANDS_TERRACOTTA", "field_49050", "BADLANDS_TERRACOTTA", "f_314078_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#BADLANDS_TERRACOTTA
    [[maybe_unused]] static void set_field_BADLANDS_TERRACOTTA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ai", "BADLANDS_TERRACOTTA", "field_49050", "BADLANDS_TERRACOTTA", "f_314078_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#CONCRETE_POWDER
    [[maybe_unused]] static jobject get_field_CONCRETE_POWDER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aj", "CONCRETE_POWDER", "field_45063", "CONCRETE_POWDER", "f_290352_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#CONCRETE_POWDER
    [[maybe_unused]] static void set_field_CONCRETE_POWDER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aj", "CONCRETE_POWDER", "field_45063", "CONCRETE_POWDER", "f_290352_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#COMPLETES_FIND_TREE_TUTORIAL
    [[maybe_unused]] static jobject get_field_COMPLETES_FIND_TREE_TUTORIAL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ak", "COMPLETES_FIND_TREE_TUTORIAL", "field_38834", "COMPLETES_FIND_TREE_TUTORIAL", "f_215821_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#COMPLETES_FIND_TREE_TUTORIAL
    [[maybe_unused]] static void set_field_COMPLETES_FIND_TREE_TUTORIAL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ak", "COMPLETES_FIND_TREE_TUTORIAL", "field_38834", "COMPLETES_FIND_TREE_TUTORIAL", "f_215821_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#FLOWER_POTS
    [[maybe_unused]] static jobject get_field_FLOWER_POTS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("al", "FLOWER_POTS", "field_15470", "FLOWER_POTS", "f_13045_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#FLOWER_POTS
    [[maybe_unused]] static void set_field_FLOWER_POTS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("al", "FLOWER_POTS", "field_15470", "FLOWER_POTS", "f_13045_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#ENDERMAN_HOLDABLE
    [[maybe_unused]] static jobject get_field_ENDERMAN_HOLDABLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("am", "ENDERMAN_HOLDABLE", "field_15460", "ENDERMAN_HOLDABLE", "f_13046_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#ENDERMAN_HOLDABLE
    [[maybe_unused]] static void set_field_ENDERMAN_HOLDABLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("am", "ENDERMAN_HOLDABLE", "field_15460", "ENDERMAN_HOLDABLE", "f_13046_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#ICE
    [[maybe_unused]] static jobject get_field_ICE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("an", "ICE", "field_15467", "ICE", "f_13047_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#ICE
    [[maybe_unused]] static void set_field_ICE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("an", "ICE", "field_15467", "ICE", "f_13047_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#VALID_SPAWN
    [[maybe_unused]] static jobject get_field_VALID_SPAWN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ao", "VALID_SPAWN", "field_15478", "VALID_SPAWN", "f_13048_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#VALID_SPAWN
    [[maybe_unused]] static void set_field_VALID_SPAWN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ao", "VALID_SPAWN", "field_15478", "VALID_SPAWN", "f_13048_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#IMPERMEABLE
    [[maybe_unused]] static jobject get_field_IMPERMEABLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ap", "IMPERMEABLE", "field_15490", "IMPERMEABLE", "f_13049_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#IMPERMEABLE
    [[maybe_unused]] static void set_field_IMPERMEABLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ap", "IMPERMEABLE", "field_15490", "IMPERMEABLE", "f_13049_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#UNDERWATER_BONEMEALS
    [[maybe_unused]] static jobject get_field_UNDERWATER_BONEMEALS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aq", "UNDERWATER_BONEMEALS", "field_15496", "UNDERWATER_BONEMEALS", "f_13050_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#UNDERWATER_BONEMEALS
    [[maybe_unused]] static void set_field_UNDERWATER_BONEMEALS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aq", "UNDERWATER_BONEMEALS", "field_15496", "UNDERWATER_BONEMEALS", "f_13050_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#CORAL_BLOCKS
    [[maybe_unused]] static jobject get_field_CORAL_BLOCKS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ar", "CORAL_BLOCKS", "field_15461", "CORAL_BLOCKS", "f_13051_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#CORAL_BLOCKS
    [[maybe_unused]] static void set_field_CORAL_BLOCKS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ar", "CORAL_BLOCKS", "field_15461", "CORAL_BLOCKS", "f_13051_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#WALL_CORALS
    [[maybe_unused]] static jobject get_field_WALL_CORALS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("as", "WALL_CORALS", "field_15476", "WALL_CORALS", "f_13052_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#WALL_CORALS
    [[maybe_unused]] static void set_field_WALL_CORALS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("as", "WALL_CORALS", "field_15476", "WALL_CORALS", "f_13052_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#CORAL_PLANTS
    [[maybe_unused]] static jobject get_field_CORAL_PLANTS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("at", "CORAL_PLANTS", "field_15483", "CORAL_PLANTS", "f_13063_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#CORAL_PLANTS
    [[maybe_unused]] static void set_field_CORAL_PLANTS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("at", "CORAL_PLANTS", "field_15483", "CORAL_PLANTS", "f_13063_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#CORALS
    [[maybe_unused]] static jobject get_field_CORALS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("au", "CORALS", "field_15488", "CORALS", "f_13064_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#CORALS
    [[maybe_unused]] static void set_field_CORALS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("au", "CORALS", "field_15488", "CORALS", "f_13064_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#BAMBOO_PLANTABLE_ON
    [[maybe_unused]] static jobject get_field_BAMBOO_PLANTABLE_ON() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("av", "BAMBOO_PLANTABLE_ON", "field_15497", "BAMBOO_PLANTABLE_ON", "f_13065_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#BAMBOO_PLANTABLE_ON
    [[maybe_unused]] static void set_field_BAMBOO_PLANTABLE_ON(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("av", "BAMBOO_PLANTABLE_ON", "field_15497", "BAMBOO_PLANTABLE_ON", "f_13065_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#STANDING_SIGNS
    [[maybe_unused]] static jobject get_field_STANDING_SIGNS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aw", "STANDING_SIGNS", "field_15472", "STANDING_SIGNS", "f_13066_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#STANDING_SIGNS
    [[maybe_unused]] static void set_field_STANDING_SIGNS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aw", "STANDING_SIGNS", "field_15472", "STANDING_SIGNS", "f_13066_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#WALL_SIGNS
    [[maybe_unused]] static jobject get_field_WALL_SIGNS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ax", "WALL_SIGNS", "field_15492", "WALL_SIGNS", "f_13067_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#WALL_SIGNS
    [[maybe_unused]] static void set_field_WALL_SIGNS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ax", "WALL_SIGNS", "field_15492", "WALL_SIGNS", "f_13067_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#SIGNS
    [[maybe_unused]] static jobject get_field_SIGNS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ay", "SIGNS", "field_15500", "SIGNS", "f_13068_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#SIGNS
    [[maybe_unused]] static void set_field_SIGNS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ay", "SIGNS", "field_15500", "SIGNS", "f_13068_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#CEILING_HANGING_SIGNS
    [[maybe_unused]] static jobject get_field_CEILING_HANGING_SIGNS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("az", "CEILING_HANGING_SIGNS", "field_40103", "CEILING_HANGING_SIGNS", "f_243838_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#CEILING_HANGING_SIGNS
    [[maybe_unused]] static void set_field_CEILING_HANGING_SIGNS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("az", "CEILING_HANGING_SIGNS", "field_40103", "CEILING_HANGING_SIGNS", "f_243838_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#WALL_HANGING_SIGNS
    [[maybe_unused]] static jobject get_field_WALL_HANGING_SIGNS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aA", "WALL_HANGING_SIGNS", "field_40104", "WALL_HANGING_SIGNS", "f_244544_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#WALL_HANGING_SIGNS
    [[maybe_unused]] static void set_field_WALL_HANGING_SIGNS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aA", "WALL_HANGING_SIGNS", "field_40104", "WALL_HANGING_SIGNS", "f_244544_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#ALL_HANGING_SIGNS
    [[maybe_unused]] static jobject get_field_ALL_HANGING_SIGNS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aB", "ALL_HANGING_SIGNS", "field_40105", "ALL_HANGING_SIGNS", "f_244320_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#ALL_HANGING_SIGNS
    [[maybe_unused]] static void set_field_ALL_HANGING_SIGNS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aB", "ALL_HANGING_SIGNS", "field_40105", "ALL_HANGING_SIGNS", "f_244320_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#ALL_SIGNS
    [[maybe_unused]] static jobject get_field_ALL_SIGNS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aC", "ALL_SIGNS", "field_41282", "ALL_SIGNS", "f_260523_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#ALL_SIGNS
    [[maybe_unused]] static void set_field_ALL_SIGNS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aC", "ALL_SIGNS", "field_41282", "ALL_SIGNS", "f_260523_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#DRAGON_IMMUNE
    [[maybe_unused]] static jobject get_field_DRAGON_IMMUNE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aD", "DRAGON_IMMUNE", "field_17753", "DRAGON_IMMUNE", "f_13069_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#DRAGON_IMMUNE
    [[maybe_unused]] static void set_field_DRAGON_IMMUNE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aD", "DRAGON_IMMUNE", "field_17753", "DRAGON_IMMUNE", "f_13069_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#DRAGON_TRANSPARENT
    [[maybe_unused]] static jobject get_field_DRAGON_TRANSPARENT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aE", "DRAGON_TRANSPARENT", "field_37396", "DRAGON_TRANSPARENT", "f_215822_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#DRAGON_TRANSPARENT
    [[maybe_unused]] static void set_field_DRAGON_TRANSPARENT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aE", "DRAGON_TRANSPARENT", "field_37396", "DRAGON_TRANSPARENT", "f_215822_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#WITHER_IMMUNE
    [[maybe_unused]] static jobject get_field_WITHER_IMMUNE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aF", "WITHER_IMMUNE", "field_17754", "WITHER_IMMUNE", "f_13070_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#WITHER_IMMUNE
    [[maybe_unused]] static void set_field_WITHER_IMMUNE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aF", "WITHER_IMMUNE", "field_17754", "WITHER_IMMUNE", "f_13070_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#WITHER_SUMMON_BASE_BLOCKS
    [[maybe_unused]] static jobject get_field_WITHER_SUMMON_BASE_BLOCKS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aG", "WITHER_SUMMON_BASE_BLOCKS", "field_22274", "WITHER_SUMMON_BASE_BLOCKS", "f_13071_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#WITHER_SUMMON_BASE_BLOCKS
    [[maybe_unused]] static void set_field_WITHER_SUMMON_BASE_BLOCKS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aG", "WITHER_SUMMON_BASE_BLOCKS", "field_22274", "WITHER_SUMMON_BASE_BLOCKS", "f_13071_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#BEEHIVES
    [[maybe_unused]] static jobject get_field_BEEHIVES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aH", "BEEHIVES", "field_20340", "BEEHIVES", "f_13072_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#BEEHIVES
    [[maybe_unused]] static void set_field_BEEHIVES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aH", "BEEHIVES", "field_20340", "BEEHIVES", "f_13072_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#CROPS
    [[maybe_unused]] static jobject get_field_CROPS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aI", "CROPS", "field_20341", "CROPS", "f_13073_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#CROPS
    [[maybe_unused]] static void set_field_CROPS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aI", "CROPS", "field_20341", "CROPS", "f_13073_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#BEE_GROWABLES
    [[maybe_unused]] static jobject get_field_BEE_GROWABLES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aJ", "BEE_GROWABLES", "field_20342", "BEE_GROWABLES", "f_13074_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#BEE_GROWABLES
    [[maybe_unused]] static void set_field_BEE_GROWABLES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aJ", "BEE_GROWABLES", "field_20342", "BEE_GROWABLES", "f_13074_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#PORTALS
    [[maybe_unused]] static jobject get_field_PORTALS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aK", "PORTALS", "field_21780", "PORTALS", "f_13075_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#PORTALS
    [[maybe_unused]] static void set_field_PORTALS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aK", "PORTALS", "field_21780", "PORTALS", "f_13075_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#FIRE
    [[maybe_unused]] static jobject get_field_FIRE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aL", "FIRE", "field_21952", "FIRE", "f_13076_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#FIRE
    [[maybe_unused]] static void set_field_FIRE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aL", "FIRE", "field_21952", "FIRE", "f_13076_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#NYLIUM
    [[maybe_unused]] static jobject get_field_NYLIUM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aM", "NYLIUM", "field_21953", "NYLIUM", "f_13077_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#NYLIUM
    [[maybe_unused]] static void set_field_NYLIUM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aM", "NYLIUM", "field_21953", "NYLIUM", "f_13077_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#BEACON_BASE_BLOCKS
    [[maybe_unused]] static jobject get_field_BEACON_BASE_BLOCKS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aN", "BEACON_BASE_BLOCKS", "field_22275", "BEACON_BASE_BLOCKS", "f_13079_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#BEACON_BASE_BLOCKS
    [[maybe_unused]] static void set_field_BEACON_BASE_BLOCKS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aN", "BEACON_BASE_BLOCKS", "field_22275", "BEACON_BASE_BLOCKS", "f_13079_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#SOUL_SPEED_BLOCKS
    [[maybe_unused]] static jobject get_field_SOUL_SPEED_BLOCKS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aO", "SOUL_SPEED_BLOCKS", "field_23063", "SOUL_SPEED_BLOCKS", "f_13080_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#SOUL_SPEED_BLOCKS
    [[maybe_unused]] static void set_field_SOUL_SPEED_BLOCKS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aO", "SOUL_SPEED_BLOCKS", "field_23063", "SOUL_SPEED_BLOCKS", "f_13080_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#WALL_POST_OVERRIDE
    [[maybe_unused]] static jobject get_field_WALL_POST_OVERRIDE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aP", "WALL_POST_OVERRIDE", "field_22276", "WALL_POST_OVERRIDE", "f_13081_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#WALL_POST_OVERRIDE
    [[maybe_unused]] static void set_field_WALL_POST_OVERRIDE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aP", "WALL_POST_OVERRIDE", "field_22276", "WALL_POST_OVERRIDE", "f_13081_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#CLIMBABLE
    [[maybe_unused]] static jobject get_field_CLIMBABLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aQ", "CLIMBABLE", "field_22414", "CLIMBABLE", "f_13082_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#CLIMBABLE
    [[maybe_unused]] static void set_field_CLIMBABLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aQ", "CLIMBABLE", "field_22414", "CLIMBABLE", "f_13082_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#FALL_DAMAGE_RESETTING
    [[maybe_unused]] static jobject get_field_FALL_DAMAGE_RESETTING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aR", "FALL_DAMAGE_RESETTING", "field_36327", "FALL_DAMAGE_RESETTING", "f_201924_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#FALL_DAMAGE_RESETTING
    [[maybe_unused]] static void set_field_FALL_DAMAGE_RESETTING(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aR", "FALL_DAMAGE_RESETTING", "field_36327", "FALL_DAMAGE_RESETTING", "f_201924_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#SHULKER_BOXES
    [[maybe_unused]] static jobject get_field_SHULKER_BOXES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aS", "SHULKER_BOXES", "field_21490", "SHULKER_BOXES", "f_13083_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#SHULKER_BOXES
    [[maybe_unused]] static void set_field_SHULKER_BOXES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aS", "SHULKER_BOXES", "field_21490", "SHULKER_BOXES", "f_13083_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#HOGLIN_REPELLENTS
    [[maybe_unused]] static jobject get_field_HOGLIN_REPELLENTS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aT", "HOGLIN_REPELLENTS", "field_22466", "HOGLIN_REPELLENTS", "f_13084_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#HOGLIN_REPELLENTS
    [[maybe_unused]] static void set_field_HOGLIN_REPELLENTS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aT", "HOGLIN_REPELLENTS", "field_22466", "HOGLIN_REPELLENTS", "f_13084_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#SOUL_FIRE_BASE_BLOCKS
    [[maybe_unused]] static jobject get_field_SOUL_FIRE_BASE_BLOCKS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aU", "SOUL_FIRE_BASE_BLOCKS", "field_23119", "SOUL_FIRE_BASE_BLOCKS", "f_13085_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#SOUL_FIRE_BASE_BLOCKS
    [[maybe_unused]] static void set_field_SOUL_FIRE_BASE_BLOCKS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aU", "SOUL_FIRE_BASE_BLOCKS", "field_23119", "SOUL_FIRE_BASE_BLOCKS", "f_13085_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#STRIDER_WARM_BLOCKS
    [[maybe_unused]] static jobject get_field_STRIDER_WARM_BLOCKS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aV", "STRIDER_WARM_BLOCKS", "field_23209", "STRIDER_WARM_BLOCKS", "f_13086_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#STRIDER_WARM_BLOCKS
    [[maybe_unused]] static void set_field_STRIDER_WARM_BLOCKS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aV", "STRIDER_WARM_BLOCKS", "field_23209", "STRIDER_WARM_BLOCKS", "f_13086_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#CAMPFIRES
    [[maybe_unused]] static jobject get_field_CAMPFIRES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aW", "CAMPFIRES", "field_23799", "CAMPFIRES", "f_13087_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#CAMPFIRES
    [[maybe_unused]] static void set_field_CAMPFIRES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aW", "CAMPFIRES", "field_23799", "CAMPFIRES", "f_13087_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#GUARDED_BY_PIGLINS
    [[maybe_unused]] static jobject get_field_GUARDED_BY_PIGLINS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aX", "GUARDED_BY_PIGLINS", "field_23800", "GUARDED_BY_PIGLINS", "f_13088_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#GUARDED_BY_PIGLINS
    [[maybe_unused]] static void set_field_GUARDED_BY_PIGLINS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aX", "GUARDED_BY_PIGLINS", "field_23800", "GUARDED_BY_PIGLINS", "f_13088_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#PREVENT_MOB_SPAWNING_INSIDE
    [[maybe_unused]] static jobject get_field_PREVENT_MOB_SPAWNING_INSIDE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aY", "PREVENT_MOB_SPAWNING_INSIDE", "field_24459", "PREVENT_MOB_SPAWNING_INSIDE", "f_13054_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#PREVENT_MOB_SPAWNING_INSIDE
    [[maybe_unused]] static void set_field_PREVENT_MOB_SPAWNING_INSIDE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aY", "PREVENT_MOB_SPAWNING_INSIDE", "field_24459", "PREVENT_MOB_SPAWNING_INSIDE", "f_13054_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#FENCE_GATES
    [[maybe_unused]] static jobject get_field_FENCE_GATES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aZ", "FENCE_GATES", "field_25147", "FENCE_GATES", "f_13055_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#FENCE_GATES
    [[maybe_unused]] static void set_field_FENCE_GATES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aZ", "FENCE_GATES", "field_25147", "FENCE_GATES", "f_13055_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#UNSTABLE_BOTTOM_CENTER
    [[maybe_unused]] static jobject get_field_UNSTABLE_BOTTOM_CENTER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ba", "UNSTABLE_BOTTOM_CENTER", "field_25148", "UNSTABLE_BOTTOM_CENTER", "f_13056_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#UNSTABLE_BOTTOM_CENTER
    [[maybe_unused]] static void set_field_UNSTABLE_BOTTOM_CENTER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ba", "UNSTABLE_BOTTOM_CENTER", "field_25148", "UNSTABLE_BOTTOM_CENTER", "f_13056_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#MUSHROOM_GROW_BLOCK
    [[maybe_unused]] static jobject get_field_MUSHROOM_GROW_BLOCK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bb", "MUSHROOM_GROW_BLOCK", "field_25739", "MUSHROOM_GROW_BLOCK", "f_13057_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#MUSHROOM_GROW_BLOCK
    [[maybe_unused]] static void set_field_MUSHROOM_GROW_BLOCK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bb", "MUSHROOM_GROW_BLOCK", "field_25739", "MUSHROOM_GROW_BLOCK", "f_13057_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#INFINIBURN_OVERWORLD
    [[maybe_unused]] static jobject get_field_INFINIBURN_OVERWORLD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bc", "INFINIBURN_OVERWORLD", "field_25588", "INFINIBURN_OVERWORLD", "f_13058_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#INFINIBURN_OVERWORLD
    [[maybe_unused]] static void set_field_INFINIBURN_OVERWORLD(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bc", "INFINIBURN_OVERWORLD", "field_25588", "INFINIBURN_OVERWORLD", "f_13058_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#INFINIBURN_NETHER
    [[maybe_unused]] static jobject get_field_INFINIBURN_NETHER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bd", "INFINIBURN_NETHER", "field_25589", "INFINIBURN_NETHER", "f_13059_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#INFINIBURN_NETHER
    [[maybe_unused]] static void set_field_INFINIBURN_NETHER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bd", "INFINIBURN_NETHER", "field_25589", "INFINIBURN_NETHER", "f_13059_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#INFINIBURN_END
    [[maybe_unused]] static jobject get_field_INFINIBURN_END() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("be", "INFINIBURN_END", "field_25590", "INFINIBURN_END", "f_13060_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#INFINIBURN_END
    [[maybe_unused]] static void set_field_INFINIBURN_END(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("be", "INFINIBURN_END", "field_25590", "INFINIBURN_END", "f_13060_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#BASE_STONE_OVERWORLD
    [[maybe_unused]] static jobject get_field_BASE_STONE_OVERWORLD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bf", "BASE_STONE_OVERWORLD", "field_25806", "BASE_STONE_OVERWORLD", "f_13061_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#BASE_STONE_OVERWORLD
    [[maybe_unused]] static void set_field_BASE_STONE_OVERWORLD(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bf", "BASE_STONE_OVERWORLD", "field_25806", "BASE_STONE_OVERWORLD", "f_13061_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#STONE_ORE_REPLACEABLES
    [[maybe_unused]] static jobject get_field_STONE_ORE_REPLACEABLES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bg", "STONE_ORE_REPLACEABLES", "field_28992", "STONE_ORE_REPLACEABLES", "f_144266_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#STONE_ORE_REPLACEABLES
    [[maybe_unused]] static void set_field_STONE_ORE_REPLACEABLES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bg", "STONE_ORE_REPLACEABLES", "field_28992", "STONE_ORE_REPLACEABLES", "f_144266_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#DEEPSLATE_ORE_REPLACEABLES
    [[maybe_unused]] static jobject get_field_DEEPSLATE_ORE_REPLACEABLES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bh", "DEEPSLATE_ORE_REPLACEABLES", "field_28993", "DEEPSLATE_ORE_REPLACEABLES", "f_144267_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#DEEPSLATE_ORE_REPLACEABLES
    [[maybe_unused]] static void set_field_DEEPSLATE_ORE_REPLACEABLES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bh", "DEEPSLATE_ORE_REPLACEABLES", "field_28993", "DEEPSLATE_ORE_REPLACEABLES", "f_144267_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#BASE_STONE_NETHER
    [[maybe_unused]] static jobject get_field_BASE_STONE_NETHER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bi", "BASE_STONE_NETHER", "field_25807", "BASE_STONE_NETHER", "f_13062_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#BASE_STONE_NETHER
    [[maybe_unused]] static void set_field_BASE_STONE_NETHER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bi", "BASE_STONE_NETHER", "field_25807", "BASE_STONE_NETHER", "f_13062_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#OVERWORLD_CARVER_REPLACEABLES
    [[maybe_unused]] static jobject get_field_OVERWORLD_CARVER_REPLACEABLES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bj", "OVERWORLD_CARVER_REPLACEABLES", "field_38832", "OVERWORLD_CARVER_REPLACEABLES", "f_215820_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#OVERWORLD_CARVER_REPLACEABLES
    [[maybe_unused]] static void set_field_OVERWORLD_CARVER_REPLACEABLES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bj", "OVERWORLD_CARVER_REPLACEABLES", "field_38832", "OVERWORLD_CARVER_REPLACEABLES", "f_215820_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#NETHER_CARVER_REPLACEABLES
    [[maybe_unused]] static jobject get_field_NETHER_CARVER_REPLACEABLES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bk", "NETHER_CARVER_REPLACEABLES", "field_38833", "NETHER_CARVER_REPLACEABLES", "f_215835_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#NETHER_CARVER_REPLACEABLES
    [[maybe_unused]] static void set_field_NETHER_CARVER_REPLACEABLES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bk", "NETHER_CARVER_REPLACEABLES", "field_38833", "NETHER_CARVER_REPLACEABLES", "f_215835_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#CANDLE_CAKES
    [[maybe_unused]] static jobject get_field_CANDLE_CAKES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bl", "CANDLE_CAKES", "field_26984", "CANDLE_CAKES", "f_144268_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#CANDLE_CAKES
    [[maybe_unused]] static void set_field_CANDLE_CAKES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bl", "CANDLE_CAKES", "field_26984", "CANDLE_CAKES", "f_144268_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#CAULDRONS
    [[maybe_unused]] static jobject get_field_CAULDRONS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bm", "CAULDRONS", "field_26985", "CAULDRONS", "f_144269_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#CAULDRONS
    [[maybe_unused]] static void set_field_CAULDRONS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bm", "CAULDRONS", "field_26985", "CAULDRONS", "f_144269_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#CRYSTAL_SOUND_BLOCKS
    [[maybe_unused]] static jobject get_field_CRYSTAL_SOUND_BLOCKS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bn", "CRYSTAL_SOUND_BLOCKS", "field_26986", "CRYSTAL_SOUND_BLOCKS", "f_144270_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#CRYSTAL_SOUND_BLOCKS
    [[maybe_unused]] static void set_field_CRYSTAL_SOUND_BLOCKS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bn", "CRYSTAL_SOUND_BLOCKS", "field_26986", "CRYSTAL_SOUND_BLOCKS", "f_144270_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#INSIDE_STEP_SOUND_BLOCKS
    [[maybe_unused]] static jobject get_field_INSIDE_STEP_SOUND_BLOCKS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bo", "INSIDE_STEP_SOUND_BLOCKS", "field_28040", "INSIDE_STEP_SOUND_BLOCKS", "f_144271_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#INSIDE_STEP_SOUND_BLOCKS
    [[maybe_unused]] static void set_field_INSIDE_STEP_SOUND_BLOCKS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bo", "INSIDE_STEP_SOUND_BLOCKS", "field_28040", "INSIDE_STEP_SOUND_BLOCKS", "f_144271_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#COMBINATION_STEP_SOUND_BLOCKS
    [[maybe_unused]] static jobject get_field_COMBINATION_STEP_SOUND_BLOCKS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bp", "COMBINATION_STEP_SOUND_BLOCKS", "field_43170", "COMBINATION_STEP_SOUND_BLOCKS", "f_276549_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#COMBINATION_STEP_SOUND_BLOCKS
    [[maybe_unused]] static void set_field_COMBINATION_STEP_SOUND_BLOCKS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bp", "COMBINATION_STEP_SOUND_BLOCKS", "field_43170", "COMBINATION_STEP_SOUND_BLOCKS", "f_276549_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#CAMEL_SAND_STEP_SOUND_BLOCKS
    [[maybe_unused]] static jobject get_field_CAMEL_SAND_STEP_SOUND_BLOCKS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bq", "CAMEL_SAND_STEP_SOUND_BLOCKS", "field_45064", "CAMEL_SAND_STEP_SOUND_BLOCKS", "f_290764_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#CAMEL_SAND_STEP_SOUND_BLOCKS
    [[maybe_unused]] static void set_field_CAMEL_SAND_STEP_SOUND_BLOCKS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bq", "CAMEL_SAND_STEP_SOUND_BLOCKS", "field_45064", "CAMEL_SAND_STEP_SOUND_BLOCKS", "f_290764_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#OCCLUDES_VIBRATION_SIGNALS
    [[maybe_unused]] static jobject get_field_OCCLUDES_VIBRATION_SIGNALS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("br", "OCCLUDES_VIBRATION_SIGNALS", "field_28088", "OCCLUDES_VIBRATION_SIGNALS", "f_144272_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#OCCLUDES_VIBRATION_SIGNALS
    [[maybe_unused]] static void set_field_OCCLUDES_VIBRATION_SIGNALS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("br", "OCCLUDES_VIBRATION_SIGNALS", "field_28088", "OCCLUDES_VIBRATION_SIGNALS", "f_144272_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#DAMPENS_VIBRATIONS
    [[maybe_unused]] static jobject get_field_DAMPENS_VIBRATIONS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bs", "DAMPENS_VIBRATIONS", "field_38835", "DAMPENS_VIBRATIONS", "f_215836_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#DAMPENS_VIBRATIONS
    [[maybe_unused]] static void set_field_DAMPENS_VIBRATIONS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bs", "DAMPENS_VIBRATIONS", "field_38835", "DAMPENS_VIBRATIONS", "f_215836_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#DRIPSTONE_REPLACEABLE_BLOCKS
    [[maybe_unused]] static jobject get_field_DRIPSTONE_REPLACEABLE_BLOCKS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bt", "DRIPSTONE_REPLACEABLE", "field_28089", "DRIPSTONE_REPLACEABLE_BLOCKS", "f_144273_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#DRIPSTONE_REPLACEABLE_BLOCKS
    [[maybe_unused]] static void set_field_DRIPSTONE_REPLACEABLE_BLOCKS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bt", "DRIPSTONE_REPLACEABLE", "field_28089", "DRIPSTONE_REPLACEABLE_BLOCKS", "f_144273_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#CAVE_VINES
    [[maybe_unused]] static jobject get_field_CAVE_VINES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bu", "CAVE_VINES", "field_28621", "CAVE_VINES", "f_144275_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#CAVE_VINES
    [[maybe_unused]] static void set_field_CAVE_VINES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bu", "CAVE_VINES", "field_28621", "CAVE_VINES", "f_144275_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#MOSS_REPLACEABLE
    [[maybe_unused]] static jobject get_field_MOSS_REPLACEABLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bv", "MOSS_REPLACEABLE", "field_28622", "MOSS_REPLACEABLE", "f_144276_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#MOSS_REPLACEABLE
    [[maybe_unused]] static void set_field_MOSS_REPLACEABLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bv", "MOSS_REPLACEABLE", "field_28622", "MOSS_REPLACEABLE", "f_144276_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#LUSH_GROUND_REPLACEABLE
    [[maybe_unused]] static jobject get_field_LUSH_GROUND_REPLACEABLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bw", "LUSH_GROUND_REPLACEABLE", "field_29196", "LUSH_GROUND_REPLACEABLE", "f_144277_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#LUSH_GROUND_REPLACEABLE
    [[maybe_unused]] static void set_field_LUSH_GROUND_REPLACEABLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bw", "LUSH_GROUND_REPLACEABLE", "field_29196", "LUSH_GROUND_REPLACEABLE", "f_144277_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#AZALEA_ROOT_REPLACEABLE
    [[maybe_unused]] static jobject get_field_AZALEA_ROOT_REPLACEABLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bx", "AZALEA_ROOT_REPLACEABLE", "field_36268", "AZALEA_ROOT_REPLACEABLE", "f_198159_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#AZALEA_ROOT_REPLACEABLE
    [[maybe_unused]] static void set_field_AZALEA_ROOT_REPLACEABLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bx", "AZALEA_ROOT_REPLACEABLE", "field_36268", "AZALEA_ROOT_REPLACEABLE", "f_198159_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#SMALL_DRIPLEAF_PLACEABLE
    [[maybe_unused]] static jobject get_field_SMALL_DRIPLEAF_PLACEABLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("by", "SMALL_DRIPLEAF_PLACEABLE", "field_33641", "SMALL_DRIPLEAF_PLACEABLE", "f_144278_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#SMALL_DRIPLEAF_PLACEABLE
    [[maybe_unused]] static void set_field_SMALL_DRIPLEAF_PLACEABLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("by", "SMALL_DRIPLEAF_PLACEABLE", "field_33641", "SMALL_DRIPLEAF_PLACEABLE", "f_144278_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#BIG_DRIPLEAF_PLACEABLE
    [[maybe_unused]] static jobject get_field_BIG_DRIPLEAF_PLACEABLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bz", "BIG_DRIPLEAF_PLACEABLE", "field_35443", "BIG_DRIPLEAF_PLACEABLE", "f_184227_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#BIG_DRIPLEAF_PLACEABLE
    [[maybe_unused]] static void set_field_BIG_DRIPLEAF_PLACEABLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bz", "BIG_DRIPLEAF_PLACEABLE", "field_35443", "BIG_DRIPLEAF_PLACEABLE", "f_184227_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#SNOW
    [[maybe_unused]] static jobject get_field_SNOW() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bA", "SNOW", "field_29823", "SNOW", "f_144279_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#SNOW
    [[maybe_unused]] static void set_field_SNOW(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bA", "SNOW", "field_29823", "SNOW", "f_144279_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#AXE_MINEABLE
    [[maybe_unused]] static jobject get_field_AXE_MINEABLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bB", "MINEABLE_WITH_AXE", "field_33713", "AXE_MINEABLE", "f_144280_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#AXE_MINEABLE
    [[maybe_unused]] static void set_field_AXE_MINEABLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bB", "MINEABLE_WITH_AXE", "field_33713", "AXE_MINEABLE", "f_144280_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#HOE_MINEABLE
    [[maybe_unused]] static jobject get_field_HOE_MINEABLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bC", "MINEABLE_WITH_HOE", "field_33714", "HOE_MINEABLE", "f_144281_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#HOE_MINEABLE
    [[maybe_unused]] static void set_field_HOE_MINEABLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bC", "MINEABLE_WITH_HOE", "field_33714", "HOE_MINEABLE", "f_144281_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#PICKAXE_MINEABLE
    [[maybe_unused]] static jobject get_field_PICKAXE_MINEABLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bD", "MINEABLE_WITH_PICKAXE", "field_33715", "PICKAXE_MINEABLE", "f_144282_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#PICKAXE_MINEABLE
    [[maybe_unused]] static void set_field_PICKAXE_MINEABLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bD", "MINEABLE_WITH_PICKAXE", "field_33715", "PICKAXE_MINEABLE", "f_144282_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#SHOVEL_MINEABLE
    [[maybe_unused]] static jobject get_field_SHOVEL_MINEABLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bE", "MINEABLE_WITH_SHOVEL", "field_33716", "SHOVEL_MINEABLE", "f_144283_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#SHOVEL_MINEABLE
    [[maybe_unused]] static void set_field_SHOVEL_MINEABLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bE", "MINEABLE_WITH_SHOVEL", "field_33716", "SHOVEL_MINEABLE", "f_144283_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#SWORD_EFFICIENT
    [[maybe_unused]] static jobject get_field_SWORD_EFFICIENT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bF", "SWORD_EFFICIENT", "field_44469", "SWORD_EFFICIENT", "f_278398_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#SWORD_EFFICIENT
    [[maybe_unused]] static void set_field_SWORD_EFFICIENT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bF", "SWORD_EFFICIENT", "field_44469", "SWORD_EFFICIENT", "f_278398_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#NEEDS_DIAMOND_TOOL
    [[maybe_unused]] static jobject get_field_NEEDS_DIAMOND_TOOL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bG", "NEEDS_DIAMOND_TOOL", "field_33717", "NEEDS_DIAMOND_TOOL", "f_144284_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#NEEDS_DIAMOND_TOOL
    [[maybe_unused]] static void set_field_NEEDS_DIAMOND_TOOL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bG", "NEEDS_DIAMOND_TOOL", "field_33717", "NEEDS_DIAMOND_TOOL", "f_144284_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#NEEDS_IRON_TOOL
    [[maybe_unused]] static jobject get_field_NEEDS_IRON_TOOL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bH", "NEEDS_IRON_TOOL", "field_33718", "NEEDS_IRON_TOOL", "f_144285_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#NEEDS_IRON_TOOL
    [[maybe_unused]] static void set_field_NEEDS_IRON_TOOL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bH", "NEEDS_IRON_TOOL", "field_33718", "NEEDS_IRON_TOOL", "f_144285_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#NEEDS_STONE_TOOL
    [[maybe_unused]] static jobject get_field_NEEDS_STONE_TOOL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bI", "NEEDS_STONE_TOOL", "field_33719", "NEEDS_STONE_TOOL", "f_144286_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#NEEDS_STONE_TOOL
    [[maybe_unused]] static void set_field_NEEDS_STONE_TOOL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bI", "NEEDS_STONE_TOOL", "field_33719", "NEEDS_STONE_TOOL", "f_144286_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#INCORRECT_FOR_NETHERITE_TOOL
    [[maybe_unused]] static jobject get_field_INCORRECT_FOR_NETHERITE_TOOL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bJ", "INCORRECT_FOR_NETHERITE_TOOL", "field_49925", "INCORRECT_FOR_NETHERITE_TOOL", "f_316762_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#INCORRECT_FOR_NETHERITE_TOOL
    [[maybe_unused]] static void set_field_INCORRECT_FOR_NETHERITE_TOOL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bJ", "INCORRECT_FOR_NETHERITE_TOOL", "field_49925", "INCORRECT_FOR_NETHERITE_TOOL", "f_316762_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#INCORRECT_FOR_DIAMOND_TOOL
    [[maybe_unused]] static jobject get_field_INCORRECT_FOR_DIAMOND_TOOL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bK", "INCORRECT_FOR_DIAMOND_TOOL", "field_49926", "INCORRECT_FOR_DIAMOND_TOOL", "f_316248_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#INCORRECT_FOR_DIAMOND_TOOL
    [[maybe_unused]] static void set_field_INCORRECT_FOR_DIAMOND_TOOL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bK", "INCORRECT_FOR_DIAMOND_TOOL", "field_49926", "INCORRECT_FOR_DIAMOND_TOOL", "f_316248_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#INCORRECT_FOR_IRON_TOOL
    [[maybe_unused]] static jobject get_field_INCORRECT_FOR_IRON_TOOL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bL", "INCORRECT_FOR_IRON_TOOL", "field_49927", "INCORRECT_FOR_IRON_TOOL", "f_315121_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#INCORRECT_FOR_IRON_TOOL
    [[maybe_unused]] static void set_field_INCORRECT_FOR_IRON_TOOL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bL", "INCORRECT_FOR_IRON_TOOL", "field_49927", "INCORRECT_FOR_IRON_TOOL", "f_315121_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#INCORRECT_FOR_STONE_TOOL
    [[maybe_unused]] static jobject get_field_INCORRECT_FOR_STONE_TOOL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bM", "INCORRECT_FOR_STONE_TOOL", "field_49928", "INCORRECT_FOR_STONE_TOOL", "f_315528_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#INCORRECT_FOR_STONE_TOOL
    [[maybe_unused]] static void set_field_INCORRECT_FOR_STONE_TOOL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bM", "INCORRECT_FOR_STONE_TOOL", "field_49928", "INCORRECT_FOR_STONE_TOOL", "f_315528_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#INCORRECT_FOR_GOLD_TOOL
    [[maybe_unused]] static jobject get_field_INCORRECT_FOR_GOLD_TOOL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bN", "INCORRECT_FOR_GOLD_TOOL", "field_49929", "INCORRECT_FOR_GOLD_TOOL", "f_316327_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#INCORRECT_FOR_GOLD_TOOL
    [[maybe_unused]] static void set_field_INCORRECT_FOR_GOLD_TOOL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bN", "INCORRECT_FOR_GOLD_TOOL", "field_49929", "INCORRECT_FOR_GOLD_TOOL", "f_316327_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#INCORRECT_FOR_WOODEN_TOOL
    [[maybe_unused]] static jobject get_field_INCORRECT_FOR_WOODEN_TOOL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bO", "INCORRECT_FOR_WOODEN_TOOL", "field_49930", "INCORRECT_FOR_WOODEN_TOOL", "f_315377_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#INCORRECT_FOR_WOODEN_TOOL
    [[maybe_unused]] static void set_field_INCORRECT_FOR_WOODEN_TOOL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bO", "INCORRECT_FOR_WOODEN_TOOL", "field_49930", "INCORRECT_FOR_WOODEN_TOOL", "f_315377_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#FEATURES_CANNOT_REPLACE
    [[maybe_unused]] static jobject get_field_FEATURES_CANNOT_REPLACE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bP", "FEATURES_CANNOT_REPLACE", "field_33757", "FEATURES_CANNOT_REPLACE", "f_144287_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#FEATURES_CANNOT_REPLACE
    [[maybe_unused]] static void set_field_FEATURES_CANNOT_REPLACE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bP", "FEATURES_CANNOT_REPLACE", "field_33757", "FEATURES_CANNOT_REPLACE", "f_144287_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#LAVA_POOL_STONE_CANNOT_REPLACE
    [[maybe_unused]] static jobject get_field_LAVA_POOL_STONE_CANNOT_REPLACE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bQ", "LAVA_POOL_STONE_CANNOT_REPLACE", "field_33862", "LAVA_POOL_STONE_CANNOT_REPLACE", "f_144288_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#LAVA_POOL_STONE_CANNOT_REPLACE
    [[maybe_unused]] static void set_field_LAVA_POOL_STONE_CANNOT_REPLACE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bQ", "LAVA_POOL_STONE_CANNOT_REPLACE", "field_33862", "LAVA_POOL_STONE_CANNOT_REPLACE", "f_144288_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#GEODE_INVALID_BLOCKS
    [[maybe_unused]] static jobject get_field_GEODE_INVALID_BLOCKS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bR", "GEODE_INVALID_BLOCKS", "field_33863", "GEODE_INVALID_BLOCKS", "f_144289_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#GEODE_INVALID_BLOCKS
    [[maybe_unused]] static void set_field_GEODE_INVALID_BLOCKS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bR", "GEODE_INVALID_BLOCKS", "field_33863", "GEODE_INVALID_BLOCKS", "f_144289_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#FROG_PREFER_JUMP_TO
    [[maybe_unused]] static jobject get_field_FROG_PREFER_JUMP_TO() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bS", "FROG_PREFER_JUMP_TO", "field_37398", "FROG_PREFER_JUMP_TO", "f_215837_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#FROG_PREFER_JUMP_TO
    [[maybe_unused]] static void set_field_FROG_PREFER_JUMP_TO(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bS", "FROG_PREFER_JUMP_TO", "field_37398", "FROG_PREFER_JUMP_TO", "f_215837_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#SCULK_REPLACEABLE
    [[maybe_unused]] static jobject get_field_SCULK_REPLACEABLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bT", "SCULK_REPLACEABLE", "field_37399", "SCULK_REPLACEABLE", "f_215823_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#SCULK_REPLACEABLE
    [[maybe_unused]] static void set_field_SCULK_REPLACEABLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bT", "SCULK_REPLACEABLE", "field_37399", "SCULK_REPLACEABLE", "f_215823_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#SCULK_REPLACEABLE_WORLD_GEN
    [[maybe_unused]] static jobject get_field_SCULK_REPLACEABLE_WORLD_GEN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bU", "SCULK_REPLACEABLE_WORLD_GEN", "field_37400", "SCULK_REPLACEABLE_WORLD_GEN", "f_215824_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#SCULK_REPLACEABLE_WORLD_GEN
    [[maybe_unused]] static void set_field_SCULK_REPLACEABLE_WORLD_GEN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bU", "SCULK_REPLACEABLE_WORLD_GEN", "field_37400", "SCULK_REPLACEABLE_WORLD_GEN", "f_215824_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#ANCIENT_CITY_REPLACEABLE
    [[maybe_unused]] static jobject get_field_ANCIENT_CITY_REPLACEABLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bV", "ANCIENT_CITY_REPLACEABLE", "field_38374", "ANCIENT_CITY_REPLACEABLE", "f_215825_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#ANCIENT_CITY_REPLACEABLE
    [[maybe_unused]] static void set_field_ANCIENT_CITY_REPLACEABLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bV", "ANCIENT_CITY_REPLACEABLE", "field_38374", "ANCIENT_CITY_REPLACEABLE", "f_215825_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#VIBRATION_RESONATORS
    [[maybe_unused]] static jobject get_field_VIBRATION_RESONATORS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bW", "VIBRATION_RESONATORS", "field_43169", "VIBRATION_RESONATORS", "f_276593_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#VIBRATION_RESONATORS
    [[maybe_unused]] static void set_field_VIBRATION_RESONATORS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bW", "VIBRATION_RESONATORS", "field_43169", "VIBRATION_RESONATORS", "f_276593_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#ANIMALS_SPAWNABLE_ON
    [[maybe_unused]] static jobject get_field_ANIMALS_SPAWNABLE_ON() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bX", "ANIMALS_SPAWNABLE_ON", "field_35567", "ANIMALS_SPAWNABLE_ON", "f_184228_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#ANIMALS_SPAWNABLE_ON
    [[maybe_unused]] static void set_field_ANIMALS_SPAWNABLE_ON(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bX", "ANIMALS_SPAWNABLE_ON", "field_35567", "ANIMALS_SPAWNABLE_ON", "f_184228_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#ARMADILLO_SPAWNABLE_ON
    [[maybe_unused]] static jobject get_field_ARMADILLO_SPAWNABLE_ON() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bY", "ARMADILLO_SPAWNABLE_ON", "field_48282", "ARMADILLO_SPAWNABLE_ON", "f_314780_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#ARMADILLO_SPAWNABLE_ON
    [[maybe_unused]] static void set_field_ARMADILLO_SPAWNABLE_ON(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bY", "ARMADILLO_SPAWNABLE_ON", "field_48282", "ARMADILLO_SPAWNABLE_ON", "f_314780_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#AXOLOTLS_SPAWNABLE_ON
    [[maybe_unused]] static jobject get_field_AXOLOTLS_SPAWNABLE_ON() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bZ", "AXOLOTLS_SPAWNABLE_ON", "field_35568", "AXOLOTLS_SPAWNABLE_ON", "f_184229_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#AXOLOTLS_SPAWNABLE_ON
    [[maybe_unused]] static void set_field_AXOLOTLS_SPAWNABLE_ON(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bZ", "AXOLOTLS_SPAWNABLE_ON", "field_35568", "AXOLOTLS_SPAWNABLE_ON", "f_184229_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#GOATS_SPAWNABLE_ON
    [[maybe_unused]] static jobject get_field_GOATS_SPAWNABLE_ON() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ca", "GOATS_SPAWNABLE_ON", "field_35569", "GOATS_SPAWNABLE_ON", "f_184230_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#GOATS_SPAWNABLE_ON
    [[maybe_unused]] static void set_field_GOATS_SPAWNABLE_ON(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ca", "GOATS_SPAWNABLE_ON", "field_35569", "GOATS_SPAWNABLE_ON", "f_184230_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#MOOSHROOMS_SPAWNABLE_ON
    [[maybe_unused]] static jobject get_field_MOOSHROOMS_SPAWNABLE_ON() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cb", "MOOSHROOMS_SPAWNABLE_ON", "field_35570", "MOOSHROOMS_SPAWNABLE_ON", "f_184231_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#MOOSHROOMS_SPAWNABLE_ON
    [[maybe_unused]] static void set_field_MOOSHROOMS_SPAWNABLE_ON(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cb", "MOOSHROOMS_SPAWNABLE_ON", "field_35570", "MOOSHROOMS_SPAWNABLE_ON", "f_184231_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#PARROTS_SPAWNABLE_ON
    [[maybe_unused]] static jobject get_field_PARROTS_SPAWNABLE_ON() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cc", "PARROTS_SPAWNABLE_ON", "field_35571", "PARROTS_SPAWNABLE_ON", "f_184232_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#PARROTS_SPAWNABLE_ON
    [[maybe_unused]] static void set_field_PARROTS_SPAWNABLE_ON(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cc", "PARROTS_SPAWNABLE_ON", "field_35571", "PARROTS_SPAWNABLE_ON", "f_184232_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#POLAR_BEARS_SPAWNABLE_ON_ALTERNATE
    [[maybe_unused]] static jobject get_field_POLAR_BEARS_SPAWNABLE_ON_ALTERNATE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cd", "POLAR_BEARS_SPAWNABLE_ON_ALTERNATE", "field_35572", "POLAR_BEARS_SPAWNABLE_ON_ALTERNATE", "f_215826_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#POLAR_BEARS_SPAWNABLE_ON_ALTERNATE
    [[maybe_unused]] static void set_field_POLAR_BEARS_SPAWNABLE_ON_ALTERNATE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cd", "POLAR_BEARS_SPAWNABLE_ON_ALTERNATE", "field_35572", "POLAR_BEARS_SPAWNABLE_ON_ALTERNATE", "f_215826_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#RABBITS_SPAWNABLE_ON
    [[maybe_unused]] static jobject get_field_RABBITS_SPAWNABLE_ON() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ce", "RABBITS_SPAWNABLE_ON", "field_35573", "RABBITS_SPAWNABLE_ON", "f_184234_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#RABBITS_SPAWNABLE_ON
    [[maybe_unused]] static void set_field_RABBITS_SPAWNABLE_ON(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ce", "RABBITS_SPAWNABLE_ON", "field_35573", "RABBITS_SPAWNABLE_ON", "f_184234_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#FOXES_SPAWNABLE_ON
    [[maybe_unused]] static jobject get_field_FOXES_SPAWNABLE_ON() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cf", "FOXES_SPAWNABLE_ON", "field_35574", "FOXES_SPAWNABLE_ON", "f_184235_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#FOXES_SPAWNABLE_ON
    [[maybe_unused]] static void set_field_FOXES_SPAWNABLE_ON(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cf", "FOXES_SPAWNABLE_ON", "field_35574", "FOXES_SPAWNABLE_ON", "f_184235_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#WOLVES_SPAWNABLE_ON
    [[maybe_unused]] static jobject get_field_WOLVES_SPAWNABLE_ON() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cg", "WOLVES_SPAWNABLE_ON", "field_35575", "WOLVES_SPAWNABLE_ON", "f_184236_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#WOLVES_SPAWNABLE_ON
    [[maybe_unused]] static void set_field_WOLVES_SPAWNABLE_ON(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cg", "WOLVES_SPAWNABLE_ON", "field_35575", "WOLVES_SPAWNABLE_ON", "f_184236_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#FROGS_SPAWNABLE_ON
    [[maybe_unused]] static jobject get_field_FROGS_SPAWNABLE_ON() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ch", "FROGS_SPAWNABLE_ON", "field_38928", "FROGS_SPAWNABLE_ON", "f_215827_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#FROGS_SPAWNABLE_ON
    [[maybe_unused]] static void set_field_FROGS_SPAWNABLE_ON(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ch", "FROGS_SPAWNABLE_ON", "field_38928", "FROGS_SPAWNABLE_ON", "f_215827_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#AZALEA_GROWS_ON
    [[maybe_unused]] static jobject get_field_AZALEA_GROWS_ON() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ci", "AZALEA_GROWS_ON", "field_36266", "AZALEA_GROWS_ON", "f_198157_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#AZALEA_GROWS_ON
    [[maybe_unused]] static void set_field_AZALEA_GROWS_ON(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ci", "AZALEA_GROWS_ON", "field_36266", "AZALEA_GROWS_ON", "f_198157_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#CONVERTABLE_TO_MUD
    [[maybe_unused]] static jobject get_field_CONVERTABLE_TO_MUD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cj", "CONVERTABLE_TO_MUD", "field_37397", "CONVERTABLE_TO_MUD", "f_215828_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#CONVERTABLE_TO_MUD
    [[maybe_unused]] static void set_field_CONVERTABLE_TO_MUD(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cj", "CONVERTABLE_TO_MUD", "field_37397", "CONVERTABLE_TO_MUD", "f_215828_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#MANGROVE_LOGS_CAN_GROW_THROUGH
    [[maybe_unused]] static jobject get_field_MANGROVE_LOGS_CAN_GROW_THROUGH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ck", "MANGROVE_LOGS_CAN_GROW_THROUGH", "field_38692", "MANGROVE_LOGS_CAN_GROW_THROUGH", "f_215829_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#MANGROVE_LOGS_CAN_GROW_THROUGH
    [[maybe_unused]] static void set_field_MANGROVE_LOGS_CAN_GROW_THROUGH(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ck", "MANGROVE_LOGS_CAN_GROW_THROUGH", "field_38692", "MANGROVE_LOGS_CAN_GROW_THROUGH", "f_215829_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#MANGROVE_ROOTS_CAN_GROW_THROUGH
    [[maybe_unused]] static jobject get_field_MANGROVE_ROOTS_CAN_GROW_THROUGH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cl", "MANGROVE_ROOTS_CAN_GROW_THROUGH", "field_38693", "MANGROVE_ROOTS_CAN_GROW_THROUGH", "f_215830_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#MANGROVE_ROOTS_CAN_GROW_THROUGH
    [[maybe_unused]] static void set_field_MANGROVE_ROOTS_CAN_GROW_THROUGH(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cl", "MANGROVE_ROOTS_CAN_GROW_THROUGH", "field_38693", "MANGROVE_ROOTS_CAN_GROW_THROUGH", "f_215830_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#DEAD_BUSH_MAY_PLACE_ON
    [[maybe_unused]] static jobject get_field_DEAD_BUSH_MAY_PLACE_ON() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cm", "DEAD_BUSH_MAY_PLACE_ON", "field_38694", "DEAD_BUSH_MAY_PLACE_ON", "f_215831_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#DEAD_BUSH_MAY_PLACE_ON
    [[maybe_unused]] static void set_field_DEAD_BUSH_MAY_PLACE_ON(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cm", "DEAD_BUSH_MAY_PLACE_ON", "field_38694", "DEAD_BUSH_MAY_PLACE_ON", "f_215831_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#SNAPS_GOAT_HORN
    [[maybe_unused]] static jobject get_field_SNAPS_GOAT_HORN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cn", "SNAPS_GOAT_HORN", "field_39029", "SNAPS_GOAT_HORN", "f_215832_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#SNAPS_GOAT_HORN
    [[maybe_unused]] static void set_field_SNAPS_GOAT_HORN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cn", "SNAPS_GOAT_HORN", "field_39029", "SNAPS_GOAT_HORN", "f_215832_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#REPLACEABLE_BY_TREES
    [[maybe_unused]] static jobject get_field_REPLACEABLE_BY_TREES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("co", "REPLACEABLE_BY_TREES", "field_44470", "REPLACEABLE_BY_TREES", "f_278411_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#REPLACEABLE_BY_TREES
    [[maybe_unused]] static void set_field_REPLACEABLE_BY_TREES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("co", "REPLACEABLE_BY_TREES", "field_44470", "REPLACEABLE_BY_TREES", "f_278411_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#SNOW_LAYER_CANNOT_SURVIVE_ON
    [[maybe_unused]] static jobject get_field_SNOW_LAYER_CANNOT_SURVIVE_ON() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cp", "SNOW_LAYER_CANNOT_SURVIVE_ON", "field_39104", "SNOW_LAYER_CANNOT_SURVIVE_ON", "f_215833_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#SNOW_LAYER_CANNOT_SURVIVE_ON
    [[maybe_unused]] static void set_field_SNOW_LAYER_CANNOT_SURVIVE_ON(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cp", "SNOW_LAYER_CANNOT_SURVIVE_ON", "field_39104", "SNOW_LAYER_CANNOT_SURVIVE_ON", "f_215833_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#SNOW_LAYER_CAN_SURVIVE_ON
    [[maybe_unused]] static jobject get_field_SNOW_LAYER_CAN_SURVIVE_ON() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cq", "SNOW_LAYER_CAN_SURVIVE_ON", "field_39105", "SNOW_LAYER_CAN_SURVIVE_ON", "f_215834_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#SNOW_LAYER_CAN_SURVIVE_ON
    [[maybe_unused]] static void set_field_SNOW_LAYER_CAN_SURVIVE_ON(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cq", "SNOW_LAYER_CAN_SURVIVE_ON", "field_39105", "SNOW_LAYER_CAN_SURVIVE_ON", "f_215834_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#INVALID_SPAWN_INSIDE
    [[maybe_unused]] static jobject get_field_INVALID_SPAWN_INSIDE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cr", "INVALID_SPAWN_INSIDE", "field_40107", "INVALID_SPAWN_INSIDE", "f_244350_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#INVALID_SPAWN_INSIDE
    [[maybe_unused]] static void set_field_INVALID_SPAWN_INSIDE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cr", "INVALID_SPAWN_INSIDE", "field_40107", "INVALID_SPAWN_INSIDE", "f_244350_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#SNIFFER_DIGGABLE_BLOCK
    [[maybe_unused]] static jobject get_field_SNIFFER_DIGGABLE_BLOCK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cs", "SNIFFER_DIGGABLE_BLOCK", "field_42607", "SNIFFER_DIGGABLE_BLOCK", "f_271391_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#SNIFFER_DIGGABLE_BLOCK
    [[maybe_unused]] static void set_field_SNIFFER_DIGGABLE_BLOCK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cs", "SNIFFER_DIGGABLE_BLOCK", "field_42607", "SNIFFER_DIGGABLE_BLOCK", "f_271391_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#SNIFFER_EGG_HATCH_BOOST
    [[maybe_unused]] static jobject get_field_SNIFFER_EGG_HATCH_BOOST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ct", "SNIFFER_EGG_HATCH_BOOST", "field_43171", "SNIFFER_EGG_HATCH_BOOST", "f_276630_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#SNIFFER_EGG_HATCH_BOOST
    [[maybe_unused]] static void set_field_SNIFFER_EGG_HATCH_BOOST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ct", "SNIFFER_EGG_HATCH_BOOST", "field_43171", "SNIFFER_EGG_HATCH_BOOST", "f_276630_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#TRAIL_RUINS_REPLACEABLE
    [[maybe_unused]] static jobject get_field_TRAIL_RUINS_REPLACEABLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cu", "TRAIL_RUINS_REPLACEABLE", "field_43172", "TRAIL_RUINS_REPLACEABLE", "f_276448_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#TRAIL_RUINS_REPLACEABLE
    [[maybe_unused]] static void set_field_TRAIL_RUINS_REPLACEABLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cu", "TRAIL_RUINS_REPLACEABLE", "field_43172", "TRAIL_RUINS_REPLACEABLE", "f_276448_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#REPLACEABLE
    [[maybe_unused]] static jobject get_field_REPLACEABLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cv", "REPLACEABLE", "field_44471", "REPLACEABLE", "f_278394_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#REPLACEABLE
    [[maybe_unused]] static void set_field_REPLACEABLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cv", "REPLACEABLE", "field_44471", "REPLACEABLE", "f_278394_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#ENCHANTMENT_POWER_PROVIDER
    [[maybe_unused]] static jobject get_field_ENCHANTMENT_POWER_PROVIDER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cw", "ENCHANTMENT_POWER_PROVIDER", "field_44472", "ENCHANTMENT_POWER_PROVIDER", "f_278384_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#ENCHANTMENT_POWER_PROVIDER
    [[maybe_unused]] static void set_field_ENCHANTMENT_POWER_PROVIDER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cw", "ENCHANTMENT_POWER_PROVIDER", "field_44472", "ENCHANTMENT_POWER_PROVIDER", "f_278384_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#ENCHANTMENT_POWER_TRANSMITTER
    [[maybe_unused]] static jobject get_field_ENCHANTMENT_POWER_TRANSMITTER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cx", "ENCHANTMENT_POWER_TRANSMITTER", "field_44473", "ENCHANTMENT_POWER_TRANSMITTER", "f_278486_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#ENCHANTMENT_POWER_TRANSMITTER
    [[maybe_unused]] static void set_field_ENCHANTMENT_POWER_TRANSMITTER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cx", "ENCHANTMENT_POWER_TRANSMITTER", "field_44473", "ENCHANTMENT_POWER_TRANSMITTER", "f_278486_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#MAINTAINS_FARMLAND
    [[maybe_unused]] static jobject get_field_MAINTAINS_FARMLAND() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cy", "MAINTAINS_FARMLAND", "field_44589", "MAINTAINS_FARMLAND", "f_279534_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#MAINTAINS_FARMLAND
    [[maybe_unused]] static void set_field_MAINTAINS_FARMLAND(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cy", "MAINTAINS_FARMLAND", "field_44589", "MAINTAINS_FARMLAND", "f_279534_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#BLOCKS_WIND_CHARGE_EXPLOSIONS
    [[maybe_unused]] static jobject get_field_BLOCKS_WIND_CHARGE_EXPLOSIONS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cz", "BLOCKS_WIND_CHARGE_EXPLOSIONS", "field_49051", "BLOCKS_WIND_CHARGE_EXPLOSIONS", "f_314652_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#BLOCKS_WIND_CHARGE_EXPLOSIONS
    [[maybe_unused]] static void set_field_BLOCKS_WIND_CHARGE_EXPLOSIONS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cz", "BLOCKS_WIND_CHARGE_EXPLOSIONS", "field_49051", "BLOCKS_WIND_CHARGE_EXPLOSIONS", "f_314652_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#DOES_NOT_BLOCK_HOPPERS
    [[maybe_unused]] static jobject get_field_DOES_NOT_BLOCK_HOPPERS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cA", "DOES_NOT_BLOCK_HOPPERS", "field_49147", "DOES_NOT_BLOCK_HOPPERS", "f_317104_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#DOES_NOT_BLOCK_HOPPERS
    [[maybe_unused]] static void set_field_DOES_NOT_BLOCK_HOPPERS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cA", "DOES_NOT_BLOCK_HOPPERS", "field_49147", "DOES_NOT_BLOCK_HOPPERS", "f_317104_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.BlockTags#AIR
    [[maybe_unused]] static jobject get_field_AIR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cB", "AIR", "field_51989", "AIR", "f_336855_"), "Lawu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.BlockTags#AIR
    [[maybe_unused]] static void set_field_AIR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("cB", "AIR", "field_51989", "AIR", "f_336855_"), "Lawu;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_of() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "create", "method_15069", "of", "m_203846_"), "(Ljava/lang/String;)Lawu;");
    }

    static jobject of(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_of();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_REGISTRY_TAG_BLOCKTAGS_HPP