// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_REGISTRY_TAG_TAGGROUPLOADER_HPP
#define NET_MINECRAFT_REGISTRY_TAG_TAGGROUPLOADER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.registry.tag.TagGroupLoader
 * Remapped: awv
 */
namespace TagGroupLoader {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("awv", "net/minecraft/tags/TagLoader", "net/minecraft/class_3503", "net/minecraft/registry/tag/TagGroupLoader", "net/minecraft/src/C_161_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.registry.tag.TagGroupLoader#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LOGGER", "field_15607", "LOGGER", "f_13445_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.registry.tag.TagGroupLoader#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LOGGER", "field_15607", "LOGGER", "f_13445_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for default field net.minecraft.registry.tag.TagGroupLoader#registryGetter
    static jobject get_field_registryGetter(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "idToValue", "field_15609", "registryGetter", "f_13448_"), "Ljava/util/function/Function;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.registry.tag.TagGroupLoader#registryGetter
    static void set_field_registryGetter(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "idToValue", "field_15609", "registryGetter", "f_13448_"), "Ljava/util/function/Function;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.registry.tag.TagGroupLoader#dataType
    static jobject get_field_dataType(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "directory", "field_15605", "dataType", "f_13449_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.registry.tag.TagGroupLoader#dataType
    static void set_field_dataType(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "directory", "field_15605", "dataType", "f_13449_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_loadTags() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "load", "method_33174", "loadTags", "m_144495_"), "(Laue;)Ljava/util/Map;");
    }

    static jobject loadTags(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_loadTags();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_resolveAll() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "build", "method_43952", "resolveAll", "m_215978_"), "(Laws$a;Ljava/util/List;)Lcom/mojang/datafixers/util/Either;");
    }

    static jobject resolveAll(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_resolveAll();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_buildGroup() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "build", "method_18242", "buildGroup", "m_203898_"), "(Ljava/util/Map;)Ljava/util/Map;");
    }

    static jobject buildGroup(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_buildGroup();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_load() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "loadAndBuild", "method_33176", "load", "m_203900_"), "(Laue;)Ljava/util/Map;");
    }

    static jobject load(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_load();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_REGISTRY_TAG_TAGGROUPLOADER_HPP