// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_REGISTRY_TAG_TAGENTRY_HPP
#define NET_MINECRAFT_REGISTRY_TAG_TAGENTRY_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.registry.tag.TagEntry
 * Remapped: aws
 */
namespace TagEntry {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("aws", "net/minecraft/tags/TagEntry", "net/minecraft/class_3497", "net/minecraft/registry/tag/TagEntry", "net/minecraft/src/C_212961_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.registry.tag.TagEntry#ENTRY_CODEC
    [[maybe_unused]] static jobject get_field_ENTRY_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "FULL_CODEC", "field_39266", "ENTRY_CODEC", "f_215912_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.registry.tag.TagEntry#ENTRY_CODEC
    [[maybe_unused]] static void set_field_ENTRY_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "FULL_CODEC", "field_39266", "ENTRY_CODEC", "f_215912_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.registry.tag.TagEntry#CODEC
    [[maybe_unused]] static jobject get_field_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CODEC", "field_39265", "CODEC", "f_215911_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.registry.tag.TagEntry#CODEC
    [[maybe_unused]] static void set_field_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CODEC", "field_39265", "CODEC", "f_215911_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.registry.tag.TagEntry#id
    static jobject get_field_id(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "id", "field_15584", "id", "f_215913_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.registry.tag.TagEntry#id
    static void set_field_id(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "id", "field_15584", "id", "f_215913_"), "Lakr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.registry.tag.TagEntry#tag
    static jboolean get_field_tag(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "tag", "field_39267", "tag", "f_215914_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.registry.tag.TagEntry#tag
    static void set_field_tag(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "tag", "field_39267", "tag", "f_215914_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.registry.tag.TagEntry#required
    static jboolean get_field_required(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "required", "field_39268", "required", "f_215915_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.registry.tag.TagEntry#required
    static void set_field_required(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "required", "field_39268", "required", "f_215915_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    static jmethodID methodID_getIdForCodec() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "elementOrTag", "method_43936", "getIdForCodec", "m_215924_"), "()Laxw$c;");
    }

    static jobject getIdForCodec(const jobject& obj) {
                
       const auto methodID = methodID_getIdForCodec();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_create() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "element", "method_43937", "create", "m_215925_"), "(Lakr;)Laws;");
    }

    static jobject create(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_create();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_createOptional() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "optionalElement", "method_43942", "createOptional", "m_215943_"), "(Lakr;)Laws;");
    }

    static jobject createOptional(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_createOptional();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_createTag() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "tag", "method_43945", "createTag", "m_215949_"), "(Lakr;)Laws;");
    }

    static jobject createTag(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_createTag();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_createOptionalTag() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("d", "optionalTag", "method_43947", "createOptionalTag", "m_215953_"), "(Lakr;)Laws;");
    }

    static jobject createOptionalTag(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_createOptionalTag();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_resolve() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "build", "method_26790", "resolve", "m_215927_"), "(Laws$a;Ljava/util/function/Consumer;)Z");
    }

    static jboolean resolve(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_resolve();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_forEachRequiredTagId() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "visitRequiredDependencies", "method_32831", "forEachRequiredTagId", "m_215938_"), "(Ljava/util/function/Consumer;)V");
    }

    static void forEachRequiredTagId(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_forEachRequiredTagId();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_forEachOptionalTagId() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "visitOptionalDependencies", "method_43944", "forEachOptionalTagId", "m_215947_"), "(Ljava/util/function/Consumer;)V");
    }

    static void forEachOptionalTagId(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_forEachOptionalTagId();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_canAdd() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "verifyIfPresent", "method_32832", "canAdd", "m_215940_"), "(Ljava/util/function/Predicate;Ljava/util/function/Predicate;)Z");
    }

    static jboolean canAdd(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_canAdd();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_REGISTRY_TAG_TAGENTRY_HPP