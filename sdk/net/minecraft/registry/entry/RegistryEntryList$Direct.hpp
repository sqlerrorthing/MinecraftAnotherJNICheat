// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_REGISTRY_ENTRY_REGISTRYENTRYLIST$DIRECT_HPP
#define NET_MINECRAFT_REGISTRY_ENTRY_REGISTRYENTRYLIST$DIRECT_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.registry.entry.RegistryEntryList$Direct
 * Remapped: jq$a
 */
namespace RegistryEntryList$Direct {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("jq$a", "net/minecraft/core/HolderSet$Direct", "net/minecraft/class_6885$class_6886", "net/minecraft/registry/entry/RegistryEntryList$Direct", "net/minecraft/src/C_203233_$C_203234_"));
        }
        return cachedClass;
    };

    // getter for static default field net.minecraft.registry.entry.RegistryEntryList$Direct#EMPTY
    [[maybe_unused]] static jobject get_field_EMPTY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "EMPTY", "field_50070", "EMPTY", "f_315669_"), "Ljq$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static default field net.minecraft.registry.entry.RegistryEntryList$Direct#EMPTY
    [[maybe_unused]] static void set_field_EMPTY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "EMPTY", "field_50070", "EMPTY", "f_315669_"), "Ljq$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.registry.entry.RegistryEntryList$Direct#entries
    static jobject get_field_entries(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "contents", "field_36457", "entries", "f_205811_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.registry.entry.RegistryEntryList$Direct#entries
    static void set_field_entries(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "contents", "field_36457", "entries", "f_205811_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.registry.entry.RegistryEntryList$Direct#entrySet
    static jobject get_field_entrySet(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "contentsSet", "field_36458", "entrySet", "f_205812_"), "Ljava/util/Set;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.registry.entry.RegistryEntryList$Direct#entrySet
    static void set_field_entrySet(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "contentsSet", "field_36458", "entrySet", "f_205812_"), "Ljava/util/Set;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_getEntries() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "contents", "method_40249", "getEntries", "m_203661_"), "()Ljava/util/List;");
    }

    static jobject getEntries(const jobject& obj) {
                
       const auto methodID = methodID_getEntries();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getStorage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "unwrap", "method_40248", "getStorage", "m_203440_"), "()Lcom/mojang/datafixers/util/Either;");
    }

    static jobject getStorage(const jobject& obj) {
                
       const auto methodID = methodID_getStorage();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getTagKey() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "unwrapKey", "method_45925", "getTagKey", "m_245234_"), "()Ljava/util/Optional;");
    }

    static jobject getTagKey(const jobject& obj) {
                
       const auto methodID = methodID_getTagKey();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_contains() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "contains", "method_40241", "contains", "m_203333_"), "(Ljm;)Z");
    }

    static jboolean contains(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_contains();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_REGISTRY_ENTRY_REGISTRYENTRYLIST$DIRECT_HPP