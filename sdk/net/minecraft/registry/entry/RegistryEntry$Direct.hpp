// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_REGISTRY_ENTRY_REGISTRYENTRY$DIRECT_HPP
#define NET_MINECRAFT_REGISTRY_ENTRY_REGISTRYENTRY$DIRECT_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.registry.entry.RegistryEntry$Direct
 * Remapped: jm$a
 */
namespace RegistryEntry$Direct {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("jm$a", "net/minecraft/core/Holder$Direct", "net/minecraft/class_6880$class_6881", "net/minecraft/registry/entry/RegistryEntry$Direct", "net/minecraft/src/C_203228_$C_203229_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.registry.entry.RegistryEntry$Direct#value
    static jobject get_field_value(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "value", "comp_349", "value", "f_205714_"), "Ljava/lang/Object;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.registry.entry.RegistryEntry$Direct#value
    static void set_field_value(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "value", "comp_349", "value", "f_205714_"), "Ljava/lang/Object;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_hasKeyAndValue() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "isBound", "method_40227", "hasKeyAndValue", "m_203633_"), "()Z");
    }

    static jboolean hasKeyAndValue(const jobject& obj) {
                
       const auto methodID = methodID_hasKeyAndValue();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_matchesId() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "is", "method_40226", "matchesId", "m_203373_"), "(Lakr;)Z");
    }

    static jboolean matchesId(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_matchesId();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_matchesKey() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "is", "method_40225", "matchesKey", "m_203565_"), "(Lakq;)Z");
    }

    static jboolean matchesKey(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_matchesKey();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isIn() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "is", "method_40220", "isIn", "m_203656_"), "(Lawu;)Z");
    }

    static jboolean isIn(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_isIn();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_matches() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "is", "method_55838", "matches", "m_318604_"), "(Ljm;)Z");
    }

    static jboolean matches(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_matches();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__matches() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "is", "method_40224", "matches", "m_203425_"), "(Ljava/util/function/Predicate;)Z");
    }

    static jboolean _matches(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__matches();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getKeyOrValue() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "unwrap", "method_40229", "getKeyOrValue", "m_203439_"), "()Lcom/mojang/datafixers/util/Either;");
    }

    static jobject getKeyOrValue(const jobject& obj) {
                
       const auto methodID = methodID_getKeyOrValue();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getKey() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "unwrapKey", "method_40230", "getKey", "m_203543_"), "()Ljava/util/Optional;");
    }

    static jobject getKey(const jobject& obj) {
                
       const auto methodID = methodID_getKey();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getType() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "kind", "method_40231", "getType", "m_203376_"), "()Ljm$b;");
    }

    static jobject getType(const jobject& obj) {
                
       const auto methodID = methodID_getType();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_ownerEquals() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "canSerializeIn", "method_46745", "ownerEquals", "m_203401_"), "(Ljp;)Z");
    }

    static jboolean ownerEquals(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_ownerEquals();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_streamTags() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "tags", "method_40228", "streamTags", "m_203616_"), "()Ljava/util/stream/Stream;");
    }

    static jobject streamTags(const jobject& obj) {
                
       const auto methodID = methodID_streamTags();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__value() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "value", "comp_349", "value", "m_203334_"), "()Ljava/lang/Object;");
    }

    static jobject _value(const jobject& obj) {
                
       const auto methodID = methodID__value();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_REGISTRY_ENTRY_REGISTRYENTRY$DIRECT_HPP