// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_REGISTRY_REGISTRYENTRYLOOKUP$REGISTRYLOOKUP_HPP
#define NET_MINECRAFT_REGISTRY_REGISTRYENTRYLOOKUP$REGISTRYLOOKUP_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.registry.RegistryEntryLookup$RegistryLookup
 * Remapped: jn$a
 */
namespace RegistryEntryLookup$RegistryLookup {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("jn$a", "net/minecraft/core/HolderGetter$Provider", "net/minecraft/class_7871$class_7872", "net/minecraft/registry/RegistryEntryLookup$RegistryLookup", "net/minecraft/src/C_254583_$C_254596_"));
        }
        return cachedClass;
    };

    static jmethodID methodID_getOptional() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "lookup", "method_46750", "getOptional", "m_255095_"), "(Lakq;)Ljava/util/Optional;");
    }

    static jobject getOptional(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getOptional();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getOrThrow() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "lookupOrThrow", "method_46751", "getOrThrow", "m_254974_"), "(Lakq;)Ljn;");
    }

    static jobject getOrThrow(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getOrThrow();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getOptionalEntry() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "get", "method_58561", "getOptionalEntry", "m_318772_"), "(Lakq;Lakq;)Ljava/util/Optional;");
    }

    static jobject getOptionalEntry(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_getOptionalEntry();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_REGISTRY_REGISTRYENTRYLOOKUP$REGISTRYLOOKUP_HPP