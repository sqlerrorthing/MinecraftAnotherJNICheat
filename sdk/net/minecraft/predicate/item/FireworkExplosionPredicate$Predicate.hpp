// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_PREDICATE_ITEM_FIREWORKEXPLOSIONPREDICATE$PREDICATE_HPP
#define NET_MINECRAFT_PREDICATE_ITEM_FIREWORKEXPLOSIONPREDICATE$PREDICATE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.predicate.item.FireworkExplosionPredicate$Predicate
 * Remapped: co$a
 */
namespace FireworkExplosionPredicate$Predicate {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("co$a", "net/minecraft/advancements/critereon/ItemFireworkExplosionPredicate$FireworkPredicate", "net/minecraft/class_9657$class_9658", "net/minecraft/predicate/item/FireworkExplosionPredicate$Predicate", "net/minecraft/src/C_313876_$C_313538_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.predicate.item.FireworkExplosionPredicate$Predicate#shape
    static jobject get_field_shape(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "shape", "comp_2633", "shape", "f_315216_"), "Ljava/util/Optional;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.predicate.item.FireworkExplosionPredicate$Predicate#shape
    static void set_field_shape(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "shape", "comp_2633", "shape", "f_315216_"), "Ljava/util/Optional;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.predicate.item.FireworkExplosionPredicate$Predicate#twinkle
    static jobject get_field_twinkle(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "twinkle", "comp_2634", "twinkle", "f_315735_"), "Ljava/util/Optional;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.predicate.item.FireworkExplosionPredicate$Predicate#twinkle
    static void set_field_twinkle(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "twinkle", "comp_2634", "twinkle", "f_315735_"), "Ljava/util/Optional;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.predicate.item.FireworkExplosionPredicate$Predicate#trail
    static jobject get_field_trail(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "trail", "comp_2635", "trail", "f_316972_"), "Ljava/util/Optional;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.predicate.item.FireworkExplosionPredicate$Predicate#trail
    static void set_field_trail(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "trail", "comp_2635", "trail", "f_316972_"), "Ljava/util/Optional;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for static public field net.minecraft.predicate.item.FireworkExplosionPredicate$Predicate#CODEC
    [[maybe_unused]] static jobject get_field_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CODEC", "field_51383", "CODEC", "f_316939_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.predicate.item.FireworkExplosionPredicate$Predicate#CODEC
    [[maybe_unused]] static void set_field_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CODEC", "field_51383", "CODEC", "f_316939_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_test() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "test", "method_59678", "test", "test"), "(Lcxl;)Z");
    }

    static jboolean test(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_test();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__shape() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "shape", "comp_2633", "shape", "f_315216_"), "()Ljava/util/Optional;");
    }

    static jobject _shape(const jobject& obj) {
                
       const auto methodID = methodID__shape();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__twinkle() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "twinkle", "comp_2634", "twinkle", "f_315735_"), "()Ljava/util/Optional;");
    }

    static jobject _twinkle(const jobject& obj) {
                
       const auto methodID = methodID__twinkle();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__trail() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "trail", "comp_2635", "trail", "f_316972_"), "()Ljava/util/Optional;");
    }

    static jobject _trail(const jobject& obj) {
                
       const auto methodID = methodID__trail();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_PREDICATE_ITEM_FIREWORKEXPLOSIONPREDICATE$PREDICATE_HPP