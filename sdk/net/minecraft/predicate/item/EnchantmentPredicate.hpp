// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_PREDICATE_ITEM_ENCHANTMENTPREDICATE_HPP
#define NET_MINECRAFT_PREDICATE_ITEM_ENCHANTMENTPREDICATE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.predicate.item.EnchantmentPredicate
 * Remapped: bq
 */
namespace EnchantmentPredicate {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("bq", "net/minecraft/advancements/critereon/EnchantmentPredicate", "net/minecraft/class_2035", "net/minecraft/predicate/item/EnchantmentPredicate", "net/minecraft/src/C_924_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.predicate.item.EnchantmentPredicate#enchantments
    static jobject get_field_enchantments(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "enchantments", "comp_2665", "enchantments", "f_337714_"), "Ljava/util/Optional;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.predicate.item.EnchantmentPredicate#enchantments
    static void set_field_enchantments(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "enchantments", "comp_2665", "enchantments", "f_337714_"), "Ljava/util/Optional;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.predicate.item.EnchantmentPredicate#levels
    static jobject get_field_levels(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "level", "comp_1749", "levels", "f_30467_"), "Ldh$d;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.predicate.item.EnchantmentPredicate#levels
    static void set_field_levels(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "level", "comp_1749", "levels", "f_30467_"), "Ldh$d;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for static public field net.minecraft.predicate.item.EnchantmentPredicate#CODEC
    [[maybe_unused]] static jobject get_field_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CODEC", "field_45741", "CODEC", "f_291880_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.predicate.item.EnchantmentPredicate#CODEC
    [[maybe_unused]] static void set_field_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CODEC", "field_45741", "CODEC", "f_291880_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_test() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "containedIn", "method_8880", "test", "m_30476_"), "(Ldai;)Z");
    }

    static jboolean test(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_test();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_testLevel() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "matchesEnchantment", "method_59916", "testLevel", "m_340071_"), "(Ldai;Ljm;)Z");
    }

    static jboolean testLevel(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_testLevel();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__enchantments() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "enchantments", "comp_2665", "enchantments", "f_337714_"), "()Ljava/util/Optional;");
    }

    static jobject _enchantments(const jobject& obj) {
                
       const auto methodID = methodID__enchantments();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__levels() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "level", "comp_1749", "levels", "f_30467_"), "()Ldh$d;");
    }

    static jobject _levels(const jobject& obj) {
                
       const auto methodID = methodID__levels();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_PREDICATE_ITEM_ENCHANTMENTPREDICATE_HPP