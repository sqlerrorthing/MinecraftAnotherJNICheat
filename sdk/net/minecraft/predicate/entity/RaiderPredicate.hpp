// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_PREDICATE_ENTITY_RAIDERPREDICATE_HPP
#define NET_MINECRAFT_PREDICATE_ENTITY_RAIDERPREDICATE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.predicate.entity.RaiderPredicate
 * Remapped: dr
 */
namespace RaiderPredicate {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("dr", "net/minecraft/advancements/critereon/RaiderPredicate", "net/minecraft/class_9471", "net/minecraft/predicate/entity/RaiderPredicate", "net/minecraft/src/C_313478_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.predicate.entity.RaiderPredicate#hasRaid
    static jboolean get_field_hasRaid(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "hasRaid", "comp_2549", "hasRaid", "f_315999_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.predicate.entity.RaiderPredicate#hasRaid
    static void set_field_hasRaid(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "hasRaid", "comp_2549", "hasRaid", "f_315999_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.predicate.entity.RaiderPredicate#isCaptain
    static jboolean get_field_isCaptain(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "isCaptain", "comp_2550", "isCaptain", "f_315971_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.predicate.entity.RaiderPredicate#isCaptain
    static void set_field_isCaptain(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "isCaptain", "comp_2550", "isCaptain", "f_315971_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for static public field net.minecraft.predicate.entity.RaiderPredicate#CODEC
    [[maybe_unused]] static jobject get_field_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "CODEC", "field_50162", "CODEC", "f_314357_"), "Lcom/mojang/serialization/MapCodec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.predicate.entity.RaiderPredicate#CODEC
    [[maybe_unused]] static void set_field_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "CODEC", "field_50162", "CODEC", "f_314357_"), "Lcom/mojang/serialization/MapCodec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.predicate.entity.RaiderPredicate#CAPTAIN_WITHOUT_RAID
    [[maybe_unused]] static jobject get_field_CAPTAIN_WITHOUT_RAID() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "CAPTAIN_WITHOUT_RAID", "field_50163", "CAPTAIN_WITHOUT_RAID", "f_316933_"), "Ldr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.predicate.entity.RaiderPredicate#CAPTAIN_WITHOUT_RAID
    [[maybe_unused]] static void set_field_CAPTAIN_WITHOUT_RAID(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "CAPTAIN_WITHOUT_RAID", "field_50163", "CAPTAIN_WITHOUT_RAID", "f_316933_"), "Ldr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_getCodec() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "codec", "method_58152", "getCodec", "m_213836_"), "()Lcom/mojang/serialization/MapCodec;");
    }

    static jobject getCodec(const jobject& obj) {
                
       const auto methodID = methodID_getCodec();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_test() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "matches", "method_22497", "test", "m_213868_"), "(Lbsr;Laqu;Lexc;)Z");
    }

    static jboolean test(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_test();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID__hasRaid() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "hasRaid", "comp_2549", "hasRaid", "f_315999_"), "()Z");
    }

    static jboolean _hasRaid(const jobject& obj) {
                
       const auto methodID = methodID__hasRaid();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID__isCaptain() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "isCaptain", "comp_2550", "isCaptain", "f_315971_"), "()Z");
    }

    static jboolean _isCaptain(const jobject& obj) {
                
       const auto methodID = methodID__isCaptain();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_PREDICATE_ENTITY_RAIDERPREDICATE_HPP