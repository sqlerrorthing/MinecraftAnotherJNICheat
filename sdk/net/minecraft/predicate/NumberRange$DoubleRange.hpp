// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_PREDICATE_NUMBERRANGE$DOUBLERANGE_HPP
#define NET_MINECRAFT_PREDICATE_NUMBERRANGE$DOUBLERANGE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.predicate.NumberRange$DoubleRange
 * Remapped: dh$c
 */
namespace NumberRange$DoubleRange {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("dh$c", "net/minecraft/advancements/critereon/MinMaxBounds$Doubles", "net/minecraft/class_2096$class_2099", "net/minecraft/predicate/NumberRange$DoubleRange", "net/minecraft/src/C_1863_$C_141231_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.predicate.NumberRange$DoubleRange#min
    static jobject get_field_min(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "min", "comp_1805", "min", "f_290567_"), "Ljava/util/Optional;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.predicate.NumberRange$DoubleRange#min
    static void set_field_min(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "min", "comp_1805", "min", "f_290567_"), "Ljava/util/Optional;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.predicate.NumberRange$DoubleRange#max
    static jobject get_field_max(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "max", "comp_1806", "max", "f_291623_"), "Ljava/util/Optional;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.predicate.NumberRange$DoubleRange#max
    static void set_field_max(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "max", "comp_1806", "max", "f_291623_"), "Ljava/util/Optional;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.predicate.NumberRange$DoubleRange#squaredMin
    static jobject get_field_squaredMin(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "minSq", "comp_1807", "squaredMin", "f_154780_"), "Ljava/util/Optional;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.predicate.NumberRange$DoubleRange#squaredMin
    static void set_field_squaredMin(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "minSq", "comp_1807", "squaredMin", "f_154780_"), "Ljava/util/Optional;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.predicate.NumberRange$DoubleRange#squaredMax
    static jobject get_field_squaredMax(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "maxSq", "comp_1808", "squaredMax", "f_154781_"), "Ljava/util/Optional;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.predicate.NumberRange$DoubleRange#squaredMax
    static void set_field_squaredMax(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "maxSq", "comp_1808", "squaredMax", "f_154781_"), "Ljava/util/Optional;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for static public field net.minecraft.predicate.NumberRange$DoubleRange#ANY
    [[maybe_unused]] static jobject get_field_ANY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "ANY", "field_9705", "ANY", "f_154779_"), "Ldh$c;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.predicate.NumberRange$DoubleRange#ANY
    [[maybe_unused]] static void set_field_ANY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "ANY", "field_9705", "ANY", "f_154779_"), "Ldh$c;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.predicate.NumberRange$DoubleRange#CODEC
    [[maybe_unused]] static jobject get_field_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "CODEC", "field_45762", "CODEC", "f_290947_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.predicate.NumberRange$DoubleRange#CODEC
    [[maybe_unused]] static void set_field_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "CODEC", "field_45762", "CODEC", "f_290947_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_create() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "create", "method_9046", "create", "m_154795_"), "(Lcom/mojang/brigadier/StringReader;Ljava/util/Optional;Ljava/util/Optional;)Ldh$c;");
    }

    static jobject create(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_create();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_square() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "squareOpt", "method_9044", "square", "m_154802_"), "(Ljava/util/Optional;)Ljava/util/Optional;");
    }

    static jobject square(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_square();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_exactly() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "exactly", "method_35284", "exactly", "m_154786_"), "(D)Ldh$c;");
    }

    static jobject exactly(const jdouble& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_exactly();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_between() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "between", "method_35285", "between", "m_154788_"), "(DD)Ldh$c;");
    }

    static jobject between(const jdouble& arg0, const jdouble& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_between();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_atLeast() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "atLeast", "method_9050", "atLeast", "m_154804_"), "(D)Ldh$c;");
    }

    static jobject atLeast(const jdouble& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_atLeast();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_atMost() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "atMost", "method_35286", "atMost", "m_154808_"), "(D)Ldh$c;");
    }

    static jobject atMost(const jdouble& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_atMost();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_test() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "matches", "method_9047", "test", "m_154810_"), "(D)Z");
    }

    static jboolean test(const jobject& obj, const jdouble& arg0) {
                
       const auto methodID = methodID_test();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_testSqrt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "matchesSqr", "method_9045", "testSqrt", "m_154812_"), "(D)Z");
    }

    static jboolean testSqrt(const jobject& obj, const jdouble& arg0) {
                
       const auto methodID = methodID_testSqrt();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_parse() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "fromReader", "method_9049", "parse", "m_154793_"), "(Lcom/mojang/brigadier/StringReader;)Ldh$c;");
    }

    static jobject parse(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_parse();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID__parse() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "fromReader", "method_9048", "parse", "m_154799_"), "(Lcom/mojang/brigadier/StringReader;Ljava/util/function/Function;)Ldh$c;");
    }

    static jobject _parse(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID__parse();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__min() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "min", "comp_1805", "min", "m_293284_"), "()Ljava/util/Optional;");
    }

    static jobject _min(const jobject& obj) {
                
       const auto methodID = methodID__min();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__max() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "max", "comp_1806", "max", "m_294019_"), "()Ljava/util/Optional;");
    }

    static jobject _max(const jobject& obj) {
                
       const auto methodID = methodID__max();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__squaredMin() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "minSq", "comp_1807", "squaredMin", "f_154780_"), "()Ljava/util/Optional;");
    }

    static jobject _squaredMin(const jobject& obj) {
                
       const auto methodID = methodID__squaredMin();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__squaredMax() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "maxSq", "comp_1808", "squaredMax", "f_154781_"), "()Ljava/util/Optional;");
    }

    static jobject _squaredMax(const jobject& obj) {
                
       const auto methodID = methodID__squaredMax();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_PREDICATE_NUMBERRANGE$DOUBLERANGE_HPP