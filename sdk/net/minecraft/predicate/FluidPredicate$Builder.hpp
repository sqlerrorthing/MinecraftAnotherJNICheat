// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_PREDICATE_FLUIDPREDICATE$BUILDER_HPP
#define NET_MINECRAFT_PREDICATE_FLUIDPREDICATE$BUILDER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.predicate.FluidPredicate$Builder
 * Remapped: cd$a
 */
namespace FluidPredicate$Builder {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("cd$a", "net/minecraft/advancements/critereon/FluidPredicate$Builder", "net/minecraft/class_4551$class_6079", "net/minecraft/predicate/FluidPredicate$Builder", "net/minecraft/src/C_1356_$C_141173_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.predicate.FluidPredicate$Builder#tag
    static jobject get_field_tag(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "fluids", "field_30913", "tag", "f_151163_"), "Ljava/util/Optional;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.predicate.FluidPredicate$Builder#tag
    static void set_field_tag(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "fluids", "field_30913", "tag", "f_151163_"), "Ljava/util/Optional;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.predicate.FluidPredicate$Builder#state
    static jobject get_field_state(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "properties", "field_30914", "state", "f_151164_"), "Ljava/util/Optional;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.predicate.FluidPredicate$Builder#state
    static void set_field_state(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "properties", "field_30914", "state", "f_151164_"), "Ljava/util/Optional;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_create() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "fluid", "method_35221", "create", "m_151166_"), "()Lcd$a;");
    }

    static jobject create() {
       const auto clazz = self();
       const auto methodID = methodID_create();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_fluid() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "of", "method_35224", "fluid", "m_151171_"), "(Lepd;)Lcd$a;");
    }

    static jobject fluid(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_fluid();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__tag() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "of", "method_35222", "tag", "m_204105_"), "(Ljq;)Lcd$a;");
    }

    static jobject _tag(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__tag();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__state() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setProperties", "method_35223", "state", "m_151169_"), "(Leb;)Lcd$a;");
    }

    static jobject _state(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__state();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_build() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "build", "method_35225", "build", "m_151173_"), "()Lcd;");
    }

    static jobject build(const jobject& obj) {
                
       const auto methodID = methodID_build();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_PREDICATE_FLUIDPREDICATE$BUILDER_HPP