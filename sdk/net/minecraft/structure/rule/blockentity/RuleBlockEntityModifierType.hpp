// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_STRUCTURE_RULE_BLOCKENTITY_RULEBLOCKENTITYMODIFIERTYPE_HPP
#define NET_MINECRAFT_STRUCTURE_RULE_BLOCKENTITY_RULEBLOCKENTITYMODIFIERTYPE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.structure.rule.blockentity.RuleBlockEntityModifierType
 * Remapped: eoc
 */
namespace RuleBlockEntityModifierType {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("eoc", "net/minecraft/world/level/levelgen/structure/templatesystem/rule/blockentity/RuleBlockEntityModifierType", "net/minecraft/class_8249", "net/minecraft/structure/rule/blockentity/RuleBlockEntityModifierType", "net/minecraft/src/C_276377_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.structure.rule.blockentity.RuleBlockEntityModifierType#CLEAR
    [[maybe_unused]] static jobject get_field_CLEAR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CLEAR", "field_43346", "CLEAR", "f_276455_"), "Leoc;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.structure.rule.blockentity.RuleBlockEntityModifierType#CLEAR
    [[maybe_unused]] static void set_field_CLEAR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CLEAR", "field_43346", "CLEAR", "f_276455_"), "Leoc;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.structure.rule.blockentity.RuleBlockEntityModifierType#PASSTHROUGH
    [[maybe_unused]] static jobject get_field_PASSTHROUGH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "PASSTHROUGH", "field_43347", "PASSTHROUGH", "f_276528_"), "Leoc;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.structure.rule.blockentity.RuleBlockEntityModifierType#PASSTHROUGH
    [[maybe_unused]] static void set_field_PASSTHROUGH(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "PASSTHROUGH", "field_43347", "PASSTHROUGH", "f_276528_"), "Leoc;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.structure.rule.blockentity.RuleBlockEntityModifierType#APPEND_STATIC
    [[maybe_unused]] static jobject get_field_APPEND_STATIC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "APPEND_STATIC", "field_43348", "APPEND_STATIC", "f_276423_"), "Leoc;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.structure.rule.blockentity.RuleBlockEntityModifierType#APPEND_STATIC
    [[maybe_unused]] static void set_field_APPEND_STATIC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "APPEND_STATIC", "field_43348", "APPEND_STATIC", "f_276423_"), "Leoc;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.structure.rule.blockentity.RuleBlockEntityModifierType#APPEND_LOOT
    [[maybe_unused]] static jobject get_field_APPEND_LOOT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "APPEND_LOOT", "field_43349", "APPEND_LOOT", "f_276561_"), "Leoc;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.structure.rule.blockentity.RuleBlockEntityModifierType#APPEND_LOOT
    [[maybe_unused]] static void set_field_APPEND_LOOT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "APPEND_LOOT", "field_43349", "APPEND_LOOT", "f_276561_"), "Leoc;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_codec() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("codec", "codec", "", "", "m_276894_"), "()Lcom/mojang/serialization/MapCodec;");
    }

    static jobject codec(const jobject& obj) {
                
       const auto methodID = methodID_codec();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_register() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "register", "method_49899", "register", "m_276888_"), "(Ljava/lang/String;Lcom/mojang/serialization/MapCodec;)Leoc;");
    }

    static jobject register(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_register();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_STRUCTURE_RULE_BLOCKENTITY_RULEBLOCKENTITYMODIFIERTYPE_HPP