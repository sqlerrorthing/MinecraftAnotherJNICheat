// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_STRUCTURE_STRUCTUREPIECETYPE_HPP
#define NET_MINECRAFT_STRUCTURE_STRUCTUREPIECETYPE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.structure.StructurePieceType
 * Remapped: eki
 */
namespace StructurePieceType {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("eki", "net/minecraft/world/level/levelgen/structure/pieces/StructurePieceType", "net/minecraft/class_3773", "net/minecraft/structure/StructurePieceType", "net/minecraft/src/C_207027_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.structure.StructurePieceType#MINESHAFT_CORRIDOR
    [[maybe_unused]] static jobject get_field_MINESHAFT_CORRIDOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "MINE_SHAFT_CORRIDOR", "field_16969", "MINESHAFT_CORRIDOR", "f_210121_"), "Leki;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.structure.StructurePieceType#MINESHAFT_CORRIDOR
    [[maybe_unused]] static void set_field_MINESHAFT_CORRIDOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "MINE_SHAFT_CORRIDOR", "field_16969", "MINESHAFT_CORRIDOR", "f_210121_"), "Leki;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.structure.StructurePieceType#MINESHAFT_CROSSING
    [[maybe_unused]] static jobject get_field_MINESHAFT_CROSSING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "MINE_SHAFT_CROSSING", "field_16919", "MINESHAFT_CROSSING", "f_210126_"), "Leki;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.structure.StructurePieceType#MINESHAFT_CROSSING
    [[maybe_unused]] static void set_field_MINESHAFT_CROSSING(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "MINE_SHAFT_CROSSING", "field_16919", "MINESHAFT_CROSSING", "f_210126_"), "Leki;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.structure.StructurePieceType#MINESHAFT_ROOM
    [[maybe_unused]] static jobject get_field_MINESHAFT_ROOM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "MINE_SHAFT_ROOM", "field_16915", "MINESHAFT_ROOM", "f_210127_"), "Leki;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.structure.StructurePieceType#MINESHAFT_ROOM
    [[maybe_unused]] static void set_field_MINESHAFT_ROOM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "MINE_SHAFT_ROOM", "field_16915", "MINESHAFT_ROOM", "f_210127_"), "Leki;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.structure.StructurePieceType#MINESHAFT_STAIRS
    [[maybe_unused]] static jobject get_field_MINESHAFT_STAIRS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "MINE_SHAFT_STAIRS", "field_16968", "MINESHAFT_STAIRS", "f_210128_"), "Leki;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.structure.StructurePieceType#MINESHAFT_STAIRS
    [[maybe_unused]] static void set_field_MINESHAFT_STAIRS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "MINE_SHAFT_STAIRS", "field_16968", "MINESHAFT_STAIRS", "f_210128_"), "Leki;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.structure.StructurePieceType#NETHER_FORTRESS_BRIDGE_CROSSING
    [[maybe_unused]] static jobject get_field_NETHER_FORTRESS_BRIDGE_CROSSING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "NETHER_FORTRESS_BRIDGE_CROSSING", "field_16926", "NETHER_FORTRESS_BRIDGE_CROSSING", "f_210129_"), "Leki;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.structure.StructurePieceType#NETHER_FORTRESS_BRIDGE_CROSSING
    [[maybe_unused]] static void set_field_NETHER_FORTRESS_BRIDGE_CROSSING(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "NETHER_FORTRESS_BRIDGE_CROSSING", "field_16926", "NETHER_FORTRESS_BRIDGE_CROSSING", "f_210129_"), "Leki;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.structure.StructurePieceType#NETHER_FORTRESS_BRIDGE_END
    [[maybe_unused]] static jobject get_field_NETHER_FORTRESS_BRIDGE_END() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "NETHER_FORTRESS_BRIDGE_END_FILLER", "field_16903", "NETHER_FORTRESS_BRIDGE_END", "f_210130_"), "Leki;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.structure.StructurePieceType#NETHER_FORTRESS_BRIDGE_END
    [[maybe_unused]] static void set_field_NETHER_FORTRESS_BRIDGE_END(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "NETHER_FORTRESS_BRIDGE_END_FILLER", "field_16903", "NETHER_FORTRESS_BRIDGE_END", "f_210130_"), "Leki;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.structure.StructurePieceType#NETHER_FORTRESS_BRIDGE
    [[maybe_unused]] static jobject get_field_NETHER_FORTRESS_BRIDGE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "NETHER_FORTRESS_BRIDGE_STRAIGHT", "field_16917", "NETHER_FORTRESS_BRIDGE", "f_210131_"), "Leki;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.structure.StructurePieceType#NETHER_FORTRESS_BRIDGE
    [[maybe_unused]] static void set_field_NETHER_FORTRESS_BRIDGE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "NETHER_FORTRESS_BRIDGE_STRAIGHT", "field_16917", "NETHER_FORTRESS_BRIDGE", "f_210131_"), "Leki;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.structure.StructurePieceType#NETHER_FORTRESS_CORRIDOR_STAIRS
    [[maybe_unused]] static jobject get_field_NETHER_FORTRESS_CORRIDOR_STAIRS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "NETHER_FORTRESS_CASTLE_CORRIDOR_STAIRS", "field_16930", "NETHER_FORTRESS_CORRIDOR_STAIRS", "f_210132_"), "Leki;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.structure.StructurePieceType#NETHER_FORTRESS_CORRIDOR_STAIRS
    [[maybe_unused]] static void set_field_NETHER_FORTRESS_CORRIDOR_STAIRS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "NETHER_FORTRESS_CASTLE_CORRIDOR_STAIRS", "field_16930", "NETHER_FORTRESS_CORRIDOR_STAIRS", "f_210132_"), "Leki;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.structure.StructurePieceType#NETHER_FORTRESS_CORRIDOR_BALCONY
    [[maybe_unused]] static jobject get_field_NETHER_FORTRESS_CORRIDOR_BALCONY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "NETHER_FORTRESS_CASTLE_CORRIDOR_T_BALCONY", "field_16943", "NETHER_FORTRESS_CORRIDOR_BALCONY", "f_210133_"), "Leki;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.structure.StructurePieceType#NETHER_FORTRESS_CORRIDOR_BALCONY
    [[maybe_unused]] static void set_field_NETHER_FORTRESS_CORRIDOR_BALCONY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "NETHER_FORTRESS_CASTLE_CORRIDOR_T_BALCONY", "field_16943", "NETHER_FORTRESS_CORRIDOR_BALCONY", "f_210133_"), "Leki;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.structure.StructurePieceType#NETHER_FORTRESS_CORRIDOR_EXIT
    [[maybe_unused]] static jobject get_field_NETHER_FORTRESS_CORRIDOR_EXIT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "NETHER_FORTRESS_CASTLE_ENTRANCE", "field_16952", "NETHER_FORTRESS_CORRIDOR_EXIT", "f_210134_"), "Leki;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.structure.StructurePieceType#NETHER_FORTRESS_CORRIDOR_EXIT
    [[maybe_unused]] static void set_field_NETHER_FORTRESS_CORRIDOR_EXIT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "NETHER_FORTRESS_CASTLE_ENTRANCE", "field_16952", "NETHER_FORTRESS_CORRIDOR_EXIT", "f_210134_"), "Leki;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.structure.StructurePieceType#NETHER_FORTRESS_CORRIDOR_CROSSING
    [[maybe_unused]] static jobject get_field_NETHER_FORTRESS_CORRIDOR_CROSSING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "NETHER_FORTRESS_CASTLE_SMALL_CORRIDOR_CROSSING", "field_16929", "NETHER_FORTRESS_CORRIDOR_CROSSING", "f_210135_"), "Leki;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.structure.StructurePieceType#NETHER_FORTRESS_CORRIDOR_CROSSING
    [[maybe_unused]] static void set_field_NETHER_FORTRESS_CORRIDOR_CROSSING(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "NETHER_FORTRESS_CASTLE_SMALL_CORRIDOR_CROSSING", "field_16929", "NETHER_FORTRESS_CORRIDOR_CROSSING", "f_210135_"), "Leki;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.structure.StructurePieceType#NETHER_FORTRESS_CORRIDOR_LEFT_TURN
    [[maybe_unused]] static jobject get_field_NETHER_FORTRESS_CORRIDOR_LEFT_TURN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "NETHER_FORTRESS_CASTLE_SMALL_CORRIDOR_LEFT_TURN", "field_16962", "NETHER_FORTRESS_CORRIDOR_LEFT_TURN", "f_210136_"), "Leki;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.structure.StructurePieceType#NETHER_FORTRESS_CORRIDOR_LEFT_TURN
    [[maybe_unused]] static void set_field_NETHER_FORTRESS_CORRIDOR_LEFT_TURN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "NETHER_FORTRESS_CASTLE_SMALL_CORRIDOR_LEFT_TURN", "field_16962", "NETHER_FORTRESS_CORRIDOR_LEFT_TURN", "f_210136_"), "Leki;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.structure.StructurePieceType#NETHER_FORTRESS_SMALL_CORRIDOR
    [[maybe_unused]] static jobject get_field_NETHER_FORTRESS_SMALL_CORRIDOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "NETHER_FORTRESS_CASTLE_SMALL_CORRIDOR", "field_16921", "NETHER_FORTRESS_SMALL_CORRIDOR", "f_210137_"), "Leki;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.structure.StructurePieceType#NETHER_FORTRESS_SMALL_CORRIDOR
    [[maybe_unused]] static void set_field_NETHER_FORTRESS_SMALL_CORRIDOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "NETHER_FORTRESS_CASTLE_SMALL_CORRIDOR", "field_16921", "NETHER_FORTRESS_SMALL_CORRIDOR", "f_210137_"), "Leki;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.structure.StructurePieceType#NETHER_FORTRESS_CORRIDOR_RIGHT_TURN
    [[maybe_unused]] static jobject get_field_NETHER_FORTRESS_CORRIDOR_RIGHT_TURN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "NETHER_FORTRESS_CASTLE_SMALL_CORRIDOR_RIGHT_TURN", "field_16945", "NETHER_FORTRESS_CORRIDOR_RIGHT_TURN", "f_210138_"), "Leki;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.structure.StructurePieceType#NETHER_FORTRESS_CORRIDOR_RIGHT_TURN
    [[maybe_unused]] static void set_field_NETHER_FORTRESS_CORRIDOR_RIGHT_TURN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "NETHER_FORTRESS_CASTLE_SMALL_CORRIDOR_RIGHT_TURN", "field_16945", "NETHER_FORTRESS_CORRIDOR_RIGHT_TURN", "f_210138_"), "Leki;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.structure.StructurePieceType#NETHER_FORTRESS_CORRIDOR_NETHER_WARTS_ROOM
    [[maybe_unused]] static jobject get_field_NETHER_FORTRESS_CORRIDOR_NETHER_WARTS_ROOM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "NETHER_FORTRESS_CASTLE_STALK_ROOM", "field_16961", "NETHER_FORTRESS_CORRIDOR_NETHER_WARTS_ROOM", "f_210139_"), "Leki;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.structure.StructurePieceType#NETHER_FORTRESS_CORRIDOR_NETHER_WARTS_ROOM
    [[maybe_unused]] static void set_field_NETHER_FORTRESS_CORRIDOR_NETHER_WARTS_ROOM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "NETHER_FORTRESS_CASTLE_STALK_ROOM", "field_16961", "NETHER_FORTRESS_CORRIDOR_NETHER_WARTS_ROOM", "f_210139_"), "Leki;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.structure.StructurePieceType#NETHER_FORTRESS_BRIDGE_PLATFORM
    [[maybe_unused]] static jobject get_field_NETHER_FORTRESS_BRIDGE_PLATFORM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "NETHER_FORTRESS_MONSTER_THRONE", "field_16931", "NETHER_FORTRESS_BRIDGE_PLATFORM", "f_210140_"), "Leki;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.structure.StructurePieceType#NETHER_FORTRESS_BRIDGE_PLATFORM
    [[maybe_unused]] static void set_field_NETHER_FORTRESS_BRIDGE_PLATFORM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "NETHER_FORTRESS_MONSTER_THRONE", "field_16931", "NETHER_FORTRESS_BRIDGE_PLATFORM", "f_210140_"), "Leki;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.structure.StructurePieceType#NETHER_FORTRESS_BRIDGE_SMALL_CROSSING
    [[maybe_unused]] static jobject get_field_NETHER_FORTRESS_BRIDGE_SMALL_CROSSING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "NETHER_FORTRESS_ROOM_CROSSING", "field_16908", "NETHER_FORTRESS_BRIDGE_SMALL_CROSSING", "f_210141_"), "Leki;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.structure.StructurePieceType#NETHER_FORTRESS_BRIDGE_SMALL_CROSSING
    [[maybe_unused]] static void set_field_NETHER_FORTRESS_BRIDGE_SMALL_CROSSING(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "NETHER_FORTRESS_ROOM_CROSSING", "field_16908", "NETHER_FORTRESS_BRIDGE_SMALL_CROSSING", "f_210141_"), "Leki;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.structure.StructurePieceType#NETHER_FORTRESS_BRIDGE_STAIRS
    [[maybe_unused]] static jobject get_field_NETHER_FORTRESS_BRIDGE_STAIRS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "NETHER_FORTRESS_STAIRS_ROOM", "field_16967", "NETHER_FORTRESS_BRIDGE_STAIRS", "f_210142_"), "Leki;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.structure.StructurePieceType#NETHER_FORTRESS_BRIDGE_STAIRS
    [[maybe_unused]] static void set_field_NETHER_FORTRESS_BRIDGE_STAIRS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "NETHER_FORTRESS_STAIRS_ROOM", "field_16967", "NETHER_FORTRESS_BRIDGE_STAIRS", "f_210142_"), "Leki;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.structure.StructurePieceType#NETHER_FORTRESS_START
    [[maybe_unused]] static jobject get_field_NETHER_FORTRESS_START() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "NETHER_FORTRESS_START", "field_16924", "NETHER_FORTRESS_START", "f_210143_"), "Leki;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.structure.StructurePieceType#NETHER_FORTRESS_START
    [[maybe_unused]] static void set_field_NETHER_FORTRESS_START(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "NETHER_FORTRESS_START", "field_16924", "NETHER_FORTRESS_START", "f_210143_"), "Leki;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.structure.StructurePieceType#STRONGHOLD_CHEST_CORRIDOR
    [[maybe_unused]] static jobject get_field_STRONGHOLD_CHEST_CORRIDOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "STRONGHOLD_CHEST_CORRIDOR", "field_16955", "STRONGHOLD_CHEST_CORRIDOR", "f_210144_"), "Leki;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.structure.StructurePieceType#STRONGHOLD_CHEST_CORRIDOR
    [[maybe_unused]] static void set_field_STRONGHOLD_CHEST_CORRIDOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "STRONGHOLD_CHEST_CORRIDOR", "field_16955", "STRONGHOLD_CHEST_CORRIDOR", "f_210144_"), "Leki;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.structure.StructurePieceType#STRONGHOLD_SMALL_CORRIDOR
    [[maybe_unused]] static jobject get_field_STRONGHOLD_SMALL_CORRIDOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "STRONGHOLD_FILLER_CORRIDOR", "field_16965", "STRONGHOLD_SMALL_CORRIDOR", "f_210145_"), "Leki;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.structure.StructurePieceType#STRONGHOLD_SMALL_CORRIDOR
    [[maybe_unused]] static void set_field_STRONGHOLD_SMALL_CORRIDOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "STRONGHOLD_FILLER_CORRIDOR", "field_16965", "STRONGHOLD_SMALL_CORRIDOR", "f_210145_"), "Leki;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.structure.StructurePieceType#STRONGHOLD_FIVE_WAY_CROSSING
    [[maybe_unused]] static jobject get_field_STRONGHOLD_FIVE_WAY_CROSSING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "STRONGHOLD_FIVE_CROSSING", "field_16937", "STRONGHOLD_FIVE_WAY_CROSSING", "f_210146_"), "Leki;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.structure.StructurePieceType#STRONGHOLD_FIVE_WAY_CROSSING
    [[maybe_unused]] static void set_field_STRONGHOLD_FIVE_WAY_CROSSING(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "STRONGHOLD_FIVE_CROSSING", "field_16937", "STRONGHOLD_FIVE_WAY_CROSSING", "f_210146_"), "Leki;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.structure.StructurePieceType#STRONGHOLD_LEFT_TURN
    [[maybe_unused]] static jobject get_field_STRONGHOLD_LEFT_TURN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "STRONGHOLD_LEFT_TURN", "field_16906", "STRONGHOLD_LEFT_TURN", "f_210147_"), "Leki;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.structure.StructurePieceType#STRONGHOLD_LEFT_TURN
    [[maybe_unused]] static void set_field_STRONGHOLD_LEFT_TURN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "STRONGHOLD_LEFT_TURN", "field_16906", "STRONGHOLD_LEFT_TURN", "f_210147_"), "Leki;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.structure.StructurePieceType#STRONGHOLD_LIBRARY
    [[maybe_unused]] static jobject get_field_STRONGHOLD_LIBRARY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "STRONGHOLD_LIBRARY", "field_16959", "STRONGHOLD_LIBRARY", "f_210148_"), "Leki;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.structure.StructurePieceType#STRONGHOLD_LIBRARY
    [[maybe_unused]] static void set_field_STRONGHOLD_LIBRARY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "STRONGHOLD_LIBRARY", "field_16959", "STRONGHOLD_LIBRARY", "f_210148_"), "Leki;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.structure.StructurePieceType#STRONGHOLD_PORTAL_ROOM
    [[maybe_unused]] static jobject get_field_STRONGHOLD_PORTAL_ROOM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("y", "STRONGHOLD_PORTAL_ROOM", "field_16939", "STRONGHOLD_PORTAL_ROOM", "f_210149_"), "Leki;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.structure.StructurePieceType#STRONGHOLD_PORTAL_ROOM
    [[maybe_unused]] static void set_field_STRONGHOLD_PORTAL_ROOM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("y", "STRONGHOLD_PORTAL_ROOM", "field_16939", "STRONGHOLD_PORTAL_ROOM", "f_210149_"), "Leki;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.structure.StructurePieceType#STRONGHOLD_PRISON_HALL
    [[maybe_unused]] static jobject get_field_STRONGHOLD_PRISON_HALL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("z", "STRONGHOLD_PRISON_HALL", "field_16948", "STRONGHOLD_PRISON_HALL", "f_210150_"), "Leki;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.structure.StructurePieceType#STRONGHOLD_PRISON_HALL
    [[maybe_unused]] static void set_field_STRONGHOLD_PRISON_HALL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("z", "STRONGHOLD_PRISON_HALL", "field_16948", "STRONGHOLD_PRISON_HALL", "f_210150_"), "Leki;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.structure.StructurePieceType#STRONGHOLD_RIGHT_TURN
    [[maybe_unused]] static jobject get_field_STRONGHOLD_RIGHT_TURN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("A", "STRONGHOLD_RIGHT_TURN", "field_16958", "STRONGHOLD_RIGHT_TURN", "f_210095_"), "Leki;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.structure.StructurePieceType#STRONGHOLD_RIGHT_TURN
    [[maybe_unused]] static void set_field_STRONGHOLD_RIGHT_TURN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("A", "STRONGHOLD_RIGHT_TURN", "field_16958", "STRONGHOLD_RIGHT_TURN", "f_210095_"), "Leki;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.structure.StructurePieceType#STRONGHOLD_SQUARE_ROOM
    [[maybe_unused]] static jobject get_field_STRONGHOLD_SQUARE_ROOM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("B", "STRONGHOLD_ROOM_CROSSING", "field_16941", "STRONGHOLD_SQUARE_ROOM", "f_210096_"), "Leki;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.structure.StructurePieceType#STRONGHOLD_SQUARE_ROOM
    [[maybe_unused]] static void set_field_STRONGHOLD_SQUARE_ROOM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("B", "STRONGHOLD_ROOM_CROSSING", "field_16941", "STRONGHOLD_SQUARE_ROOM", "f_210096_"), "Leki;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.structure.StructurePieceType#STRONGHOLD_SPIRAL_STAIRCASE
    [[maybe_unused]] static jobject get_field_STRONGHOLD_SPIRAL_STAIRCASE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("C", "STRONGHOLD_STAIRS_DOWN", "field_16904", "STRONGHOLD_SPIRAL_STAIRCASE", "f_210097_"), "Leki;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.structure.StructurePieceType#STRONGHOLD_SPIRAL_STAIRCASE
    [[maybe_unused]] static void set_field_STRONGHOLD_SPIRAL_STAIRCASE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("C", "STRONGHOLD_STAIRS_DOWN", "field_16904", "STRONGHOLD_SPIRAL_STAIRCASE", "f_210097_"), "Leki;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.structure.StructurePieceType#STRONGHOLD_START
    [[maybe_unused]] static jobject get_field_STRONGHOLD_START() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("D", "STRONGHOLD_START", "field_16914", "STRONGHOLD_START", "f_210098_"), "Leki;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.structure.StructurePieceType#STRONGHOLD_START
    [[maybe_unused]] static void set_field_STRONGHOLD_START(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("D", "STRONGHOLD_START", "field_16914", "STRONGHOLD_START", "f_210098_"), "Leki;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.structure.StructurePieceType#STRONGHOLD_CORRIDOR
    [[maybe_unused]] static jobject get_field_STRONGHOLD_CORRIDOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("E", "STRONGHOLD_STRAIGHT", "field_16934", "STRONGHOLD_CORRIDOR", "f_210099_"), "Leki;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.structure.StructurePieceType#STRONGHOLD_CORRIDOR
    [[maybe_unused]] static void set_field_STRONGHOLD_CORRIDOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("E", "STRONGHOLD_STRAIGHT", "field_16934", "STRONGHOLD_CORRIDOR", "f_210099_"), "Leki;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.structure.StructurePieceType#STRONGHOLD_STAIRS
    [[maybe_unused]] static jobject get_field_STRONGHOLD_STAIRS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("F", "STRONGHOLD_STRAIGHT_STAIRS_DOWN", "field_16949", "STRONGHOLD_STAIRS", "f_210100_"), "Leki;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.structure.StructurePieceType#STRONGHOLD_STAIRS
    [[maybe_unused]] static void set_field_STRONGHOLD_STAIRS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("F", "STRONGHOLD_STRAIGHT_STAIRS_DOWN", "field_16949", "STRONGHOLD_STAIRS", "f_210100_"), "Leki;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.structure.StructurePieceType#JUNGLE_TEMPLE
    [[maybe_unused]] static jobject get_field_JUNGLE_TEMPLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("G", "JUNGLE_PYRAMID_PIECE", "field_16953", "JUNGLE_TEMPLE", "f_210101_"), "Leki;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.structure.StructurePieceType#JUNGLE_TEMPLE
    [[maybe_unused]] static void set_field_JUNGLE_TEMPLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("G", "JUNGLE_PYRAMID_PIECE", "field_16953", "JUNGLE_TEMPLE", "f_210101_"), "Leki;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.structure.StructurePieceType#OCEAN_TEMPLE
    [[maybe_unused]] static jobject get_field_OCEAN_TEMPLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("H", "OCEAN_RUIN", "field_16932", "OCEAN_TEMPLE", "f_210102_"), "Leki;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.structure.StructurePieceType#OCEAN_TEMPLE
    [[maybe_unused]] static void set_field_OCEAN_TEMPLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("H", "OCEAN_RUIN", "field_16932", "OCEAN_TEMPLE", "f_210102_"), "Leki;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.structure.StructurePieceType#IGLOO
    [[maybe_unused]] static jobject get_field_IGLOO() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("I", "IGLOO", "field_16909", "IGLOO", "f_210103_"), "Leki;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.structure.StructurePieceType#IGLOO
    [[maybe_unused]] static void set_field_IGLOO(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("I", "IGLOO", "field_16909", "IGLOO", "f_210103_"), "Leki;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.structure.StructurePieceType#RUINED_PORTAL
    [[maybe_unused]] static jobject get_field_RUINED_PORTAL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("J", "RUINED_PORTAL", "field_24010", "RUINED_PORTAL", "f_210104_"), "Leki;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.structure.StructurePieceType#RUINED_PORTAL
    [[maybe_unused]] static void set_field_RUINED_PORTAL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("J", "RUINED_PORTAL", "field_24010", "RUINED_PORTAL", "f_210104_"), "Leki;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.structure.StructurePieceType#SWAMP_HUT
    [[maybe_unused]] static jobject get_field_SWAMP_HUT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("K", "SWAMPLAND_HUT", "field_16918", "SWAMP_HUT", "f_210105_"), "Leki;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.structure.StructurePieceType#SWAMP_HUT
    [[maybe_unused]] static void set_field_SWAMP_HUT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("K", "SWAMPLAND_HUT", "field_16918", "SWAMP_HUT", "f_210105_"), "Leki;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.structure.StructurePieceType#DESERT_TEMPLE
    [[maybe_unused]] static jobject get_field_DESERT_TEMPLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("L", "DESERT_PYRAMID_PIECE", "field_16933", "DESERT_TEMPLE", "f_210106_"), "Leki;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.structure.StructurePieceType#DESERT_TEMPLE
    [[maybe_unused]] static void set_field_DESERT_TEMPLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("L", "DESERT_PYRAMID_PIECE", "field_16933", "DESERT_TEMPLE", "f_210106_"), "Leki;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.structure.StructurePieceType#OCEAN_MONUMENT_BASE
    [[maybe_unused]] static jobject get_field_OCEAN_MONUMENT_BASE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("M", "OCEAN_MONUMENT_BUILDING", "field_16922", "OCEAN_MONUMENT_BASE", "f_210107_"), "Leki;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.structure.StructurePieceType#OCEAN_MONUMENT_BASE
    [[maybe_unused]] static void set_field_OCEAN_MONUMENT_BASE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("M", "OCEAN_MONUMENT_BUILDING", "field_16922", "OCEAN_MONUMENT_BASE", "f_210107_"), "Leki;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.structure.StructurePieceType#OCEAN_MONUMENT_CORE_ROOM
    [[maybe_unused]] static jobject get_field_OCEAN_MONUMENT_CORE_ROOM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("N", "OCEAN_MONUMENT_CORE_ROOM", "field_16911", "OCEAN_MONUMENT_CORE_ROOM", "f_210108_"), "Leki;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.structure.StructurePieceType#OCEAN_MONUMENT_CORE_ROOM
    [[maybe_unused]] static void set_field_OCEAN_MONUMENT_CORE_ROOM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("N", "OCEAN_MONUMENT_CORE_ROOM", "field_16911", "OCEAN_MONUMENT_CORE_ROOM", "f_210108_"), "Leki;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.structure.StructurePieceType#OCEAN_MONUMENT_DOUBLE_X_ROOM
    [[maybe_unused]] static jobject get_field_OCEAN_MONUMENT_DOUBLE_X_ROOM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("O", "OCEAN_MONUMENT_DOUBLE_X_ROOM", "field_16963", "OCEAN_MONUMENT_DOUBLE_X_ROOM", "f_210109_"), "Leki;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.structure.StructurePieceType#OCEAN_MONUMENT_DOUBLE_X_ROOM
    [[maybe_unused]] static void set_field_OCEAN_MONUMENT_DOUBLE_X_ROOM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("O", "OCEAN_MONUMENT_DOUBLE_X_ROOM", "field_16963", "OCEAN_MONUMENT_DOUBLE_X_ROOM", "f_210109_"), "Leki;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.structure.StructurePieceType#OCEAN_MONUMENT_DOUBLE_X_Y_ROOM
    [[maybe_unused]] static jobject get_field_OCEAN_MONUMENT_DOUBLE_X_Y_ROOM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("P", "OCEAN_MONUMENT_DOUBLE_XY_ROOM", "field_16927", "OCEAN_MONUMENT_DOUBLE_X_Y_ROOM", "f_210110_"), "Leki;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.structure.StructurePieceType#OCEAN_MONUMENT_DOUBLE_X_Y_ROOM
    [[maybe_unused]] static void set_field_OCEAN_MONUMENT_DOUBLE_X_Y_ROOM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("P", "OCEAN_MONUMENT_DOUBLE_XY_ROOM", "field_16927", "OCEAN_MONUMENT_DOUBLE_X_Y_ROOM", "f_210110_"), "Leki;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.structure.StructurePieceType#OCEAN_MONUMENT_DOUBLE_Y_ROOM
    [[maybe_unused]] static jobject get_field_OCEAN_MONUMENT_DOUBLE_Y_ROOM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Q", "OCEAN_MONUMENT_DOUBLE_Y_ROOM", "field_16946", "OCEAN_MONUMENT_DOUBLE_Y_ROOM", "f_210111_"), "Leki;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.structure.StructurePieceType#OCEAN_MONUMENT_DOUBLE_Y_ROOM
    [[maybe_unused]] static void set_field_OCEAN_MONUMENT_DOUBLE_Y_ROOM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Q", "OCEAN_MONUMENT_DOUBLE_Y_ROOM", "field_16946", "OCEAN_MONUMENT_DOUBLE_Y_ROOM", "f_210111_"), "Leki;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.structure.StructurePieceType#OCEAN_MONUMENT_DOUBLE_Y_Z_ROOM
    [[maybe_unused]] static jobject get_field_OCEAN_MONUMENT_DOUBLE_Y_Z_ROOM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("R", "OCEAN_MONUMENT_DOUBLE_YZ_ROOM", "field_16970", "OCEAN_MONUMENT_DOUBLE_Y_Z_ROOM", "f_210112_"), "Leki;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.structure.StructurePieceType#OCEAN_MONUMENT_DOUBLE_Y_Z_ROOM
    [[maybe_unused]] static void set_field_OCEAN_MONUMENT_DOUBLE_Y_Z_ROOM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("R", "OCEAN_MONUMENT_DOUBLE_YZ_ROOM", "field_16970", "OCEAN_MONUMENT_DOUBLE_Y_Z_ROOM", "f_210112_"), "Leki;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.structure.StructurePieceType#OCEAN_MONUMENT_DOUBLE_Z_ROOM
    [[maybe_unused]] static jobject get_field_OCEAN_MONUMENT_DOUBLE_Z_ROOM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("S", "OCEAN_MONUMENT_DOUBLE_Z_ROOM", "field_16925", "OCEAN_MONUMENT_DOUBLE_Z_ROOM", "f_210113_"), "Leki;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.structure.StructurePieceType#OCEAN_MONUMENT_DOUBLE_Z_ROOM
    [[maybe_unused]] static void set_field_OCEAN_MONUMENT_DOUBLE_Z_ROOM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("S", "OCEAN_MONUMENT_DOUBLE_Z_ROOM", "field_16925", "OCEAN_MONUMENT_DOUBLE_Z_ROOM", "f_210113_"), "Leki;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.structure.StructurePieceType#OCEAN_MONUMENT_ENTRY_ROOM
    [[maybe_unused]] static jobject get_field_OCEAN_MONUMENT_ENTRY_ROOM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("T", "OCEAN_MONUMENT_ENTRY_ROOM", "field_16905", "OCEAN_MONUMENT_ENTRY_ROOM", "f_210114_"), "Leki;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.structure.StructurePieceType#OCEAN_MONUMENT_ENTRY_ROOM
    [[maybe_unused]] static void set_field_OCEAN_MONUMENT_ENTRY_ROOM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("T", "OCEAN_MONUMENT_ENTRY_ROOM", "field_16905", "OCEAN_MONUMENT_ENTRY_ROOM", "f_210114_"), "Leki;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.structure.StructurePieceType#OCEAN_MONUMENT_PENTHOUSE
    [[maybe_unused]] static jobject get_field_OCEAN_MONUMENT_PENTHOUSE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("U", "OCEAN_MONUMENT_PENTHOUSE", "field_16966", "OCEAN_MONUMENT_PENTHOUSE", "f_210115_"), "Leki;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.structure.StructurePieceType#OCEAN_MONUMENT_PENTHOUSE
    [[maybe_unused]] static void set_field_OCEAN_MONUMENT_PENTHOUSE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("U", "OCEAN_MONUMENT_PENTHOUSE", "field_16966", "OCEAN_MONUMENT_PENTHOUSE", "f_210115_"), "Leki;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.structure.StructurePieceType#OCEAN_MONUMENT_SIMPLE_ROOM
    [[maybe_unused]] static jobject get_field_OCEAN_MONUMENT_SIMPLE_ROOM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("V", "OCEAN_MONUMENT_SIMPLE_ROOM", "field_16928", "OCEAN_MONUMENT_SIMPLE_ROOM", "f_210116_"), "Leki;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.structure.StructurePieceType#OCEAN_MONUMENT_SIMPLE_ROOM
    [[maybe_unused]] static void set_field_OCEAN_MONUMENT_SIMPLE_ROOM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("V", "OCEAN_MONUMENT_SIMPLE_ROOM", "field_16928", "OCEAN_MONUMENT_SIMPLE_ROOM", "f_210116_"), "Leki;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.structure.StructurePieceType#OCEAN_MONUMENT_SIMPLE_TOP_ROOM
    [[maybe_unused]] static jobject get_field_OCEAN_MONUMENT_SIMPLE_TOP_ROOM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("W", "OCEAN_MONUMENT_SIMPLE_TOP_ROOM", "field_16944", "OCEAN_MONUMENT_SIMPLE_TOP_ROOM", "f_210117_"), "Leki;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.structure.StructurePieceType#OCEAN_MONUMENT_SIMPLE_TOP_ROOM
    [[maybe_unused]] static void set_field_OCEAN_MONUMENT_SIMPLE_TOP_ROOM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("W", "OCEAN_MONUMENT_SIMPLE_TOP_ROOM", "field_16944", "OCEAN_MONUMENT_SIMPLE_TOP_ROOM", "f_210117_"), "Leki;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.structure.StructurePieceType#OCEAN_MONUMENT_WING_ROOM
    [[maybe_unused]] static jobject get_field_OCEAN_MONUMENT_WING_ROOM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("X", "OCEAN_MONUMENT_WING_ROOM", "field_16957", "OCEAN_MONUMENT_WING_ROOM", "f_210118_"), "Leki;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.structure.StructurePieceType#OCEAN_MONUMENT_WING_ROOM
    [[maybe_unused]] static void set_field_OCEAN_MONUMENT_WING_ROOM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("X", "OCEAN_MONUMENT_WING_ROOM", "field_16957", "OCEAN_MONUMENT_WING_ROOM", "f_210118_"), "Leki;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.structure.StructurePieceType#END_CITY
    [[maybe_unused]] static jobject get_field_END_CITY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Y", "END_CITY_PIECE", "field_16936", "END_CITY", "f_210119_"), "Leki;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.structure.StructurePieceType#END_CITY
    [[maybe_unused]] static void set_field_END_CITY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Y", "END_CITY_PIECE", "field_16936", "END_CITY", "f_210119_"), "Leki;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.structure.StructurePieceType#WOODLAND_MANSION
    [[maybe_unused]] static jobject get_field_WOODLAND_MANSION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Z", "WOODLAND_MANSION_PIECE", "field_16907", "WOODLAND_MANSION", "f_210120_"), "Leki;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.structure.StructurePieceType#WOODLAND_MANSION
    [[maybe_unused]] static void set_field_WOODLAND_MANSION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Z", "WOODLAND_MANSION_PIECE", "field_16907", "WOODLAND_MANSION", "f_210120_"), "Leki;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.structure.StructurePieceType#BURIED_TREASURE
    [[maybe_unused]] static jobject get_field_BURIED_TREASURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aa", "BURIED_TREASURE_PIECE", "field_16960", "BURIED_TREASURE", "f_210122_"), "Leki;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.structure.StructurePieceType#BURIED_TREASURE
    [[maybe_unused]] static void set_field_BURIED_TREASURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aa", "BURIED_TREASURE_PIECE", "field_16960", "BURIED_TREASURE", "f_210122_"), "Leki;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.structure.StructurePieceType#SHIPWRECK
    [[maybe_unused]] static jobject get_field_SHIPWRECK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ab", "SHIPWRECK_PIECE", "field_16935", "SHIPWRECK", "f_210123_"), "Leki;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.structure.StructurePieceType#SHIPWRECK
    [[maybe_unused]] static void set_field_SHIPWRECK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ab", "SHIPWRECK_PIECE", "field_16935", "SHIPWRECK", "f_210123_"), "Leki;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.structure.StructurePieceType#NETHER_FOSSIL
    [[maybe_unused]] static jobject get_field_NETHER_FOSSIL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ac", "NETHER_FOSSIL", "field_22195", "NETHER_FOSSIL", "f_210124_"), "Leki;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.structure.StructurePieceType#NETHER_FOSSIL
    [[maybe_unused]] static void set_field_NETHER_FOSSIL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ac", "NETHER_FOSSIL", "field_22195", "NETHER_FOSSIL", "f_210124_"), "Leki;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.structure.StructurePieceType#JIGSAW
    [[maybe_unused]] static jobject get_field_JIGSAW() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ad", "JIGSAW", "field_25840", "JIGSAW", "f_210125_"), "Leki;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.structure.StructurePieceType#JIGSAW
    [[maybe_unused]] static void set_field_JIGSAW(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ad", "JIGSAW", "field_25840", "JIGSAW", "f_210125_"), "Leki;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_load() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("load", "load", "load", "load", "m_207333_"), "(Lekh;Lub;)Lejv;");
    }

    static jobject load(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_load();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_register() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "setFullContextPieceId", "method_38692", "register", "m_210158_"), "(Leki;Ljava/lang/String;)Leki;");
    }

    static jobject register(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_register();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__register() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "setPieceId", "method_16813", "register", "m_210152_"), "(Leki$a;Ljava/lang/String;)Leki;");
    }

    static jobject _register(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID__register();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID___register() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "setTemplatePieceId", "method_38691", "register", "m_210155_"), "(Leki$b;Ljava/lang/String;)Leki;");
    }

    static jobject __register(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID___register();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_STRUCTURE_STRUCTUREPIECETYPE_HPP