// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_STRUCTURE_STRONGHOLDGENERATOR$PIECEDATA_HPP
#define NET_MINECRAFT_STRUCTURE_STRONGHOLDGENERATOR$PIECEDATA_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.structure.StrongholdGenerator$PieceData
 * Remapped: emj$f
 */
namespace StrongholdGenerator$PieceData {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("emj$f", "net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$PieceWeight", "net/minecraft/class_3421$class_3427", "net/minecraft/structure/StrongholdGenerator$PieceData", "net/minecraft/src/C_213268_$C_213277_"));
        }
        return cachedClass;
    };

    // getter for public field net.minecraft.structure.StrongholdGenerator$PieceData#pieceType
    static jobject get_field_pieceType(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "pieceClass", "field_15276", "pieceType", "f_229614_"), "Ljava/lang/Class;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.structure.StrongholdGenerator$PieceData#pieceType
    static void set_field_pieceType(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "pieceClass", "field_15276", "pieceType", "f_229614_"), "Ljava/lang/Class;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.structure.StrongholdGenerator$PieceData#weight
    static jint get_field_weight(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "weight", "field_15278", "weight", "f_229615_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static public field net.minecraft.structure.StrongholdGenerator$PieceData#weight
    static void set_field_weight(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "weight", "field_15278", "weight", "f_229615_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.structure.StrongholdGenerator$PieceData#generatedCount
    static jint get_field_generatedCount(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "placeCount", "field_15277", "generatedCount", "f_229616_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static public field net.minecraft.structure.StrongholdGenerator$PieceData#generatedCount
    static void set_field_generatedCount(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "placeCount", "field_15277", "generatedCount", "f_229616_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.structure.StrongholdGenerator$PieceData#limit
    static jint get_field_limit(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "maxPlaceCount", "field_15275", "limit", "f_229617_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static public field net.minecraft.structure.StrongholdGenerator$PieceData#limit
    static void set_field_limit(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "maxPlaceCount", "field_15275", "limit", "f_229617_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    static jmethodID methodID_canGenerate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "doPlace", "method_14862", "canGenerate", "m_214198_"), "(I)Z");
    }

    static jboolean canGenerate(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_canGenerate();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__canGenerate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "isValid", "method_14861", "canGenerate", "m_229622_"), "()Z");
    }

    static jboolean _canGenerate(const jobject& obj) {
                
       const auto methodID = methodID__canGenerate();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_STRUCTURE_STRONGHOLDGENERATOR$PIECEDATA_HPP