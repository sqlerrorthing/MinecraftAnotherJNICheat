// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_STRUCTURE_POOL_STRUCTUREPOOL_HPP
#define NET_MINECRAFT_STRUCTURE_POOL_STRUCTUREPOOL_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.structure.pool.StructurePool
 * Remapped: elb
 */
namespace StructurePool {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("elb", "net/minecraft/world/level/levelgen/structure/pools/StructureTemplatePool", "net/minecraft/class_3785", "net/minecraft/structure/pool/StructurePool", "net/minecraft/src/C_207042_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.structure.pool.StructurePool#DEFAULT_Y
    [[maybe_unused]] static jint get_field_DEFAULT_Y() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "SIZE_UNSET", "field_31523", "DEFAULT_Y", "f_210557_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.structure.pool.StructurePool#DEFAULT_Y
    [[maybe_unused]] static void set_field_DEFAULT_Y(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "SIZE_UNSET", "field_31523", "DEFAULT_Y", "f_210557_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.structure.pool.StructurePool#FALLBACK
    [[maybe_unused]] static jobject get_field_FALLBACK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "CODEC_REFERENCE", "field_40925", "FALLBACK", "f_254652_"), "Lorg/apache/commons/lang3/mutable/MutableObject;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.structure.pool.StructurePool#FALLBACK
    [[maybe_unused]] static void set_field_FALLBACK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "CODEC_REFERENCE", "field_40925", "FALLBACK", "f_254652_"), "Lorg/apache/commons/lang3/mutable/MutableObject;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.structure.pool.StructurePool#CODEC
    [[maybe_unused]] static jobject get_field_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "DIRECT_CODEC", "field_25853", "CODEC", "f_210554_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.structure.pool.StructurePool#CODEC
    [[maybe_unused]] static void set_field_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "DIRECT_CODEC", "field_25853", "CODEC", "f_210554_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.structure.pool.StructurePool#REGISTRY_CODEC
    [[maybe_unused]] static jobject get_field_REGISTRY_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "CODEC", "field_24954", "REGISTRY_CODEC", "f_210555_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.structure.pool.StructurePool#REGISTRY_CODEC
    [[maybe_unused]] static void set_field_REGISTRY_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "CODEC", "field_24954", "REGISTRY_CODEC", "f_210555_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.structure.pool.StructurePool#elementCounts
    static jobject get_field_elementCounts(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "rawTemplates", "field_16864", "elementCounts", "f_210559_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.structure.pool.StructurePool#elementCounts
    static void set_field_elementCounts(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "rawTemplates", "field_16864", "elementCounts", "f_210559_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.structure.pool.StructurePool#elements
    static jobject get_field_elements(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "templates", "field_16680", "elements", "f_210560_"), "Lit/unimi/dsi/fastutil/objects/ObjectArrayList;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.structure.pool.StructurePool#elements
    static void set_field_elements(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "templates", "field_16680", "elements", "f_210560_"), "Lit/unimi/dsi/fastutil/objects/ObjectArrayList;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.structure.pool.StructurePool#fallback
    static jobject get_field_fallback(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "fallback", "field_40926", "fallback", "f_210561_"), "Ljm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.structure.pool.StructurePool#fallback
    static void set_field_fallback(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "fallback", "field_40926", "fallback", "f_210561_"), "Ljm;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.structure.pool.StructurePool#highestY
    static jint get_field_highestY(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "maxSize", "field_18707", "highestY", "f_210562_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.structure.pool.StructurePool#highestY
    static void set_field_highestY(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "maxSize", "field_18707", "highestY", "f_210562_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    static jmethodID methodID_getHighestY() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getMaxSize", "method_19309", "getHighestY", "m_227357_"), "(Lenu;)I");
    }

    static jint getHighestY(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getHighestY();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getFallback() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getFallback", "method_46736", "getFallback", "m_254935_"), "()Ljm;");
    }

    static jobject getFallback(const jobject& obj) {
                
       const auto methodID = methodID_getFallback();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getRandomElement() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getRandomTemplate", "method_16631", "getRandomElement", "m_227355_"), "(Layw;)Lekz;");
    }

    static jobject getRandomElement(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getRandomElement();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getElementIndicesInRandomOrder() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getShuffledTemplates", "method_16633", "getElementIndicesInRandomOrder", "m_227362_"), "(Layw;)Ljava/util/List;");
    }

    static jobject getElementIndicesInRandomOrder(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getElementIndicesInRandomOrder();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getElementCount() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "size", "method_16632", "getElementCount", "m_210590_"), "()I");
    }

    static jint getElementCount(const jobject& obj) {
                
       const auto methodID = methodID_getElementCount();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_STRUCTURE_POOL_STRUCTUREPOOL_HPP