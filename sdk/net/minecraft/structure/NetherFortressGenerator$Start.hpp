// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_STRUCTURE_NETHERFORTRESSGENERATOR$START_HPP
#define NET_MINECRAFT_STRUCTURE_NETHERFORTRESSGENERATOR$START_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.structure.NetherFortressGenerator$Start
 * Remapped: elx$q
 */
namespace NetherFortressGenerator$Start {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("elx$q", "net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$StartPiece", "net/minecraft/class_3390$class_3407", "net/minecraft/structure/NetherFortressGenerator$Start", "net/minecraft/src/C_213207_$C_213225_"));
        }
        return cachedClass;
    };

    // getter for public field net.minecraft.structure.NetherFortressGenerator$Start#lastPiece
    static jobject get_field_lastPiece(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "previousPiece", "field_14506", "lastPiece", "f_228507_"), "Lelx$n;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.structure.NetherFortressGenerator$Start#lastPiece
    static void set_field_lastPiece(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "previousPiece", "field_14506", "lastPiece", "f_228507_"), "Lelx$n;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.structure.NetherFortressGenerator$Start#bridgePieces
    static jobject get_field_bridgePieces(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "availableBridgePieces", "field_14507", "bridgePieces", "f_228508_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.structure.NetherFortressGenerator$Start#bridgePieces
    static void set_field_bridgePieces(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "availableBridgePieces", "field_14507", "bridgePieces", "f_228508_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.structure.NetherFortressGenerator$Start#corridorPieces
    static jobject get_field_corridorPieces(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "availableCastlePieces", "field_14504", "corridorPieces", "f_228509_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.structure.NetherFortressGenerator$Start#corridorPieces
    static void set_field_corridorPieces(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "availableCastlePieces", "field_14504", "corridorPieces", "f_228509_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.structure.NetherFortressGenerator$Start#pieces
    static jobject get_field_pieces(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "pendingChildren", "field_14505", "pieces", "f_228510_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static public field net.minecraft.structure.NetherFortressGenerator$Start#pieces
    static void set_field_pieces(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "pendingChildren", "field_14505", "pieces", "f_228510_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

};

#endif // NET_MINECRAFT_STRUCTURE_NETHERFORTRESSGENERATOR$START_HPP