// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_STRUCTURE_NETHERFORTRESSGENERATOR$PIECE_HPP
#define NET_MINECRAFT_STRUCTURE_NETHERFORTRESSGENERATOR$PIECE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.structure.NetherFortressGenerator$Piece
 * Remapped: elx$m
 */
namespace NetherFortressGenerator$Piece {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("elx$m", "net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$NetherBridgePiece", "net/minecraft/class_3390$class_3403", "net/minecraft/structure/NetherFortressGenerator$Piece", "net/minecraft/src/C_213207_$C_213221_"));
        }
        return cachedClass;
    };

    static jmethodID methodID_writeNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "addAdditionalSaveData", "method_14943", "writeNbt", "m_183620_"), "(Lekh;Lub;)V");
    }

    static void writeNbt(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_writeNbt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_checkRemainingPieces() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "updatePieceWeight", "method_14810", "checkRemainingPieces", "m_228418_"), "(Ljava/util/List;)I");
    }

    static jint checkRemainingPieces(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_checkRemainingPieces();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_pickPiece() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "generatePiece", "method_14811", "pickPiece", "m_228408_"), "(Lelx$q;Ljava/util/List;Lejw;Layw;IIILji;I)Lelx$m;");
    }

    static jobject pickPiece(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jint& arg4, const jint& arg5, const jint& arg6, const jobject& arg7, const jint& arg8) {
                
       const auto methodID = methodID_pickPiece();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8);
    };
    
    static jmethodID methodID_pieceGenerator() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "generateAndAddPiece", "method_14813", "pieceGenerator", "m_228391_"), "(Lelx$q;Lejw;Layw;IIILji;IZ)Lejv;");
    }

    static jobject pieceGenerator(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jint& arg3, const jint& arg4, const jint& arg5, const jobject& arg6, const jint& arg7, const jboolean& arg8) {
                
       const auto methodID = methodID_pieceGenerator();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8);
    };
    
    static jmethodID methodID_fillForwardOpening() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "generateChildForward", "method_14814", "fillForwardOpening", "m_228401_"), "(Lelx$q;Lejw;Layw;IIZ)Lejv;");
    }

    static jobject fillForwardOpening(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jint& arg3, const jint& arg4, const jboolean& arg5) {
                
       const auto methodID = methodID_fillForwardOpening();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5);
    };
    
    static jmethodID methodID_fillNWOpening() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "generateChildLeft", "method_14812", "fillNWOpening", "m_228420_"), "(Lelx$q;Lejw;Layw;IIZ)Lejv;");
    }

    static jobject fillNWOpening(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jint& arg3, const jint& arg4, const jboolean& arg5) {
                
       const auto methodID = methodID_fillNWOpening();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5);
    };
    
    static jmethodID methodID_fillSEOpening() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "generateChildRight", "method_14808", "fillSEOpening", "m_228427_"), "(Lelx$q;Lejw;Layw;IIZ)Lejv;");
    }

    static jobject fillSEOpening(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jint& arg3, const jint& arg4, const jboolean& arg5) {
                
       const auto methodID = methodID_fillSEOpening();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5);
    };
    
    static jmethodID methodID_isInBounds() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "isOkBox", "method_14809", "isInBounds", "m_228386_"), "(Lejj;)Z");
    }

    static jboolean isInBounds(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_isInBounds();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_STRUCTURE_NETHERFORTRESSGENERATOR$PIECE_HPP