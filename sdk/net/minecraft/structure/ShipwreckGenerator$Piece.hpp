// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_STRUCTURE_SHIPWRECKGENERATOR$PIECE_HPP
#define NET_MINECRAFT_STRUCTURE_SHIPWRECKGENERATOR$PIECE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.structure.ShipwreckGenerator$Piece
 * Remapped: emh$a
 */
namespace ShipwreckGenerator$Piece {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("emh$a", "net/minecraft/world/level/levelgen/structure/structures/ShipwreckPieces$ShipwreckPiece", "net/minecraft/class_3415$class_3416", "net/minecraft/structure/ShipwreckGenerator$Piece", "net/minecraft/src/C_213265_$C_213266_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.structure.ShipwreckGenerator$Piece#grounded
    static jboolean get_field_grounded(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "isBeached", "field_14538", "grounded", "f_229352_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.structure.ShipwreckGenerator$Piece#grounded
    static void set_field_grounded(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "isBeached", "field_14538", "grounded", "f_229352_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    static jmethodID methodID_writeNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "addAdditionalSaveData", "method_14943", "writeNbt", "m_183620_"), "(Lekh;Lub;)V");
    }

    static void writeNbt(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_writeNbt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_createPlacementData() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "makeSettings", "method_35452", "createPlacementData", "m_229370_"), "(Ldmm;)Lenp;");
    }

    static jobject createPlacementData(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_createPlacementData();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_handleMetadata() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "handleDataMarker", "method_15026", "handleMetadata", "m_213704_"), "(Ljava/lang/String;Ljd;Lddl;Layw;Lejj;)V");
    }

    static void handleMetadata(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jobject& arg4) {
                
       const auto methodID = methodID_handleMetadata();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_generate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "postProcess", "method_14931", "generate", "m_213694_"), "(Ldds;Lddq;Lduz;Layw;Lejj;Ldcd;Ljd;)V");
    }

    static void generate(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jobject& arg4, const jobject& arg5, const jobject& arg6) {
                
       const auto methodID = methodID_generate();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6);
    };
    
    static jmethodID methodID_isTooLargeForNormalGeneration() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("l", "isTooBigToFitInWorldGenRegion", "method_59867", "isTooLargeForNormalGeneration", "m_320364_"), "()Z");
    }

    static jboolean isTooLargeForNormalGeneration(const jobject& obj) {
                
       const auto methodID = methodID_isTooLargeForNormalGeneration();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_findGroundedY() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "calculateBeachedPosition", "method_59865", "findGroundedY", "m_318620_"), "(ILayw;)I");
    }

    static jint findGroundedY(const jobject& obj, const jint& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_findGroundedY();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_setY() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "adjustPositionHeight", "method_59866", "setY", "m_321530_"), "(I)V");
    }

    static void setY(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_setY();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_STRUCTURE_SHIPWRECKGENERATOR$PIECE_HPP