// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_STRUCTURE_STRUCTUREPIECE_HPP
#define NET_MINECRAFT_STRUCTURE_STRUCTUREPIECE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.structure.StructurePiece
 * Remapped: ejv
 */
namespace StructurePiece {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("ejv", "net/minecraft/world/level/levelgen/structure/StructurePiece", "net/minecraft/class_3443", "net/minecraft/structure/StructurePiece", "net/minecraft/src/C_2585_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.structure.StructurePiece#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LOGGER", "field_29327", "LOGGER", "f_163536_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.structure.StructurePiece#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LOGGER", "field_29327", "LOGGER", "f_163536_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static protected field net.minecraft.structure.StructurePiece#AIR
    [[maybe_unused]] static jobject get_field_AIR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "CAVE_AIR", "field_15314", "AIR", "f_73382_"), "Ldtc;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static protected field net.minecraft.structure.StructurePiece#AIR
    [[maybe_unused]] static void set_field_AIR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "CAVE_AIR", "field_15314", "AIR", "f_73382_"), "Ldtc;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for protected field net.minecraft.structure.StructurePiece#boundingBox
    static jobject get_field_boundingBox(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "boundingBox", "field_15315", "boundingBox", "f_73383_"), "Lejj;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.structure.StructurePiece#boundingBox
    static void set_field_boundingBox(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "boundingBox", "field_15315", "boundingBox", "f_73383_"), "Lejj;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.structure.StructurePiece#facing
    static jobject get_field_facing(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "orientation", "field_15312", "facing", "f_73377_"), "Lji;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.structure.StructurePiece#facing
    static void set_field_facing(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "orientation", "field_15312", "facing", "f_73377_"), "Lji;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.structure.StructurePiece#mirror
    static jobject get_field_mirror(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "mirror", "field_15310", "mirror", "f_73378_"), "Ldkv;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.structure.StructurePiece#mirror
    static void set_field_mirror(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "mirror", "field_15310", "mirror", "f_73378_"), "Ldkv;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.structure.StructurePiece#rotation
    static jobject get_field_rotation(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "rotation", "field_15313", "rotation", "f_73379_"), "Ldmm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.structure.StructurePiece#rotation
    static void set_field_rotation(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "rotation", "field_15313", "rotation", "f_73379_"), "Ldmm;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.structure.StructurePiece#chainLength
    static jint get_field_chainLength(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "genDepth", "field_15316", "chainLength", "f_73384_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.structure.StructurePiece#chainLength
    static void set_field_chainLength(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "genDepth", "field_15316", "chainLength", "f_73384_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.structure.StructurePiece#type
    static jobject get_field_type(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "type", "field_16712", "type", "f_73380_"), "Leki;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.structure.StructurePiece#type
    static void set_field_type(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "type", "field_16712", "type", "f_73380_"), "Leki;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for static private field net.minecraft.structure.StructurePiece#BLOCKS_NEEDING_POST_PROCESSING
    [[maybe_unused]] static jobject get_field_BLOCKS_NEEDING_POST_PROCESSING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "SHAPE_CHECK_BLOCKS", "field_15311", "BLOCKS_NEEDING_POST_PROCESSING", "f_73381_"), "Ljava/util/Set;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.structure.StructurePiece#BLOCKS_NEEDING_POST_PROCESSING
    [[maybe_unused]] static void set_field_BLOCKS_NEEDING_POST_PROCESSING(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "SHAPE_CHECK_BLOCKS", "field_15311", "BLOCKS_NEEDING_POST_PROCESSING", "f_73381_"), "Ljava/util/Set;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_createBox() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "makeBoundingBox", "method_35454", "createBox", "m_163541_"), "(IIILji;III)Lejj;");
    }

    static jobject createBox(const jint& arg0, const jint& arg1, const jint& arg2, const jobject& arg3, const jint& arg4, const jint& arg5, const jint& arg6) {
       const auto clazz = self();
       const auto methodID = methodID_createBox();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6);
    };
    
    static jmethodID methodID_getRandomHorizontalDirection() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getRandomHorizontalDirection", "method_35457", "getRandomHorizontalDirection", "m_226760_"), "(Layw;)Lji;");
    }

    static jobject getRandomHorizontalDirection(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getRandomHorizontalDirection();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_toNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "createTag", "method_14946", "toNbt", "m_192644_"), "(Lekh;)Lub;");
    }

    static jobject toNbt(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_toNbt();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_writeNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "addAdditionalSaveData", "method_14943", "writeNbt", "m_183620_"), "(Lekh;Lub;)V");
    }

    static void writeNbt(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_writeNbt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_fillOpenings() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "addChildren", "method_14918", "fillOpenings", "m_214092_"), "(Lejv;Lejw;Layw;)V");
    }

    static void fillOpenings(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_fillOpenings();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_generate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "postProcess", "method_14931", "generate", "m_213694_"), "(Ldds;Lddq;Lduz;Layw;Lejj;Ldcd;Ljd;)V");
    }

    static void generate(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jobject& arg4, const jobject& arg5, const jobject& arg6) {
                
       const auto methodID = methodID_generate();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6);
    };
    
    static jmethodID methodID_getBoundingBox() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "getBoundingBox", "method_14935", "getBoundingBox", "m_73547_"), "()Lejj;");
    }

    static jobject getBoundingBox(const jobject& obj) {
                
       const auto methodID = methodID_getBoundingBox();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getChainLength() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "getGenDepth", "method_14923", "getChainLength", "m_73548_"), "()I");
    }

    static jint getChainLength(const jobject& obj) {
                
       const auto methodID = methodID_getChainLength();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_setChainLength() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setGenDepth", "method_41620", "setChainLength", "m_226758_"), "(I)V");
    }

    static void setChainLength(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_setChainLength();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_intersectsChunk() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "isCloseToChunk", "method_16654", "intersectsChunk", "m_73411_"), "(Ldcd;I)Z");
    }

    static jboolean intersectsChunk(const jobject& obj, const jobject& arg0, const jint& arg1) {
                
       const auto methodID = methodID_intersectsChunk();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getCenter() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "getLocatorPosition", "method_35458", "getCenter", "m_142171_"), "()Ljd;");
    }

    static jobject getCenter(const jobject& obj) {
                
       const auto methodID = methodID_getCenter();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_offsetPos() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getWorldPos", "method_33781", "offsetPos", "m_163582_"), "(III)Ljd$a;");
    }

    static jobject offsetPos(const jobject& obj, const jint& arg0, const jint& arg1, const jint& arg2) {
                
       const auto methodID = methodID_offsetPos();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_applyXTransform() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getWorldX", "method_14928", "applyXTransform", "m_73392_"), "(II)I");
    }

    static jint applyXTransform(const jobject& obj, const jint& arg0, const jint& arg1) {
                
       const auto methodID = methodID_applyXTransform();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_applyYTransform() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getWorldY", "method_14924", "applyYTransform", "m_73544_"), "(I)I");
    }

    static jint applyYTransform(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_applyYTransform();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_applyZTransform() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getWorldZ", "method_14941", "applyZTransform", "m_73525_"), "(II)I");
    }

    static jint applyZTransform(const jobject& obj, const jint& arg0, const jint& arg1) {
                
       const auto methodID = methodID_applyZTransform();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_addBlock() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "placeBlock", "method_14917", "addBlock", "m_73434_"), "(Ldds;Ldtc;IIILejj;)V");
    }

    static void addBlock(const jobject& obj, const jobject& arg0, const jobject& arg1, const jint& arg2, const jint& arg3, const jint& arg4, const jobject& arg5) {
                
       const auto methodID = methodID_addBlock();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5);
    };
    
    static jmethodID methodID_canAddBlock() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "canBeReplaced", "method_33780", "canAddBlock", "m_142085_"), "(Ldcz;IIILejj;)Z");
    }

    static jboolean canAddBlock(const jobject& obj, const jobject& arg0, const jint& arg1, const jint& arg2, const jint& arg3, const jobject& arg4) {
                
       const auto methodID = methodID_canAddBlock();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_getBlockAt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getBlock", "method_14929", "getBlockAt", "m_73398_"), "(Ldcc;IIILejj;)Ldtc;");
    }

    static jobject getBlockAt(const jobject& obj, const jobject& arg0, const jint& arg1, const jint& arg2, const jint& arg3, const jobject& arg4) {
                
       const auto methodID = methodID_getBlockAt();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_isUnderSeaLevel() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "isInterior", "method_14939", "isUnderSeaLevel", "m_73414_"), "(Ldcz;IIILejj;)Z");
    }

    static jboolean isUnderSeaLevel(const jobject& obj, const jobject& arg0, const jint& arg1, const jint& arg2, const jint& arg3, const jobject& arg4) {
                
       const auto methodID = methodID_isUnderSeaLevel();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_fill() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "generateAirBox", "method_14942", "fill", "m_73535_"), "(Ldds;Lejj;IIIIII)V");
    }

    static void fill(const jobject& obj, const jobject& arg0, const jobject& arg1, const jint& arg2, const jint& arg3, const jint& arg4, const jint& arg5, const jint& arg6, const jint& arg7) {
                
       const auto methodID = methodID_fill();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
    };
    
    static jmethodID methodID_fillWithOutline() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "generateBox", "method_14940", "fillWithOutline", "m_73441_"), "(Ldds;Lejj;IIIIIILdtc;Ldtc;Z)V");
    }

    static void fillWithOutline(const jobject& obj, const jobject& arg0, const jobject& arg1, const jint& arg2, const jint& arg3, const jint& arg4, const jint& arg5, const jint& arg6, const jint& arg7, const jobject& arg8, const jobject& arg9, const jboolean& arg10) {
                
       const auto methodID = methodID_fillWithOutline();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10);
    };
    
    static jmethodID methodID__fillWithOutline() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "generateBox", "method_35455", "fillWithOutline", "m_163558_"), "(Ldds;Lejj;Lejj;Ldtc;Ldtc;Z)V");
    }

    static void _fillWithOutline(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jobject& arg4, const jboolean& arg5) {
                
       const auto methodID = methodID__fillWithOutline();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5);
    };
    
    static jmethodID methodID___fillWithOutline() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "generateBox", "method_14938", "fillWithOutline", "m_226776_"), "(Ldds;Lejj;IIIIIIZLayw;Lejv$a;)V");
    }

    static void __fillWithOutline(const jobject& obj, const jobject& arg0, const jobject& arg1, const jint& arg2, const jint& arg3, const jint& arg4, const jint& arg5, const jint& arg6, const jint& arg7, const jboolean& arg8, const jobject& arg9, const jobject& arg10) {
                
       const auto methodID = methodID___fillWithOutline();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10);
    };
    
    static jmethodID methodID____fillWithOutline() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "generateBox", "method_35456", "fillWithOutline", "m_226828_"), "(Ldds;Lejj;Lejj;ZLayw;Lejv$a;)V");
    }

    static void ___fillWithOutline(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jboolean& arg3, const jobject& arg4, const jobject& arg5) {
                
       const auto methodID = methodID____fillWithOutline();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5);
    };
    
    static jmethodID methodID_fillWithOutlineUnderSeaLevel() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "generateMaybeBox", "method_14933", "fillWithOutlineUnderSeaLevel", "m_226788_"), "(Ldds;Lejj;Layw;FIIIIIILdtc;Ldtc;ZZ)V");
    }

    static void fillWithOutlineUnderSeaLevel(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jfloat& arg3, const jint& arg4, const jint& arg5, const jint& arg6, const jint& arg7, const jint& arg8, const jint& arg9, const jobject& arg10, const jobject& arg11, const jboolean& arg12, const jboolean& arg13) {
                
       const auto methodID = methodID_fillWithOutlineUnderSeaLevel();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13);
    };
    
    static jmethodID methodID_addBlockWithRandomThreshold() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "maybeGenerateBlock", "method_14945", "addBlockWithRandomThreshold", "m_226803_"), "(Ldds;Lejj;Layw;FIIILdtc;)V");
    }

    static void addBlockWithRandomThreshold(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jfloat& arg3, const jint& arg4, const jint& arg5, const jint& arg6, const jobject& arg7) {
                
       const auto methodID = methodID_addBlockWithRandomThreshold();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
    };
    
    static jmethodID methodID_fillHalfEllipsoid() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "generateUpperHalfSphere", "method_14919", "fillHalfEllipsoid", "m_73453_"), "(Ldds;Lejj;IIIIIILdtc;Z)V");
    }

    static void fillHalfEllipsoid(const jobject& obj, const jobject& arg0, const jobject& arg1, const jint& arg2, const jint& arg3, const jint& arg4, const jint& arg5, const jint& arg6, const jint& arg7, const jobject& arg8, const jboolean& arg9) {
                
       const auto methodID = methodID_fillHalfEllipsoid();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9);
    };
    
    static jmethodID methodID_fillDownwards() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "fillColumnDown", "method_14936", "fillDownwards", "m_73528_"), "(Ldds;Ldtc;IIILejj;)V");
    }

    static void fillDownwards(const jobject& obj, const jobject& arg0, const jobject& arg1, const jint& arg2, const jint& arg3, const jint& arg4, const jobject& arg5) {
                
       const auto methodID = methodID_fillDownwards();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5);
    };
    
    static jmethodID methodID_canReplace() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "isReplaceableByStructures", "method_33881", "canReplace", "m_163572_"), "(Ldtc;)Z");
    }

    static jboolean canReplace(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_canReplace();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_addChest() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "createChest", "method_14915", "addChest", "m_213787_"), "(Ldds;Lejj;Layw;IIILakq;)Z");
    }

    static jboolean addChest(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jint& arg3, const jint& arg4, const jint& arg5, const jobject& arg6) {
                
       const auto methodID = methodID_addChest();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6);
    };
    
    static jmethodID methodID_orientateChest() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "reorient", "method_14916", "orientateChest", "m_73407_"), "(Ldcc;Ljd;Ldtc;)Ldtc;");
    }

    static jobject orientateChest(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_orientateChest();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID__addChest() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "createChest", "method_14921", "addChest", "m_226762_"), "(Lddl;Lejj;Layw;Ljd;Lakq;Ldtc;)Z");
    }

    static jboolean _addChest(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jobject& arg4, const jobject& arg5) {
                
       const auto methodID = methodID__addChest();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5);
    };
    
    static jmethodID methodID_addDispenser() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "createDispenser", "method_14930", "addDispenser", "m_226819_"), "(Ldds;Lejj;Layw;IIILji;Lakq;)Z");
    }

    static jboolean addDispenser(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jint& arg3, const jint& arg4, const jint& arg5, const jobject& arg6, const jobject& arg7) {
                
       const auto methodID = methodID_addDispenser();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
    };
    
    static jmethodID methodID_translate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "move", "method_14922", "translate", "m_6324_"), "(III)V");
    }

    static void translate(const jobject& obj, const jint& arg0, const jint& arg1, const jint& arg2) {
                
       const auto methodID = methodID_translate();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID__boundingBox() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "createBoundingBox", "method_38703", "boundingBox", "m_192651_"), "(Ljava/util/stream/Stream;)Lejj;");
    }

    static jobject _boundingBox(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID__boundingBox();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_firstIntersecting() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "findCollisionPiece", "method_38702", "firstIntersecting", "m_192648_"), "(Ljava/util/List;Lejj;)Lejv;");
    }

    static jobject firstIntersecting(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_firstIntersecting();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getFacing() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("i", "getOrientation", "method_14934", "getFacing", "m_73549_"), "()Lji;");
    }

    static jobject getFacing(const jobject& obj) {
                
       const auto methodID = methodID_getFacing();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_setOrientation() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setOrientation", "method_14926", "setOrientation", "m_73519_"), "(Lji;)V");
    }

    static void setOrientation(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setOrientation();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getRotation() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getRotation", "method_16888", "getRotation", "m_6830_"), "()Ldmm;");
    }

    static jobject getRotation(const jobject& obj) {
                
       const auto methodID = methodID_getRotation();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getMirror() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("j", "getMirror", "method_35460", "getMirror", "m_163587_"), "()Ldkv;");
    }

    static jobject getMirror(const jobject& obj) {
                
       const auto methodID = methodID_getMirror();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getType() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("k", "getType", "method_16653", "getType", "m_210000_"), "()Leki;");
    }

    static jobject getType(const jobject& obj) {
                
       const auto methodID = methodID_getType();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_STRUCTURE_STRUCTUREPIECE_HPP