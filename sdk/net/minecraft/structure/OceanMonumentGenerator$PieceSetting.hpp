// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_STRUCTURE_OCEANMONUMENTGENERATOR$PIECESETTING_HPP
#define NET_MINECRAFT_STRUCTURE_OCEANMONUMENTGENERATOR$PIECESETTING_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.structure.OceanMonumentGenerator$PieceSetting
 * Remapped: emb$v
 */
namespace OceanMonumentGenerator$PieceSetting {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("emb$v", "net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$RoomDefinition", "net/minecraft/class_3366$class_3388", "net/minecraft/structure/OceanMonumentGenerator$PieceSetting", "net/minecraft/src/C_213230_$C_213253_"));
        }
        return cachedClass;
    };

    // getter for default field net.minecraft.structure.OceanMonumentGenerator$PieceSetting#roomIndex
    static jint get_field_roomIndex(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "index", "field_14486", "roomIndex", "f_228936_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static default field net.minecraft.structure.OceanMonumentGenerator$PieceSetting#roomIndex
    static void set_field_roomIndex(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "index", "field_14486", "roomIndex", "f_228936_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.structure.OceanMonumentGenerator$PieceSetting#neighbors
    static jobject get_field_neighbors(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "connections", "field_14487", "neighbors", "f_228937_"), "[Lemb$v;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.structure.OceanMonumentGenerator$PieceSetting#neighbors
    static void set_field_neighbors(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "connections", "field_14487", "neighbors", "f_228937_"), "[Lemb$v;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.structure.OceanMonumentGenerator$PieceSetting#neighborPresences
    static jboolean get_field_neighborPresences(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "hasOpening", "field_14482", "neighborPresences", "f_228938_"), "[Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static default field net.minecraft.structure.OceanMonumentGenerator$PieceSetting#neighborPresences
    static void set_field_neighborPresences(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "hasOpening", "field_14482", "neighborPresences", "f_228938_"), "[Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.structure.OceanMonumentGenerator$PieceSetting#used
    static jboolean get_field_used(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "claimed", "field_14485", "used", "f_228939_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static default field net.minecraft.structure.OceanMonumentGenerator$PieceSetting#used
    static void set_field_used(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "claimed", "field_14485", "used", "f_228939_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.structure.OceanMonumentGenerator$PieceSetting#field_14484
    static jboolean get_field_field_14484(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "isSource", "field_14484", "field_14484", "f_228940_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static default field net.minecraft.structure.OceanMonumentGenerator$PieceSetting#field_14484
    static void set_field_field_14484(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "isSource", "field_14484", "field_14484", "f_228940_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.structure.OceanMonumentGenerator$PieceSetting#field_14483
    static jint get_field_field_14483(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "scanIndex", "field_14483", "field_14483", "f_228941_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.structure.OceanMonumentGenerator$PieceSetting#field_14483
    static void set_field_field_14483(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "scanIndex", "field_14483", "field_14483", "f_228941_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    static jmethodID methodID_setNeighbor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setConnection", "method_14786", "setNeighbor", "m_228947_"), "(Lji;Lemb$v;)V");
    }

    static void setNeighbor(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_setNeighbor();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_checkNeighborStates() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "updateOpenings", "method_14780", "checkNeighborStates", "m_228944_"), "()V");
    }

    static void checkNeighborStates(const jobject& obj) {
                
       const auto methodID = methodID_checkNeighborStates();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_method_14783() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "findSource", "method_14783", "method_14783", "m_228945_"), "(I)Z");
    }

    static jboolean method_14783(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_method_14783();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isAboveLevelThree() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "isSpecial", "method_14785", "isAboveLevelThree", "m_228950_"), "()Z");
    }

    static jboolean isAboveLevelThree(const jobject& obj) {
                
       const auto methodID = methodID_isAboveLevelThree();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_countNeighbors() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "countOpenings", "method_14781", "countNeighbors", "m_228951_"), "()I");
    }

    static jint countNeighbors(const jobject& obj) {
                
       const auto methodID = methodID_countNeighbors();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_STRUCTURE_OCEANMONUMENTGENERATOR$PIECESETTING_HPP