// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_STRUCTURE_STRUCTUREPIECESHOLDER_HPP
#define NET_MINECRAFT_STRUCTURE_STRUCTUREPIECESHOLDER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.structure.StructurePiecesHolder
 * Remapped: ejw
 */
namespace StructurePiecesHolder {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("ejw", "net/minecraft/world/level/levelgen/structure/StructurePieceAccessor", "net/minecraft/class_6130", "net/minecraft/structure/StructurePiecesHolder", "net/minecraft/src/C_141423_"));
        }
        return cachedClass;
    };

    static jmethodID methodID_addPiece() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "addPiece", "method_35462", "addPiece", "m_142679_"), "(Lejv;)V");
    }

    static void addPiece(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_addPiece();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getIntersecting() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "findCollisionPiece", "method_35461", "getIntersecting", "m_141921_"), "(Lejj;)Lejv;");
    }

    static jobject getIntersecting(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getIntersecting();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_STRUCTURE_STRUCTUREPIECESHOLDER_HPP