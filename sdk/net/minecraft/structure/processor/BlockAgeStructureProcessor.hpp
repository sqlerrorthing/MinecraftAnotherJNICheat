// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_STRUCTURE_PROCESSOR_BLOCKAGESTRUCTUREPROCESSOR_HPP
#define NET_MINECRAFT_STRUCTURE_PROCESSOR_BLOCKAGESTRUCTUREPROCESSOR_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.structure.processor.BlockAgeStructureProcessor
 * Remapped: emt
 */
namespace BlockAgeStructureProcessor {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("emt", "net/minecraft/world/level/levelgen/structure/templatesystem/BlockAgeProcessor", "net/minecraft/class_5193", "net/minecraft/structure/processor/BlockAgeStructureProcessor", "net/minecraft/src/C_2608_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.structure.processor.BlockAgeStructureProcessor#CODEC
    [[maybe_unused]] static jobject get_field_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CODEC", "field_24997", "CODEC", "f_74009_"), "Lcom/mojang/serialization/MapCodec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.structure.processor.BlockAgeStructureProcessor#CODEC
    [[maybe_unused]] static void set_field_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CODEC", "field_24997", "CODEC", "f_74009_"), "Lcom/mojang/serialization/MapCodec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.structure.processor.BlockAgeStructureProcessor#field_31681
    [[maybe_unused]] static jfloat get_field_field_31681() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "PROBABILITY_OF_REPLACING_FULL_BLOCK", "field_31681", "field_31681", "f_163720_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.structure.processor.BlockAgeStructureProcessor#field_31681
    [[maybe_unused]] static void set_field_field_31681(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "PROBABILITY_OF_REPLACING_FULL_BLOCK", "field_31681", "field_31681", "f_163720_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.structure.processor.BlockAgeStructureProcessor#field_31682
    [[maybe_unused]] static jfloat get_field_field_31682() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "PROBABILITY_OF_REPLACING_STAIRS", "field_31682", "field_31682", "f_163721_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.structure.processor.BlockAgeStructureProcessor#field_31682
    [[maybe_unused]] static void set_field_field_31682(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "PROBABILITY_OF_REPLACING_STAIRS", "field_31682", "field_31682", "f_163721_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.structure.processor.BlockAgeStructureProcessor#field_31683
    [[maybe_unused]] static jfloat get_field_field_31683() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "PROBABILITY_OF_REPLACING_OBSIDIAN", "field_31683", "field_31683", "f_163722_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.structure.processor.BlockAgeStructureProcessor#field_31683
    [[maybe_unused]] static void set_field_field_31683(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "PROBABILITY_OF_REPLACING_OBSIDIAN", "field_31683", "field_31683", "f_163722_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.structure.processor.BlockAgeStructureProcessor#AGEABLE_SLABS
    [[maybe_unused]] static jobject get_field_AGEABLE_SLABS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "NON_MOSSY_REPLACEMENTS", "field_27338", "AGEABLE_SLABS", "f_163723_"), "[Ldtc;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.structure.processor.BlockAgeStructureProcessor#AGEABLE_SLABS
    [[maybe_unused]] static void set_field_AGEABLE_SLABS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "NON_MOSSY_REPLACEMENTS", "field_27338", "AGEABLE_SLABS", "f_163723_"), "[Ldtc;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.structure.processor.BlockAgeStructureProcessor#mossiness
    static jfloat get_field_mossiness(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "mossiness", "field_24042", "mossiness", "f_74010_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.structure.processor.BlockAgeStructureProcessor#mossiness
    static void set_field_mossiness(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "mossiness", "field_24042", "mossiness", "f_74010_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    static jmethodID methodID_process() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "processBlock", "method_15110", "process", "m_7382_"), "(Ldcz;Ljd;Ljd;Lent$c;Lent$c;Lenp;)Lent$c;");
    }

    static jobject process(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jobject& arg4, const jobject& arg5) {
                
       const auto methodID = methodID_process();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4, arg5);
    };
    
    static jmethodID methodID_processBlocks() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "maybeReplaceFullStoneBlock", "method_27256", "processBlocks", "m_230255_"), "(Layw;)Ldtc;");
    }

    static jobject processBlocks(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_processBlocks();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_processStairs() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "maybeReplaceStairs", "method_27258", "processStairs", "m_230260_"), "(Layw;Ldtc;)Ldtc;");
    }

    static jobject processStairs(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_processStairs();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_processSlabs() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "maybeReplaceSlab", "method_27261", "processSlabs", "m_230270_"), "(Layw;)Ldtc;");
    }

    static jobject processSlabs(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_processSlabs();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_processWalls() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "maybeReplaceWall", "method_27262", "processWalls", "m_230272_"), "(Layw;)Ldtc;");
    }

    static jobject processWalls(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_processWalls();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_processObsidian() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "maybeReplaceObsidian", "method_27263", "processObsidian", "m_230274_"), "(Layw;)Ldtc;");
    }

    static jobject processObsidian(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_processObsidian();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_randomStairProperties() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getRandomFacingStairs", "method_27257", "randomStairProperties", "m_230257_"), "(Layw;Ldfy;)Ldtc;");
    }

    static jobject randomStairProperties(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_randomStairProperties();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__process() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getRandomBlock", "method_27260", "process", "m_230266_"), "(Layw;[Ldtc;[Ldtc;)Ldtc;");
    }

    static jobject _process(const jobject& obj, const jobject& arg0, const jarray& arg1, const jobject& arg2, const jarray& arg3, const jobject& arg4) {
                
       const auto methodID = methodID__process();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_randomState() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getRandomBlock", "method_27259", "randomState", "m_230263_"), "(Layw;[Ldtc;)Ldtc;");
    }

    static jobject randomState(const jobject& arg0, const jarray& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_randomState();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_getType() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getType", "method_16772", "getType", "m_6953_"), "()Lens;");
    }

    static jobject getType(const jobject& obj) {
                
       const auto methodID = methodID_getType();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_STRUCTURE_PROCESSOR_BLOCKAGESTRUCTUREPROCESSOR_HPP