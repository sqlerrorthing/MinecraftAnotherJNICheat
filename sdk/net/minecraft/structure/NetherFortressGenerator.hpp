// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_STRUCTURE_NETHERFORTRESSGENERATOR_HPP
#define NET_MINECRAFT_STRUCTURE_NETHERFORTRESSGENERATOR_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.structure.NetherFortressGenerator
 * Remapped: elx
 */
namespace NetherFortressGenerator {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("elx", "net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces", "net/minecraft/class_3390", "net/minecraft/structure/NetherFortressGenerator", "net/minecraft/src/C_213207_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.structure.NetherFortressGenerator#field_31557
    [[maybe_unused]] static jint get_field_field_31557() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "MAX_DEPTH", "field_31557", "field_31557", "f_228001_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.structure.NetherFortressGenerator#field_31557
    [[maybe_unused]] static void set_field_field_31557(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "MAX_DEPTH", "field_31557", "field_31557", "f_228001_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.structure.NetherFortressGenerator#field_31558
    [[maybe_unused]] static jint get_field_field_31558() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "LOWEST_Y_POSITION", "field_31558", "field_31558", "f_228002_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.structure.NetherFortressGenerator#field_31558
    [[maybe_unused]] static void set_field_field_31558(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "LOWEST_Y_POSITION", "field_31558", "field_31558", "f_228002_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.structure.NetherFortressGenerator#field_34730
    [[maybe_unused]] static jint get_field_field_34730() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "MAGIC_START_Y", "field_34730", "field_34730", "f_228000_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.structure.NetherFortressGenerator#field_34730
    [[maybe_unused]] static void set_field_field_34730(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "MAGIC_START_Y", "field_34730", "field_34730", "f_228000_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static default field net.minecraft.structure.NetherFortressGenerator#ALL_BRIDGE_PIECES
    [[maybe_unused]] static jobject get_field_ALL_BRIDGE_PIECES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "BRIDGE_PIECE_WEIGHTS", "field_14494", "ALL_BRIDGE_PIECES", "f_228003_"), "[Lelx$n;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static default field net.minecraft.structure.NetherFortressGenerator#ALL_BRIDGE_PIECES
    [[maybe_unused]] static void set_field_ALL_BRIDGE_PIECES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "BRIDGE_PIECE_WEIGHTS", "field_14494", "ALL_BRIDGE_PIECES", "f_228003_"), "[Lelx$n;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static default field net.minecraft.structure.NetherFortressGenerator#ALL_CORRIDOR_PIECES
    [[maybe_unused]] static jobject get_field_ALL_CORRIDOR_PIECES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "CASTLE_PIECE_WEIGHTS", "field_14493", "ALL_CORRIDOR_PIECES", "f_228004_"), "[Lelx$n;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static default field net.minecraft.structure.NetherFortressGenerator#ALL_CORRIDOR_PIECES
    [[maybe_unused]] static void set_field_ALL_CORRIDOR_PIECES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "CASTLE_PIECE_WEIGHTS", "field_14493", "ALL_CORRIDOR_PIECES", "f_228004_"), "[Lelx$n;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_createPiece() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "findAndCreateBridgePieceFactory", "method_14795", "createPiece", "m_228007_"), "(Lelx$n;Lejw;Layw;IIILji;I)Lelx$m;");
    }

    static jobject createPiece(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jint& arg3, const jint& arg4, const jint& arg5, const jobject& arg6, const jint& arg7) {
       const auto clazz = self();
       const auto methodID = methodID_createPiece();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
    };
    
};

#endif // NET_MINECRAFT_STRUCTURE_NETHERFORTRESSGENERATOR_HPP