// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_STRUCTURE_STRUCTUREPIECESCOLLECTOR_HPP
#define NET_MINECRAFT_STRUCTURE_STRUCTUREPIECESCOLLECTOR_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.structure.StructurePiecesCollector
 * Remapped: ekj
 */
namespace StructurePiecesCollector {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("ekj", "net/minecraft/world/level/levelgen/structure/pieces/StructurePiecesBuilder", "net/minecraft/class_6626", "net/minecraft/structure/StructurePiecesCollector", "net/minecraft/src/C_183030_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.structure.StructurePiecesCollector#pieces
    static jobject get_field_pieces(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "pieces", "field_34944", "pieces", "f_192778_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.structure.StructurePiecesCollector#pieces
    static void set_field_pieces(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "pieces", "field_34944", "pieces", "f_192778_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_addPiece() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "addPiece", "method_35462", "addPiece", "m_142679_"), "(Lejv;)V");
    }

    static void addPiece(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_addPiece();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getIntersecting() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "findCollisionPiece", "method_35461", "getIntersecting", "m_141921_"), "(Lejj;)Lejv;");
    }

    static jobject getIntersecting(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getIntersecting();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_shift() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "offsetPiecesVertically", "method_38715", "shift", "m_192781_"), "(I)V");
    }

    static void shift(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_shift();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_shiftInto() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "moveBelowSeaLevel", "method_38716", "shiftInto", "m_226965_"), "(IILayw;I)I");
    }

    static jint shiftInto(const jobject& obj, const jint& arg0, const jint& arg1, const jobject& arg2, const jint& arg3) {
                
       const auto methodID = methodID_shiftInto();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID__shiftInto() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "moveInsideHeights", "method_38718", "shiftInto", "m_226970_"), "(Layw;II)V");
    }

    static void _shiftInto(const jobject& obj, const jobject& arg0, const jint& arg1, const jint& arg2) {
                
       const auto methodID = methodID__shiftInto();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_toList() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "build", "method_38714", "toList", "m_192780_"), "()Lekg;");
    }

    static jobject toList(const jobject& obj) {
                
       const auto methodID = methodID_toList();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_clear() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "clear", "method_38719", "clear", "m_192796_"), "()V");
    }

    static void clear(const jobject& obj) {
                
       const auto methodID = methodID_clear();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_isEmpty() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "isEmpty", "method_38720", "isEmpty", "m_192797_"), "()Z");
    }

    static jboolean isEmpty(const jobject& obj) {
                
       const auto methodID = methodID_isEmpty();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getBoundingBox() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getBoundingBox", "method_38721", "getBoundingBox", "m_192798_"), "()Lejj;");
    }

    static jobject getBoundingBox(const jobject& obj) {
                
       const auto methodID = methodID_getBoundingBox();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_STRUCTURE_STRUCTUREPIECESCOLLECTOR_HPP