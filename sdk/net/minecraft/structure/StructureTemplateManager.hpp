// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_STRUCTURE_STRUCTURETEMPLATEMANAGER_HPP
#define NET_MINECRAFT_STRUCTURE_STRUCTURETEMPLATEMANAGER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.structure.StructureTemplateManager
 * Remapped: enu
 */
namespace StructureTemplateManager {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("enu", "net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager", "net/minecraft/class_3485", "net/minecraft/structure/StructureTemplateManager", "net/minecraft/src/C_213305_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.structure.StructureTemplateManager#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "LOGGER", "field_15514", "LOGGER", "f_230340_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.structure.StructureTemplateManager#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "LOGGER", "field_15514", "LOGGER", "f_230340_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.structure.StructureTemplateManager#STRUCTURE_DIRECTORY
    [[maybe_unused]] static jobject get_field_STRUCTURE_DIRECTORY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "STRUCTURE_RESOURCE_DIRECTORY_NAME", "field_31684", "STRUCTURE_DIRECTORY", "f_336882_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.structure.StructureTemplateManager#STRUCTURE_DIRECTORY
    [[maybe_unused]] static void set_field_STRUCTURE_DIRECTORY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "STRUCTURE_RESOURCE_DIRECTORY_NAME", "field_31684", "STRUCTURE_DIRECTORY", "f_336882_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.structure.StructureTemplateManager#STRUCTURES_DIRECTORY
    [[maybe_unused]] static jobject get_field_STRUCTURES_DIRECTORY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "STRUCTURE_GENERATED_DIRECTORY_NAME", "field_52243", "STRUCTURES_DIRECTORY", "f_336957_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.structure.StructureTemplateManager#STRUCTURES_DIRECTORY
    [[maybe_unused]] static void set_field_STRUCTURES_DIRECTORY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "STRUCTURE_GENERATED_DIRECTORY_NAME", "field_52243", "STRUCTURES_DIRECTORY", "f_336957_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.structure.StructureTemplateManager#NBT_FILE_EXTENSION
    [[maybe_unused]] static jobject get_field_NBT_FILE_EXTENSION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "STRUCTURE_FILE_EXTENSION", "field_31685", "NBT_FILE_EXTENSION", "f_230343_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.structure.StructureTemplateManager#NBT_FILE_EXTENSION
    [[maybe_unused]] static void set_field_NBT_FILE_EXTENSION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "STRUCTURE_FILE_EXTENSION", "field_31685", "NBT_FILE_EXTENSION", "f_230343_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.structure.StructureTemplateManager#SNBT_FILE_EXTENSION
    [[maybe_unused]] static jobject get_field_SNBT_FILE_EXTENSION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "STRUCTURE_TEXT_FILE_EXTENSION", "field_31686", "SNBT_FILE_EXTENSION", "f_230344_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.structure.StructureTemplateManager#SNBT_FILE_EXTENSION
    [[maybe_unused]] static void set_field_SNBT_FILE_EXTENSION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "STRUCTURE_TEXT_FILE_EXTENSION", "field_31686", "SNBT_FILE_EXTENSION", "f_230344_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.structure.StructureTemplateManager#templates
    static jobject get_field_templates(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "structureRepository", "field_15513", "templates", "f_230345_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.structure.StructureTemplateManager#templates
    static void set_field_templates(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "structureRepository", "field_15513", "templates", "f_230345_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.structure.StructureTemplateManager#dataFixer
    static jobject get_field_dataFixer(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "fixerUpper", "field_15515", "dataFixer", "f_230346_"), "Lcom/mojang/datafixers/DataFixer;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.structure.StructureTemplateManager#dataFixer
    static void set_field_dataFixer(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "fixerUpper", "field_15515", "dataFixer", "f_230346_"), "Lcom/mojang/datafixers/DataFixer;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.structure.StructureTemplateManager#resourceManager
    static jobject get_field_resourceManager(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "resourceManager", "field_25189", "resourceManager", "f_230347_"), "Laue;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.structure.StructureTemplateManager#resourceManager
    static void set_field_resourceManager(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "resourceManager", "field_25189", "resourceManager", "f_230347_"), "Laue;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.structure.StructureTemplateManager#generatedPath
    static jobject get_field_generatedPath(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "generatedDir", "field_15512", "generatedPath", "f_230348_"), "Ljava/nio/file/Path;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.structure.StructureTemplateManager#generatedPath
    static void set_field_generatedPath(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "generatedDir", "field_15512", "generatedPath", "f_230348_"), "Ljava/nio/file/Path;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.structure.StructureTemplateManager#providers
    static jobject get_field_providers(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "sources", "field_39417", "providers", "f_230349_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.structure.StructureTemplateManager#providers
    static void set_field_providers(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "sources", "field_39417", "providers", "f_230349_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.structure.StructureTemplateManager#blockLookup
    static jobject get_field_blockLookup(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "blockLookup", "field_40369", "blockLookup", "f_243724_"), "Ljn;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.structure.StructureTemplateManager#blockLookup
    static void set_field_blockLookup(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "blockLookup", "field_40369", "blockLookup", "f_243724_"), "Ljn;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for static private field net.minecraft.structure.StructureTemplateManager#STRUCTURE_NBT_RESOURCE_FINDER
    [[maybe_unused]] static jobject get_field_STRUCTURE_NBT_RESOURCE_FINDER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "RESOURCE_LISTER", "field_52244", "STRUCTURE_NBT_RESOURCE_FINDER", "f_336608_"), "Lakk;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.structure.StructureTemplateManager#STRUCTURE_NBT_RESOURCE_FINDER
    [[maybe_unused]] static void set_field_STRUCTURE_NBT_RESOURCE_FINDER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "RESOURCE_LISTER", "field_52244", "STRUCTURE_NBT_RESOURCE_FINDER", "f_336608_"), "Lakk;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_getTemplateOrBlank() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getOrCreate", "method_15091", "getTemplateOrBlank", "m_230359_"), "(Lakr;)Lent;");
    }

    static jobject getTemplateOrBlank(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getTemplateOrBlank();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getTemplate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "get", "method_15094", "getTemplate", "m_230407_"), "(Lakr;)Ljava/util/Optional;");
    }

    static jobject getTemplate(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getTemplate();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_streamTemplates() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "listTemplates", "method_44226", "streamTemplates", "m_230355_"), "()Ljava/util/stream/Stream;");
    }

    static jobject streamTemplates(const jobject& obj) {
                
       const auto methodID = methodID_streamTemplates();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_loadTemplate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "tryLoad", "method_44245", "loadTemplate", "m_230425_"), "(Lakr;)Ljava/util/Optional;");
    }

    static jobject loadTemplate(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_loadTemplate();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setResourceManager() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "onResourceManagerReload", "method_29300", "setResourceManager", "m_230370_"), "(Laue;)V");
    }

    static void setResourceManager(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setResourceManager();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_loadTemplateFromResource() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "loadFromResource", "method_15088", "loadTemplateFromResource", "m_230427_"), "(Lakr;)Ljava/util/Optional;");
    }

    static jobject loadTemplateFromResource(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_loadTemplateFromResource();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_streamTemplatesFromResource() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "listResources", "method_44239", "streamTemplatesFromResource", "m_230406_"), "()Ljava/util/stream/Stream;");
    }

    static jobject streamTemplatesFromResource(const jobject& obj) {
                
       const auto methodID = methodID_streamTemplatesFromResource();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_loadTemplateFromGameTestFile() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "loadFromTestStructures", "method_44246", "loadTemplateFromGameTestFile", "m_230429_"), "(Lakr;)Ljava/util/Optional;");
    }

    static jobject loadTemplateFromGameTestFile(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_loadTemplateFromGameTestFile();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_streamTemplatesFromGameTestFile() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "listTestStructures", "method_44241", "streamTemplatesFromGameTestFile", "m_230415_"), "()Ljava/util/stream/Stream;");
    }

    static jobject streamTemplatesFromGameTestFile(const jobject& obj) {
                
       const auto methodID = methodID_streamTemplatesFromGameTestFile();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_loadTemplateFromFile() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "loadFromGenerated", "method_15092", "loadTemplateFromFile", "m_230431_"), "(Lakr;)Ljava/util/Optional;");
    }

    static jobject loadTemplateFromFile(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_loadTemplateFromFile();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_streamTemplatesFromFile() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "listGenerated", "method_44243", "streamTemplatesFromFile", "m_230420_"), "()Ljava/util/stream/Stream;");
    }

    static jobject streamTemplatesFromFile(const jobject& obj) {
                
       const auto methodID = methodID_streamTemplatesFromFile();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__streamTemplates() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "listFolderContents", "method_44236", "streamTemplates", "m_230394_"), "(Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Consumer;)V");
    }

    static void _streamTemplates(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
                
       const auto methodID = methodID__streamTemplates();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_toRelativePath() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "relativize", "method_44238", "toRelativePath", "m_230401_"), "(Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljava/lang/String;");
    }

    static jobject toRelativePath(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_toRelativePath();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_loadTemplateFromSnbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "loadFromSnbt", "method_44230", "loadTemplateFromSnbt", "m_230367_"), "(Lakr;Ljava/nio/file/Path;)Ljava/util/Optional;");
    }

    static jobject loadTemplateFromSnbt(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_loadTemplateFromSnbt();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__loadTemplate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "load", "method_44231", "loadTemplate", "m_230372_"), "(Lenu$a;Ljava/util/function/Consumer;)Ljava/util/Optional;");
    }

    static jobject _loadTemplate(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID__loadTemplate();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_readTemplate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "readStructure", "method_15090", "readTemplate", "m_230377_"), "(Ljava/io/InputStream;)Lent;");
    }

    static jobject readTemplate(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_readTemplate();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_createTemplate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "readStructure", "method_21891", "createTemplate", "m_230404_"), "(Lub;)Lent;");
    }

    static jobject createTemplate(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_createTemplate();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_saveTemplate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "save", "method_15093", "saveTemplate", "m_230416_"), "(Lakr;)Z");
    }

    static jboolean saveTemplate(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_saveTemplate();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getTemplatePath() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "createAndValidatePathToGeneratedStructure", "method_15085", "getTemplatePath", "m_339684_"), "(Lakr;Ljava/lang/String;)Ljava/nio/file/Path;");
    }

    static jobject getTemplatePath(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_getTemplatePath();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_unloadTemplate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "remove", "method_15087", "unloadTemplate", "m_230421_"), "(Lakr;)V");
    }

    static void unloadTemplate(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_unloadTemplate();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_STRUCTURE_STRUCTURETEMPLATEMANAGER_HPP