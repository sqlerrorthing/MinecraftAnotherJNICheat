// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_STRUCTURE_STRUCTUREGENERATORFACTORY$CONTEXT_HPP
#define NET_MINECRAFT_STRUCTURE_STRUCTUREGENERATORFACTORY$CONTEXT_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.structure.StructureGeneratorFactory$Context
 * Remapped: ekf$a
 */
namespace StructureGeneratorFactory$Context {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("ekf$a", "net/minecraft/world/level/levelgen/structure/pieces/PieceGeneratorSupplier$Context", "net/minecraft/class_6834$class_6835", "net/minecraft/structure/StructureGeneratorFactory$Context", "net/minecraft/src/C_196114_$C_196115_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.structure.StructureGeneratorFactory$Context#chunkGenerator
    static jobject get_field_chunkGenerator(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "chunkGenerator", "comp_306", "chunkGenerator", "f_197352_"), "Lduz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.structure.StructureGeneratorFactory$Context#chunkGenerator
    static void set_field_chunkGenerator(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "chunkGenerator", "comp_306", "chunkGenerator", "f_197352_"), "Lduz;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.structure.StructureGeneratorFactory$Context#biomeSource
    static jobject get_field_biomeSource(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "biomeSource", "comp_307", "biomeSource", "f_197353_"), "Ldea;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.structure.StructureGeneratorFactory$Context#biomeSource
    static void set_field_biomeSource(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "biomeSource", "comp_307", "biomeSource", "f_197353_"), "Ldea;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.structure.StructureGeneratorFactory$Context#noiseConfig
    static jobject get_field_noiseConfig(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "randomState", "comp_573", "noiseConfig", "f_226941_"), "Ldzm;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.structure.StructureGeneratorFactory$Context#noiseConfig
    static void set_field_noiseConfig(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "randomState", "comp_573", "noiseConfig", "f_226941_"), "Ldzm;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.structure.StructureGeneratorFactory$Context#seed
    static jlong get_field_seed(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "seed", "comp_308", "seed", "f_197354_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static private field net.minecraft.structure.StructureGeneratorFactory$Context#seed
    static void set_field_seed(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "seed", "comp_308", "seed", "f_197354_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.structure.StructureGeneratorFactory$Context#chunkPos
    static jobject get_field_chunkPos(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "chunkPos", "comp_309", "chunkPos", "f_197355_"), "Ldcd;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.structure.StructureGeneratorFactory$Context#chunkPos
    static void set_field_chunkPos(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "chunkPos", "comp_309", "chunkPos", "f_197355_"), "Ldcd;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.structure.StructureGeneratorFactory$Context#config
    static jobject get_field_config(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "config", "comp_310", "config", "f_197356_"), "Leei;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.structure.StructureGeneratorFactory$Context#config
    static void set_field_config(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "config", "comp_310", "config", "f_197356_"), "Leei;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.structure.StructureGeneratorFactory$Context#world
    static jobject get_field_world(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "heightAccessor", "comp_311", "world", "f_197357_"), "Ldcy;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.structure.StructureGeneratorFactory$Context#world
    static void set_field_world(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "heightAccessor", "comp_311", "world", "f_197357_"), "Ldcy;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.structure.StructureGeneratorFactory$Context#validBiome
    static jobject get_field_validBiome(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "validBiome", "comp_312", "validBiome", "f_197358_"), "Ljava/util/function/Predicate;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.structure.StructureGeneratorFactory$Context#validBiome
    static void set_field_validBiome(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "validBiome", "comp_312", "validBiome", "f_197358_"), "Ljava/util/function/Predicate;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.structure.StructureGeneratorFactory$Context#structureTemplateManager
    static jobject get_field_structureTemplateManager(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "structureTemplateManager", "comp_313", "structureTemplateManager", "f_226942_"), "Lenu;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.structure.StructureGeneratorFactory$Context#structureTemplateManager
    static void set_field_structureTemplateManager(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "structureTemplateManager", "comp_313", "structureTemplateManager", "f_226942_"), "Lenu;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.structure.StructureGeneratorFactory$Context#registryManager
    static jobject get_field_registryManager(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "registryAccess", "comp_314", "registryManager", "f_197360_"), "Lka;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.structure.StructureGeneratorFactory$Context#registryManager
    static void set_field_registryManager(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "registryAccess", "comp_314", "registryManager", "f_197360_"), "Lka;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_isBiomeValid() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "validBiomeOnTop", "method_39848", "isBiomeValid", "m_197380_"), "(Ldyy$a;)Z");
    }

    static jboolean isBiomeValid(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_isBiomeValid();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__chunkGenerator() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "chunkGenerator", "comp_306", "chunkGenerator", "f_197352_"), "()Lduz;");
    }

    static jobject _chunkGenerator(const jobject& obj) {
                
       const auto methodID = methodID__chunkGenerator();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__biomeSource() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "biomeSource", "comp_307", "biomeSource", "f_197353_"), "()Ldea;");
    }

    static jobject _biomeSource(const jobject& obj) {
                
       const auto methodID = methodID__biomeSource();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__noiseConfig() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "randomState", "comp_573", "noiseConfig", "f_226941_"), "()Ldzm;");
    }

    static jobject _noiseConfig(const jobject& obj) {
                
       const auto methodID = methodID__noiseConfig();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__seed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "seed", "comp_308", "seed", "f_197354_"), "()J");
    }

    static jlong _seed(const jobject& obj) {
                
       const auto methodID = methodID__seed();
       return MinecraftSDK::env->CallLongMethod(obj, methodID);
    };
    
    static jmethodID methodID__chunkPos() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "chunkPos", "comp_309", "chunkPos", "f_197355_"), "()Ldcd;");
    }

    static jobject _chunkPos(const jobject& obj) {
                
       const auto methodID = methodID__chunkPos();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__config() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "config", "comp_310", "config", "f_197356_"), "()Leei;");
    }

    static jobject _config(const jobject& obj) {
                
       const auto methodID = methodID__config();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__world() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "heightAccessor", "comp_311", "world", "f_197357_"), "()Ldcy;");
    }

    static jobject _world(const jobject& obj) {
                
       const auto methodID = methodID__world();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__validBiome() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "validBiome", "comp_312", "validBiome", "f_197358_"), "()Ljava/util/function/Predicate;");
    }

    static jobject _validBiome(const jobject& obj) {
                
       const auto methodID = methodID__validBiome();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__structureTemplateManager() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("i", "structureTemplateManager", "comp_313", "structureTemplateManager", "f_226942_"), "()Lenu;");
    }

    static jobject _structureTemplateManager(const jobject& obj) {
                
       const auto methodID = methodID__structureTemplateManager();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__registryManager() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("j", "registryAccess", "comp_314", "registryManager", "f_197360_"), "()Lka;");
    }

    static jobject _registryManager(const jobject& obj) {
                
       const auto methodID = methodID__registryManager();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_STRUCTURE_STRUCTUREGENERATORFACTORY$CONTEXT_HPP