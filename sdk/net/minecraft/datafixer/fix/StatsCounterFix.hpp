// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_DATAFIXER_FIX_STATSCOUNTERFIX_HPP
#define NET_MINECRAFT_DATAFIXER_FIX_STATSCOUNTERFIX_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.datafixer.fix.StatsCounterFix
 * Remapped: bhf
 */
namespace StatsCounterFix {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("bhf", "net/minecraft/util/datafix/fixes/StatsCounterFix", "net/minecraft/class_1214", "net/minecraft/datafixer/fix/StatsCounterFix", "net/minecraft/src/C_352_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.datafixer.fix.StatsCounterFix#SKIPPED_STATS
    [[maybe_unused]] static jobject get_field_SKIPPED_STATS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "SPECIAL_OBJECTIVE_CRITERIA", "field_45099", "SKIPPED_STATS", "f_291555_"), "Ljava/util/Set;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.datafixer.fix.StatsCounterFix#SKIPPED_STATS
    [[maybe_unused]] static void set_field_SKIPPED_STATS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "SPECIAL_OBJECTIVE_CRITERIA", "field_45099", "SKIPPED_STATS", "f_291555_"), "Ljava/util/Set;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.datafixer.fix.StatsCounterFix#REMOVED_STATS
    [[maybe_unused]] static jobject get_field_REMOVED_STATS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "SKIP", "field_5739", "REMOVED_STATS", "f_16932_"), "Ljava/util/Set;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.datafixer.fix.StatsCounterFix#REMOVED_STATS
    [[maybe_unused]] static void set_field_REMOVED_STATS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "SKIP", "field_5739", "REMOVED_STATS", "f_16932_"), "Ljava/util/Set;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.datafixer.fix.StatsCounterFix#RENAMED_GENERAL_STATS
    [[maybe_unused]] static jobject get_field_RENAMED_GENERAL_STATS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "CUSTOM_MAP", "field_5737", "RENAMED_GENERAL_STATS", "f_16933_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.datafixer.fix.StatsCounterFix#RENAMED_GENERAL_STATS
    [[maybe_unused]] static void set_field_RENAMED_GENERAL_STATS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "CUSTOM_MAP", "field_5737", "RENAMED_GENERAL_STATS", "f_16933_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.datafixer.fix.StatsCounterFix#OLD_MINE_BLOCK_ID
    [[maybe_unused]] static jobject get_field_OLD_MINE_BLOCK_ID() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "BLOCK_KEY", "field_29907", "OLD_MINE_BLOCK_ID", "f_145695_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.datafixer.fix.StatsCounterFix#OLD_MINE_BLOCK_ID
    [[maybe_unused]] static void set_field_OLD_MINE_BLOCK_ID(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "BLOCK_KEY", "field_29907", "OLD_MINE_BLOCK_ID", "f_145695_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.datafixer.fix.StatsCounterFix#NEW_MINE_BLOCK_ID
    [[maybe_unused]] static jobject get_field_NEW_MINE_BLOCK_ID() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "NEW_BLOCK_KEY", "field_29908", "NEW_MINE_BLOCK_ID", "f_145696_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.datafixer.fix.StatsCounterFix#NEW_MINE_BLOCK_ID
    [[maybe_unused]] static void set_field_NEW_MINE_BLOCK_ID(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "NEW_BLOCK_KEY", "field_29908", "NEW_MINE_BLOCK_ID", "f_145696_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.datafixer.fix.StatsCounterFix#RENAMED_ITEM_STATS
    [[maybe_unused]] static jobject get_field_RENAMED_ITEM_STATS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "ITEM_KEYS", "field_5738", "RENAMED_ITEM_STATS", "f_16934_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.datafixer.fix.StatsCounterFix#RENAMED_ITEM_STATS
    [[maybe_unused]] static void set_field_RENAMED_ITEM_STATS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "ITEM_KEYS", "field_5738", "RENAMED_ITEM_STATS", "f_16934_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.datafixer.fix.StatsCounterFix#RENAMED_ENTITY_STATS
    [[maybe_unused]] static jobject get_field_RENAMED_ENTITY_STATS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "ENTITY_KEYS", "field_5736", "RENAMED_ENTITY_STATS", "f_16935_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.datafixer.fix.StatsCounterFix#RENAMED_ENTITY_STATS
    [[maybe_unused]] static void set_field_RENAMED_ENTITY_STATS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "ENTITY_KEYS", "field_5736", "RENAMED_ENTITY_STATS", "f_16935_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.datafixer.fix.StatsCounterFix#RENAMED_ENTITIES
    [[maybe_unused]] static jobject get_field_RENAMED_ENTITIES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "ENTITIES", "field_5735", "RENAMED_ENTITIES", "f_16936_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.datafixer.fix.StatsCounterFix#RENAMED_ENTITIES
    [[maybe_unused]] static void set_field_RENAMED_ENTITIES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "ENTITIES", "field_5735", "RENAMED_ENTITIES", "f_16936_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.datafixer.fix.StatsCounterFix#CUSTOM
    [[maybe_unused]] static jobject get_field_CUSTOM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "NEW_CUSTOM_KEY", "field_29909", "CUSTOM", "f_145697_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.datafixer.fix.StatsCounterFix#CUSTOM
    [[maybe_unused]] static void set_field_CUSTOM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "NEW_CUSTOM_KEY", "field_29909", "CUSTOM", "f_145697_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_rename() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "unpackLegacyKey", "method_52500", "rename", "m_292993_"), "(Ljava/lang/String;)Lbhf$a;");
    }

    static jobject rename(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_rename();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_makeRule() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("makeRule", "makeRule", "", "", "makeRule"), "()Lcom/mojang/datafixers/TypeRewriteRule;");
    }

    static jobject makeRule(const jobject& obj) {
                
       const auto methodID = methodID_makeRule();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_makeFirstRoundRule() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "makeStatFixer", "method_52496", "makeFirstRoundRule", "m_295355_"), "()Lcom/mojang/datafixers/TypeRewriteRule;");
    }

    static jobject makeFirstRoundRule(const jobject& obj) {
                
       const auto methodID = methodID_makeFirstRoundRule();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_makeSecondRoundRule() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "makeObjectiveFixer", "method_52501", "makeSecondRoundRule", "m_293029_"), "()Lcom/mojang/datafixers/TypeRewriteRule;");
    }

    static jobject makeSecondRoundRule(const jobject& obj) {
                
       const auto methodID = methodID_makeSecondRoundRule();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getItem() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "upgradeItem", "method_5172", "getItem", "m_16948_"), "(Ljava/lang/String;)Ljava/lang/String;");
    }

    static jobject getItem(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getItem();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getBlock() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "upgradeBlock", "method_5173", "getBlock", "m_16950_"), "(Ljava/lang/String;)Ljava/lang/String;");
    }

    static jobject getBlock(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getBlock();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_DATAFIXER_FIX_STATSCOUNTERFIX_HPP