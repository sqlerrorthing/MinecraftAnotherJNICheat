// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_DATAFIXER_FIX_LEVELFLATGENERATORINFOFIX_HPP
#define NET_MINECRAFT_DATAFIXER_FIX_LEVELFLATGENERATORINFOFIX_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.datafixer.fix.LevelFlatGeneratorInfoFix
 * Remapped: bfd
 */
namespace LevelFlatGeneratorInfoFix {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("bfd", "net/minecraft/util/datafix/fixes/LevelFlatGeneratorInfoFix", "net/minecraft/class_1195", "net/minecraft/datafixer/fix/LevelFlatGeneratorInfoFix", "net/minecraft/src/C_317_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.datafixer.fix.LevelFlatGeneratorInfoFix#GENERATOR_OPTIONS_KEY
    [[maybe_unused]] static jobject get_field_GENERATOR_OPTIONS_KEY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "GENERATOR_OPTIONS", "field_29905", "GENERATOR_OPTIONS_KEY", "f_145489_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.datafixer.fix.LevelFlatGeneratorInfoFix#GENERATOR_OPTIONS_KEY
    [[maybe_unused]] static void set_field_GENERATOR_OPTIONS_KEY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "GENERATOR_OPTIONS", "field_29905", "GENERATOR_OPTIONS_KEY", "f_145489_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static default field net.minecraft.datafixer.fix.LevelFlatGeneratorInfoFix#SUPERFLAT_PRESET
    [[maybe_unused]] static jobject get_field_SUPERFLAT_PRESET() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "DEFAULT", "field_29904", "SUPERFLAT_PRESET", "f_145488_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static default field net.minecraft.datafixer.fix.LevelFlatGeneratorInfoFix#SUPERFLAT_PRESET
    [[maybe_unused]] static void set_field_SUPERFLAT_PRESET(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "DEFAULT", "field_29904", "SUPERFLAT_PRESET", "f_145488_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.datafixer.fix.LevelFlatGeneratorInfoFix#SPLIT_ON_SEMICOLON
    [[maybe_unused]] static jobject get_field_SPLIT_ON_SEMICOLON() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "SPLITTER", "field_5700", "SPLIT_ON_SEMICOLON", "f_16337_"), "Lcom/google/common/base/Splitter;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.datafixer.fix.LevelFlatGeneratorInfoFix#SPLIT_ON_SEMICOLON
    [[maybe_unused]] static void set_field_SPLIT_ON_SEMICOLON(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "SPLITTER", "field_5700", "SPLIT_ON_SEMICOLON", "f_16337_"), "Lcom/google/common/base/Splitter;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.datafixer.fix.LevelFlatGeneratorInfoFix#SPLIT_ON_COMMA
    [[maybe_unused]] static jobject get_field_SPLIT_ON_COMMA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "LAYER_SPLITTER", "field_5701", "SPLIT_ON_COMMA", "f_16338_"), "Lcom/google/common/base/Splitter;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.datafixer.fix.LevelFlatGeneratorInfoFix#SPLIT_ON_COMMA
    [[maybe_unused]] static void set_field_SPLIT_ON_COMMA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "LAYER_SPLITTER", "field_5701", "SPLIT_ON_COMMA", "f_16338_"), "Lcom/google/common/base/Splitter;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.datafixer.fix.LevelFlatGeneratorInfoFix#SPLIT_ON_LOWER_X
    [[maybe_unused]] static jobject get_field_SPLIT_ON_LOWER_X() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "OLD_AMOUNT_SPLITTER", "field_5699", "SPLIT_ON_LOWER_X", "f_16339_"), "Lcom/google/common/base/Splitter;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.datafixer.fix.LevelFlatGeneratorInfoFix#SPLIT_ON_LOWER_X
    [[maybe_unused]] static void set_field_SPLIT_ON_LOWER_X(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "OLD_AMOUNT_SPLITTER", "field_5699", "SPLIT_ON_LOWER_X", "f_16339_"), "Lcom/google/common/base/Splitter;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.datafixer.fix.LevelFlatGeneratorInfoFix#SPLIT_ON_ASTERISK
    [[maybe_unused]] static jobject get_field_SPLIT_ON_ASTERISK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "AMOUNT_SPLITTER", "field_5698", "SPLIT_ON_ASTERISK", "f_16340_"), "Lcom/google/common/base/Splitter;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.datafixer.fix.LevelFlatGeneratorInfoFix#SPLIT_ON_ASTERISK
    [[maybe_unused]] static void set_field_SPLIT_ON_ASTERISK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "AMOUNT_SPLITTER", "field_5698", "SPLIT_ON_ASTERISK", "f_16340_"), "Lcom/google/common/base/Splitter;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.datafixer.fix.LevelFlatGeneratorInfoFix#SPLIT_ON_COLON
    [[maybe_unused]] static jobject get_field_SPLIT_ON_COLON() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "BLOCK_SPLITTER", "field_5697", "SPLIT_ON_COLON", "f_16341_"), "Lcom/google/common/base/Splitter;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.datafixer.fix.LevelFlatGeneratorInfoFix#SPLIT_ON_COLON
    [[maybe_unused]] static void set_field_SPLIT_ON_COLON(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "BLOCK_SPLITTER", "field_5697", "SPLIT_ON_COLON", "f_16341_"), "Lcom/google/common/base/Splitter;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_makeRule() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("makeRule", "makeRule", "", "", "makeRule"), "()Lcom/mojang/datafixers/TypeRewriteRule;");
    }

    static jobject makeRule(const jobject& obj) {
                
       const auto methodID = methodID_makeRule();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_fixGeneratorOptions() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "fix", "method_5090", "fixGeneratorOptions", "m_16352_"), "(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;");
    }

    static jobject fixGeneratorOptions(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_fixGeneratorOptions();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_fixFlatGeneratorOptions() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "fixString", "method_5094", "fixFlatGeneratorOptions", "m_16354_"), "(Ljava/lang/String;)Ljava/lang/String;");
    }

    static jobject fixFlatGeneratorOptions(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_fixFlatGeneratorOptions();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_DATAFIXER_FIX_LEVELFLATGENERATORINFOFIX_HPP