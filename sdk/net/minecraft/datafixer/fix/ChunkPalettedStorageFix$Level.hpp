// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_DATAFIXER_FIX_CHUNKPALETTEDSTORAGEFIX$LEVEL_HPP
#define NET_MINECRAFT_DATAFIXER_FIX_CHUNKPALETTEDSTORAGEFIX$LEVEL_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.datafixer.fix.ChunkPalettedStorageFix$Level
 * Remapped: bbt$d
 */
namespace ChunkPalettedStorageFix$Level {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("bbt$d", "net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$UpgradeChunk", "net/minecraft/class_3582$class_3588", "net/minecraft/datafixer/fix/ChunkPalettedStorageFix$Level", "net/minecraft/src/C_242_$C_249_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.datafixer.fix.ChunkPalettedStorageFix$Level#sidesToUpgrade
    static jint get_field_sidesToUpgrade(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "sides", "field_15885", "sidesToUpgrade", "f_15215_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.datafixer.fix.ChunkPalettedStorageFix$Level#sidesToUpgrade
    static void set_field_sidesToUpgrade(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "sides", "field_15885", "sidesToUpgrade", "f_15215_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.datafixer.fix.ChunkPalettedStorageFix$Level#sections
    static jobject get_field_sections(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "sections", "field_15888", "sections", "f_15216_"), "[Lbbt$c;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.datafixer.fix.ChunkPalettedStorageFix$Level#sections
    static void set_field_sections(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "sections", "field_15888", "sections", "f_15216_"), "[Lbbt$c;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.datafixer.fix.ChunkPalettedStorageFix$Level#level
    static jobject get_field_level(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "level", "field_15886", "level", "f_15217_"), "Lcom/mojang/serialization/Dynamic;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.datafixer.fix.ChunkPalettedStorageFix$Level#level
    static void set_field_level(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "level", "field_15886", "level", "f_15217_"), "Lcom/mojang/serialization/Dynamic;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.datafixer.fix.ChunkPalettedStorageFix$Level#x
    static jint get_field_x(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "x", "field_15884", "x", "f_15218_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.datafixer.fix.ChunkPalettedStorageFix$Level#x
    static void set_field_x(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "x", "field_15884", "x", "f_15218_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.datafixer.fix.ChunkPalettedStorageFix$Level#z
    static jint get_field_z(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "z", "field_15883", "z", "f_15219_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.datafixer.fix.ChunkPalettedStorageFix$Level#z
    static void set_field_z(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "z", "field_15883", "z", "f_15219_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.datafixer.fix.ChunkPalettedStorageFix$Level#blockEntities
    static jobject get_field_blockEntities(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "blockEntities", "field_15887", "blockEntities", "f_15220_"), "Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.datafixer.fix.ChunkPalettedStorageFix$Level#blockEntities
    static void set_field_blockEntities(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "blockEntities", "field_15887", "blockEntities", "f_15220_"), "Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_getBlockEntity() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getBlockEntity", "method_15655", "getBlockEntity", "m_15236_"), "(I)Lcom/mojang/serialization/Dynamic;");
    }

    static jobject getBlockEntity(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_getBlockEntity();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_removeBlockEntity() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "removeBlockEntity", "method_15660", "removeBlockEntity", "m_15242_"), "(I)Lcom/mojang/serialization/Dynamic;");
    }

    static jobject removeBlockEntity(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_removeBlockEntity();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_adjacentTo() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "relative", "method_15663", "adjacentTo", "m_15226_"), "(ILbbt$b;)I");
    }

    static jint adjacentTo(const jint& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_adjacentTo();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_setBlock() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setBlock", "method_15657", "setBlock", "m_15229_"), "(ILcom/mojang/serialization/Dynamic;)V");
    }

    static void setBlock(const jobject& obj, const jint& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_setBlock();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getSection() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getSection", "method_15658", "getSection", "m_15244_"), "(I)Lbbt$c;");
    }

    static jobject getSection(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_getSection();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getBlock() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getBlock", "method_15662", "getBlock", "m_15224_"), "(I)Lcom/mojang/serialization/Dynamic;");
    }

    static jobject getBlock(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_getBlock();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_transform() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "write", "method_15664", "transform", "m_15223_"), "()Lcom/mojang/serialization/Dynamic;");
    }

    static jobject transform(const jobject& obj) {
                
       const auto methodID = methodID_transform();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_DATAFIXER_FIX_CHUNKPALETTEDSTORAGEFIX$LEVEL_HPP