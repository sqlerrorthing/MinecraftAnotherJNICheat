// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_DATAFIXER_FIX_PROTOCHUNKTICKLISTFIX$PALETTEDSECTION_HPP
#define NET_MINECRAFT_DATAFIXER_FIX_PROTOCHUNKTICKLISTFIX$PALETTEDSECTION_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.datafixer.fix.ProtoChunkTickListFix$PalettedSection
 * Remapped: bbu$a
 */
namespace ProtoChunkTickListFix$PalettedSection {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("bbu$a", "net/minecraft/util/datafix/fixes/ChunkProtoTickListFix$PoorMansPalettedContainer", "net/minecraft/class_6740$class_6741", "net/minecraft/datafixer/fix/ProtoChunkTickListFix$PalettedSection", "net/minecraft/src/C_182795_$C_182796_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.datafixer.fix.ProtoChunkTickListFix$PalettedSection#MIN_UNIT_SIZE
    [[maybe_unused]] static jlong get_field_MIN_UNIT_SIZE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "SIZE_BITS", "field_35448", "MIN_UNIT_SIZE", "f_185080_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticLongField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.datafixer.fix.ProtoChunkTickListFix$PalettedSection#MIN_UNIT_SIZE
    [[maybe_unused]] static void set_field_MIN_UNIT_SIZE(const jlong &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "SIZE_BITS", "field_35448", "MIN_UNIT_SIZE", "f_185080_"), "J");
        return MinecraftSDK::env->SetStaticLongField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.datafixer.fix.ProtoChunkTickListFix$PalettedSection#palette
    static jobject get_field_palette(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "palette", "field_35449", "palette", "f_185081_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.datafixer.fix.ProtoChunkTickListFix$PalettedSection#palette
    static void set_field_palette(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "palette", "field_35449", "palette", "f_185081_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.datafixer.fix.ProtoChunkTickListFix$PalettedSection#data
    static jlong get_field_data(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "data", "field_35450", "data", "f_185082_"), "[J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static private field net.minecraft.datafixer.fix.ProtoChunkTickListFix$PalettedSection#data
    static void set_field_data(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "data", "field_35450", "data", "f_185082_"), "[J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.datafixer.fix.ProtoChunkTickListFix$PalettedSection#unitSize
    static jint get_field_unitSize(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "bits", "field_35451", "unitSize", "f_185083_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.datafixer.fix.ProtoChunkTickListFix$PalettedSection#unitSize
    static void set_field_unitSize(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "bits", "field_35451", "unitSize", "f_185083_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.datafixer.fix.ProtoChunkTickListFix$PalettedSection#unitMask
    static jlong get_field_unitMask(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "mask", "field_35452", "unitMask", "f_185084_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static private field net.minecraft.datafixer.fix.ProtoChunkTickListFix$PalettedSection#unitMask
    static void set_field_unitMask(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "mask", "field_35452", "unitMask", "f_185084_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.datafixer.fix.ProtoChunkTickListFix$PalettedSection#unitsPerLong
    static jint get_field_unitsPerLong(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "valuesPerLong", "field_35453", "unitsPerLong", "f_185085_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.datafixer.fix.ProtoChunkTickListFix$PalettedSection#unitsPerLong
    static void set_field_unitsPerLong(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "valuesPerLong", "field_35453", "unitsPerLong", "f_185085_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    static jmethodID methodID_get() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "get", "method_39265", "get", "m_185090_"), "(III)Lcom/mojang/serialization/Dynamic;");
    }

    static jobject get(const jobject& obj, const jint& arg0, const jint& arg1, const jint& arg2) {
                
       const auto methodID = methodID_get();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_packLocalPos() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getIndex", "method_39267", "packLocalPos", "m_185095_"), "(III)I");
    }

    static jint packLocalPos(const jobject& obj, const jint& arg0, const jint& arg1, const jint& arg2) {
                
       const auto methodID = methodID_packLocalPos();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_getPalette() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "palette", "method_39264", "getPalette", "m_185089_"), "()Ljava/util/List;");
    }

    static jobject getPalette(const jobject& obj) {
                
       const auto methodID = methodID_getPalette();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getData() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "data", "method_39266", "getData", "m_185094_"), "()[J");
    }

    static jlong getData(const jobject& obj) {
                
       const auto methodID = methodID_getData();
       return MinecraftSDK::env->CallLongMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_DATAFIXER_FIX_PROTOCHUNKTICKLISTFIX$PALETTEDSECTION_HPP