// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_DATAFIXER_FIX_BLENDINGDATAFIX_HPP
#define NET_MINECRAFT_DATAFIXER_FIX_BLENDINGDATAFIX_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.datafixer.fix.BlendingDataFix
 * Remapped: bar
 */
namespace BlendingDataFix {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("bar", "net/minecraft/util/datafix/fixes/BlendingDataFix", "net/minecraft/class_7090", "net/minecraft/datafixer/fix/BlendingDataFix", "net/minecraft/src/C_212987_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.datafixer.fix.BlendingDataFix#name
    static jobject get_field_name(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "name", "field_37414", "name", "f_216557_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.datafixer.fix.BlendingDataFix#name
    static void set_field_name(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "name", "field_37414", "name", "f_216557_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for static private field net.minecraft.datafixer.fix.BlendingDataFix#SKIP_BLENDING_STATUSES
    [[maybe_unused]] static jobject get_field_SKIP_BLENDING_STATUSES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "STATUSES_TO_SKIP_BLENDING", "field_37415", "SKIP_BLENDING_STATUSES", "f_216558_"), "Ljava/util/Set;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.datafixer.fix.BlendingDataFix#SKIP_BLENDING_STATUSES
    [[maybe_unused]] static void set_field_SKIP_BLENDING_STATUSES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "STATUSES_TO_SKIP_BLENDING", "field_37415", "SKIP_BLENDING_STATUSES", "f_216558_"), "Ljava/util/Set;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_makeRule() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("makeRule", "makeRule", "", "", "makeRule"), "()Lcom/mojang/datafixers/TypeRewriteRule;");
    }

    static jobject makeRule(const jobject& obj) {
                
       const auto methodID = methodID_makeRule();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_update() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "updateChunkTag", "method_41312", "update", "m_240278_"), "(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/OptionalDynamic;)Lcom/mojang/serialization/Dynamic;");
    }

    static jobject update(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_update();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_setSections() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "updateBlendingData", "method_41313", "setSections", "m_216566_"), "(Lcom/mojang/serialization/Dynamic;II)Lcom/mojang/serialization/Dynamic;");
    }

    static jobject setSections(const jobject& arg0, const jint& arg1, const jint& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_setSections();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
};

#endif // NET_MINECRAFT_DATAFIXER_FIX_BLENDINGDATAFIX_HPP