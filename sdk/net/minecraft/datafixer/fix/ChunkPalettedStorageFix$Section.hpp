// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_DATAFIXER_FIX_CHUNKPALETTEDSTORAGEFIX$SECTION_HPP
#define NET_MINECRAFT_DATAFIXER_FIX_CHUNKPALETTEDSTORAGEFIX$SECTION_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.datafixer.fix.ChunkPalettedStorageFix$Section
 * Remapped: bbt$c
 */
namespace ChunkPalettedStorageFix$Section {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("bbt$c", "net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Section", "net/minecraft/class_3582$class_3587", "net/minecraft/datafixer/fix/ChunkPalettedStorageFix$Section", "net/minecraft/src/C_242_$C_248_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.datafixer.fix.ChunkPalettedStorageFix$Section#paletteMap
    static jobject get_field_paletteMap(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "palette", "field_15882", "paletteMap", "f_15186_"), "Laxk;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.datafixer.fix.ChunkPalettedStorageFix$Section#paletteMap
    static void set_field_paletteMap(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "palette", "field_15882", "paletteMap", "f_15186_"), "Laxk;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.datafixer.fix.ChunkPalettedStorageFix$Section#paletteData
    static jobject get_field_paletteData(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "listTag", "field_15880", "paletteData", "f_15187_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.datafixer.fix.ChunkPalettedStorageFix$Section#paletteData
    static void set_field_paletteData(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "listTag", "field_15880", "paletteData", "f_15187_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.datafixer.fix.ChunkPalettedStorageFix$Section#section
    static jobject get_field_section(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "section", "field_15878", "section", "f_15188_"), "Lcom/mojang/serialization/Dynamic;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.datafixer.fix.ChunkPalettedStorageFix$Section#section
    static void set_field_section(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "section", "field_15878", "section", "f_15188_"), "Lcom/mojang/serialization/Dynamic;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.datafixer.fix.ChunkPalettedStorageFix$Section#hasBlocks
    static jboolean get_field_hasBlocks(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "hasData", "field_15876", "hasBlocks", "f_15189_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.datafixer.fix.ChunkPalettedStorageFix$Section#hasBlocks
    static void set_field_hasBlocks(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "hasData", "field_15876", "hasBlocks", "f_15189_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.datafixer.fix.ChunkPalettedStorageFix$Section#inPlaceUpdates
    static jobject get_field_inPlaceUpdates(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "toFix", "field_15881", "inPlaceUpdates", "f_15190_"), "Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.datafixer.fix.ChunkPalettedStorageFix$Section#inPlaceUpdates
    static void set_field_inPlaceUpdates(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "toFix", "field_15881", "inPlaceUpdates", "f_15190_"), "Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.datafixer.fix.ChunkPalettedStorageFix$Section#innerPositions
    static jobject get_field_innerPositions(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "update", "field_15874", "innerPositions", "f_15191_"), "Lit/unimi/dsi/fastutil/ints/IntList;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.datafixer.fix.ChunkPalettedStorageFix$Section#innerPositions
    static void set_field_innerPositions(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "update", "field_15874", "innerPositions", "f_15191_"), "Lit/unimi/dsi/fastutil/ints/IntList;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.datafixer.fix.ChunkPalettedStorageFix$Section#y
    static jint get_field_y(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "y", "field_15879", "y", "f_15185_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static public field net.minecraft.datafixer.fix.ChunkPalettedStorageFix$Section#y
    static void set_field_y(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "y", "field_15879", "y", "f_15185_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.datafixer.fix.ChunkPalettedStorageFix$Section#seenStates
    static jobject get_field_seenStates(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "seen", "field_15875", "seenStates", "f_15192_"), "Ljava/util/Set;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.datafixer.fix.ChunkPalettedStorageFix$Section#seenStates
    static void set_field_seenStates(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "seen", "field_15875", "seenStates", "f_15192_"), "Ljava/util/Set;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.datafixer.fix.ChunkPalettedStorageFix$Section#states
    static jint get_field_states(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "buffer", "field_15877", "states", "f_15193_"), "[I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.datafixer.fix.ChunkPalettedStorageFix$Section#states
    static void set_field_states(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "buffer", "field_15877", "states", "f_15193_"), "[I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    static jmethodID methodID_getBlock() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getBlock", "method_15649", "getBlock", "m_15197_"), "(I)Lcom/mojang/serialization/Dynamic;");
    }

    static jobject getBlock(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_getBlock();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setBlock() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setBlock", "method_15647", "setBlock", "m_15202_"), "(ILcom/mojang/serialization/Dynamic;)V");
    }

    static void setBlock(const jobject& obj, const jint& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_setBlock();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_visit() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "upgrade", "method_15652", "visit", "m_15209_"), "(I)I");
    }

    static jint visit(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_visit();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_addInPlaceUpdate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "addFix", "method_15650", "addInPlaceUpdate", "m_15199_"), "(II)V");
    }

    static void addInPlaceUpdate(const jobject& obj, const jint& arg0, const jint& arg1) {
                
       const auto methodID = methodID_addInPlaceUpdate();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_transform() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "write", "method_15651", "transform", "m_15196_"), "()Lcom/mojang/serialization/Dynamic;");
    }

    static jobject transform(const jobject& obj) {
                
       const auto methodID = methodID_transform();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_DATAFIXER_FIX_CHUNKPALETTEDSTORAGEFIX$SECTION_HPP