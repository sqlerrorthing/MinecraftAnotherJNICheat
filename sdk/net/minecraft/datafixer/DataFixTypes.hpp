// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_DATAFIXER_DATAFIXTYPES_HPP
#define NET_MINECRAFT_DATAFIXER_DATAFIXTYPES_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.datafixer.DataFixTypes
 * Remapped: azw
 */
namespace DataFixTypes {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("azw", "net/minecraft/util/datafix/DataFixTypes", "net/minecraft/class_4284", "net/minecraft/datafixer/DataFixTypes", "net/minecraft/src/C_208_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.datafixer.DataFixTypes#LEVEL
    [[maybe_unused]] static jobject get_field_LEVEL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LEVEL", "field_19212", "LEVEL", "LEVEL"), "Lazw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.datafixer.DataFixTypes#LEVEL
    [[maybe_unused]] static void set_field_LEVEL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LEVEL", "field_19212", "LEVEL", "LEVEL"), "Lazw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.datafixer.DataFixTypes#PLAYER
    [[maybe_unused]] static jobject get_field_PLAYER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "PLAYER", "field_19213", "PLAYER", "PLAYER"), "Lazw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.datafixer.DataFixTypes#PLAYER
    [[maybe_unused]] static void set_field_PLAYER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "PLAYER", "field_19213", "PLAYER", "PLAYER"), "Lazw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.datafixer.DataFixTypes#CHUNK
    [[maybe_unused]] static jobject get_field_CHUNK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "CHUNK", "field_19214", "CHUNK", "CHUNK"), "Lazw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.datafixer.DataFixTypes#CHUNK
    [[maybe_unused]] static void set_field_CHUNK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "CHUNK", "field_19214", "CHUNK", "CHUNK"), "Lazw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.datafixer.DataFixTypes#HOTBAR
    [[maybe_unused]] static jobject get_field_HOTBAR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "HOTBAR", "field_19215", "HOTBAR", "HOTBAR"), "Lazw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.datafixer.DataFixTypes#HOTBAR
    [[maybe_unused]] static void set_field_HOTBAR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "HOTBAR", "field_19215", "HOTBAR", "HOTBAR"), "Lazw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.datafixer.DataFixTypes#OPTIONS
    [[maybe_unused]] static jobject get_field_OPTIONS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "OPTIONS", "field_19216", "OPTIONS", "OPTIONS"), "Lazw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.datafixer.DataFixTypes#OPTIONS
    [[maybe_unused]] static void set_field_OPTIONS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "OPTIONS", "field_19216", "OPTIONS", "OPTIONS"), "Lazw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.datafixer.DataFixTypes#STRUCTURE
    [[maybe_unused]] static jobject get_field_STRUCTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "STRUCTURE", "field_19217", "STRUCTURE", "STRUCTURE"), "Lazw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.datafixer.DataFixTypes#STRUCTURE
    [[maybe_unused]] static void set_field_STRUCTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "STRUCTURE", "field_19217", "STRUCTURE", "STRUCTURE"), "Lazw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.datafixer.DataFixTypes#STATS
    [[maybe_unused]] static jobject get_field_STATS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "STATS", "field_19218", "STATS", "STATS"), "Lazw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.datafixer.DataFixTypes#STATS
    [[maybe_unused]] static void set_field_STATS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "STATS", "field_19218", "STATS", "STATS"), "Lazw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.datafixer.DataFixTypes#SAVED_DATA_COMMAND_STORAGE
    [[maybe_unused]] static jobject get_field_SAVED_DATA_COMMAND_STORAGE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "SAVED_DATA_COMMAND_STORAGE", "field_45077", "SAVED_DATA_COMMAND_STORAGE", "SAVED_DATA_COMMAND_STORAGE"), "Lazw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.datafixer.DataFixTypes#SAVED_DATA_COMMAND_STORAGE
    [[maybe_unused]] static void set_field_SAVED_DATA_COMMAND_STORAGE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "SAVED_DATA_COMMAND_STORAGE", "field_45077", "SAVED_DATA_COMMAND_STORAGE", "SAVED_DATA_COMMAND_STORAGE"), "Lazw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.datafixer.DataFixTypes#SAVED_DATA_FORCED_CHUNKS
    [[maybe_unused]] static jobject get_field_SAVED_DATA_FORCED_CHUNKS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "SAVED_DATA_FORCED_CHUNKS", "field_45078", "SAVED_DATA_FORCED_CHUNKS", "SAVED_DATA_FORCED_CHUNKS"), "Lazw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.datafixer.DataFixTypes#SAVED_DATA_FORCED_CHUNKS
    [[maybe_unused]] static void set_field_SAVED_DATA_FORCED_CHUNKS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "SAVED_DATA_FORCED_CHUNKS", "field_45078", "SAVED_DATA_FORCED_CHUNKS", "SAVED_DATA_FORCED_CHUNKS"), "Lazw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.datafixer.DataFixTypes#SAVED_DATA_MAP_DATA
    [[maybe_unused]] static jobject get_field_SAVED_DATA_MAP_DATA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "SAVED_DATA_MAP_DATA", "field_45079", "SAVED_DATA_MAP_DATA", "SAVED_DATA_MAP_DATA"), "Lazw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.datafixer.DataFixTypes#SAVED_DATA_MAP_DATA
    [[maybe_unused]] static void set_field_SAVED_DATA_MAP_DATA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "SAVED_DATA_MAP_DATA", "field_45079", "SAVED_DATA_MAP_DATA", "SAVED_DATA_MAP_DATA"), "Lazw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.datafixer.DataFixTypes#SAVED_DATA_MAP_INDEX
    [[maybe_unused]] static jobject get_field_SAVED_DATA_MAP_INDEX() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "SAVED_DATA_MAP_INDEX", "field_45080", "SAVED_DATA_MAP_INDEX", "SAVED_DATA_MAP_INDEX"), "Lazw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.datafixer.DataFixTypes#SAVED_DATA_MAP_INDEX
    [[maybe_unused]] static void set_field_SAVED_DATA_MAP_INDEX(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "SAVED_DATA_MAP_INDEX", "field_45080", "SAVED_DATA_MAP_INDEX", "SAVED_DATA_MAP_INDEX"), "Lazw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.datafixer.DataFixTypes#SAVED_DATA_RAIDS
    [[maybe_unused]] static jobject get_field_SAVED_DATA_RAIDS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "SAVED_DATA_RAIDS", "field_45081", "SAVED_DATA_RAIDS", "SAVED_DATA_RAIDS"), "Lazw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.datafixer.DataFixTypes#SAVED_DATA_RAIDS
    [[maybe_unused]] static void set_field_SAVED_DATA_RAIDS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "SAVED_DATA_RAIDS", "field_45081", "SAVED_DATA_RAIDS", "SAVED_DATA_RAIDS"), "Lazw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.datafixer.DataFixTypes#SAVED_DATA_RANDOM_SEQUENCES
    [[maybe_unused]] static jobject get_field_SAVED_DATA_RANDOM_SEQUENCES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "SAVED_DATA_RANDOM_SEQUENCES", "field_45082", "SAVED_DATA_RANDOM_SEQUENCES", "SAVED_DATA_RANDOM_SEQUENCES"), "Lazw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.datafixer.DataFixTypes#SAVED_DATA_RANDOM_SEQUENCES
    [[maybe_unused]] static void set_field_SAVED_DATA_RANDOM_SEQUENCES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "SAVED_DATA_RANDOM_SEQUENCES", "field_45082", "SAVED_DATA_RANDOM_SEQUENCES", "SAVED_DATA_RANDOM_SEQUENCES"), "Lazw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.datafixer.DataFixTypes#SAVED_DATA_SCOREBOARD
    [[maybe_unused]] static jobject get_field_SAVED_DATA_SCOREBOARD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "SAVED_DATA_SCOREBOARD", "field_45083", "SAVED_DATA_SCOREBOARD", "SAVED_DATA_SCOREBOARD"), "Lazw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.datafixer.DataFixTypes#SAVED_DATA_SCOREBOARD
    [[maybe_unused]] static void set_field_SAVED_DATA_SCOREBOARD(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "SAVED_DATA_SCOREBOARD", "field_45083", "SAVED_DATA_SCOREBOARD", "SAVED_DATA_SCOREBOARD"), "Lazw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.datafixer.DataFixTypes#SAVED_DATA_STRUCTURE_FEATURE_INDICES
    [[maybe_unused]] static jobject get_field_SAVED_DATA_STRUCTURE_FEATURE_INDICES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "SAVED_DATA_STRUCTURE_FEATURE_INDICES", "field_45084", "SAVED_DATA_STRUCTURE_FEATURE_INDICES", "SAVED_DATA_STRUCTURE_FEATURE_INDICES"), "Lazw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.datafixer.DataFixTypes#SAVED_DATA_STRUCTURE_FEATURE_INDICES
    [[maybe_unused]] static void set_field_SAVED_DATA_STRUCTURE_FEATURE_INDICES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "SAVED_DATA_STRUCTURE_FEATURE_INDICES", "field_45084", "SAVED_DATA_STRUCTURE_FEATURE_INDICES", "SAVED_DATA_STRUCTURE_FEATURE_INDICES"), "Lazw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.datafixer.DataFixTypes#ADVANCEMENTS
    [[maybe_unused]] static jobject get_field_ADVANCEMENTS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "ADVANCEMENTS", "field_19220", "ADVANCEMENTS", "ADVANCEMENTS"), "Lazw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.datafixer.DataFixTypes#ADVANCEMENTS
    [[maybe_unused]] static void set_field_ADVANCEMENTS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "ADVANCEMENTS", "field_19220", "ADVANCEMENTS", "ADVANCEMENTS"), "Lazw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.datafixer.DataFixTypes#POI_CHUNK
    [[maybe_unused]] static jobject get_field_POI_CHUNK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "POI_CHUNK", "field_19221", "POI_CHUNK", "POI_CHUNK"), "Lazw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.datafixer.DataFixTypes#POI_CHUNK
    [[maybe_unused]] static void set_field_POI_CHUNK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "POI_CHUNK", "field_19221", "POI_CHUNK", "POI_CHUNK"), "Lazw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.datafixer.DataFixTypes#WORLD_GEN_SETTINGS
    [[maybe_unused]] static jobject get_field_WORLD_GEN_SETTINGS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "WORLD_GEN_SETTINGS", "field_24640", "WORLD_GEN_SETTINGS", "WORLD_GEN_SETTINGS"), "Lazw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.datafixer.DataFixTypes#WORLD_GEN_SETTINGS
    [[maybe_unused]] static void set_field_WORLD_GEN_SETTINGS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "WORLD_GEN_SETTINGS", "field_24640", "WORLD_GEN_SETTINGS", "WORLD_GEN_SETTINGS"), "Lazw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.datafixer.DataFixTypes#ENTITY_CHUNK
    [[maybe_unused]] static jobject get_field_ENTITY_CHUNK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "ENTITY_CHUNK", "field_26990", "ENTITY_CHUNK", "ENTITY_CHUNK"), "Lazw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.datafixer.DataFixTypes#ENTITY_CHUNK
    [[maybe_unused]] static void set_field_ENTITY_CHUNK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "ENTITY_CHUNK", "field_26990", "ENTITY_CHUNK", "ENTITY_CHUNK"), "Lazw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.datafixer.DataFixTypes#REQUIRED_TYPES
    [[maybe_unused]] static jobject get_field_REQUIRED_TYPES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "TYPES_FOR_LEVEL_LIST", "field_42975", "REQUIRED_TYPES", "f_273922_"), "Ljava/util/Set;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.datafixer.DataFixTypes#REQUIRED_TYPES
    [[maybe_unused]] static void set_field_REQUIRED_TYPES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "TYPES_FOR_LEVEL_LIST", "field_42975", "REQUIRED_TYPES", "f_273922_"), "Ljava/util/Set;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.datafixer.DataFixTypes#typeReference
    static jobject get_field_typeReference(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("u", "type", "field_19222", "typeReference", "f_14497_"), "Lcom/mojang/datafixers/DSL$TypeReference;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.datafixer.DataFixTypes#typeReference
    static void set_field_typeReference(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("u", "type", "field_19222", "typeReference", "f_14497_"), "Lcom/mojang/datafixers/DSL$TypeReference;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_values() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("values", "values", "values", "values", "values"), "()[Lazw;");
    }

    static jobject values() {
       const auto clazz = self();
       const auto methodID = methodID_values();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_valueOf() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("valueOf", "valueOf", "valueOf", "valueOf", "valueOf"), "(Ljava/lang/String;)Lazw;");
    }

    static jobject valueOf(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_valueOf();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getSaveVersionId() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "currentVersion", "method_48132", "getSaveVersionId", "m_264580_"), "()I");
    }

    static jint getSaveVersionId() {
       const auto clazz = self();
       const auto methodID = methodID_getSaveVersionId();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID);
    };
    
    static jmethodID methodID_createDataFixingCodec() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "wrapCodec", "method_53711", "createDataFixingCodec", "m_292606_"), "(Lcom/mojang/serialization/Codec;Lcom/mojang/datafixers/DataFixer;I)Lcom/mojang/serialization/Codec;");
    }

    static jobject createDataFixingCodec(const jobject& obj, const jobject& arg0, const jobject& arg1, const jint& arg2) {
                
       const auto methodID = methodID_createDataFixingCodec();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_update() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "update", "method_48129", "update", "m_264080_"), "(Lcom/mojang/datafixers/DataFixer;Lcom/mojang/serialization/Dynamic;II)Lcom/mojang/serialization/Dynamic;");
    }

    static jobject update(const jobject& obj, const jobject& arg0, const jobject& arg1, const jint& arg2, const jint& arg3) {
                
       const auto methodID = methodID_update();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID__update() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "updateToCurrentVersion", "method_48128", "update", "m_264140_"), "(Lcom/mojang/datafixers/DataFixer;Lcom/mojang/serialization/Dynamic;I)Lcom/mojang/serialization/Dynamic;");
    }

    static jobject _update(const jobject& obj, const jobject& arg0, const jobject& arg1, const jint& arg2) {
                
       const auto methodID = methodID__update();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID___update() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "update", "method_48131", "update", "m_264226_"), "(Lcom/mojang/datafixers/DataFixer;Lub;II)Lub;");
    }

    static jobject __update(const jobject& obj, const jobject& arg0, const jobject& arg1, const jint& arg2, const jint& arg3) {
                
       const auto methodID = methodID___update();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID____update() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "updateToCurrentVersion", "method_48130", "update", "m_264218_"), "(Lcom/mojang/datafixers/DataFixer;Lub;I)Lub;");
    }

    static jobject ___update(const jobject& obj, const jobject& arg0, const jobject& arg1, const jint& arg2) {
                
       const auto methodID = methodID____update();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
};

#endif // NET_MINECRAFT_DATAFIXER_DATAFIXTYPES_HPP