// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_DATAFIXER_TYPEREFERENCES_HPP
#define NET_MINECRAFT_DATAFIXER_TYPEREFERENCES_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.datafixer.TypeReferences
 * Remapped: bgr
 */
namespace TypeReferences {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("bgr", "net/minecraft/util/datafix/fixes/References", "net/minecraft/class_1208", "net/minecraft/datafixer/TypeReferences", "net/minecraft/src/C_342_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.datafixer.TypeReferences#LEVEL
    [[maybe_unused]] static jobject get_field_LEVEL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LEVEL", "field_5710", "LEVEL", "f_16771_"), "Lcom/mojang/datafixers/DSL$TypeReference;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.datafixer.TypeReferences#LEVEL
    [[maybe_unused]] static void set_field_LEVEL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LEVEL", "field_5710", "LEVEL", "f_16771_"), "Lcom/mojang/datafixers/DSL$TypeReference;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.datafixer.TypeReferences#PLAYER
    [[maybe_unused]] static jobject get_field_PLAYER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "PLAYER", "field_5715", "PLAYER", "f_16772_"), "Lcom/mojang/datafixers/DSL$TypeReference;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.datafixer.TypeReferences#PLAYER
    [[maybe_unused]] static void set_field_PLAYER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "PLAYER", "field_5715", "PLAYER", "f_16772_"), "Lcom/mojang/datafixers/DSL$TypeReference;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.datafixer.TypeReferences#CHUNK
    [[maybe_unused]] static jobject get_field_CHUNK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "CHUNK", "field_5726", "CHUNK", "f_16773_"), "Lcom/mojang/datafixers/DSL$TypeReference;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.datafixer.TypeReferences#CHUNK
    [[maybe_unused]] static void set_field_CHUNK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "CHUNK", "field_5726", "CHUNK", "f_16773_"), "Lcom/mojang/datafixers/DSL$TypeReference;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.datafixer.TypeReferences#HOTBAR
    [[maybe_unused]] static jobject get_field_HOTBAR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "HOTBAR", "field_5722", "HOTBAR", "f_16774_"), "Lcom/mojang/datafixers/DSL$TypeReference;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.datafixer.TypeReferences#HOTBAR
    [[maybe_unused]] static void set_field_HOTBAR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "HOTBAR", "field_5722", "HOTBAR", "f_16774_"), "Lcom/mojang/datafixers/DSL$TypeReference;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.datafixer.TypeReferences#OPTIONS
    [[maybe_unused]] static jobject get_field_OPTIONS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "OPTIONS", "field_5717", "OPTIONS", "f_16775_"), "Lcom/mojang/datafixers/DSL$TypeReference;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.datafixer.TypeReferences#OPTIONS
    [[maybe_unused]] static void set_field_OPTIONS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "OPTIONS", "field_5717", "OPTIONS", "f_16775_"), "Lcom/mojang/datafixers/DSL$TypeReference;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.datafixer.TypeReferences#STRUCTURE
    [[maybe_unused]] static jobject get_field_STRUCTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "STRUCTURE", "field_5716", "STRUCTURE", "f_16776_"), "Lcom/mojang/datafixers/DSL$TypeReference;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.datafixer.TypeReferences#STRUCTURE
    [[maybe_unused]] static void set_field_STRUCTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "STRUCTURE", "field_5716", "STRUCTURE", "f_16776_"), "Lcom/mojang/datafixers/DSL$TypeReference;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.datafixer.TypeReferences#STATS
    [[maybe_unused]] static jobject get_field_STATS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "STATS", "field_5730", "STATS", "f_16777_"), "Lcom/mojang/datafixers/DSL$TypeReference;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.datafixer.TypeReferences#STATS
    [[maybe_unused]] static void set_field_STATS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "STATS", "field_5730", "STATS", "f_16777_"), "Lcom/mojang/datafixers/DSL$TypeReference;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.datafixer.TypeReferences#SAVED_DATA_COMMAND_STORAGE
    [[maybe_unused]] static jobject get_field_SAVED_DATA_COMMAND_STORAGE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "SAVED_DATA_COMMAND_STORAGE", "field_45090", "SAVED_DATA_COMMAND_STORAGE", "f_291566_"), "Lcom/mojang/datafixers/DSL$TypeReference;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.datafixer.TypeReferences#SAVED_DATA_COMMAND_STORAGE
    [[maybe_unused]] static void set_field_SAVED_DATA_COMMAND_STORAGE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "SAVED_DATA_COMMAND_STORAGE", "field_45090", "SAVED_DATA_COMMAND_STORAGE", "f_291566_"), "Lcom/mojang/datafixers/DSL$TypeReference;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.datafixer.TypeReferences#SAVED_DATA_CHUNKS
    [[maybe_unused]] static jobject get_field_SAVED_DATA_CHUNKS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "SAVED_DATA_FORCED_CHUNKS", "field_45091", "SAVED_DATA_CHUNKS", "f_291808_"), "Lcom/mojang/datafixers/DSL$TypeReference;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.datafixer.TypeReferences#SAVED_DATA_CHUNKS
    [[maybe_unused]] static void set_field_SAVED_DATA_CHUNKS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "SAVED_DATA_FORCED_CHUNKS", "field_45091", "SAVED_DATA_CHUNKS", "f_291808_"), "Lcom/mojang/datafixers/DSL$TypeReference;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.datafixer.TypeReferences#SAVED_DATA_MAP_DATA
    [[maybe_unused]] static jobject get_field_SAVED_DATA_MAP_DATA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "SAVED_DATA_MAP_DATA", "field_45092", "SAVED_DATA_MAP_DATA", "f_291210_"), "Lcom/mojang/datafixers/DSL$TypeReference;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.datafixer.TypeReferences#SAVED_DATA_MAP_DATA
    [[maybe_unused]] static void set_field_SAVED_DATA_MAP_DATA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "SAVED_DATA_MAP_DATA", "field_45092", "SAVED_DATA_MAP_DATA", "f_291210_"), "Lcom/mojang/datafixers/DSL$TypeReference;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.datafixer.TypeReferences#SAVED_DATA_IDCOUNTS
    [[maybe_unused]] static jobject get_field_SAVED_DATA_IDCOUNTS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "SAVED_DATA_MAP_INDEX", "field_45093", "SAVED_DATA_IDCOUNTS", "f_290883_"), "Lcom/mojang/datafixers/DSL$TypeReference;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.datafixer.TypeReferences#SAVED_DATA_IDCOUNTS
    [[maybe_unused]] static void set_field_SAVED_DATA_IDCOUNTS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "SAVED_DATA_MAP_INDEX", "field_45093", "SAVED_DATA_IDCOUNTS", "f_290883_"), "Lcom/mojang/datafixers/DSL$TypeReference;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.datafixer.TypeReferences#SAVED_DATA_RAIDS
    [[maybe_unused]] static jobject get_field_SAVED_DATA_RAIDS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "SAVED_DATA_RAIDS", "field_45094", "SAVED_DATA_RAIDS", "f_291023_"), "Lcom/mojang/datafixers/DSL$TypeReference;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.datafixer.TypeReferences#SAVED_DATA_RAIDS
    [[maybe_unused]] static void set_field_SAVED_DATA_RAIDS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "SAVED_DATA_RAIDS", "field_45094", "SAVED_DATA_RAIDS", "f_291023_"), "Lcom/mojang/datafixers/DSL$TypeReference;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.datafixer.TypeReferences#SAVED_DATA_RANDOM_SEQUENCES
    [[maybe_unused]] static jobject get_field_SAVED_DATA_RANDOM_SEQUENCES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "SAVED_DATA_RANDOM_SEQUENCES", "field_45095", "SAVED_DATA_RANDOM_SEQUENCES", "f_291715_"), "Lcom/mojang/datafixers/DSL$TypeReference;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.datafixer.TypeReferences#SAVED_DATA_RANDOM_SEQUENCES
    [[maybe_unused]] static void set_field_SAVED_DATA_RANDOM_SEQUENCES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "SAVED_DATA_RANDOM_SEQUENCES", "field_45095", "SAVED_DATA_RANDOM_SEQUENCES", "f_291715_"), "Lcom/mojang/datafixers/DSL$TypeReference;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.datafixer.TypeReferences#SAVED_DATA_STRUCTURE_FEATURE_INDICES
    [[maybe_unused]] static jobject get_field_SAVED_DATA_STRUCTURE_FEATURE_INDICES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "SAVED_DATA_STRUCTURE_FEATURE_INDICES", "field_45096", "SAVED_DATA_STRUCTURE_FEATURE_INDICES", "f_290756_"), "Lcom/mojang/datafixers/DSL$TypeReference;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.datafixer.TypeReferences#SAVED_DATA_STRUCTURE_FEATURE_INDICES
    [[maybe_unused]] static void set_field_SAVED_DATA_STRUCTURE_FEATURE_INDICES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "SAVED_DATA_STRUCTURE_FEATURE_INDICES", "field_45096", "SAVED_DATA_STRUCTURE_FEATURE_INDICES", "f_290756_"), "Lcom/mojang/datafixers/DSL$TypeReference;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.datafixer.TypeReferences#SAVED_DATA_SCOREBOARD
    [[maybe_unused]] static jobject get_field_SAVED_DATA_SCOREBOARD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "SAVED_DATA_SCOREBOARD", "field_45097", "SAVED_DATA_SCOREBOARD", "f_290388_"), "Lcom/mojang/datafixers/DSL$TypeReference;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.datafixer.TypeReferences#SAVED_DATA_SCOREBOARD
    [[maybe_unused]] static void set_field_SAVED_DATA_SCOREBOARD(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "SAVED_DATA_SCOREBOARD", "field_45097", "SAVED_DATA_SCOREBOARD", "f_290388_"), "Lcom/mojang/datafixers/DSL$TypeReference;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.datafixer.TypeReferences#ADVANCEMENTS
    [[maybe_unused]] static jobject get_field_ADVANCEMENTS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "ADVANCEMENTS", "field_5725", "ADVANCEMENTS", "f_16779_"), "Lcom/mojang/datafixers/DSL$TypeReference;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.datafixer.TypeReferences#ADVANCEMENTS
    [[maybe_unused]] static void set_field_ADVANCEMENTS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "ADVANCEMENTS", "field_5725", "ADVANCEMENTS", "f_16779_"), "Lcom/mojang/datafixers/DSL$TypeReference;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.datafixer.TypeReferences#POI_CHUNK
    [[maybe_unused]] static jobject get_field_POI_CHUNK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "POI_CHUNK", "field_19224", "POI_CHUNK", "f_16780_"), "Lcom/mojang/datafixers/DSL$TypeReference;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.datafixer.TypeReferences#POI_CHUNK
    [[maybe_unused]] static void set_field_POI_CHUNK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "POI_CHUNK", "field_19224", "POI_CHUNK", "f_16780_"), "Lcom/mojang/datafixers/DSL$TypeReference;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.datafixer.TypeReferences#ENTITY_CHUNK
    [[maybe_unused]] static jobject get_field_ENTITY_CHUNK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "ENTITY_CHUNK", "field_26993", "ENTITY_CHUNK", "f_145628_"), "Lcom/mojang/datafixers/DSL$TypeReference;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.datafixer.TypeReferences#ENTITY_CHUNK
    [[maybe_unused]] static void set_field_ENTITY_CHUNK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "ENTITY_CHUNK", "field_26993", "ENTITY_CHUNK", "f_145628_"), "Lcom/mojang/datafixers/DSL$TypeReference;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.datafixer.TypeReferences#BLOCK_ENTITY
    [[maybe_unused]] static jobject get_field_BLOCK_ENTITY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "BLOCK_ENTITY", "field_5727", "BLOCK_ENTITY", "f_16781_"), "Lcom/mojang/datafixers/DSL$TypeReference;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.datafixer.TypeReferences#BLOCK_ENTITY
    [[maybe_unused]] static void set_field_BLOCK_ENTITY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "BLOCK_ENTITY", "field_5727", "BLOCK_ENTITY", "f_16781_"), "Lcom/mojang/datafixers/DSL$TypeReference;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.datafixer.TypeReferences#ITEM_STACK
    [[maybe_unused]] static jobject get_field_ITEM_STACK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "ITEM_STACK", "field_5712", "ITEM_STACK", "f_16782_"), "Lcom/mojang/datafixers/DSL$TypeReference;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.datafixer.TypeReferences#ITEM_STACK
    [[maybe_unused]] static void set_field_ITEM_STACK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "ITEM_STACK", "field_5712", "ITEM_STACK", "f_16782_"), "Lcom/mojang/datafixers/DSL$TypeReference;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.datafixer.TypeReferences#BLOCK_STATE
    [[maybe_unused]] static jobject get_field_BLOCK_STATE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "BLOCK_STATE", "field_5720", "BLOCK_STATE", "f_16783_"), "Lcom/mojang/datafixers/DSL$TypeReference;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.datafixer.TypeReferences#BLOCK_STATE
    [[maybe_unused]] static void set_field_BLOCK_STATE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "BLOCK_STATE", "field_5720", "BLOCK_STATE", "f_16783_"), "Lcom/mojang/datafixers/DSL$TypeReference;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.datafixer.TypeReferences#FLAT_BLOCK_STATE
    [[maybe_unused]] static jobject get_field_FLAT_BLOCK_STATE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "FLAT_BLOCK_STATE", "field_47727", "FLAT_BLOCK_STATE", "f_314331_"), "Lcom/mojang/datafixers/DSL$TypeReference;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.datafixer.TypeReferences#FLAT_BLOCK_STATE
    [[maybe_unused]] static void set_field_FLAT_BLOCK_STATE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "FLAT_BLOCK_STATE", "field_47727", "FLAT_BLOCK_STATE", "f_314331_"), "Lcom/mojang/datafixers/DSL$TypeReference;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.datafixer.TypeReferences#DATA_COMPONENTS
    [[maybe_unused]] static jobject get_field_DATA_COMPONENTS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "DATA_COMPONENTS", "field_49205", "DATA_COMPONENTS", "f_316623_"), "Lcom/mojang/datafixers/DSL$TypeReference;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.datafixer.TypeReferences#DATA_COMPONENTS
    [[maybe_unused]] static void set_field_DATA_COMPONENTS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "DATA_COMPONENTS", "field_49205", "DATA_COMPONENTS", "f_316623_"), "Lcom/mojang/datafixers/DSL$TypeReference;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.datafixer.TypeReferences#VILLAGER_TRADE
    [[maybe_unused]] static jobject get_field_VILLAGER_TRADE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "VILLAGER_TRADE", "field_51368", "VILLAGER_TRADE", "f_315894_"), "Lcom/mojang/datafixers/DSL$TypeReference;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.datafixer.TypeReferences#VILLAGER_TRADE
    [[maybe_unused]] static void set_field_VILLAGER_TRADE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "VILLAGER_TRADE", "field_51368", "VILLAGER_TRADE", "f_315894_"), "Lcom/mojang/datafixers/DSL$TypeReference;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.datafixer.TypeReferences#PARTICLE
    [[maybe_unused]] static jobject get_field_PARTICLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("y", "PARTICLE", "field_51369", "PARTICLE", "f_315042_"), "Lcom/mojang/datafixers/DSL$TypeReference;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.datafixer.TypeReferences#PARTICLE
    [[maybe_unused]] static void set_field_PARTICLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("y", "PARTICLE", "field_51369", "PARTICLE", "f_315042_"), "Lcom/mojang/datafixers/DSL$TypeReference;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.datafixer.TypeReferences#ENTITY_NAME
    [[maybe_unused]] static jobject get_field_ENTITY_NAME() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("z", "ENTITY_NAME", "field_5719", "ENTITY_NAME", "f_16784_"), "Lcom/mojang/datafixers/DSL$TypeReference;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.datafixer.TypeReferences#ENTITY_NAME
    [[maybe_unused]] static void set_field_ENTITY_NAME(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("z", "ENTITY_NAME", "field_5719", "ENTITY_NAME", "f_16784_"), "Lcom/mojang/datafixers/DSL$TypeReference;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.datafixer.TypeReferences#ENTITY_TREE
    [[maybe_unused]] static jobject get_field_ENTITY_TREE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("A", "ENTITY_TREE", "field_5723", "ENTITY_TREE", "f_16785_"), "Lcom/mojang/datafixers/DSL$TypeReference;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.datafixer.TypeReferences#ENTITY_TREE
    [[maybe_unused]] static void set_field_ENTITY_TREE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("A", "ENTITY_TREE", "field_5723", "ENTITY_TREE", "f_16785_"), "Lcom/mojang/datafixers/DSL$TypeReference;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.datafixer.TypeReferences#ENTITY
    [[maybe_unused]] static jobject get_field_ENTITY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("B", "ENTITY", "field_5729", "ENTITY", "f_16786_"), "Lcom/mojang/datafixers/DSL$TypeReference;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.datafixer.TypeReferences#ENTITY
    [[maybe_unused]] static void set_field_ENTITY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("B", "ENTITY", "field_5729", "ENTITY", "f_16786_"), "Lcom/mojang/datafixers/DSL$TypeReference;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.datafixer.TypeReferences#BLOCK_NAME
    [[maybe_unused]] static jobject get_field_BLOCK_NAME() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("C", "BLOCK_NAME", "field_5731", "BLOCK_NAME", "f_16787_"), "Lcom/mojang/datafixers/DSL$TypeReference;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.datafixer.TypeReferences#BLOCK_NAME
    [[maybe_unused]] static void set_field_BLOCK_NAME(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("C", "BLOCK_NAME", "field_5731", "BLOCK_NAME", "f_16787_"), "Lcom/mojang/datafixers/DSL$TypeReference;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.datafixer.TypeReferences#ITEM_NAME
    [[maybe_unused]] static jobject get_field_ITEM_NAME() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("D", "ITEM_NAME", "field_5713", "ITEM_NAME", "f_16788_"), "Lcom/mojang/datafixers/DSL$TypeReference;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.datafixer.TypeReferences#ITEM_NAME
    [[maybe_unused]] static void set_field_ITEM_NAME(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("D", "ITEM_NAME", "field_5713", "ITEM_NAME", "f_16788_"), "Lcom/mojang/datafixers/DSL$TypeReference;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.datafixer.TypeReferences#GAME_EVENT_NAME
    [[maybe_unused]] static jobject get_field_GAME_EVENT_NAME() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("E", "GAME_EVENT_NAME", "field_38380", "GAME_EVENT_NAME", "f_216719_"), "Lcom/mojang/datafixers/DSL$TypeReference;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.datafixer.TypeReferences#GAME_EVENT_NAME
    [[maybe_unused]] static void set_field_GAME_EVENT_NAME(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("E", "GAME_EVENT_NAME", "field_38380", "GAME_EVENT_NAME", "f_216719_"), "Lcom/mojang/datafixers/DSL$TypeReference;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.datafixer.TypeReferences#UNTAGGED_SPAWNER
    [[maybe_unused]] static jobject get_field_UNTAGGED_SPAWNER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("F", "UNTAGGED_SPAWNER", "field_5718", "UNTAGGED_SPAWNER", "f_16789_"), "Lcom/mojang/datafixers/DSL$TypeReference;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.datafixer.TypeReferences#UNTAGGED_SPAWNER
    [[maybe_unused]] static void set_field_UNTAGGED_SPAWNER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("F", "UNTAGGED_SPAWNER", "field_5718", "UNTAGGED_SPAWNER", "f_16789_"), "Lcom/mojang/datafixers/DSL$TypeReference;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.datafixer.TypeReferences#STRUCTURE_FEATURE
    [[maybe_unused]] static jobject get_field_STRUCTURE_FEATURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("G", "STRUCTURE_FEATURE", "field_5724", "STRUCTURE_FEATURE", "f_16790_"), "Lcom/mojang/datafixers/DSL$TypeReference;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.datafixer.TypeReferences#STRUCTURE_FEATURE
    [[maybe_unused]] static void set_field_STRUCTURE_FEATURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("G", "STRUCTURE_FEATURE", "field_5724", "STRUCTURE_FEATURE", "f_16790_"), "Lcom/mojang/datafixers/DSL$TypeReference;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.datafixer.TypeReferences#OBJECTIVE
    [[maybe_unused]] static jobject get_field_OBJECTIVE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("H", "OBJECTIVE", "field_5721", "OBJECTIVE", "f_16791_"), "Lcom/mojang/datafixers/DSL$TypeReference;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.datafixer.TypeReferences#OBJECTIVE
    [[maybe_unused]] static void set_field_OBJECTIVE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("H", "OBJECTIVE", "field_5721", "OBJECTIVE", "f_16791_"), "Lcom/mojang/datafixers/DSL$TypeReference;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.datafixer.TypeReferences#TEAM
    [[maybe_unused]] static jobject get_field_TEAM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("I", "TEAM", "field_5714", "TEAM", "f_16792_"), "Lcom/mojang/datafixers/DSL$TypeReference;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.datafixer.TypeReferences#TEAM
    [[maybe_unused]] static void set_field_TEAM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("I", "TEAM", "field_5714", "TEAM", "f_16792_"), "Lcom/mojang/datafixers/DSL$TypeReference;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.datafixer.TypeReferences#RECIPE
    [[maybe_unused]] static jobject get_field_RECIPE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("J", "RECIPE", "field_5711", "RECIPE", "f_16793_"), "Lcom/mojang/datafixers/DSL$TypeReference;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.datafixer.TypeReferences#RECIPE
    [[maybe_unused]] static void set_field_RECIPE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("J", "RECIPE", "field_5711", "RECIPE", "f_16793_"), "Lcom/mojang/datafixers/DSL$TypeReference;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.datafixer.TypeReferences#BIOME
    [[maybe_unused]] static jobject get_field_BIOME() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("K", "BIOME", "field_5728", "BIOME", "f_16794_"), "Lcom/mojang/datafixers/DSL$TypeReference;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.datafixer.TypeReferences#BIOME
    [[maybe_unused]] static void set_field_BIOME(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("K", "BIOME", "field_5728", "BIOME", "f_16794_"), "Lcom/mojang/datafixers/DSL$TypeReference;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.datafixer.TypeReferences#MULTI_NOISE_BIOME_SOURCE_PARAMETER_LIST
    [[maybe_unused]] static jobject get_field_MULTI_NOISE_BIOME_SOURCE_PARAMETER_LIST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("L", "MULTI_NOISE_BIOME_SOURCE_PARAMETER_LIST", "field_43179", "MULTI_NOISE_BIOME_SOURCE_PARAMETER_LIST", "f_276527_"), "Lcom/mojang/datafixers/DSL$TypeReference;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.datafixer.TypeReferences#MULTI_NOISE_BIOME_SOURCE_PARAMETER_LIST
    [[maybe_unused]] static void set_field_MULTI_NOISE_BIOME_SOURCE_PARAMETER_LIST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("L", "MULTI_NOISE_BIOME_SOURCE_PARAMETER_LIST", "field_43179", "MULTI_NOISE_BIOME_SOURCE_PARAMETER_LIST", "f_276527_"), "Lcom/mojang/datafixers/DSL$TypeReference;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.datafixer.TypeReferences#WORLD_GEN_SETTINGS
    [[maybe_unused]] static jobject get_field_WORLD_GEN_SETTINGS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("M", "WORLD_GEN_SETTINGS", "field_23067", "WORLD_GEN_SETTINGS", "f_16795_"), "Lcom/mojang/datafixers/DSL$TypeReference;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.datafixer.TypeReferences#WORLD_GEN_SETTINGS
    [[maybe_unused]] static void set_field_WORLD_GEN_SETTINGS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("M", "WORLD_GEN_SETTINGS", "field_23067", "WORLD_GEN_SETTINGS", "f_16795_"), "Lcom/mojang/datafixers/DSL$TypeReference;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_create() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "reference", "method_59518", "create", "m_323226_"), "(Ljava/lang/String;)Lcom/mojang/datafixers/DSL$TypeReference;");
    }

    static jobject create(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_create();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_DATAFIXER_TYPEREFERENCES_HPP