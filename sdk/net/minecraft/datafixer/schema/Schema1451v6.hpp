// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_DATAFIXER_SCHEMA_SCHEMA1451V6_HPP
#define NET_MINECRAFT_DATAFIXER_SCHEMA_SCHEMA1451V6_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.datafixer.schema.Schema1451v6
 * Remapped: bis
 */
namespace Schema1451v6 {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("bis", "net/minecraft/util/datafix/schemas/V1451_6", "net/minecraft/class_1236", "net/minecraft/datafixer/schema/Schema1451v6", "net/minecraft/src/C_387_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.datafixer.schema.Schema1451v6#SPECIAL_TYPE
    [[maybe_unused]] static jobject get_field_SPECIAL_TYPE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "SPECIAL_OBJECTIVE_MARKER", "field_34013", "SPECIAL_TYPE", "f_181073_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.datafixer.schema.Schema1451v6#SPECIAL_TYPE
    [[maybe_unused]] static void set_field_SPECIAL_TYPE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "SPECIAL_OBJECTIVE_MARKER", "field_34013", "SPECIAL_TYPE", "f_181073_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static protected field net.minecraft.datafixer.schema.Schema1451v6#field_34014
    [[maybe_unused]] static jobject get_field_field_34014() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "UNPACK_OBJECTIVE_ID", "field_34014", "field_34014", "f_181074_"), "Lcom/mojang/datafixers/types/templates/Hook$HookFunction;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static protected field net.minecraft.datafixer.schema.Schema1451v6#field_34014
    [[maybe_unused]] static void set_field_field_34014(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "UNPACK_OBJECTIVE_ID", "field_34014", "field_34014", "f_181074_"), "Lcom/mojang/datafixers/types/templates/Hook$HookFunction;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static protected field net.minecraft.datafixer.schema.Schema1451v6#field_34015
    [[maybe_unused]] static jobject get_field_field_34015() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "REPACK_OBJECTIVE_ID", "field_34015", "field_34015", "f_181075_"), "Lcom/mojang/datafixers/types/templates/Hook$HookFunction;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static protected field net.minecraft.datafixer.schema.Schema1451v6#field_34015
    [[maybe_unused]] static void set_field_field_34015(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "REPACK_OBJECTIVE_ID", "field_34015", "field_34015", "f_181075_"), "Lcom/mojang/datafixers/types/templates/Hook$HookFunction;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_registerTypes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("registerTypes", "registerTypes", "registerTypes", "registerTypes", "registerTypes"), "(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/util/Map;)V");
    }

    static void registerTypes(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_registerTypes();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_method_37389() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "createCriterionTypes", "method_37389", "method_37389", "m_181077_"), "(Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map;");
    }

    static jobject method_37389(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_method_37389();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_toDotSeparated() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "packNamespacedWithDot", "method_52506", "toDotSeparated", "m_293010_"), "(Ljava/lang/String;)Ljava/lang/String;");
    }

    static jobject toDotSeparated(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_toDotSeparated();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_DATAFIXER_SCHEMA_SCHEMA1451V6_HPP