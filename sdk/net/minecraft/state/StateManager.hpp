// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_STATE_STATEMANAGER_HPP
#define NET_MINECRAFT_STATE_STATEMANAGER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.state.StateManager
 * Remapped: dtd
 */
namespace StateManager {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("dtd", "net/minecraft/world/level/block/state/StateDefinition", "net/minecraft/class_2689", "net/minecraft/state/StateManager", "net/minecraft/src/C_2065_"));
        }
        return cachedClass;
    };

    // getter for static default field net.minecraft.state.StateManager#VALID_NAME_PATTERN
    [[maybe_unused]] static jobject get_field_VALID_NAME_PATTERN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "NAME_PATTERN", "field_12314", "VALID_NAME_PATTERN", "f_61046_"), "Ljava/util/regex/Pattern;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static default field net.minecraft.state.StateManager#VALID_NAME_PATTERN
    [[maybe_unused]] static void set_field_VALID_NAME_PATTERN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "NAME_PATTERN", "field_12314", "VALID_NAME_PATTERN", "f_61046_"), "Ljava/util/regex/Pattern;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.state.StateManager#owner
    static jobject get_field_owner(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "owner", "field_12317", "owner", "f_61047_"), "Ljava/lang/Object;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.state.StateManager#owner
    static void set_field_owner(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "owner", "field_12317", "owner", "f_61047_"), "Ljava/lang/Object;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.state.StateManager#properties
    static jobject get_field_properties(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "propertiesByName", "field_12316", "properties", "f_61048_"), "Lcom/google/common/collect/ImmutableSortedMap;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.state.StateManager#properties
    static void set_field_properties(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "propertiesByName", "field_12316", "properties", "f_61048_"), "Lcom/google/common/collect/ImmutableSortedMap;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.state.StateManager#states
    static jobject get_field_states(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "states", "field_12315", "states", "f_61049_"), "Lcom/google/common/collect/ImmutableList;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.state.StateManager#states
    static void set_field_states(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "states", "field_12315", "states", "f_61049_"), "Lcom/google/common/collect/ImmutableList;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_addFieldToMapCodec() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "appendPropertyCodec", "method_30040", "addFieldToMapCodec", "m_61076_"), "(Lcom/mojang/serialization/MapCodec;Ljava/util/function/Supplier;Ljava/lang/String;Lduf;)Lcom/mojang/serialization/MapCodec;");
    }

    static jobject addFieldToMapCodec(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_addFieldToMapCodec();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_getStates() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getPossibleStates", "method_11662", "getStates", "m_61056_"), "()Lcom/google/common/collect/ImmutableList;");
    }

    static jobject getStates(const jobject& obj) {
                
       const auto methodID = methodID_getStates();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getDefaultState() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "any", "method_11664", "getDefaultState", "m_61090_"), "()Ldte;");
    }

    static jobject getDefaultState(const jobject& obj) {
                
       const auto methodID = methodID_getDefaultState();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getOwner() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getOwner", "method_11660", "getOwner", "m_61091_"), "()Ljava/lang/Object;");
    }

    static jobject getOwner(const jobject& obj) {
                
       const auto methodID = methodID_getOwner();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getProperties() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getProperties", "method_11659", "getProperties", "m_61092_"), "()Ljava/util/Collection;");
    }

    static jobject getProperties(const jobject& obj) {
                
       const auto methodID = methodID_getProperties();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getProperty() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getProperty", "method_11663", "getProperty", "m_61081_"), "(Ljava/lang/String;)Lduf;");
    }

    static jobject getProperty(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getProperty();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_STATE_STATEMANAGER_HPP