// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_STATE_PROPERTY_PROPERTIES_HPP
#define NET_MINECRAFT_STATE_PROPERTY_PROPERTIES_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.state.property.Properties
 * Remapped: dts
 */
namespace Properties {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("dts", "net/minecraft/world/level/block/state/properties/BlockStateProperties", "net/minecraft/class_2741", "net/minecraft/state/property/Properties", "net/minecraft/src/C_2083_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.state.property.Properties#ATTACHED
    [[maybe_unused]] static jobject get_field_ATTACHED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "ATTACHED", "field_12493", "ATTACHED", "f_61386_"), "Ldtt;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#ATTACHED
    [[maybe_unused]] static void set_field_ATTACHED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "ATTACHED", "field_12493", "ATTACHED", "f_61386_"), "Ldtt;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#BOTTOM
    [[maybe_unused]] static jobject get_field_BOTTOM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "BOTTOM", "field_16562", "BOTTOM", "f_61427_"), "Ldtt;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#BOTTOM
    [[maybe_unused]] static void set_field_BOTTOM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "BOTTOM", "field_16562", "BOTTOM", "f_61427_"), "Ldtt;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#CONDITIONAL
    [[maybe_unused]] static jobject get_field_CONDITIONAL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "CONDITIONAL", "field_12486", "CONDITIONAL", "f_61428_"), "Ldtt;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#CONDITIONAL
    [[maybe_unused]] static void set_field_CONDITIONAL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "CONDITIONAL", "field_12486", "CONDITIONAL", "f_61428_"), "Ldtt;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#DISARMED
    [[maybe_unused]] static jobject get_field_DISARMED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "DISARMED", "field_12553", "DISARMED", "f_61429_"), "Ldtt;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#DISARMED
    [[maybe_unused]] static void set_field_DISARMED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "DISARMED", "field_12553", "DISARMED", "f_61429_"), "Ldtt;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#DRAG
    [[maybe_unused]] static jobject get_field_DRAG() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "DRAG", "field_12526", "DRAG", "f_61430_"), "Ldtt;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#DRAG
    [[maybe_unused]] static void set_field_DRAG(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "DRAG", "field_12526", "DRAG", "f_61430_"), "Ldtt;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#ENABLED
    [[maybe_unused]] static jobject get_field_ENABLED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "ENABLED", "field_12515", "ENABLED", "f_61431_"), "Ldtt;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#ENABLED
    [[maybe_unused]] static void set_field_ENABLED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "ENABLED", "field_12515", "ENABLED", "f_61431_"), "Ldtt;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#EXTENDED
    [[maybe_unused]] static jobject get_field_EXTENDED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "EXTENDED", "field_12552", "EXTENDED", "f_61432_"), "Ldtt;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#EXTENDED
    [[maybe_unused]] static void set_field_EXTENDED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "EXTENDED", "field_12552", "EXTENDED", "f_61432_"), "Ldtt;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#EYE
    [[maybe_unused]] static jobject get_field_EYE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "EYE", "field_12488", "EYE", "f_61433_"), "Ldtt;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#EYE
    [[maybe_unused]] static void set_field_EYE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "EYE", "field_12488", "EYE", "f_61433_"), "Ldtt;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#FALLING
    [[maybe_unused]] static jobject get_field_FALLING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "FALLING", "field_12480", "FALLING", "f_61434_"), "Ldtt;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#FALLING
    [[maybe_unused]] static void set_field_FALLING(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "FALLING", "field_12480", "FALLING", "f_61434_"), "Ldtt;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#HANGING
    [[maybe_unused]] static jobject get_field_HANGING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "HANGING", "field_16561", "HANGING", "f_61435_"), "Ldtt;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#HANGING
    [[maybe_unused]] static void set_field_HANGING(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "HANGING", "field_16561", "HANGING", "f_61435_"), "Ldtt;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#HAS_BOTTLE_0
    [[maybe_unused]] static jobject get_field_HAS_BOTTLE_0() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "HAS_BOTTLE_0", "field_12554", "HAS_BOTTLE_0", "f_61436_"), "Ldtt;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#HAS_BOTTLE_0
    [[maybe_unused]] static void set_field_HAS_BOTTLE_0(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "HAS_BOTTLE_0", "field_12554", "HAS_BOTTLE_0", "f_61436_"), "Ldtt;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#HAS_BOTTLE_1
    [[maybe_unused]] static jobject get_field_HAS_BOTTLE_1() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "HAS_BOTTLE_1", "field_12500", "HAS_BOTTLE_1", "f_61437_"), "Ldtt;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#HAS_BOTTLE_1
    [[maybe_unused]] static void set_field_HAS_BOTTLE_1(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "HAS_BOTTLE_1", "field_12500", "HAS_BOTTLE_1", "f_61437_"), "Ldtt;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#HAS_BOTTLE_2
    [[maybe_unused]] static jobject get_field_HAS_BOTTLE_2() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "HAS_BOTTLE_2", "field_12531", "HAS_BOTTLE_2", "f_61438_"), "Ldtt;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#HAS_BOTTLE_2
    [[maybe_unused]] static void set_field_HAS_BOTTLE_2(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "HAS_BOTTLE_2", "field_12531", "HAS_BOTTLE_2", "f_61438_"), "Ldtt;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#HAS_RECORD
    [[maybe_unused]] static jobject get_field_HAS_RECORD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "HAS_RECORD", "field_12544", "HAS_RECORD", "f_61439_"), "Ldtt;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#HAS_RECORD
    [[maybe_unused]] static void set_field_HAS_RECORD(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "HAS_RECORD", "field_12544", "HAS_RECORD", "f_61439_"), "Ldtt;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#HAS_BOOK
    [[maybe_unused]] static jobject get_field_HAS_BOOK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "HAS_BOOK", "field_17393", "HAS_BOOK", "f_61440_"), "Ldtt;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#HAS_BOOK
    [[maybe_unused]] static void set_field_HAS_BOOK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "HAS_BOOK", "field_17393", "HAS_BOOK", "f_61440_"), "Ldtt;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#INVERTED
    [[maybe_unused]] static jobject get_field_INVERTED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "INVERTED", "field_12501", "INVERTED", "f_61441_"), "Ldtt;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#INVERTED
    [[maybe_unused]] static void set_field_INVERTED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "INVERTED", "field_12501", "INVERTED", "f_61441_"), "Ldtt;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#IN_WALL
    [[maybe_unused]] static jobject get_field_IN_WALL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "IN_WALL", "field_12491", "IN_WALL", "f_61442_"), "Ldtt;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#IN_WALL
    [[maybe_unused]] static void set_field_IN_WALL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "IN_WALL", "field_12491", "IN_WALL", "f_61442_"), "Ldtt;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#LIT
    [[maybe_unused]] static jobject get_field_LIT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "LIT", "field_12548", "LIT", "f_61443_"), "Ldtt;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#LIT
    [[maybe_unused]] static void set_field_LIT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "LIT", "field_12548", "LIT", "f_61443_"), "Ldtt;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#LOCKED
    [[maybe_unused]] static jobject get_field_LOCKED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "LOCKED", "field_12502", "LOCKED", "f_61444_"), "Ldtt;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#LOCKED
    [[maybe_unused]] static void set_field_LOCKED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "LOCKED", "field_12502", "LOCKED", "f_61444_"), "Ldtt;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#OCCUPIED
    [[maybe_unused]] static jobject get_field_OCCUPIED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "OCCUPIED", "field_12528", "OCCUPIED", "f_61445_"), "Ldtt;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#OCCUPIED
    [[maybe_unused]] static void set_field_OCCUPIED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "OCCUPIED", "field_12528", "OCCUPIED", "f_61445_"), "Ldtt;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#OPEN
    [[maybe_unused]] static jobject get_field_OPEN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "OPEN", "field_12537", "OPEN", "f_61446_"), "Ldtt;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#OPEN
    [[maybe_unused]] static void set_field_OPEN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "OPEN", "field_12537", "OPEN", "f_61446_"), "Ldtt;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#PERSISTENT
    [[maybe_unused]] static jobject get_field_PERSISTENT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "PERSISTENT", "field_12514", "PERSISTENT", "f_61447_"), "Ldtt;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#PERSISTENT
    [[maybe_unused]] static void set_field_PERSISTENT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "PERSISTENT", "field_12514", "PERSISTENT", "f_61447_"), "Ldtt;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#POWERED
    [[maybe_unused]] static jobject get_field_POWERED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "POWERED", "field_12484", "POWERED", "f_61448_"), "Ldtt;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#POWERED
    [[maybe_unused]] static void set_field_POWERED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "POWERED", "field_12484", "POWERED", "f_61448_"), "Ldtt;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#SHORT
    [[maybe_unused]] static jobject get_field_SHORT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "SHORT", "field_12535", "SHORT", "f_61449_"), "Ldtt;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#SHORT
    [[maybe_unused]] static void set_field_SHORT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "SHORT", "field_12535", "SHORT", "f_61449_"), "Ldtt;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#SIGNAL_FIRE
    [[maybe_unused]] static jobject get_field_SIGNAL_FIRE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("y", "SIGNAL_FIRE", "field_17394", "SIGNAL_FIRE", "f_61450_"), "Ldtt;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#SIGNAL_FIRE
    [[maybe_unused]] static void set_field_SIGNAL_FIRE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("y", "SIGNAL_FIRE", "field_17394", "SIGNAL_FIRE", "f_61450_"), "Ldtt;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#SNOWY
    [[maybe_unused]] static jobject get_field_SNOWY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("z", "SNOWY", "field_12512", "SNOWY", "f_61451_"), "Ldtt;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#SNOWY
    [[maybe_unused]] static void set_field_SNOWY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("z", "SNOWY", "field_12512", "SNOWY", "f_61451_"), "Ldtt;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#TRIGGERED
    [[maybe_unused]] static jobject get_field_TRIGGERED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("A", "TRIGGERED", "field_12522", "TRIGGERED", "f_61360_"), "Ldtt;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#TRIGGERED
    [[maybe_unused]] static void set_field_TRIGGERED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("A", "TRIGGERED", "field_12522", "TRIGGERED", "f_61360_"), "Ldtt;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#UNSTABLE
    [[maybe_unused]] static jobject get_field_UNSTABLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("B", "UNSTABLE", "field_12539", "UNSTABLE", "f_61361_"), "Ldtt;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#UNSTABLE
    [[maybe_unused]] static void set_field_UNSTABLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("B", "UNSTABLE", "field_12539", "UNSTABLE", "f_61361_"), "Ldtt;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#WATERLOGGED
    [[maybe_unused]] static jobject get_field_WATERLOGGED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("C", "WATERLOGGED", "field_12508", "WATERLOGGED", "f_61362_"), "Ldtt;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#WATERLOGGED
    [[maybe_unused]] static void set_field_WATERLOGGED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("C", "WATERLOGGED", "field_12508", "WATERLOGGED", "f_61362_"), "Ldtt;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#BERRIES
    [[maybe_unused]] static jobject get_field_BERRIES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("D", "BERRIES", "field_28716", "BERRIES", "f_155977_"), "Ldtt;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#BERRIES
    [[maybe_unused]] static void set_field_BERRIES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("D", "BERRIES", "field_28716", "BERRIES", "f_155977_"), "Ldtt;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#BLOOM
    [[maybe_unused]] static jobject get_field_BLOOM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("E", "BLOOM", "field_37651", "BLOOM", "f_222995_"), "Ldtt;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#BLOOM
    [[maybe_unused]] static void set_field_BLOOM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("E", "BLOOM", "field_37651", "BLOOM", "f_222995_"), "Ldtt;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#SHRIEKING
    [[maybe_unused]] static jobject get_field_SHRIEKING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("F", "SHRIEKING", "field_37652", "SHRIEKING", "f_222996_"), "Ldtt;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#SHRIEKING
    [[maybe_unused]] static void set_field_SHRIEKING(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("F", "SHRIEKING", "field_37652", "SHRIEKING", "f_222996_"), "Ldtt;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#CAN_SUMMON
    [[maybe_unused]] static jobject get_field_CAN_SUMMON() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("G", "CAN_SUMMON", "field_38423", "CAN_SUMMON", "f_222997_"), "Ldtt;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#CAN_SUMMON
    [[maybe_unused]] static void set_field_CAN_SUMMON(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("G", "CAN_SUMMON", "field_38423", "CAN_SUMMON", "f_222997_"), "Ldtt;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#HORIZONTAL_AXIS
    [[maybe_unused]] static jobject get_field_HORIZONTAL_AXIS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("H", "HORIZONTAL_AXIS", "field_12529", "HORIZONTAL_AXIS", "f_61364_"), "Ldua;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#HORIZONTAL_AXIS
    [[maybe_unused]] static void set_field_HORIZONTAL_AXIS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("H", "HORIZONTAL_AXIS", "field_12529", "HORIZONTAL_AXIS", "f_61364_"), "Ldua;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#AXIS
    [[maybe_unused]] static jobject get_field_AXIS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("I", "AXIS", "field_12496", "AXIS", "f_61365_"), "Ldua;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#AXIS
    [[maybe_unused]] static void set_field_AXIS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("I", "AXIS", "field_12496", "AXIS", "f_61365_"), "Ldua;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#UP
    [[maybe_unused]] static jobject get_field_UP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("J", "UP", "field_12519", "UP", "f_61366_"), "Ldtt;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#UP
    [[maybe_unused]] static void set_field_UP(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("J", "UP", "field_12519", "UP", "f_61366_"), "Ldtt;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#DOWN
    [[maybe_unused]] static jobject get_field_DOWN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("K", "DOWN", "field_12546", "DOWN", "f_61367_"), "Ldtt;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#DOWN
    [[maybe_unused]] static void set_field_DOWN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("K", "DOWN", "field_12546", "DOWN", "f_61367_"), "Ldtt;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#NORTH
    [[maybe_unused]] static jobject get_field_NORTH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("L", "NORTH", "field_12489", "NORTH", "f_61368_"), "Ldtt;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#NORTH
    [[maybe_unused]] static void set_field_NORTH(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("L", "NORTH", "field_12489", "NORTH", "f_61368_"), "Ldtt;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#EAST
    [[maybe_unused]] static jobject get_field_EAST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("M", "EAST", "field_12487", "EAST", "f_61369_"), "Ldtt;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#EAST
    [[maybe_unused]] static void set_field_EAST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("M", "EAST", "field_12487", "EAST", "f_61369_"), "Ldtt;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#SOUTH
    [[maybe_unused]] static jobject get_field_SOUTH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("N", "SOUTH", "field_12540", "SOUTH", "f_61370_"), "Ldtt;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#SOUTH
    [[maybe_unused]] static void set_field_SOUTH(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("N", "SOUTH", "field_12540", "SOUTH", "f_61370_"), "Ldtt;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#WEST
    [[maybe_unused]] static jobject get_field_WEST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("O", "WEST", "field_12527", "WEST", "f_61371_"), "Ldtt;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#WEST
    [[maybe_unused]] static void set_field_WEST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("O", "WEST", "field_12527", "WEST", "f_61371_"), "Ldtt;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#FACING
    [[maybe_unused]] static jobject get_field_FACING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("P", "FACING", "field_12525", "FACING", "f_61372_"), "Ldtw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#FACING
    [[maybe_unused]] static void set_field_FACING(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("P", "FACING", "field_12525", "FACING", "f_61372_"), "Ldtw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#HOPPER_FACING
    [[maybe_unused]] static jobject get_field_HOPPER_FACING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Q", "FACING_HOPPER", "field_12545", "HOPPER_FACING", "f_61373_"), "Ldtw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#HOPPER_FACING
    [[maybe_unused]] static void set_field_HOPPER_FACING(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Q", "FACING_HOPPER", "field_12545", "HOPPER_FACING", "f_61373_"), "Ldtw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#HORIZONTAL_FACING
    [[maybe_unused]] static jobject get_field_HORIZONTAL_FACING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("R", "HORIZONTAL_FACING", "field_12481", "HORIZONTAL_FACING", "f_61374_"), "Ldtw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#HORIZONTAL_FACING
    [[maybe_unused]] static void set_field_HORIZONTAL_FACING(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("R", "HORIZONTAL_FACING", "field_12481", "HORIZONTAL_FACING", "f_61374_"), "Ldtw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#FLOWER_AMOUNT
    [[maybe_unused]] static jobject get_field_FLOWER_AMOUNT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("S", "FLOWER_AMOUNT", "field_42835", "FLOWER_AMOUNT", "f_271526_"), "Lduc;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#FLOWER_AMOUNT
    [[maybe_unused]] static void set_field_FLOWER_AMOUNT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("S", "FLOWER_AMOUNT", "field_42835", "FLOWER_AMOUNT", "f_271526_"), "Lduc;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#ORIENTATION
    [[maybe_unused]] static jobject get_field_ORIENTATION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("T", "ORIENTATION", "field_23333", "ORIENTATION", "f_61375_"), "Ldua;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#ORIENTATION
    [[maybe_unused]] static void set_field_ORIENTATION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("T", "ORIENTATION", "field_23333", "ORIENTATION", "f_61375_"), "Ldua;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#BLOCK_FACE
    [[maybe_unused]] static jobject get_field_BLOCK_FACE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("U", "ATTACH_FACE", "field_12555", "BLOCK_FACE", "f_61376_"), "Ldua;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#BLOCK_FACE
    [[maybe_unused]] static void set_field_BLOCK_FACE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("U", "ATTACH_FACE", "field_12555", "BLOCK_FACE", "f_61376_"), "Ldua;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#ATTACHMENT
    [[maybe_unused]] static jobject get_field_ATTACHMENT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("V", "BELL_ATTACHMENT", "field_17104", "ATTACHMENT", "f_61377_"), "Ldua;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#ATTACHMENT
    [[maybe_unused]] static void set_field_ATTACHMENT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("V", "BELL_ATTACHMENT", "field_17104", "ATTACHMENT", "f_61377_"), "Ldua;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#EAST_WALL_SHAPE
    [[maybe_unused]] static jobject get_field_EAST_WALL_SHAPE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("W", "EAST_WALL", "field_22174", "EAST_WALL_SHAPE", "f_61378_"), "Ldua;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#EAST_WALL_SHAPE
    [[maybe_unused]] static void set_field_EAST_WALL_SHAPE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("W", "EAST_WALL", "field_22174", "EAST_WALL_SHAPE", "f_61378_"), "Ldua;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#NORTH_WALL_SHAPE
    [[maybe_unused]] static jobject get_field_NORTH_WALL_SHAPE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("X", "NORTH_WALL", "field_22175", "NORTH_WALL_SHAPE", "f_61379_"), "Ldua;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#NORTH_WALL_SHAPE
    [[maybe_unused]] static void set_field_NORTH_WALL_SHAPE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("X", "NORTH_WALL", "field_22175", "NORTH_WALL_SHAPE", "f_61379_"), "Ldua;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#SOUTH_WALL_SHAPE
    [[maybe_unused]] static jobject get_field_SOUTH_WALL_SHAPE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Y", "SOUTH_WALL", "field_22176", "SOUTH_WALL_SHAPE", "f_61380_"), "Ldua;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#SOUTH_WALL_SHAPE
    [[maybe_unused]] static void set_field_SOUTH_WALL_SHAPE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Y", "SOUTH_WALL", "field_22176", "SOUTH_WALL_SHAPE", "f_61380_"), "Ldua;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#WEST_WALL_SHAPE
    [[maybe_unused]] static jobject get_field_WEST_WALL_SHAPE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Z", "WEST_WALL", "field_22177", "WEST_WALL_SHAPE", "f_61381_"), "Ldua;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#WEST_WALL_SHAPE
    [[maybe_unused]] static void set_field_WEST_WALL_SHAPE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Z", "WEST_WALL", "field_22177", "WEST_WALL_SHAPE", "f_61381_"), "Ldua;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#EAST_WIRE_CONNECTION
    [[maybe_unused]] static jobject get_field_EAST_WIRE_CONNECTION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aa", "EAST_REDSTONE", "field_12523", "EAST_WIRE_CONNECTION", "f_61382_"), "Ldua;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#EAST_WIRE_CONNECTION
    [[maybe_unused]] static void set_field_EAST_WIRE_CONNECTION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aa", "EAST_REDSTONE", "field_12523", "EAST_WIRE_CONNECTION", "f_61382_"), "Ldua;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#NORTH_WIRE_CONNECTION
    [[maybe_unused]] static jobject get_field_NORTH_WIRE_CONNECTION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ab", "NORTH_REDSTONE", "field_12495", "NORTH_WIRE_CONNECTION", "f_61383_"), "Ldua;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#NORTH_WIRE_CONNECTION
    [[maybe_unused]] static void set_field_NORTH_WIRE_CONNECTION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ab", "NORTH_REDSTONE", "field_12495", "NORTH_WIRE_CONNECTION", "f_61383_"), "Ldua;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#SOUTH_WIRE_CONNECTION
    [[maybe_unused]] static jobject get_field_SOUTH_WIRE_CONNECTION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ac", "SOUTH_REDSTONE", "field_12551", "SOUTH_WIRE_CONNECTION", "f_61384_"), "Ldua;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#SOUTH_WIRE_CONNECTION
    [[maybe_unused]] static void set_field_SOUTH_WIRE_CONNECTION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ac", "SOUTH_REDSTONE", "field_12551", "SOUTH_WIRE_CONNECTION", "f_61384_"), "Ldua;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#WEST_WIRE_CONNECTION
    [[maybe_unused]] static jobject get_field_WEST_WIRE_CONNECTION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ad", "WEST_REDSTONE", "field_12504", "WEST_WIRE_CONNECTION", "f_61385_"), "Ldua;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#WEST_WIRE_CONNECTION
    [[maybe_unused]] static void set_field_WEST_WIRE_CONNECTION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ad", "WEST_REDSTONE", "field_12504", "WEST_WIRE_CONNECTION", "f_61385_"), "Ldua;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#DOUBLE_BLOCK_HALF
    [[maybe_unused]] static jobject get_field_DOUBLE_BLOCK_HALF() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ae", "DOUBLE_BLOCK_HALF", "field_12533", "DOUBLE_BLOCK_HALF", "f_61401_"), "Ldua;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#DOUBLE_BLOCK_HALF
    [[maybe_unused]] static void set_field_DOUBLE_BLOCK_HALF(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ae", "DOUBLE_BLOCK_HALF", "field_12533", "DOUBLE_BLOCK_HALF", "f_61401_"), "Ldua;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#BLOCK_HALF
    [[maybe_unused]] static jobject get_field_BLOCK_HALF() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("af", "HALF", "field_12518", "BLOCK_HALF", "f_61402_"), "Ldua;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#BLOCK_HALF
    [[maybe_unused]] static void set_field_BLOCK_HALF(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("af", "HALF", "field_12518", "BLOCK_HALF", "f_61402_"), "Ldua;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#RAIL_SHAPE
    [[maybe_unused]] static jobject get_field_RAIL_SHAPE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ag", "RAIL_SHAPE", "field_12507", "RAIL_SHAPE", "f_61403_"), "Ldua;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#RAIL_SHAPE
    [[maybe_unused]] static void set_field_RAIL_SHAPE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ag", "RAIL_SHAPE", "field_12507", "RAIL_SHAPE", "f_61403_"), "Ldua;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#STRAIGHT_RAIL_SHAPE
    [[maybe_unused]] static jobject get_field_STRAIGHT_RAIL_SHAPE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ah", "RAIL_SHAPE_STRAIGHT", "field_12542", "STRAIGHT_RAIL_SHAPE", "f_61404_"), "Ldua;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#STRAIGHT_RAIL_SHAPE
    [[maybe_unused]] static void set_field_STRAIGHT_RAIL_SHAPE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ah", "RAIL_SHAPE_STRAIGHT", "field_12542", "STRAIGHT_RAIL_SHAPE", "f_61404_"), "Ldua;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#AGE_1_MAX
    [[maybe_unused]] static jint get_field_AGE_1_MAX() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ai", "MAX_AGE_1", "field_31395", "AGE_1_MAX", "f_155987_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#AGE_1_MAX
    [[maybe_unused]] static void set_field_AGE_1_MAX(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ai", "MAX_AGE_1", "field_31395", "AGE_1_MAX", "f_155987_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#AGE_2_MAX
    [[maybe_unused]] static jint get_field_AGE_2_MAX() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aj", "MAX_AGE_2", "field_31396", "AGE_2_MAX", "f_155988_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#AGE_2_MAX
    [[maybe_unused]] static void set_field_AGE_2_MAX(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aj", "MAX_AGE_2", "field_31396", "AGE_2_MAX", "f_155988_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#AGE_3_MAX
    [[maybe_unused]] static jint get_field_AGE_3_MAX() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ak", "MAX_AGE_3", "field_31397", "AGE_3_MAX", "f_155989_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#AGE_3_MAX
    [[maybe_unused]] static void set_field_AGE_3_MAX(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ak", "MAX_AGE_3", "field_31397", "AGE_3_MAX", "f_155989_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#AGE_4_MAX
    [[maybe_unused]] static jint get_field_AGE_4_MAX() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("al", "MAX_AGE_4", "field_37653", "AGE_4_MAX", "f_222998_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#AGE_4_MAX
    [[maybe_unused]] static void set_field_AGE_4_MAX(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("al", "MAX_AGE_4", "field_37653", "AGE_4_MAX", "f_222998_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#AGE_5_MAX
    [[maybe_unused]] static jint get_field_AGE_5_MAX() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("am", "MAX_AGE_5", "field_31398", "AGE_5_MAX", "f_155990_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#AGE_5_MAX
    [[maybe_unused]] static void set_field_AGE_5_MAX(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("am", "MAX_AGE_5", "field_31398", "AGE_5_MAX", "f_155990_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#AGE_7_MAX
    [[maybe_unused]] static jint get_field_AGE_7_MAX() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("an", "MAX_AGE_7", "field_31399", "AGE_7_MAX", "f_155991_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#AGE_7_MAX
    [[maybe_unused]] static void set_field_AGE_7_MAX(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("an", "MAX_AGE_7", "field_31399", "AGE_7_MAX", "f_155991_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#AGE_15_MAX
    [[maybe_unused]] static jint get_field_AGE_15_MAX() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ao", "MAX_AGE_15", "field_31400", "AGE_15_MAX", "f_155992_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#AGE_15_MAX
    [[maybe_unused]] static void set_field_AGE_15_MAX(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ao", "MAX_AGE_15", "field_31400", "AGE_15_MAX", "f_155992_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#AGE_25_MAX
    [[maybe_unused]] static jint get_field_AGE_25_MAX() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ap", "MAX_AGE_25", "field_31401", "AGE_25_MAX", "f_155993_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#AGE_25_MAX
    [[maybe_unused]] static void set_field_AGE_25_MAX(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ap", "MAX_AGE_25", "field_31401", "AGE_25_MAX", "f_155993_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#AGE_1
    [[maybe_unused]] static jobject get_field_AGE_1() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aq", "AGE_1", "field_12521", "AGE_1", "f_61405_"), "Lduc;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#AGE_1
    [[maybe_unused]] static void set_field_AGE_1(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aq", "AGE_1", "field_12521", "AGE_1", "f_61405_"), "Lduc;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#AGE_2
    [[maybe_unused]] static jobject get_field_AGE_2() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ar", "AGE_2", "field_12556", "AGE_2", "f_61406_"), "Lduc;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#AGE_2
    [[maybe_unused]] static void set_field_AGE_2(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ar", "AGE_2", "field_12556", "AGE_2", "f_61406_"), "Lduc;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#AGE_3
    [[maybe_unused]] static jobject get_field_AGE_3() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("as", "AGE_3", "field_12497", "AGE_3", "f_61407_"), "Lduc;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#AGE_3
    [[maybe_unused]] static void set_field_AGE_3(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("as", "AGE_3", "field_12497", "AGE_3", "f_61407_"), "Lduc;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#AGE_4
    [[maybe_unused]] static jobject get_field_AGE_4() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("at", "AGE_4", "field_37654", "AGE_4", "f_222999_"), "Lduc;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#AGE_4
    [[maybe_unused]] static void set_field_AGE_4(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("at", "AGE_4", "field_37654", "AGE_4", "f_222999_"), "Lduc;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#AGE_5
    [[maybe_unused]] static jobject get_field_AGE_5() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("au", "AGE_5", "field_12482", "AGE_5", "f_61408_"), "Lduc;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#AGE_5
    [[maybe_unused]] static void set_field_AGE_5(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("au", "AGE_5", "field_12482", "AGE_5", "f_61408_"), "Lduc;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#AGE_7
    [[maybe_unused]] static jobject get_field_AGE_7() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("av", "AGE_7", "field_12550", "AGE_7", "f_61409_"), "Lduc;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#AGE_7
    [[maybe_unused]] static void set_field_AGE_7(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("av", "AGE_7", "field_12550", "AGE_7", "f_61409_"), "Lduc;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#AGE_15
    [[maybe_unused]] static jobject get_field_AGE_15() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aw", "AGE_15", "field_12498", "AGE_15", "f_61410_"), "Lduc;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#AGE_15
    [[maybe_unused]] static void set_field_AGE_15(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aw", "AGE_15", "field_12498", "AGE_15", "f_61410_"), "Lduc;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#AGE_25
    [[maybe_unused]] static jobject get_field_AGE_25() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ax", "AGE_25", "field_12517", "AGE_25", "f_61411_"), "Lduc;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#AGE_25
    [[maybe_unused]] static void set_field_AGE_25(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ax", "AGE_25", "field_12517", "AGE_25", "f_61411_"), "Lduc;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#BITES
    [[maybe_unused]] static jobject get_field_BITES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ay", "BITES", "field_12505", "BITES", "f_61412_"), "Lduc;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#BITES
    [[maybe_unused]] static void set_field_BITES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ay", "BITES", "field_12505", "BITES", "f_61412_"), "Lduc;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#CANDLES
    [[maybe_unused]] static jobject get_field_CANDLES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("az", "CANDLES", "field_27220", "CANDLES", "f_155994_"), "Lduc;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#CANDLES
    [[maybe_unused]] static void set_field_CANDLES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("az", "CANDLES", "field_27220", "CANDLES", "f_155994_"), "Lduc;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#DELAY
    [[maybe_unused]] static jobject get_field_DELAY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aA", "DELAY", "field_12494", "DELAY", "f_61413_"), "Lduc;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#DELAY
    [[maybe_unused]] static void set_field_DELAY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aA", "DELAY", "field_12494", "DELAY", "f_61413_"), "Lduc;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#DISTANCE_1_7_MAX
    [[maybe_unused]] static jint get_field_DISTANCE_1_7_MAX() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aB", "MAX_DISTANCE", "field_31402", "DISTANCE_1_7_MAX", "f_155995_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#DISTANCE_1_7_MAX
    [[maybe_unused]] static void set_field_DISTANCE_1_7_MAX(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aB", "MAX_DISTANCE", "field_31402", "DISTANCE_1_7_MAX", "f_155995_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#DISTANCE_1_7
    [[maybe_unused]] static jobject get_field_DISTANCE_1_7() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aC", "DISTANCE", "field_12541", "DISTANCE_1_7", "f_61414_"), "Lduc;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#DISTANCE_1_7
    [[maybe_unused]] static void set_field_DISTANCE_1_7(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aC", "DISTANCE", "field_12541", "DISTANCE_1_7", "f_61414_"), "Lduc;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#EGGS
    [[maybe_unused]] static jobject get_field_EGGS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aD", "EGGS", "field_12509", "EGGS", "f_61415_"), "Lduc;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#EGGS
    [[maybe_unused]] static void set_field_EGGS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aD", "EGGS", "field_12509", "EGGS", "f_61415_"), "Lduc;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#HATCH
    [[maybe_unused]] static jobject get_field_HATCH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aE", "HATCH", "field_12530", "HATCH", "f_61416_"), "Lduc;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#HATCH
    [[maybe_unused]] static void set_field_HATCH(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aE", "HATCH", "field_12530", "HATCH", "f_61416_"), "Lduc;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#LAYERS
    [[maybe_unused]] static jobject get_field_LAYERS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aF", "LAYERS", "field_12536", "LAYERS", "f_61417_"), "Lduc;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#LAYERS
    [[maybe_unused]] static void set_field_LAYERS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aF", "LAYERS", "field_12536", "LAYERS", "f_61417_"), "Lduc;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#LEVEL_3_MIN
    [[maybe_unused]] static jint get_field_LEVEL_3_MIN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aG", "MIN_LEVEL", "field_31387", "LEVEL_3_MIN", "f_155978_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#LEVEL_3_MIN
    [[maybe_unused]] static void set_field_LEVEL_3_MIN(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aG", "MIN_LEVEL", "field_31387", "LEVEL_3_MIN", "f_155978_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#LEVEL_1_8_MIN
    [[maybe_unused]] static jint get_field_LEVEL_1_8_MIN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aH", "MIN_LEVEL_CAULDRON", "field_31388", "LEVEL_1_8_MIN", "f_155979_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#LEVEL_1_8_MIN
    [[maybe_unused]] static void set_field_LEVEL_1_8_MIN(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aH", "MIN_LEVEL_CAULDRON", "field_31388", "LEVEL_1_8_MIN", "f_155979_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#LEVEL_3_MAX
    [[maybe_unused]] static jint get_field_LEVEL_3_MAX() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aI", "MAX_LEVEL_3", "field_31389", "LEVEL_3_MAX", "f_155980_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#LEVEL_3_MAX
    [[maybe_unused]] static void set_field_LEVEL_3_MAX(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aI", "MAX_LEVEL_3", "field_31389", "LEVEL_3_MAX", "f_155980_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#LEVEL_1_8_MAX
    [[maybe_unused]] static jint get_field_LEVEL_1_8_MAX() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aJ", "MAX_LEVEL_8", "field_31390", "LEVEL_1_8_MAX", "f_155981_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#LEVEL_1_8_MAX
    [[maybe_unused]] static void set_field_LEVEL_1_8_MAX(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aJ", "MAX_LEVEL_8", "field_31390", "LEVEL_1_8_MAX", "f_155981_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#LEVEL_3
    [[maybe_unused]] static jobject get_field_LEVEL_3() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aK", "LEVEL_CAULDRON", "field_12513", "LEVEL_3", "f_61418_"), "Lduc;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#LEVEL_3
    [[maybe_unused]] static void set_field_LEVEL_3(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aK", "LEVEL_CAULDRON", "field_12513", "LEVEL_3", "f_61418_"), "Lduc;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#LEVEL_8
    [[maybe_unused]] static jobject get_field_LEVEL_8() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aL", "LEVEL_COMPOSTER", "field_17586", "LEVEL_8", "f_61419_"), "Lduc;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#LEVEL_8
    [[maybe_unused]] static void set_field_LEVEL_8(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aL", "LEVEL_COMPOSTER", "field_17586", "LEVEL_8", "f_61419_"), "Lduc;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#LEVEL_1_8
    [[maybe_unused]] static jobject get_field_LEVEL_1_8() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aM", "LEVEL_FLOWING", "field_12490", "LEVEL_1_8", "f_61420_"), "Lduc;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#LEVEL_1_8
    [[maybe_unused]] static void set_field_LEVEL_1_8(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aM", "LEVEL_FLOWING", "field_12490", "LEVEL_1_8", "f_61420_"), "Lduc;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#HONEY_LEVEL
    [[maybe_unused]] static jobject get_field_HONEY_LEVEL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aN", "LEVEL_HONEY", "field_20432", "HONEY_LEVEL", "f_61421_"), "Lduc;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#HONEY_LEVEL
    [[maybe_unused]] static void set_field_HONEY_LEVEL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aN", "LEVEL_HONEY", "field_20432", "HONEY_LEVEL", "f_61421_"), "Lduc;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#LEVEL_15_MAX
    [[maybe_unused]] static jint get_field_LEVEL_15_MAX() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aO", "MAX_LEVEL_15", "field_33723", "LEVEL_15_MAX", "f_155982_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#LEVEL_15_MAX
    [[maybe_unused]] static void set_field_LEVEL_15_MAX(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aO", "MAX_LEVEL_15", "field_33723", "LEVEL_15_MAX", "f_155982_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#LEVEL_15
    [[maybe_unused]] static jobject get_field_LEVEL_15() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aP", "LEVEL", "field_12538", "LEVEL_15", "f_61422_"), "Lduc;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#LEVEL_15
    [[maybe_unused]] static void set_field_LEVEL_15(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aP", "LEVEL", "field_12538", "LEVEL_15", "f_61422_"), "Lduc;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#MOISTURE
    [[maybe_unused]] static jobject get_field_MOISTURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aQ", "MOISTURE", "field_12510", "MOISTURE", "f_61423_"), "Lduc;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#MOISTURE
    [[maybe_unused]] static void set_field_MOISTURE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aQ", "MOISTURE", "field_12510", "MOISTURE", "f_61423_"), "Lduc;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#NOTE
    [[maybe_unused]] static jobject get_field_NOTE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aR", "NOTE", "field_12524", "NOTE", "f_61424_"), "Lduc;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#NOTE
    [[maybe_unused]] static void set_field_NOTE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aR", "NOTE", "field_12524", "NOTE", "f_61424_"), "Lduc;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#PICKLES
    [[maybe_unused]] static jobject get_field_PICKLES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aS", "PICKLES", "field_12543", "PICKLES", "f_61425_"), "Lduc;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#PICKLES
    [[maybe_unused]] static void set_field_PICKLES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aS", "PICKLES", "field_12543", "PICKLES", "f_61425_"), "Lduc;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#POWER
    [[maybe_unused]] static jobject get_field_POWER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aT", "POWER", "field_12511", "POWER", "f_61426_"), "Lduc;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#POWER
    [[maybe_unused]] static void set_field_POWER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aT", "POWER", "field_12511", "POWER", "f_61426_"), "Lduc;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#STAGE
    [[maybe_unused]] static jobject get_field_STAGE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aU", "STAGE", "field_12549", "STAGE", "f_61387_"), "Lduc;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#STAGE
    [[maybe_unused]] static void set_field_STAGE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aU", "STAGE", "field_12549", "STAGE", "f_61387_"), "Lduc;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#DISTANCE_0_7_MAX
    [[maybe_unused]] static jint get_field_DISTANCE_0_7_MAX() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aV", "STABILITY_MAX_DISTANCE", "field_31391", "DISTANCE_0_7_MAX", "f_155983_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#DISTANCE_0_7_MAX
    [[maybe_unused]] static void set_field_DISTANCE_0_7_MAX(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aV", "STABILITY_MAX_DISTANCE", "field_31391", "DISTANCE_0_7_MAX", "f_155983_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#DISTANCE_0_7
    [[maybe_unused]] static jobject get_field_DISTANCE_0_7() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aW", "STABILITY_DISTANCE", "field_16503", "DISTANCE_0_7", "f_61388_"), "Lduc;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#DISTANCE_0_7
    [[maybe_unused]] static void set_field_DISTANCE_0_7(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aW", "STABILITY_DISTANCE", "field_16503", "DISTANCE_0_7", "f_61388_"), "Lduc;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#CHARGES_MIN
    [[maybe_unused]] static jint get_field_CHARGES_MIN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aX", "MIN_RESPAWN_ANCHOR_CHARGES", "field_31392", "CHARGES_MIN", "f_155984_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#CHARGES_MIN
    [[maybe_unused]] static void set_field_CHARGES_MIN(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aX", "MIN_RESPAWN_ANCHOR_CHARGES", "field_31392", "CHARGES_MIN", "f_155984_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#CHARGES_MAX
    [[maybe_unused]] static jint get_field_CHARGES_MAX() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aY", "MAX_RESPAWN_ANCHOR_CHARGES", "field_31393", "CHARGES_MAX", "f_155985_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#CHARGES_MAX
    [[maybe_unused]] static void set_field_CHARGES_MAX(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aY", "MAX_RESPAWN_ANCHOR_CHARGES", "field_31393", "CHARGES_MAX", "f_155985_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#CHARGES
    [[maybe_unused]] static jobject get_field_CHARGES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aZ", "RESPAWN_ANCHOR_CHARGES", "field_23187", "CHARGES", "f_61389_"), "Lduc;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#CHARGES
    [[maybe_unused]] static void set_field_CHARGES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("aZ", "RESPAWN_ANCHOR_CHARGES", "field_23187", "CHARGES", "f_61389_"), "Lduc;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#ROTATION
    [[maybe_unused]] static jobject get_field_ROTATION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ba", "ROTATION_16", "field_12532", "ROTATION", "f_61390_"), "Lduc;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#ROTATION
    [[maybe_unused]] static void set_field_ROTATION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ba", "ROTATION_16", "field_12532", "ROTATION", "f_61390_"), "Lduc;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#BED_PART
    [[maybe_unused]] static jobject get_field_BED_PART() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bb", "BED_PART", "field_12483", "BED_PART", "f_61391_"), "Ldua;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#BED_PART
    [[maybe_unused]] static void set_field_BED_PART(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bb", "BED_PART", "field_12483", "BED_PART", "f_61391_"), "Ldua;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#CHEST_TYPE
    [[maybe_unused]] static jobject get_field_CHEST_TYPE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bc", "CHEST_TYPE", "field_12506", "CHEST_TYPE", "f_61392_"), "Ldua;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#CHEST_TYPE
    [[maybe_unused]] static void set_field_CHEST_TYPE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bc", "CHEST_TYPE", "field_12506", "CHEST_TYPE", "f_61392_"), "Ldua;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#COMPARATOR_MODE
    [[maybe_unused]] static jobject get_field_COMPARATOR_MODE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bd", "MODE_COMPARATOR", "field_12534", "COMPARATOR_MODE", "f_61393_"), "Ldua;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#COMPARATOR_MODE
    [[maybe_unused]] static void set_field_COMPARATOR_MODE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bd", "MODE_COMPARATOR", "field_12534", "COMPARATOR_MODE", "f_61393_"), "Ldua;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#DOOR_HINGE
    [[maybe_unused]] static jobject get_field_DOOR_HINGE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("be", "DOOR_HINGE", "field_12520", "DOOR_HINGE", "f_61394_"), "Ldua;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#DOOR_HINGE
    [[maybe_unused]] static void set_field_DOOR_HINGE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("be", "DOOR_HINGE", "field_12520", "DOOR_HINGE", "f_61394_"), "Ldua;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#INSTRUMENT
    [[maybe_unused]] static jobject get_field_INSTRUMENT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bf", "NOTEBLOCK_INSTRUMENT", "field_12499", "INSTRUMENT", "f_61395_"), "Ldua;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#INSTRUMENT
    [[maybe_unused]] static void set_field_INSTRUMENT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bf", "NOTEBLOCK_INSTRUMENT", "field_12499", "INSTRUMENT", "f_61395_"), "Ldua;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#PISTON_TYPE
    [[maybe_unused]] static jobject get_field_PISTON_TYPE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bg", "PISTON_TYPE", "field_12492", "PISTON_TYPE", "f_61396_"), "Ldua;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#PISTON_TYPE
    [[maybe_unused]] static void set_field_PISTON_TYPE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bg", "PISTON_TYPE", "field_12492", "PISTON_TYPE", "f_61396_"), "Ldua;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#SLAB_TYPE
    [[maybe_unused]] static jobject get_field_SLAB_TYPE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bh", "SLAB_TYPE", "field_12485", "SLAB_TYPE", "f_61397_"), "Ldua;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#SLAB_TYPE
    [[maybe_unused]] static void set_field_SLAB_TYPE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bh", "SLAB_TYPE", "field_12485", "SLAB_TYPE", "f_61397_"), "Ldua;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#STAIR_SHAPE
    [[maybe_unused]] static jobject get_field_STAIR_SHAPE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bi", "STAIRS_SHAPE", "field_12503", "STAIR_SHAPE", "f_61398_"), "Ldua;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#STAIR_SHAPE
    [[maybe_unused]] static void set_field_STAIR_SHAPE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bi", "STAIRS_SHAPE", "field_12503", "STAIR_SHAPE", "f_61398_"), "Ldua;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#STRUCTURE_BLOCK_MODE
    [[maybe_unused]] static jobject get_field_STRUCTURE_BLOCK_MODE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bj", "STRUCTUREBLOCK_MODE", "field_12547", "STRUCTURE_BLOCK_MODE", "f_61399_"), "Ldua;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#STRUCTURE_BLOCK_MODE
    [[maybe_unused]] static void set_field_STRUCTURE_BLOCK_MODE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bj", "STRUCTUREBLOCK_MODE", "field_12547", "STRUCTURE_BLOCK_MODE", "f_61399_"), "Ldua;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#BAMBOO_LEAVES
    [[maybe_unused]] static jobject get_field_BAMBOO_LEAVES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bk", "BAMBOO_LEAVES", "field_12516", "BAMBOO_LEAVES", "f_61400_"), "Ldua;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#BAMBOO_LEAVES
    [[maybe_unused]] static void set_field_BAMBOO_LEAVES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bk", "BAMBOO_LEAVES", "field_12516", "BAMBOO_LEAVES", "f_61400_"), "Ldua;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#TILT
    [[maybe_unused]] static jobject get_field_TILT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bl", "TILT", "field_28717", "TILT", "f_155996_"), "Ldua;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#TILT
    [[maybe_unused]] static void set_field_TILT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bl", "TILT", "field_28717", "TILT", "f_155996_"), "Ldua;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#VERTICAL_DIRECTION
    [[maybe_unused]] static jobject get_field_VERTICAL_DIRECTION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bm", "VERTICAL_DIRECTION", "field_28062", "VERTICAL_DIRECTION", "f_155997_"), "Ldtw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#VERTICAL_DIRECTION
    [[maybe_unused]] static void set_field_VERTICAL_DIRECTION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bm", "VERTICAL_DIRECTION", "field_28062", "VERTICAL_DIRECTION", "f_155997_"), "Ldtw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#THICKNESS
    [[maybe_unused]] static jobject get_field_THICKNESS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bn", "DRIPSTONE_THICKNESS", "field_28063", "THICKNESS", "f_155998_"), "Ldua;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#THICKNESS
    [[maybe_unused]] static void set_field_THICKNESS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bn", "DRIPSTONE_THICKNESS", "field_28063", "THICKNESS", "f_155998_"), "Ldua;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#SCULK_SENSOR_PHASE
    [[maybe_unused]] static jobject get_field_SCULK_SENSOR_PHASE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bo", "SCULK_SENSOR_PHASE", "field_28120", "SCULK_SENSOR_PHASE", "f_155999_"), "Ldua;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#SCULK_SENSOR_PHASE
    [[maybe_unused]] static void set_field_SCULK_SENSOR_PHASE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bo", "SCULK_SENSOR_PHASE", "field_28120", "SCULK_SENSOR_PHASE", "f_155999_"), "Ldua;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#SLOT_0_OCCUPIED
    [[maybe_unused]] static jobject get_field_SLOT_0_OCCUPIED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bp", "CHISELED_BOOKSHELF_SLOT_0_OCCUPIED", "field_41317", "SLOT_0_OCCUPIED", "f_260472_"), "Ldtt;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#SLOT_0_OCCUPIED
    [[maybe_unused]] static void set_field_SLOT_0_OCCUPIED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bp", "CHISELED_BOOKSHELF_SLOT_0_OCCUPIED", "field_41317", "SLOT_0_OCCUPIED", "f_260472_"), "Ldtt;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#SLOT_1_OCCUPIED
    [[maybe_unused]] static jobject get_field_SLOT_1_OCCUPIED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bq", "CHISELED_BOOKSHELF_SLOT_1_OCCUPIED", "field_41318", "SLOT_1_OCCUPIED", "f_260553_"), "Ldtt;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#SLOT_1_OCCUPIED
    [[maybe_unused]] static void set_field_SLOT_1_OCCUPIED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bq", "CHISELED_BOOKSHELF_SLOT_1_OCCUPIED", "field_41318", "SLOT_1_OCCUPIED", "f_260553_"), "Ldtt;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#SLOT_2_OCCUPIED
    [[maybe_unused]] static jobject get_field_SLOT_2_OCCUPIED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("br", "CHISELED_BOOKSHELF_SLOT_2_OCCUPIED", "field_41319", "SLOT_2_OCCUPIED", "f_260538_"), "Ldtt;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#SLOT_2_OCCUPIED
    [[maybe_unused]] static void set_field_SLOT_2_OCCUPIED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("br", "CHISELED_BOOKSHELF_SLOT_2_OCCUPIED", "field_41319", "SLOT_2_OCCUPIED", "f_260538_"), "Ldtt;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#SLOT_3_OCCUPIED
    [[maybe_unused]] static jobject get_field_SLOT_3_OCCUPIED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bs", "CHISELED_BOOKSHELF_SLOT_3_OCCUPIED", "field_41320", "SLOT_3_OCCUPIED", "f_260590_"), "Ldtt;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#SLOT_3_OCCUPIED
    [[maybe_unused]] static void set_field_SLOT_3_OCCUPIED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bs", "CHISELED_BOOKSHELF_SLOT_3_OCCUPIED", "field_41320", "SLOT_3_OCCUPIED", "f_260590_"), "Ldtt;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#SLOT_4_OCCUPIED
    [[maybe_unused]] static jobject get_field_SLOT_4_OCCUPIED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bt", "CHISELED_BOOKSHELF_SLOT_4_OCCUPIED", "field_41321", "SLOT_4_OCCUPIED", "f_260519_"), "Ldtt;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#SLOT_4_OCCUPIED
    [[maybe_unused]] static void set_field_SLOT_4_OCCUPIED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bt", "CHISELED_BOOKSHELF_SLOT_4_OCCUPIED", "field_41321", "SLOT_4_OCCUPIED", "f_260519_"), "Ldtt;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#SLOT_5_OCCUPIED
    [[maybe_unused]] static jobject get_field_SLOT_5_OCCUPIED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bu", "CHISELED_BOOKSHELF_SLOT_5_OCCUPIED", "field_41322", "SLOT_5_OCCUPIED", "f_260439_"), "Ldtt;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#SLOT_5_OCCUPIED
    [[maybe_unused]] static void set_field_SLOT_5_OCCUPIED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bu", "CHISELED_BOOKSHELF_SLOT_5_OCCUPIED", "field_41322", "SLOT_5_OCCUPIED", "f_260439_"), "Ldtt;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#DUSTED
    [[maybe_unused]] static jobject get_field_DUSTED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bv", "DUSTED", "field_42836", "DUSTED", "f_271112_"), "Lduc;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#DUSTED
    [[maybe_unused]] static void set_field_DUSTED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bv", "DUSTED", "field_42836", "DUSTED", "f_271112_"), "Lduc;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#CRACKED
    [[maybe_unused]] static jobject get_field_CRACKED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bw", "CRACKED", "field_43307", "CRACKED", "f_276520_"), "Ldtt;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#CRACKED
    [[maybe_unused]] static void set_field_CRACKED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bw", "CRACKED", "field_43307", "CRACKED", "f_276520_"), "Ldtt;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#CRAFTING
    [[maybe_unused]] static jobject get_field_CRAFTING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bx", "CRAFTING", "field_46822", "CRAFTING", "f_303070_"), "Ldtt;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#CRAFTING
    [[maybe_unused]] static void set_field_CRAFTING(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bx", "CRAFTING", "field_46822", "CRAFTING", "f_303070_"), "Ldtt;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#TRIAL_SPAWNER_STATE
    [[maybe_unused]] static jobject get_field_TRIAL_SPAWNER_STATE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("by", "TRIAL_SPAWNER_STATE", "field_47408", "TRIAL_SPAWNER_STATE", "f_302708_"), "Ldua;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#TRIAL_SPAWNER_STATE
    [[maybe_unused]] static void set_field_TRIAL_SPAWNER_STATE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("by", "TRIAL_SPAWNER_STATE", "field_47408", "TRIAL_SPAWNER_STATE", "f_302708_"), "Ldua;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#VAULT_STATE
    [[maybe_unused]] static jobject get_field_VAULT_STATE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bz", "VAULT_STATE", "field_48915", "VAULT_STATE", "f_315206_"), "Ldua;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#VAULT_STATE
    [[maybe_unused]] static void set_field_VAULT_STATE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bz", "VAULT_STATE", "field_48915", "VAULT_STATE", "f_315206_"), "Ldua;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.property.Properties#OMINOUS
    [[maybe_unused]] static jobject get_field_OMINOUS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bA", "OMINOUS", "field_50193", "OMINOUS", "f_314881_"), "Ldtt;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.property.Properties#OMINOUS
    [[maybe_unused]] static void set_field_OMINOUS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("bA", "OMINOUS", "field_50193", "OMINOUS", "f_314881_"), "Ldtt;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

};

#endif // NET_MINECRAFT_STATE_PROPERTY_PROPERTIES_HPP