// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_STATE_STATE_HPP
#define NET_MINECRAFT_STATE_STATE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.state.State
 * Remapped: dte
 */
namespace State {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("dte", "net/minecraft/world/level/block/state/StateHolder", "net/minecraft/class_2688", "net/minecraft/state/State", "net/minecraft/src/C_2068_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.state.State#NAME
    [[maybe_unused]] static jobject get_field_NAME() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "NAME_TAG", "field_31385", "NAME", "f_155962_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.State#NAME
    [[maybe_unused]] static void set_field_NAME(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "NAME_TAG", "field_31385", "NAME", "f_155962_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.state.State#PROPERTIES
    [[maybe_unused]] static jobject get_field_PROPERTIES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "PROPERTIES_TAG", "field_31386", "PROPERTIES", "f_155963_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.state.State#PROPERTIES
    [[maybe_unused]] static void set_field_PROPERTIES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "PROPERTIES_TAG", "field_31386", "PROPERTIES", "f_155963_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.state.State#PROPERTY_MAP_PRINTER
    [[maybe_unused]] static jobject get_field_PROPERTY_MAP_PRINTER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "PROPERTY_ENTRY_TO_STRING_FUNCTION", "field_24737", "PROPERTY_MAP_PRINTER", "f_61110_"), "Ljava/util/function/Function;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.state.State#PROPERTY_MAP_PRINTER
    [[maybe_unused]] static void set_field_PROPERTY_MAP_PRINTER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "PROPERTY_ENTRY_TO_STRING_FUNCTION", "field_24737", "PROPERTY_MAP_PRINTER", "f_61110_"), "Ljava/util/function/Function;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for protected field net.minecraft.state.State#owner
    static jobject get_field_owner(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "owner", "field_24739", "owner", "f_61112_"), "Ljava/lang/Object;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.state.State#owner
    static void set_field_owner(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "owner", "field_24739", "owner", "f_61112_"), "Ljava/lang/Object;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.state.State#propertyMap
    static jobject get_field_propertyMap(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "values", "field_24738", "propertyMap", "f_61111_"), "Lit/unimi/dsi/fastutil/objects/Reference2ObjectArrayMap;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.state.State#propertyMap
    static void set_field_propertyMap(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "values", "field_24738", "propertyMap", "f_61111_"), "Lit/unimi/dsi/fastutil/objects/Reference2ObjectArrayMap;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.state.State#withTable
    static jobject get_field_withTable(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "neighbours", "field_24741", "withTable", "f_61114_"), "Lcom/google/common/collect/Table;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.state.State#withTable
    static void set_field_withTable(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "neighbours", "field_24741", "withTable", "f_61114_"), "Lcom/google/common/collect/Table;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.state.State#codec
    static jobject get_field_codec(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "propertiesCodec", "field_24740", "codec", "f_61113_"), "Lcom/mojang/serialization/MapCodec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.state.State#codec
    static void set_field_codec(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "propertiesCodec", "field_24740", "codec", "f_61113_"), "Lcom/mojang/serialization/MapCodec;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_cycle() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "cycle", "method_28493", "cycle", "m_61122_"), "(Lduf;)Ljava/lang/Object;");
    }

    static jobject cycle(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_cycle();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getNext() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "findNextInCollection", "method_28495", "getNext", "m_61130_"), "(Ljava/util/Collection;Ljava/lang/Object;)Ljava/lang/Object;");
    }

    static jobject getNext(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_getNext();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getProperties() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("B", "getProperties", "method_28501", "getProperties", "m_61147_"), "()Ljava/util/Collection;");
    }

    static jobject getProperties(const jobject& obj) {
                
       const auto methodID = methodID_getProperties();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_contains() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "hasProperty", "method_28498", "contains", "m_61138_"), "(Lduf;)Z");
    }

    static jboolean contains(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_contains();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_get() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getValue", "method_11654", "get", "m_61143_"), "(Lduf;)Ljava/lang/Comparable;");
    }

    static jobject get(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_get();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getOrEmpty() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getOptionalValue", "method_28500", "getOrEmpty", "m_61145_"), "(Lduf;)Ljava/util/Optional;");
    }

    static jobject getOrEmpty(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getOrEmpty();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_with() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setValue", "method_11657", "with", "m_61124_"), "(Lduf;Ljava/lang/Comparable;)Ljava/lang/Object;");
    }

    static jobject with(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_with();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_withIfExists() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "trySetValue", "method_47968", "withIfExists", "m_263224_"), "(Lduf;Ljava/lang/Comparable;)Ljava/lang/Object;");
    }

    static jobject withIfExists(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_withIfExists();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_createWithTable() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "populateNeighbours", "method_28496", "createWithTable", "m_61133_"), "(Ljava/util/Map;)V");
    }

    static void createWithTable(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_createWithTable();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_toMapWith() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "makeNeighbourValues", "method_28499", "toMapWith", "m_61140_"), "(Lduf;Ljava/lang/Comparable;)Ljava/util/Map;");
    }

    static jobject toMapWith(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_toMapWith();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getEntries() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("C", "getValues", "method_11656", "getEntries", "m_61148_"), "()Ljava/util/Map;");
    }

    static jobject getEntries(const jobject& obj) {
                
       const auto methodID = methodID_getEntries();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_createCodec() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "codec", "method_28494", "createCodec", "m_61127_"), "(Lcom/mojang/serialization/Codec;Ljava/util/function/Function;)Lcom/mojang/serialization/Codec;");
    }

    static jobject createCodec(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_createCodec();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_STATE_STATE_HPP