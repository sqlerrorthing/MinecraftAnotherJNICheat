// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_UTIL_CUBICSAMPLER_HPP
#define NET_MINECRAFT_UTIL_CUBICSAMPLER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.util.CubicSampler
 * Remapped: axo
 */
namespace CubicSampler {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("axo", "net/minecraft/util/CubicSampler", "net/minecraft/class_6491", "net/minecraft/util/CubicSampler", "net/minecraft/src/C_4980_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.util.CubicSampler#FIRST_SEGMENT_OFFSET
    [[maybe_unused]] static jint get_field_FIRST_SEGMENT_OFFSET() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "GAUSSIAN_SAMPLE_RADIUS", "field_33222", "FIRST_SEGMENT_OFFSET", "f_177979_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.util.CubicSampler#FIRST_SEGMENT_OFFSET
    [[maybe_unused]] static void set_field_FIRST_SEGMENT_OFFSET(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "GAUSSIAN_SAMPLE_RADIUS", "field_33222", "FIRST_SEGMENT_OFFSET", "f_177979_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.util.CubicSampler#NUM_SEGMENTS
    [[maybe_unused]] static jint get_field_NUM_SEGMENTS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "GAUSSIAN_SAMPLE_BREADTH", "field_33223", "NUM_SEGMENTS", "f_177980_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.util.CubicSampler#NUM_SEGMENTS
    [[maybe_unused]] static void set_field_NUM_SEGMENTS(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "GAUSSIAN_SAMPLE_BREADTH", "field_33223", "NUM_SEGMENTS", "f_177980_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.util.CubicSampler#DENSITY_CURVE
    [[maybe_unused]] static jdouble get_field_DENSITY_CURVE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "GAUSSIAN_SAMPLE_KERNEL", "field_22449", "DENSITY_CURVE", "f_130036_"), "[D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticDoubleField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.util.CubicSampler#DENSITY_CURVE
    [[maybe_unused]] static void set_field_DENSITY_CURVE(const jdouble &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "GAUSSIAN_SAMPLE_KERNEL", "field_22449", "DENSITY_CURVE", "f_130036_"), "[D");
        return MinecraftSDK::env->SetStaticDoubleField(clazz, fieldID, value);
    };

    static jmethodID methodID_sampleColor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "gaussianSampleVec3", "method_24895", "sampleColor", "m_130038_"), "(Lexc;Laxo$a;)Lexc;");
    }

    static jobject sampleColor(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_sampleColor();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_UTIL_CUBICSAMPLER_HPP