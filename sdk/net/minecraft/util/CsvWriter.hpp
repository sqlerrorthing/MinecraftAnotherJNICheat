// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_UTIL_CSVWRITER_HPP
#define NET_MINECRAFT_UTIL_CSVWRITER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.util.CsvWriter
 * Remapped: axn
 */
namespace CsvWriter {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("axn", "net/minecraft/util/CsvOutput", "net/minecraft/class_4456", "net/minecraft/util/CsvWriter", "net/minecraft/src/C_168_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.util.CsvWriter#CRLF
    [[maybe_unused]] static jobject get_field_CRLF() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LINE_SEPARATOR", "field_29836", "CRLF", "f_144618_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.util.CsvWriter#CRLF
    [[maybe_unused]] static void set_field_CRLF(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LINE_SEPARATOR", "field_29836", "CRLF", "f_144618_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.util.CsvWriter#COMMA
    [[maybe_unused]] static jobject get_field_COMMA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "FIELD_SEPARATOR", "field_29837", "COMMA", "f_144619_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.util.CsvWriter#COMMA
    [[maybe_unused]] static void set_field_COMMA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "FIELD_SEPARATOR", "field_29837", "COMMA", "f_144619_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.util.CsvWriter#writer
    static jobject get_field_writer(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "output", "field_20284", "writer", "f_13610_"), "Ljava/io/Writer;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.CsvWriter#writer
    static void set_field_writer(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "output", "field_20284", "writer", "f_13610_"), "Ljava/io/Writer;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.CsvWriter#column
    static jint get_field_column(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "columnCount", "field_20285", "column", "f_13611_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.CsvWriter#column
    static void set_field_column(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "columnCount", "field_20285", "column", "f_13611_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    static jmethodID methodID_makeHeader() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "builder", "method_21627", "makeHeader", "m_13619_"), "()Laxn$a;");
    }

    static jobject makeHeader() {
       const auto clazz = self();
       const auto methodID = methodID_makeHeader();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_printRow() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "writeRow", "method_21630", "printRow", "m_13624_"), "([Ljava/lang/Object;)V");
    }

    static void printRow(const jobject& obj, const jarray& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_printRow();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__printRow() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "writeLine", "method_21629", "printRow", "m_13622_"), "(Ljava/util/stream/Stream;)V");
    }

    static void _printRow(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__printRow();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_escape() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getStringValue", "method_21628", "escape", "m_13620_"), "(Ljava/lang/Object;)Ljava/lang/String;");
    }

    static jobject escape(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_escape();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_UTIL_CSVWRITER_HPP