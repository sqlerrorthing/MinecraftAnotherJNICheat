// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_UTIL_LOGGING_LOGFILECOMPRESSOR$LOGID_HPP
#define NET_MINECRAFT_UTIL_LOGGING_LOGFILECOMPRESSOR$LOGID_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.util.logging.LogFileCompressor$LogId
 * Remapped: blx$c
 */
namespace LogFileCompressor$LogId {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("blx$c", "net/minecraft/util/eventlog/EventLogDirectory$FileId", "net/minecraft/class_7929$class_7932", "net/minecraft/util/logging/LogFileCompressor$LogId", "net/minecraft/src/C_260394_$C_260385_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.util.logging.LogFileCompressor$LogId#date
    static jobject get_field_date(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "date", "comp_1158", "date", "f_260711_"), "Ljava/time/LocalDate;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.logging.LogFileCompressor$LogId#date
    static void set_field_date(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "date", "comp_1158", "date", "f_260711_"), "Ljava/time/LocalDate;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.logging.LogFileCompressor$LogId#index
    static jint get_field_index(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "index", "comp_1159", "index", "f_260602_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.logging.LogFileCompressor$LogId#index
    static void set_field_index(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "index", "comp_1159", "index", "f_260602_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for static private field net.minecraft.util.logging.LogFileCompressor$LogId#DATE_TIME_FORMATTER
    [[maybe_unused]] static jobject get_field_DATE_TIME_FORMATTER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "DATE_FORMATTER", "field_41293", "DATE_TIME_FORMATTER", "f_260524_"), "Ljava/time/format/DateTimeFormatter;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.util.logging.LogFileCompressor$LogId#DATE_TIME_FORMATTER
    [[maybe_unused]] static void set_field_DATE_TIME_FORMATTER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "DATE_FORMATTER", "field_41293", "DATE_TIME_FORMATTER", "f_260524_"), "Ljava/time/format/DateTimeFormatter;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_fromFileName() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "parse", "method_47558", "fromFileName", "m_260977_"), "(Ljava/lang/String;)Lblx$c;");
    }

    static jobject fromFileName(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_fromFileName();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getFileName() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "toFileName", "method_47559", "getFileName", "m_261263_"), "(Ljava/lang/String;)Ljava/lang/String;");
    }

    static jobject getFileName(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getFileName();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__date() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "date", "comp_1158", "date", "f_260711_"), "()Ljava/time/LocalDate;");
    }

    static jobject _date(const jobject& obj) {
                
       const auto methodID = methodID__date();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__index() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "index", "comp_1159", "index", "f_260602_"), "()I");
    }

    static jint _index(const jobject& obj) {
                
       const auto methodID = methodID__index();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_UTIL_LOGGING_LOGFILECOMPRESSOR$LOGID_HPP