// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_UTIL_LOGGING_LOGWRITER$1_HPP
#define NET_MINECRAFT_UTIL_LOGGING_LOGWRITER$1_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.util.logging.LogWriter$1
 * Remapped: bly$1
 */
namespace LogWriter$1 {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("bly$1", "net/minecraft/util/eventlog/JsonEventLog$1", "net/minecraft/class_7935$1", "net/minecraft/util/logging/LogWriter$1", "net/minecraft/src/C_260370_$C_260423_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.util.logging.LogWriter$1#pos
    static jlong get_field_pos(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "position", "field_41301", "pos", "f_260662_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.logging.LogWriter$1#pos
    static void set_field_pos(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "position", "field_41301", "pos", "f_260662_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    static jmethodID methodID_read() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "next", "method_47570", "read", "m_261203_"), "()Ljava/lang/Object;");
    }

    static jobject read(const jobject& obj) {
                
       const auto methodID = methodID_read();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_close() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("close", "close", "", "", "close"), "()V");
    }

    static void close(const jobject& obj) {
                
       const auto methodID = methodID_close();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_UTIL_LOGGING_LOGWRITER$1_HPP