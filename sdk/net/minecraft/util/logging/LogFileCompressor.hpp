// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_UTIL_LOGGING_LOGFILECOMPRESSOR_HPP
#define NET_MINECRAFT_UTIL_LOGGING_LOGFILECOMPRESSOR_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.util.logging.LogFileCompressor
 * Remapped: blx
 */
namespace LogFileCompressor {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("blx", "net/minecraft/util/eventlog/EventLogDirectory", "net/minecraft/class_7929", "net/minecraft/util/logging/LogFileCompressor", "net/minecraft/src/C_260394_"));
        }
        return cachedClass;
    };

    // getter for static default field net.minecraft.util.logging.LogFileCompressor#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LOGGER", "field_41288", "LOGGER", "f_260444_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static default field net.minecraft.util.logging.LogFileCompressor#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LOGGER", "field_41288", "LOGGER", "f_260444_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.util.logging.LogFileCompressor#COMPRESSION_BUFFER_SIZE
    [[maybe_unused]] static jint get_field_COMPRESSION_BUFFER_SIZE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "COMPRESS_BUFFER_SIZE", "field_41289", "COMPRESSION_BUFFER_SIZE", "f_260477_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.util.logging.LogFileCompressor#COMPRESSION_BUFFER_SIZE
    [[maybe_unused]] static void set_field_COMPRESSION_BUFFER_SIZE(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "COMPRESS_BUFFER_SIZE", "field_41289", "COMPRESSION_BUFFER_SIZE", "f_260477_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.util.logging.LogFileCompressor#GZ_EXTENSION
    [[maybe_unused]] static jobject get_field_GZ_EXTENSION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "COMPRESSED_EXTENSION", "field_41290", "GZ_EXTENSION", "f_260455_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.util.logging.LogFileCompressor#GZ_EXTENSION
    [[maybe_unused]] static void set_field_GZ_EXTENSION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "COMPRESSED_EXTENSION", "field_41290", "GZ_EXTENSION", "f_260455_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.util.logging.LogFileCompressor#directory
    static jobject get_field_directory(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "root", "field_41291", "directory", "f_260592_"), "Ljava/nio/file/Path;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.logging.LogFileCompressor#directory
    static void set_field_directory(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "root", "field_41291", "directory", "f_260592_"), "Ljava/nio/file/Path;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.logging.LogFileCompressor#extension
    static jobject get_field_extension(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "extension", "field_41292", "extension", "f_260512_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.logging.LogFileCompressor#extension
    static void set_field_extension(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "extension", "field_41292", "extension", "f_260512_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_create() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "open", "method_47552", "create", "m_260952_"), "(Ljava/nio/file/Path;Ljava/lang/String;)Lblx;");
    }

    static jobject create(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_create();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getAll() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "listFiles", "method_47549", "getAll", "m_261134_"), "()Lblx$d;");
    }

    static jobject getAll(const jobject& obj) {
                
       const auto methodID = methodID_getAll();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_get() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "parseFile", "method_47551", "get", "m_260829_"), "(Ljava/nio/file/Path;)Lblx$b;");
    }

    static jobject get(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_get();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_compress() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "tryCompress", "method_47553", "compress", "m_260828_"), "(Ljava/nio/file/Path;Ljava/nio/file/Path;)V");
    }

    static void compress(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_compress();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__compress() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "writeCompressed", "method_47550", "compress", "m_261201_"), "(Ljava/nio/channels/ReadableByteChannel;Ljava/nio/file/Path;)V");
    }

    static void _compress(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID__compress();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_createLogFile() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "createNewFile", "method_47554", "createLogFile", "m_261046_"), "(Ljava/time/LocalDate;)Lblx$e;");
    }

    static jobject createLogFile(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_createLogFile();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_UTIL_LOGGING_LOGFILECOMPRESSOR_HPP