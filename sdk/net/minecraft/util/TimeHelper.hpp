// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_UTIL_TIMEHELPER_HPP
#define NET_MINECRAFT_UTIL_TIMEHELPER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.util.TimeHelper
 * Remapped: azp
 */
namespace TimeHelper {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("azp", "net/minecraft/util/TimeUtil", "net/minecraft/class_4802", "net/minecraft/util/TimeHelper", "net/minecraft/src/C_201_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.util.TimeHelper#SECOND_IN_NANOS
    [[maybe_unused]] static jlong get_field_SECOND_IN_NANOS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "NANOSECONDS_PER_SECOND", "field_33868", "SECOND_IN_NANOS", "f_145016_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticLongField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.TimeHelper#SECOND_IN_NANOS
    [[maybe_unused]] static void set_field_SECOND_IN_NANOS(const jlong &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "NANOSECONDS_PER_SECOND", "field_33868", "SECOND_IN_NANOS", "f_145016_"), "J");
        return MinecraftSDK::env->SetStaticLongField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.TimeHelper#MILLI_IN_NANOS
    [[maybe_unused]] static jlong get_field_MILLI_IN_NANOS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "NANOSECONDS_PER_MILLISECOND", "field_33869", "MILLI_IN_NANOS", "f_145017_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticLongField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.TimeHelper#MILLI_IN_NANOS
    [[maybe_unused]] static void set_field_MILLI_IN_NANOS(const jlong &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "NANOSECONDS_PER_MILLISECOND", "field_33869", "MILLI_IN_NANOS", "f_145017_"), "J");
        return MinecraftSDK::env->SetStaticLongField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.TimeHelper#SECOND_IN_MILLIS
    [[maybe_unused]] static jlong get_field_SECOND_IN_MILLIS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "MILLISECONDS_PER_SECOND", "field_46957", "SECOND_IN_MILLIS", "f_302812_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticLongField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.TimeHelper#SECOND_IN_MILLIS
    [[maybe_unused]] static void set_field_SECOND_IN_MILLIS(const jlong &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "MILLISECONDS_PER_SECOND", "field_46957", "SECOND_IN_MILLIS", "f_302812_"), "J");
        return MinecraftSDK::env->SetStaticLongField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.TimeHelper#HOUR_IN_SECONDS
    [[maybe_unused]] static jlong get_field_HOUR_IN_SECONDS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "SECONDS_PER_HOUR", "field_46958", "HOUR_IN_SECONDS", "f_303069_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticLongField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.TimeHelper#HOUR_IN_SECONDS
    [[maybe_unused]] static void set_field_HOUR_IN_SECONDS(const jlong &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "SECONDS_PER_HOUR", "field_46958", "HOUR_IN_SECONDS", "f_303069_"), "J");
        return MinecraftSDK::env->SetStaticLongField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.TimeHelper#MINUTE_IN_SECONDS
    [[maybe_unused]] static jint get_field_MINUTE_IN_SECONDS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "SECONDS_PER_MINUTE", "field_47726", "MINUTE_IN_SECONDS", "f_315347_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.TimeHelper#MINUTE_IN_SECONDS
    [[maybe_unused]] static void set_field_MINUTE_IN_SECONDS(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "SECONDS_PER_MINUTE", "field_47726", "MINUTE_IN_SECONDS", "f_315347_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    static jmethodID methodID_betweenSeconds() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "rangeOfSeconds", "method_24505", "betweenSeconds", "m_145020_"), "(II)Lbqc;");
    }

    static jobject betweenSeconds(const jint& arg0, const jint& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_betweenSeconds();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_UTIL_TIMEHELPER_HPP