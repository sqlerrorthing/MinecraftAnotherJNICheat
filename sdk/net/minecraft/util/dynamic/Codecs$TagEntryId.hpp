// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_UTIL_DYNAMIC_CODECS$TAGENTRYID_HPP
#define NET_MINECRAFT_UTIL_DYNAMIC_CODECS$TAGENTRYID_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.util.dynamic.Codecs$TagEntryId
 * Remapped: axw$c
 */
namespace Codecs$TagEntryId {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("axw$c", "net/minecraft/util/ExtraCodecs$TagOrElementLocation", "net/minecraft/class_5699$class_7476", "net/minecraft/util/dynamic/Codecs$TagEntryId", "net/minecraft/src/C_140989_$C_212971_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.util.dynamic.Codecs$TagEntryId#id
    static jobject get_field_id(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "id", "comp_813", "id", "f_216195_"), "Lakr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.dynamic.Codecs$TagEntryId#id
    static void set_field_id(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "id", "comp_813", "id", "f_216195_"), "Lakr;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.dynamic.Codecs$TagEntryId#tag
    static jboolean get_field_tag(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "tag", "comp_814", "tag", "f_216196_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.dynamic.Codecs$TagEntryId#tag
    static void set_field_tag(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "tag", "comp_814", "tag", "f_216196_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    static jmethodID methodID_asString() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "decoratedId", "method_43963", "asString", "m_216202_"), "()Ljava/lang/String;");
    }

    static jobject asString(const jobject& obj) {
                
       const auto methodID = methodID_asString();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__id() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "id", "comp_813", "id", "f_216195_"), "()Lakr;");
    }

    static jobject _id(const jobject& obj) {
                
       const auto methodID = methodID__id();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__tag() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "tag", "comp_814", "tag", "f_216196_"), "()Z");
    }

    static jboolean _tag(const jobject& obj) {
                
       const auto methodID = methodID__tag();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_UTIL_DYNAMIC_CODECS$TAGENTRYID_HPP