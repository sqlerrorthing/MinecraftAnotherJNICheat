// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_UTIL_DYNAMIC_CODECS_HPP
#define NET_MINECRAFT_UTIL_DYNAMIC_CODECS_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.util.dynamic.Codecs
 * Remapped: axw
 */
namespace Codecs {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("axw", "net/minecraft/util/ExtraCodecs", "net/minecraft/class_5699", "net/minecraft/util/dynamic/Codecs", "net/minecraft/src/C_140989_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.util.dynamic.Codecs#JSON_ELEMENT
    [[maybe_unused]] static jobject get_field_JSON_ELEMENT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "JSON", "field_40721", "JSON_ELEMENT", "f_252400_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.dynamic.Codecs#JSON_ELEMENT
    [[maybe_unused]] static void set_field_JSON_ELEMENT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "JSON", "field_40721", "JSON_ELEMENT", "f_252400_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.dynamic.Codecs#BASIC_OBJECT
    [[maybe_unused]] static jobject get_field_BASIC_OBJECT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "JAVA", "field_46236", "BASIC_OBJECT", "f_302296_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.dynamic.Codecs#BASIC_OBJECT
    [[maybe_unused]] static void set_field_BASIC_OBJECT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "JAVA", "field_46236", "BASIC_OBJECT", "f_302296_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.dynamic.Codecs#VECTOR_3F
    [[maybe_unused]] static jobject get_field_VECTOR_3F() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "VECTOR3F", "field_40723", "VECTOR_3F", "f_252432_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.dynamic.Codecs#VECTOR_3F
    [[maybe_unused]] static void set_field_VECTOR_3F(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "VECTOR3F", "field_40723", "VECTOR_3F", "f_252432_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.dynamic.Codecs#VECTOR_4F
    [[maybe_unused]] static jobject get_field_VECTOR_4F() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "VECTOR4F", "field_51364", "VECTOR_4F", "f_314547_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.dynamic.Codecs#VECTOR_4F
    [[maybe_unused]] static void set_field_VECTOR_4F(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "VECTOR4F", "field_51364", "VECTOR_4F", "f_314547_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.dynamic.Codecs#QUATERNIONF
    [[maybe_unused]] static jobject get_field_QUATERNIONF() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "QUATERNIONF_COMPONENTS", "field_42265", "QUATERNIONF", "f_268572_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.dynamic.Codecs#QUATERNIONF
    [[maybe_unused]] static void set_field_QUATERNIONF(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "QUATERNIONF_COMPONENTS", "field_42265", "QUATERNIONF", "f_268572_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.dynamic.Codecs#AXIS_ANGLE4F
    [[maybe_unused]] static jobject get_field_AXIS_ANGLE4F() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "AXISANGLE4F", "field_42266", "AXIS_ANGLE4F", "f_268751_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.dynamic.Codecs#AXIS_ANGLE4F
    [[maybe_unused]] static void set_field_AXIS_ANGLE4F(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "AXISANGLE4F", "field_42266", "AXIS_ANGLE4F", "f_268751_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.dynamic.Codecs#ROTATION
    [[maybe_unused]] static jobject get_field_ROTATION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "QUATERNIONF", "field_42267", "ROTATION", "f_268538_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.dynamic.Codecs#ROTATION
    [[maybe_unused]] static void set_field_ROTATION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "QUATERNIONF", "field_42267", "ROTATION", "f_268538_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.dynamic.Codecs#MATRIX4F
    [[maybe_unused]] static jobject get_field_MATRIX4F() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "MATRIX4F", "field_42268", "MATRIX4F", "f_268748_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.dynamic.Codecs#MATRIX4F
    [[maybe_unused]] static void set_field_MATRIX4F(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "MATRIX4F", "field_42268", "MATRIX4F", "f_268748_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.dynamic.Codecs#ARGB
    [[maybe_unused]] static jobject get_field_ARGB() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "ARGB_COLOR_CODEC", "field_51365", "ARGB", "f_315502_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.dynamic.Codecs#ARGB
    [[maybe_unused]] static void set_field_ARGB(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "ARGB_COLOR_CODEC", "field_51365", "ARGB", "f_315502_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.dynamic.Codecs#UNSIGNED_BYTE
    [[maybe_unused]] static jobject get_field_UNSIGNED_BYTE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "UNSIGNED_BYTE", "field_49012", "UNSIGNED_BYTE", "f_316863_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.dynamic.Codecs#UNSIGNED_BYTE
    [[maybe_unused]] static void set_field_UNSIGNED_BYTE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "UNSIGNED_BYTE", "field_49012", "UNSIGNED_BYTE", "f_316863_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.dynamic.Codecs#NONNEGATIVE_INT
    [[maybe_unused]] static jobject get_field_NONNEGATIVE_INT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "NON_NEGATIVE_INT", "field_33441", "NONNEGATIVE_INT", "f_144628_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.dynamic.Codecs#NONNEGATIVE_INT
    [[maybe_unused]] static void set_field_NONNEGATIVE_INT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "NON_NEGATIVE_INT", "field_33441", "NONNEGATIVE_INT", "f_144628_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.dynamic.Codecs#POSITIVE_INT
    [[maybe_unused]] static jobject get_field_POSITIVE_INT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "POSITIVE_INT", "field_33442", "POSITIVE_INT", "f_144629_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.dynamic.Codecs#POSITIVE_INT
    [[maybe_unused]] static void set_field_POSITIVE_INT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "POSITIVE_INT", "field_33442", "POSITIVE_INT", "f_144629_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.dynamic.Codecs#POSITIVE_FLOAT
    [[maybe_unused]] static jobject get_field_POSITIVE_FLOAT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "POSITIVE_FLOAT", "field_34387", "POSITIVE_FLOAT", "f_184349_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.dynamic.Codecs#POSITIVE_FLOAT
    [[maybe_unused]] static void set_field_POSITIVE_FLOAT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "POSITIVE_FLOAT", "field_34387", "POSITIVE_FLOAT", "f_184349_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.dynamic.Codecs#REGULAR_EXPRESSION
    [[maybe_unused]] static jobject get_field_REGULAR_EXPRESSION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "PATTERN", "field_37408", "REGULAR_EXPRESSION", "f_216158_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.dynamic.Codecs#REGULAR_EXPRESSION
    [[maybe_unused]] static void set_field_REGULAR_EXPRESSION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "PATTERN", "field_37408", "REGULAR_EXPRESSION", "f_216158_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.dynamic.Codecs#INSTANT
    [[maybe_unused]] static jobject get_field_INSTANT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "INSTANT_ISO8601", "field_39042", "INSTANT", "f_216159_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.dynamic.Codecs#INSTANT
    [[maybe_unused]] static void set_field_INSTANT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "INSTANT_ISO8601", "field_39042", "INSTANT", "f_216159_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.dynamic.Codecs#BASE_64
    [[maybe_unused]] static jobject get_field_BASE_64() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "BASE64_STRING", "field_39273", "BASE_64", "f_216160_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.dynamic.Codecs#BASE_64
    [[maybe_unused]] static void set_field_BASE_64(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "BASE64_STRING", "field_39273", "BASE_64", "f_216160_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.dynamic.Codecs#ESCAPED_STRING
    [[maybe_unused]] static jobject get_field_ESCAPED_STRING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "ESCAPED_STRING", "field_46165", "ESCAPED_STRING", "f_291683_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.dynamic.Codecs#ESCAPED_STRING
    [[maybe_unused]] static void set_field_ESCAPED_STRING(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "ESCAPED_STRING", "field_46165", "ESCAPED_STRING", "f_291683_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.dynamic.Codecs#TAG_ENTRY_ID
    [[maybe_unused]] static jobject get_field_TAG_ENTRY_ID() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "TAG_OR_ELEMENT_ID", "field_39274", "TAG_ENTRY_ID", "f_216161_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.dynamic.Codecs#TAG_ENTRY_ID
    [[maybe_unused]] static void set_field_TAG_ENTRY_ID(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "TAG_OR_ELEMENT_ID", "field_39274", "TAG_ENTRY_ID", "f_216161_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.dynamic.Codecs#OPTIONAL_OF_LONG_TO_OPTIONAL_LONG
    [[maybe_unused]] static jobject get_field_OPTIONAL_OF_LONG_TO_OPTIONAL_LONG() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "toOptionalLong", "field_39395", "OPTIONAL_OF_LONG_TO_OPTIONAL_LONG", "f_216162_"), "Ljava/util/function/Function;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.dynamic.Codecs#OPTIONAL_OF_LONG_TO_OPTIONAL_LONG
    [[maybe_unused]] static void set_field_OPTIONAL_OF_LONG_TO_OPTIONAL_LONG(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "toOptionalLong", "field_39395", "OPTIONAL_OF_LONG_TO_OPTIONAL_LONG", "f_216162_"), "Ljava/util/function/Function;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.dynamic.Codecs#OPTIONAL_LONG_TO_OPTIONAL_OF_LONG
    [[maybe_unused]] static jobject get_field_OPTIONAL_LONG_TO_OPTIONAL_OF_LONG() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "fromOptionalLong", "field_39396", "OPTIONAL_LONG_TO_OPTIONAL_OF_LONG", "f_216163_"), "Ljava/util/function/Function;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.dynamic.Codecs#OPTIONAL_LONG_TO_OPTIONAL_OF_LONG
    [[maybe_unused]] static void set_field_OPTIONAL_LONG_TO_OPTIONAL_OF_LONG(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "fromOptionalLong", "field_39396", "OPTIONAL_LONG_TO_OPTIONAL_OF_LONG", "f_216163_"), "Ljava/util/function/Function;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.dynamic.Codecs#BIT_SET
    [[maybe_unused]] static jobject get_field_BIT_SET() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "BIT_SET", "field_40724", "BIT_SET", "f_252419_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.dynamic.Codecs#BIT_SET
    [[maybe_unused]] static void set_field_BIT_SET(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "BIT_SET", "field_40724", "BIT_SET", "f_252419_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.util.dynamic.Codecs#GAME_PROFILE_PROPERTY
    [[maybe_unused]] static jobject get_field_GAME_PROFILE_PROPERTY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("B", "PROPERTY", "field_40727", "GAME_PROFILE_PROPERTY", "f_252501_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.util.dynamic.Codecs#GAME_PROFILE_PROPERTY
    [[maybe_unused]] static void set_field_GAME_PROFILE_PROPERTY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("B", "PROPERTY", "field_40727", "GAME_PROFILE_PROPERTY", "f_252501_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.dynamic.Codecs#GAME_PROFILE_PROPERTY_MAP
    [[maybe_unused]] static jobject get_field_GAME_PROFILE_PROPERTY_MAP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "PROPERTY_MAP", "field_40725", "GAME_PROFILE_PROPERTY_MAP", "f_252500_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.dynamic.Codecs#GAME_PROFILE_PROPERTY_MAP
    [[maybe_unused]] static void set_field_GAME_PROFILE_PROPERTY_MAP(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "PROPERTY_MAP", "field_40725", "GAME_PROFILE_PROPERTY_MAP", "f_252500_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.dynamic.Codecs#PLAYER_NAME
    [[maybe_unused]] static jobject get_field_PLAYER_NAME() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "PLAYER_NAME", "field_49183", "PLAYER_NAME", "f_316749_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.dynamic.Codecs#PLAYER_NAME
    [[maybe_unused]] static void set_field_PLAYER_NAME(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "PLAYER_NAME", "field_49183", "PLAYER_NAME", "f_316749_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.util.dynamic.Codecs#GAME_PROFILE
    [[maybe_unused]] static jobject get_field_GAME_PROFILE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("C", "GAME_PROFILE_WITHOUT_PROPERTIES", "field_45076", "GAME_PROFILE", "f_291490_"), "Lcom/mojang/serialization/MapCodec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.util.dynamic.Codecs#GAME_PROFILE
    [[maybe_unused]] static void set_field_GAME_PROFILE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("C", "GAME_PROFILE_WITHOUT_PROPERTIES", "field_45076", "GAME_PROFILE", "f_291490_"), "Lcom/mojang/serialization/MapCodec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.dynamic.Codecs#GAME_PROFILE_WITH_PROPERTIES
    [[maybe_unused]] static jobject get_field_GAME_PROFILE_WITH_PROPERTIES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "GAME_PROFILE", "field_40726", "GAME_PROFILE_WITH_PROPERTIES", "f_252453_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.dynamic.Codecs#GAME_PROFILE_WITH_PROPERTIES
    [[maybe_unused]] static void set_field_GAME_PROFILE_WITH_PROPERTIES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "GAME_PROFILE", "field_40726", "GAME_PROFILE_WITH_PROPERTIES", "f_252453_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.dynamic.Codecs#NON_EMPTY_STRING
    [[maybe_unused]] static jobject get_field_NON_EMPTY_STRING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("y", "NON_EMPTY_STRING", "field_41759", "NON_EMPTY_STRING", "f_263723_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.dynamic.Codecs#NON_EMPTY_STRING
    [[maybe_unused]] static void set_field_NON_EMPTY_STRING(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("y", "NON_EMPTY_STRING", "field_41759", "NON_EMPTY_STRING", "f_263723_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.dynamic.Codecs#CODEPOINT
    [[maybe_unused]] static jobject get_field_CODEPOINT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("z", "CODEPOINT", "field_44703", "CODEPOINT", "f_283896_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.dynamic.Codecs#CODEPOINT
    [[maybe_unused]] static void set_field_CODEPOINT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("z", "CODEPOINT", "field_44703", "CODEPOINT", "f_283896_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.dynamic.Codecs#IDENTIFIER_PATH
    [[maybe_unused]] static jobject get_field_IDENTIFIER_PATH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("A", "RESOURCE_PATH_CODEC", "field_45075", "IDENTIFIER_PATH", "f_291300_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.dynamic.Codecs#IDENTIFIER_PATH
    [[maybe_unused]] static void set_field_IDENTIFIER_PATH(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("A", "RESOURCE_PATH_CODEC", "field_45075", "IDENTIFIER_PATH", "f_291300_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_fromOps() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "converter", "method_53918", "fromOps", "m_306780_"), "(Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Codec;");
    }

    static jobject fromOps(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_fromOps();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_createCodecForPairObject() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "intervalCodec", "method_37931", "createCodecForPairObject", "m_184361_"), "(Lcom/mojang/serialization/Codec;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/BiFunction;Ljava/util/function/Function;Ljava/util/function/Function;)Lcom/mojang/serialization/Codec;");
    }

    static jobject createCodecForPairObject(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jobject& arg4, const jobject& arg5) {
       const auto clazz = self();
       const auto methodID = methodID_createCodecForPairObject();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4, arg5);
    };
    
    static jmethodID methodID_orElsePartial() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "orElsePartial", "method_39028", "orElsePartial", "m_184381_"), "(Ljava/lang/Object;)Lcom/mojang/serialization/Codec$ResultFunction;");
    }

    static jobject orElsePartial(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_orElsePartial();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_rawIdChecked() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "idResolverCodec", "method_39511", "rawIdChecked", "m_184421_"), "(Ljava/util/function/ToIntFunction;Ljava/util/function/IntFunction;I)Lcom/mojang/serialization/Codec;");
    }

    static jobject rawIdChecked(const jobject& arg0, const jobject& arg1, const jint& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_rawIdChecked();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_orCompressed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "orCompressed", "method_39512", "orCompressed", "m_184425_"), "(Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;");
    }

    static jobject orCompressed(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_orCompressed();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__orCompressed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "orCompressed", "method_53921", "orCompressed", "m_307667_"), "(Lcom/mojang/serialization/MapCodec;Lcom/mojang/serialization/MapCodec;)Lcom/mojang/serialization/MapCodec;");
    }

    static jobject _orCompressed(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID__orCompressed();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_withLifecycle() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "overrideLifecycle", "method_39504", "withLifecycle", "m_184368_"), "(Lcom/mojang/serialization/Codec;Ljava/util/function/Function;Ljava/util/function/Function;)Lcom/mojang/serialization/Codec;");
    }

    static jobject withLifecycle(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_withLifecycle();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID__withLifecycle() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "overrideLifecycle", "method_56942", "withLifecycle", "m_322767_"), "(Lcom/mojang/serialization/Codec;Ljava/util/function/Function;)Lcom/mojang/serialization/Codec;");
    }

    static jobject _withLifecycle(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID__withLifecycle();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_strictUnboundedMap() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "strictUnboundedMap", "method_53703", "strictUnboundedMap", "m_295464_"), "(Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/Codec;)Laxw$b;");
    }

    static jobject strictUnboundedMap(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_strictUnboundedMap();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_rangedInt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "intRangeWithMessage", "method_36241", "rangedInt", "m_144633_"), "(IILjava/util/function/Function;)Lcom/mojang/serialization/Codec;");
    }

    static jobject rangedInt(const jint& arg0, const jint& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_rangedInt();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID__rangedInt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "intRange", "method_48766", "rangedInt", "m_269197_"), "(II)Lcom/mojang/serialization/Codec;");
    }

    static jobject _rangedInt(const jint& arg0, const jint& arg1) {
       const auto clazz = self();
       const auto methodID = methodID__rangedInt();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_rangedFloat() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "floatRangeMinExclusiveWithMessage", "method_37928", "rangedFloat", "m_184350_"), "(FFLjava/util/function/Function;)Lcom/mojang/serialization/Codec;");
    }

    static jobject rangedFloat(const jfloat& arg0, const jfloat& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_rangedFloat();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_nonEmptyList() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "nonEmptyList", "method_36973", "nonEmptyList", "m_144637_"), "(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;");
    }

    static jobject nonEmptyList(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_nonEmptyList();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_nonEmptyEntryList() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "nonEmptyHolderSet", "method_40113", "nonEmptyEntryList", "m_203982_"), "(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;");
    }

    static jobject nonEmptyEntryList(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_nonEmptyEntryList();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_createContextRetrievalCodec() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "retrieveContext", "method_40110", "createContextRetrievalCodec", "m_203976_"), "(Ljava/util/function/Function;)Lcom/mojang/serialization/MapCodec;");
    }

    static jobject createContextRetrievalCodec(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_createContextRetrievalCodec();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_createEqualTypeChecker() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "ensureHomogenous", "method_40114", "createEqualTypeChecker", "m_203984_"), "(Ljava/util/function/Function;)Ljava/util/function/Function;");
    }

    static jobject createEqualTypeChecker(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_createEqualTypeChecker();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_exceptionCatching() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "catchDecoderException", "method_42114", "exceptionCatching", "m_216185_"), "(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;");
    }

    static jobject exceptionCatching(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_exceptionCatching();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_formattedTime() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "temporalCodec", "method_53700", "formattedTime", "m_216170_"), "(Ljava/time/format/DateTimeFormatter;)Lcom/mojang/serialization/Codec;");
    }

    static jobject formattedTime(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_formattedTime();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_optionalLong() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "asOptionalLong", "method_44167", "optionalLong", "m_216166_"), "(Lcom/mojang/serialization/MapCodec;)Lcom/mojang/serialization/MapCodec;");
    }

    static jobject optionalLong(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_optionalLong();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_map() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "sizeLimitedMap", "method_57153", "map", "m_324898_"), "(Lcom/mojang/serialization/Codec;I)Lcom/mojang/serialization/Codec;");
    }

    static jobject map(const jobject& arg0, const jint& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_map();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_object2BooleanMap() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("d", "object2BooleanMap", "method_53058", "object2BooleanMap", "m_293159_"), "(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;");
    }

    static jobject object2BooleanMap(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_object2BooleanMap();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_parameters() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "dispatchOptionalValue", "method_54941", "parameters", "m_306181_"), "(Ljava/lang/String;Ljava/lang/String;Lcom/mojang/serialization/Codec;Ljava/util/function/Function;Ljava/util/function/Function;)Lcom/mojang/serialization/MapCodec;");
    }

    static jobject parameters(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jobject& arg4) {
       const auto clazz = self();
       const auto methodID = methodID_parameters();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_optional() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("e", "optionalEmptyMap", "method_57155", "optional", "m_319082_"), "(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;");
    }

    static jobject optional(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_optional();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_UTIL_DYNAMIC_CODECS_HPP