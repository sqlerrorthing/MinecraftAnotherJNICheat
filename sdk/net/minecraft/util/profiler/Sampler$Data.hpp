// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_UTIL_PROFILER_SAMPLER$DATA_HPP
#define NET_MINECRAFT_UTIL_PROFILER_SAMPLER$DATA_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.util.profiler.Sampler$Data
 * Remapped: bom$b
 */
namespace Sampler$Data {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("bom$b", "net/minecraft/util/profiling/metrics/MetricSampler$SamplerResult", "net/minecraft/class_5965$class_6398", "net/minecraft/util/profiler/Sampler$Data", "net/minecraft/src/C_141012_$C_141014_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.util.profiler.Sampler$Data#values
    static jobject get_field_values(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "recording", "field_33887", "values", "f_146049_"), "Lit/unimi/dsi/fastutil/ints/Int2DoubleMap;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.profiler.Sampler$Data#values
    static void set_field_values(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "recording", "field_33887", "values", "f_146049_"), "Lit/unimi/dsi/fastutil/ints/Int2DoubleMap;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.profiler.Sampler$Data#startTick
    static jint get_field_startTick(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "firstTick", "field_33888", "startTick", "f_146050_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.profiler.Sampler$Data#startTick
    static void set_field_startTick(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "firstTick", "field_33888", "startTick", "f_146050_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.profiler.Sampler$Data#endTick
    static jint get_field_endTick(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "lastTick", "field_33889", "endTick", "f_146051_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.profiler.Sampler$Data#endTick
    static void set_field_endTick(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "lastTick", "field_33889", "endTick", "f_146051_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    static jmethodID methodID_getValue() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "valueAtTick", "method_37176", "getValue", "m_146057_"), "(I)D");
    }

    static jdouble getValue(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_getValue();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getStartTick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getFirstTick", "method_37175", "getStartTick", "m_146056_"), "()I");
    }

    static jint getStartTick(const jobject& obj) {
                
       const auto methodID = methodID_getStartTick();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getEndTick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getLastTick", "method_37177", "getEndTick", "m_146059_"), "()I");
    }

    static jint getEndTick(const jobject& obj) {
                
       const auto methodID = methodID_getEndTick();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_UTIL_PROFILER_SAMPLER$DATA_HPP