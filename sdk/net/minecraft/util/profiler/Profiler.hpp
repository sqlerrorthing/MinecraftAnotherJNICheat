// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_UTIL_PROFILER_PROFILER_HPP
#define NET_MINECRAFT_UTIL_PROFILER_PROFILER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.util.profiler.Profiler
 * Remapped: bnf
 */
namespace Profiler {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("bnf", "net/minecraft/util/profiling/ProfilerFiller", "net/minecraft/class_3695", "net/minecraft/util/profiler/Profiler", "net/minecraft/src/C_442_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.util.profiler.Profiler#ROOT_NAME
    [[maybe_unused]] static jobject get_field_ROOT_NAME() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "ROOT", "field_29925", "ROOT_NAME", "f_145958_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.profiler.Profiler#ROOT_NAME
    [[maybe_unused]] static void set_field_ROOT_NAME(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "ROOT", "field_29925", "ROOT_NAME", "f_145958_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_startTick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "startTick", "method_16065", "startTick", "m_7242_"), "()V");
    }

    static void startTick(const jobject& obj) {
                
       const auto methodID = methodID_startTick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_endTick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "endTick", "method_16066", "endTick", "m_7241_"), "()V");
    }

    static void endTick(const jobject& obj) {
                
       const auto methodID = methodID_endTick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_push() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "push", "method_15396", "push", "m_6180_"), "(Ljava/lang/String;)V");
    }

    static void push(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_push();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__push() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "push", "method_15400", "push", "m_6521_"), "(Ljava/util/function/Supplier;)V");
    }

    static void _push(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__push();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_pop() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "pop", "method_15407", "pop", "m_7238_"), "()V");
    }

    static void pop(const jobject& obj) {
                
       const auto methodID = methodID_pop();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_swap() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "popPush", "method_15405", "swap", "m_6182_"), "(Ljava/lang/String;)V");
    }

    static void swap(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_swap();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__swap() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "popPush", "method_15403", "swap", "m_6523_"), "(Ljava/util/function/Supplier;)V");
    }

    static void _swap(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__swap();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_markSampleType() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "markForCharting", "method_37167", "markSampleType", "m_142259_"), "(Lbol;)V");
    }

    static void markSampleType(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_markSampleType();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_visit() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "incrementCounter", "method_39278", "visit", "m_6174_"), "(Ljava/lang/String;)V");
    }

    static void visit(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_visit();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__visit() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "incrementCounter", "method_24270", "visit", "m_183275_"), "(Ljava/lang/String;I)V");
    }

    static void _visit(const jobject& obj, const jobject& arg0, const jint& arg1) {
                
       const auto methodID = methodID__visit();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID___visit() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "incrementCounter", "method_39277", "visit", "m_6525_"), "(Ljava/util/function/Supplier;)V");
    }

    static void __visit(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID___visit();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID____visit() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "incrementCounter", "method_24271", "visit", "m_183536_"), "(Ljava/util/function/Supplier;I)V");
    }

    static void ___visit(const jobject& obj, const jobject& arg0, const jint& arg1) {
                
       const auto methodID = methodID____visit();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_union() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "tee", "method_24338", "union", "m_18578_"), "(Lbnf;Lbnf;)Lbnf;");
    }
    
};

#endif // NET_MINECRAFT_UTIL_PROFILER_PROFILER_HPP