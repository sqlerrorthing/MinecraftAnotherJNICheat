// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_UTIL_PROFILER_DEBUGRECORDER_HPP
#define NET_MINECRAFT_UTIL_PROFILER_DEBUGRECORDER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.util.profiler.DebugRecorder
 * Remapped: bor
 */
namespace DebugRecorder {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("bor", "net/minecraft/util/profiling/metrics/profiling/ActiveMetricsRecorder", "net/minecraft/class_5961", "net/minecraft/util/profiler/DebugRecorder", "net/minecraft/src/C_141022_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.util.profiler.DebugRecorder#MAX_DURATION_IN_SECONDS
    [[maybe_unused]] static jint get_field_MAX_DURATION_IN_SECONDS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "PROFILING_MAX_DURATION_SECONDS", "field_32676", "MAX_DURATION_IN_SECONDS", "f_146104_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.profiler.DebugRecorder#MAX_DURATION_IN_SECONDS
    [[maybe_unused]] static void set_field_MAX_DURATION_IN_SECONDS(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "PROFILING_MAX_DURATION_SECONDS", "field_32676", "MAX_DURATION_IN_SECONDS", "f_146104_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.util.profiler.DebugRecorder#globalDumpConsumer
    [[maybe_unused]] static jobject get_field_globalDumpConsumer() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "globalOnReportFinished", "field_29579", "globalDumpConsumer", "f_146105_"), "Ljava/util/function/Consumer;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.util.profiler.DebugRecorder#globalDumpConsumer
    [[maybe_unused]] static void set_field_globalDumpConsumer(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "globalOnReportFinished", "field_29579", "globalDumpConsumer", "f_146105_"), "Ljava/util/function/Consumer;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.util.profiler.DebugRecorder#deviations
    static jobject get_field_deviations(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "deviationsBySampler", "field_33891", "deviations", "f_146106_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.profiler.DebugRecorder#deviations
    static void set_field_deviations(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "deviationsBySampler", "field_33891", "deviations", "f_146106_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.profiler.DebugRecorder#timeTracker
    static jobject get_field_timeTracker(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "taskProfiler", "field_29581", "timeTracker", "f_146107_"), "Lbmz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.profiler.DebugRecorder#timeTracker
    static void set_field_timeTracker(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "taskProfiler", "field_29581", "timeTracker", "f_146107_"), "Lbmz;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.profiler.DebugRecorder#dumpExecutor
    static jobject get_field_dumpExecutor(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "ioExecutor", "field_29582", "dumpExecutor", "f_146108_"), "Ljava/util/concurrent/Executor;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.profiler.DebugRecorder#dumpExecutor
    static void set_field_dumpExecutor(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "ioExecutor", "field_29582", "dumpExecutor", "f_146108_"), "Ljava/util/concurrent/Executor;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.profiler.DebugRecorder#dumper
    static jobject get_field_dumper(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "metricsPersister", "field_29583", "dumper", "f_146109_"), "Lbox;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.profiler.DebugRecorder#dumper
    static void set_field_dumper(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "metricsPersister", "field_29583", "dumper", "f_146109_"), "Lbox;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.profiler.DebugRecorder#resultConsumer
    static jobject get_field_resultConsumer(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "onProfilingEnd", "field_29584", "resultConsumer", "f_146110_"), "Ljava/util/function/Consumer;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.profiler.DebugRecorder#resultConsumer
    static void set_field_resultConsumer(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "onProfilingEnd", "field_29584", "resultConsumer", "f_146110_"), "Ljava/util/function/Consumer;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.profiler.DebugRecorder#dumpConsumer
    static jobject get_field_dumpConsumer(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "onReportFinished", "field_29585", "dumpConsumer", "f_146111_"), "Ljava/util/function/Consumer;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.profiler.DebugRecorder#dumpConsumer
    static void set_field_dumpConsumer(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "onReportFinished", "field_29585", "dumpConsumer", "f_146111_"), "Ljava/util/function/Consumer;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.profiler.DebugRecorder#samplerSource
    static jobject get_field_samplerSource(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "metricsSamplerProvider", "field_33892", "samplerSource", "f_146112_"), "Lboo;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.profiler.DebugRecorder#samplerSource
    static void set_field_samplerSource(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "metricsSamplerProvider", "field_33892", "samplerSource", "f_146112_"), "Lboo;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.profiler.DebugRecorder#timeGetter
    static jobject get_field_timeGetter(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "wallTimeSource", "field_29586", "timeGetter", "f_146113_"), "Ljava/util/function/LongSupplier;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.profiler.DebugRecorder#timeGetter
    static void set_field_timeGetter(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "wallTimeSource", "field_29586", "timeGetter", "f_146113_"), "Ljava/util/function/LongSupplier;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.profiler.DebugRecorder#endTime
    static jlong get_field_endTime(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "deadlineNano", "field_29588", "endTime", "f_146114_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.profiler.DebugRecorder#endTime
    static void set_field_endTime(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "deadlineNano", "field_29588", "endTime", "f_146114_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.profiler.DebugRecorder#ticks
    static jint get_field_ticks(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "currentTick", "field_29589", "ticks", "f_146115_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.profiler.DebugRecorder#ticks
    static void set_field_ticks(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "currentTick", "field_29589", "ticks", "f_146115_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.profiler.DebugRecorder#profiler
    static jobject get_field_profiler(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "singleTickProfiler", "field_29590", "profiler", "f_146116_"), "Lbnd;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.profiler.DebugRecorder#profiler
    static void set_field_profiler(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "singleTickProfiler", "field_29590", "profiler", "f_146116_"), "Lbnd;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.profiler.DebugRecorder#stopping
    static jboolean get_field_stopping(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "killSwitch", "field_29591", "stopping", "f_146117_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.profiler.DebugRecorder#stopping
    static void set_field_stopping(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "killSwitch", "field_29591", "stopping", "f_146117_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.profiler.DebugRecorder#samplers
    static jobject get_field_samplers(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("o", "thisTickSamplers", "field_33893", "samplers", "f_146118_"), "Ljava/util/Set;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.profiler.DebugRecorder#samplers
    static void set_field_samplers(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("o", "thisTickSamplers", "field_33893", "samplers", "f_146118_"), "Ljava/util/Set;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_of() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "createStarted", "method_37191", "of", "m_146132_"), "(Lboo;Ljava/util/function/LongSupplier;Ljava/util/concurrent/Executor;Lbox;Ljava/util/function/Consumer;Ljava/util/function/Consumer;)Lbor;");
    }

    static jobject of(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3, const jobject& arg4, const jobject& arg5) {
       const auto clazz = self();
       const auto methodID = methodID_of();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4, arg5);
    };
    
    static jmethodID methodID_stop() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "end", "method_34770", "stop", "m_142760_"), "()V");
    }

    static void stop(const jobject& obj) {
                
       const auto methodID = methodID_stop();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_forceStop() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "cancel", "method_41320", "forceStop", "m_213832_"), "()V");
    }

    static void forceStop(const jobject& obj) {
                
       const auto methodID = methodID_forceStop();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_startTick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "startTick", "method_34771", "startTick", "m_142759_"), "()V");
    }

    static void startTick(const jobject& obj) {
                
       const auto methodID = methodID_startTick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_endTick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "endTick", "method_34772", "endTick", "m_142758_"), "()V");
    }

    static void endTick(const jobject& obj) {
                
       const auto methodID = methodID_endTick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_isActive() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "isRecording", "method_34773", "isActive", "m_142763_"), "()Z");
    }

    static jboolean isActive(const jobject& obj) {
                
       const auto methodID = methodID_isActive();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getProfiler() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "getProfiler", "method_34774", "getProfiler", "m_142610_"), "()Lbnf;");
    }

    static jobject getProfiler(const jobject& obj) {
                
       const auto methodID = methodID_getProfiler();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_checkState() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "verifyStarted", "method_34762", "checkState", "m_146148_"), "()V");
    }

    static void checkState(const jobject& obj) {
                
       const auto methodID = methodID_checkState();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_dump() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "scheduleSaveResults", "method_34763", "dump", "m_146128_"), "(Lbne;)V");
    }

    static void dump(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_dump();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__forceStop() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "cleanup", "method_41319", "forceStop", "m_216816_"), "(Ljava/util/Collection;)V");
    }

    static void _forceStop(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__forceStop();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setGlobalDumpConsumer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "registerGlobalCompletionCallback", "method_35762", "setGlobalDumpConsumer", "m_146142_"), "(Ljava/util/function/Consumer;)V");
    }

    static void setGlobalDumpConsumer(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_setGlobalDumpConsumer();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_UTIL_PROFILER_DEBUGRECORDER_HPP