// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_UTIL_PROFILER_SAMPLER$RATIODEVIATIONCHECKER_HPP
#define NET_MINECRAFT_UTIL_PROFILER_SAMPLER$RATIODEVIATIONCHECKER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.util.profiler.Sampler$RatioDeviationChecker
 * Remapped: bom$d
 */
namespace Sampler$RatioDeviationChecker {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("bom$d", "net/minecraft/util/profiling/metrics/MetricSampler$ValueIncreasedByPercentage", "net/minecraft/class_5965$class_5968", "net/minecraft/util/profiler/Sampler$RatioDeviationChecker", "net/minecraft/src/C_141012_$C_141016_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.util.profiler.Sampler$RatioDeviationChecker#threshold
    static jfloat get_field_threshold(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "percentageIncreaseThreshold", "field_29609", "threshold", "f_146061_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.profiler.Sampler$RatioDeviationChecker#threshold
    static void set_field_threshold(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "percentageIncreaseThreshold", "field_29609", "threshold", "f_146061_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.profiler.Sampler$RatioDeviationChecker#lastValue
    static jdouble get_field_lastValue(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "previousValue", "field_29611", "lastValue", "f_146062_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetDoubleField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.profiler.Sampler$RatioDeviationChecker#lastValue
    static void set_field_lastValue(const jobject &obj, const jdouble &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "previousValue", "field_29611", "lastValue", "f_146062_"), "D");
        return MinecraftSDK::env->SetDoubleField(obj, fieldID, value);
    };

    static jmethodID methodID_check() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("test", "test", "method_34792", "check", "m_142488_"), "(D)Z");
    }

    static jboolean check(const jobject& obj, const jdouble& arg0) {
                
       const auto methodID = methodID_check();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_UTIL_PROFILER_SAMPLER$RATIODEVIATIONCHECKER_HPP