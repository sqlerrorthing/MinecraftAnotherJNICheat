// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_UTIL_PROFILER_SERVERSAMPLERSOURCE$CPUUSAGEFETCHER_HPP
#define NET_MINECRAFT_UTIL_PROFILER_SERVERSAMPLERSOURCE$CPUUSAGEFETCHER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.util.profiler.ServerSamplerSource$CpuUsageFetcher
 * Remapped: bov$a
 */
namespace ServerSamplerSource$CpuUsageFetcher {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("bov$a", "net/minecraft/util/profiling/metrics/profiling/ServerMetricsSamplersProvider$CpuStats", "net/minecraft/class_6402$class_6403", "net/minecraft/util/profiler/ServerSamplerSource$CpuUsageFetcher", "net/minecraft/src/C_141026_$C_141028_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.util.profiler.ServerSamplerSource$CpuUsageFetcher#systemInfo
    static jobject get_field_systemInfo(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "systemInfo", "field_33898", "systemInfo", "f_146201_"), "Loshi/SystemInfo;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.profiler.ServerSamplerSource$CpuUsageFetcher#systemInfo
    static void set_field_systemInfo(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "systemInfo", "field_33898", "systemInfo", "f_146201_"), "Loshi/SystemInfo;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.profiler.ServerSamplerSource$CpuUsageFetcher#processor
    static jobject get_field_processor(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "processor", "field_33899", "processor", "f_146202_"), "Loshi/hardware/CentralProcessor;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.profiler.ServerSamplerSource$CpuUsageFetcher#processor
    static void set_field_processor(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "processor", "field_33899", "processor", "f_146202_"), "Loshi/hardware/CentralProcessor;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for public field net.minecraft.util.profiler.ServerSamplerSource$CpuUsageFetcher#logicalProcessorCount
    static jint get_field_logicalProcessorCount(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "nrOfCpus", "field_33897", "logicalProcessorCount", "f_146200_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static public field net.minecraft.util.profiler.ServerSamplerSource$CpuUsageFetcher#logicalProcessorCount
    static void set_field_logicalProcessorCount(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "nrOfCpus", "field_33897", "logicalProcessorCount", "f_146200_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.profiler.ServerSamplerSource$CpuUsageFetcher#loadTicks
    static jlong get_field_loadTicks(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "previousCpuLoadTick", "field_33900", "loadTicks", "f_146203_"), "[[J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.profiler.ServerSamplerSource$CpuUsageFetcher#loadTicks
    static void set_field_loadTicks(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "previousCpuLoadTick", "field_33900", "loadTicks", "f_146203_"), "[[J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.profiler.ServerSamplerSource$CpuUsageFetcher#loadBetweenTicks
    static jdouble get_field_loadBetweenTicks(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "currentLoad", "field_33901", "loadBetweenTicks", "f_146204_"), "[D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetDoubleField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.profiler.ServerSamplerSource$CpuUsageFetcher#loadBetweenTicks
    static void set_field_loadBetweenTicks(const jobject &obj, const jdouble &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "currentLoad", "field_33901", "loadBetweenTicks", "f_146204_"), "[D");
        return MinecraftSDK::env->SetDoubleField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.profiler.ServerSamplerSource$CpuUsageFetcher#lastCheckTime
    static jlong get_field_lastCheckTime(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "lastPollMs", "field_33902", "lastCheckTime", "f_146205_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.profiler.ServerSamplerSource$CpuUsageFetcher#lastCheckTime
    static void set_field_lastCheckTime(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "lastPollMs", "field_33902", "lastCheckTime", "f_146205_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    static jmethodID methodID_getCpuUsage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "loadForCpu", "method_37205", "getCpuUsage", "m_146207_"), "(I)D");
    }

    static jdouble getCpuUsage(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_getCpuUsage();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_UTIL_PROFILER_SERVERSAMPLERSOURCE$CPUUSAGEFETCHER_HPP