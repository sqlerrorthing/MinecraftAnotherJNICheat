// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_UTIL_PROFILER_PROFILERESULTIMPL_HPP
#define NET_MINECRAFT_UTIL_PROFILER_PROFILERESULTIMPL_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.util.profiler.ProfileResultImpl
 * Remapped: bnb
 */
namespace ProfileResultImpl {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("bnb", "net/minecraft/util/profiling/FilledProfileResults", "net/minecraft/class_3692", "net/minecraft/util/profiler/ProfileResultImpl", "net/minecraft/src/C_436_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.util.profiler.ProfileResultImpl#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LOGGER", "field_16279", "LOGGER", "f_18452_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.util.profiler.ProfileResultImpl#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LOGGER", "field_16279", "LOGGER", "f_18452_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.util.profiler.ProfileResultImpl#EMPTY_INFO
    [[maybe_unused]] static jobject get_field_EMPTY_INFO() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "EMPTY", "field_21823", "EMPTY_INFO", "f_18453_"), "Lbng;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.util.profiler.ProfileResultImpl#EMPTY_INFO
    [[maybe_unused]] static void set_field_EMPTY_INFO(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "EMPTY", "field_21823", "EMPTY_INFO", "f_18453_"), "Lbng;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.util.profiler.ProfileResultImpl#SPLITTER
    [[maybe_unused]] static jobject get_field_SPLITTER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "SPLITTER", "field_21824", "SPLITTER", "f_18454_"), "Lcom/google/common/base/Splitter;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.util.profiler.ProfileResultImpl#SPLITTER
    [[maybe_unused]] static void set_field_SPLITTER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "SPLITTER", "field_21824", "SPLITTER", "f_18454_"), "Lcom/google/common/base/Splitter;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.util.profiler.ProfileResultImpl#COMPARATOR
    [[maybe_unused]] static jobject get_field_COMPARATOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "COUNTER_ENTRY_COMPARATOR", "field_21825", "COMPARATOR", "f_18455_"), "Ljava/util/Comparator;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.util.profiler.ProfileResultImpl#COMPARATOR
    [[maybe_unused]] static void set_field_COMPARATOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "COUNTER_ENTRY_COMPARATOR", "field_21825", "COMPARATOR", "f_18455_"), "Ljava/util/Comparator;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.util.profiler.ProfileResultImpl#locationInfos
    static jobject get_field_locationInfos(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "entries", "field_21826", "locationInfos", "f_18456_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.profiler.ProfileResultImpl#locationInfos
    static void set_field_locationInfos(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "entries", "field_21826", "locationInfos", "f_18456_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.profiler.ProfileResultImpl#startTime
    static jlong get_field_startTime(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "startTimeNano", "field_16278", "startTime", "f_18457_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.profiler.ProfileResultImpl#startTime
    static void set_field_startTime(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "startTimeNano", "field_16278", "startTime", "f_18457_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.profiler.ProfileResultImpl#startTick
    static jint get_field_startTick(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "startTimeTicks", "field_16275", "startTick", "f_18458_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.profiler.ProfileResultImpl#startTick
    static void set_field_startTick(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "startTimeTicks", "field_16275", "startTick", "f_18458_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.profiler.ProfileResultImpl#endTime
    static jlong get_field_endTime(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "endTimeNano", "field_16276", "endTime", "f_18459_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.profiler.ProfileResultImpl#endTime
    static void set_field_endTime(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "endTimeNano", "field_16276", "endTime", "f_18459_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.profiler.ProfileResultImpl#endTick
    static jint get_field_endTick(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "endTimeTicks", "field_16274", "endTick", "f_18460_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.profiler.ProfileResultImpl#endTick
    static void set_field_endTick(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "endTimeTicks", "field_16274", "endTick", "f_18460_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.profiler.ProfileResultImpl#tickDuration
    static jint get_field_tickDuration(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "tickDuration", "field_19383", "tickDuration", "f_18461_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.profiler.ProfileResultImpl#tickDuration
    static void set_field_tickDuration(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "tickDuration", "field_19383", "tickDuration", "f_18461_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    static jmethodID methodID_getInfo() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getEntry", "method_24262", "getInfo", "m_18525_"), "(Ljava/lang/String;)Lbng;");
    }

    static jobject getInfo(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getInfo();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getTimings() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getTimes", "method_16067", "getTimings", "m_6412_"), "(Ljava/lang/String;)Ljava/util/List;");
    }

    static jobject getTimings(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getTimings();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isSubpath() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "isDirectChild", "method_24255", "isSubpath", "m_18494_"), "(Ljava/lang/String;Ljava/lang/String;)Z");
    }

    static jboolean isSubpath(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_isSubpath();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_setupCounters() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "getCounterValues", "method_24264", "setupCounters", "m_18531_"), "()Ljava/util/Map;");
    }

    static jobject setupCounters(const jobject& obj) {
                
       const auto methodID = methodID_setupCounters();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getStartTime() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getStartTimeNano", "method_16068", "getStartTime", "m_7229_"), "()J");
    }

    static jlong getStartTime(const jobject& obj) {
                
       const auto methodID = methodID_getStartTime();
       return MinecraftSDK::env->CallLongMethod(obj, methodID);
    };
    
    static jmethodID methodID_getStartTick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getStartTimeTicks", "method_16072", "getStartTick", "m_7230_"), "()I");
    }

    static jint getStartTick(const jobject& obj) {
                
       const auto methodID = methodID_getStartTick();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getEndTime() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getEndTimeNano", "method_16073", "getEndTime", "m_7236_"), "()J");
    }

    static jlong getEndTime(const jobject& obj) {
                
       const auto methodID = methodID_getEndTime();
       return MinecraftSDK::env->CallLongMethod(obj, methodID);
    };
    
    static jmethodID methodID_getEndTick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getEndTimeTicks", "method_16070", "getEndTick", "m_7317_"), "()I");
    }

    static jint getEndTick(const jobject& obj) {
                
       const auto methodID = methodID_getEndTick();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_save() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "saveResults", "method_16069", "save", "m_142444_"), "(Ljava/nio/file/Path;)Z");
    }

    static jboolean save(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_save();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_asString() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getProfilerResults", "method_16063", "asString", "m_18485_"), "(JI)Ljava/lang/String;");
    }

    static jobject asString(const jobject& obj, const jlong& arg0, const jint& arg1) {
                
       const auto methodID = methodID_asString();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getRootTimings() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "getProfilerResults", "method_34970", "getRootTimings", "m_142368_"), "()Ljava/lang/String;");
    }

    static jobject getRootTimings(const jobject& obj) {
                
       const auto methodID = methodID_getRootTimings();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_indent() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "indentLine", "method_24256", "indent", "m_18497_"), "(Ljava/lang/StringBuilder;I)Ljava/lang/StringBuilder;");
    }

    static jobject indent(const jobject& arg0, const jint& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_indent();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_appendTiming() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "appendProfilerResults", "method_16061", "appendTiming", "m_18481_"), "(ILjava/lang/String;Ljava/lang/StringBuilder;)V");
    }

    static void appendTiming(const jobject& obj, const jint& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_appendTiming();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_appendCounter() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "appendCounterResults", "method_24253", "appendCounter", "m_18475_"), "(ILjava/lang/String;Lbnb$a;ILjava/lang/StringBuilder;)V");
    }

    static void appendCounter(const jobject& obj, const jint& arg0, const jobject& arg1, const jobject& arg2, const jint& arg3, const jobject& arg4) {
                
       const auto methodID = methodID_appendCounter();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_appendCounterDump() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "appendCounters", "method_24260", "appendCounterDump", "m_18514_"), "(Ljava/util/Map;Ljava/lang/StringBuilder;I)V");
    }

    static void appendCounterDump(const jobject& obj, const jobject& arg0, const jobject& arg1, const jint& arg2) {
                
       const auto methodID = methodID_appendCounterDump();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_getTickSpan() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "getTickDuration", "method_16074", "getTickSpan", "m_7315_"), "()I");
    }

    static jint getTickSpan(const jobject& obj) {
                
       const auto methodID = methodID_getTickSpan();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_UTIL_PROFILER_PROFILERESULTIMPL_HPP