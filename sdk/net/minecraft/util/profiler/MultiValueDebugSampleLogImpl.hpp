// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_UTIL_PROFILER_MULTIVALUEDEBUGSAMPLELOGIMPL_HPP
#define NET_MINECRAFT_UTIL_PROFILER_MULTIVALUEDEBUGSAMPLELOGIMPL_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.util.profiler.MultiValueDebugSampleLogImpl
 * Remapped: blr
 */
namespace MultiValueDebugSampleLogImpl {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("blr", "net/minecraft/util/debugchart/LocalSampleLogger", "net/minecraft/class_9191", "net/minecraft/util/profiler/MultiValueDebugSampleLogImpl", "net/minecraft/src/C_313429_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.util.profiler.MultiValueDebugSampleLogImpl#LOG_SIZE
    [[maybe_unused]] static jint get_field_LOG_SIZE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "CAPACITY", "field_48813", "LOG_SIZE", "f_315422_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.profiler.MultiValueDebugSampleLogImpl#LOG_SIZE
    [[maybe_unused]] static void set_field_LOG_SIZE(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "CAPACITY", "field_48813", "LOG_SIZE", "f_315422_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.util.profiler.MultiValueDebugSampleLogImpl#multiValues
    static jlong get_field_multiValues(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "samples", "field_48814", "multiValues", "f_314303_"), "[[J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.profiler.MultiValueDebugSampleLogImpl#multiValues
    static void set_field_multiValues(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "samples", "field_48814", "multiValues", "f_314303_"), "[[J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.profiler.MultiValueDebugSampleLogImpl#start
    static jint get_field_start(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "start", "field_48815", "start", "f_316546_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.profiler.MultiValueDebugSampleLogImpl#start
    static void set_field_start(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "start", "field_48815", "start", "f_316546_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.profiler.MultiValueDebugSampleLogImpl#length
    static jint get_field_length(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "size", "field_48816", "length", "f_314454_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.profiler.MultiValueDebugSampleLogImpl#length
    static void set_field_length(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "size", "field_48816", "length", "f_314454_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    static jmethodID methodID_onPush() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "useSample", "method_56649", "onPush", "m_322272_"), "()V");
    }

    static void onPush(const jobject& obj) {
                
       const auto methodID = methodID_onPush();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getDimension() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "capacity", "method_56662", "getDimension", "m_323740_"), "()I");
    }

    static jint getDimension(const jobject& obj) {
                
       const auto methodID = methodID_getDimension();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getLength() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "size", "method_56663", "getLength", "m_322219_"), "()I");
    }

    static jint getLength(const jobject& obj) {
                
       const auto methodID = methodID_getLength();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_get() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "get", "method_56659", "get", "m_318870_"), "(I)J");
    }

    static jlong get(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_get();
       return MinecraftSDK::env->CallLongMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__get() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "get", "method_56660", "get", "m_320960_"), "(II)J");
    }

    static jlong _get(const jobject& obj, const jint& arg0, const jint& arg1) {
                
       const auto methodID = methodID__get();
       return MinecraftSDK::env->CallLongMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_wrap() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "wrapIndex", "method_56661", "wrap", "m_321217_"), "(I)I");
    }

    static jint wrap(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_wrap();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_clear() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "reset", "method_56664", "clear", "m_320406_"), "()V");
    }

    static void clear(const jobject& obj) {
                
       const auto methodID = methodID_clear();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_UTIL_PROFILER_MULTIVALUEDEBUGSAMPLELOGIMPL_HPP