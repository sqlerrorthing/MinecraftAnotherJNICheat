// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_UTIL_INVALIDHIERARCHICALFILEEXCEPTION_HPP
#define NET_MINECRAFT_UTIL_INVALIDHIERARCHICALFILEEXCEPTION_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.util.InvalidHierarchicalFileException
 * Remapped: aku
 */
namespace InvalidHierarchicalFileException {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("aku", "net/minecraft/server/ChainedJsonException", "net/minecraft/class_2973", "net/minecraft/util/InvalidHierarchicalFileException", "net/minecraft/src/C_5269_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.util.InvalidHierarchicalFileException#invalidFiles
    static jobject get_field_invalidFiles(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "entries", "field_13371", "invalidFiles", "f_135899_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.InvalidHierarchicalFileException#invalidFiles
    static void set_field_invalidFiles(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "entries", "field_13371", "invalidFiles", "f_135899_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.InvalidHierarchicalFileException#message
    static jobject get_field_message(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "message", "field_13372", "message", "f_135900_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.InvalidHierarchicalFileException#message
    static void set_field_message(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "message", "field_13372", "message", "f_135900_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_addInvalidKey() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "prependJsonKey", "method_12854", "addInvalidKey", "m_135908_"), "(Ljava/lang/String;)V");
    }

    static void addInvalidKey(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_addInvalidKey();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_addInvalidFile() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "setFilenameAndFlush", "method_12855", "addInvalidFile", "m_135910_"), "(Ljava/lang/String;)V");
    }

    static void addInvalidFile(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_addInvalidFile();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getMessage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("getMessage", "getMessage", "", "", "getMessage"), "()Ljava/lang/String;");
    }

    static jobject getMessage(const jobject& obj) {
                
       const auto methodID = methodID_getMessage();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_wrap() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "forException", "method_12856", "wrap", "m_135906_"), "(Ljava/lang/Exception;)Laku;");
    }

    static jobject wrap(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_wrap();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_UTIL_INVALIDHIERARCHICALFILEEXCEPTION_HPP