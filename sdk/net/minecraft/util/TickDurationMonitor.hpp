// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_UTIL_TICKDURATIONMONITOR_HPP
#define NET_MINECRAFT_UTIL_TICKDURATIONMONITOR_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.util.TickDurationMonitor
 * Remapped: bni
 */
namespace TickDurationMonitor {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("bni", "net/minecraft/util/profiling/SingleTickProfiler", "net/minecraft/class_4758", "net/minecraft/util/TickDurationMonitor", "net/minecraft/src/C_446_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.util.TickDurationMonitor#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LOGGER", "field_21967", "LOGGER", "f_18621_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.util.TickDurationMonitor#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LOGGER", "field_21967", "LOGGER", "f_18621_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.util.TickDurationMonitor#timeGetter
    static jobject get_field_timeGetter(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "realTime", "field_21968", "timeGetter", "f_18622_"), "Ljava/util/function/LongSupplier;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.TickDurationMonitor#timeGetter
    static void set_field_timeGetter(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "realTime", "field_21968", "timeGetter", "f_18622_"), "Ljava/util/function/LongSupplier;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.TickDurationMonitor#overtime
    static jlong get_field_overtime(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "saveThreshold", "field_21969", "overtime", "f_18623_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.TickDurationMonitor#overtime
    static void set_field_overtime(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "saveThreshold", "field_21969", "overtime", "f_18623_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.TickDurationMonitor#tickCount
    static jint get_field_tickCount(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "tick", "field_21970", "tickCount", "f_18624_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.TickDurationMonitor#tickCount
    static void set_field_tickCount(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "tick", "field_21970", "tickCount", "f_18624_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.TickDurationMonitor#tickResultsDirectory
    static jobject get_field_tickResultsDirectory(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "location", "field_21971", "tickResultsDirectory", "f_18625_"), "Ljava/io/File;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.TickDurationMonitor#tickResultsDirectory
    static void set_field_tickResultsDirectory(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "location", "field_21971", "tickResultsDirectory", "f_18625_"), "Ljava/io/File;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.TickDurationMonitor#profiler
    static jobject get_field_profiler(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "profiler", "field_21972", "profiler", "f_18626_"), "Lbnd;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.TickDurationMonitor#profiler
    static void set_field_profiler(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "profiler", "field_21972", "profiler", "f_18626_"), "Lbnd;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_nextProfiler() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "startTick", "method_24339", "nextProfiler", "m_18628_"), "()Lbnf;");
    }

    static jobject nextProfiler(const jobject& obj) {
                
       const auto methodID = methodID_nextProfiler();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_endTick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "endTick", "method_24342", "endTick", "m_18634_"), "()V");
    }

    static void endTick(const jobject& obj) {
                
       const auto methodID = methodID_endTick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_create() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "createTickProfiler", "method_24341", "create", "m_18632_"), "(Ljava/lang/String;)Lbni;");
    }

    static jobject create(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_create();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_tickProfiler() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "decorateFiller", "method_24340", "tickProfiler", "m_18629_"), "(Lbnf;Lbni;)Lbnf;");
    }

    static jobject tickProfiler(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_tickProfiler();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_UTIL_TICKDURATIONMONITOR_HPP