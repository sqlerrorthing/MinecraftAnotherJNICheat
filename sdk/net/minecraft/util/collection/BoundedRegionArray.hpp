// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_UTIL_COLLECTION_BOUNDEDREGIONARRAY_HPP
#define NET_MINECRAFT_UTIL_COLLECTION_BOUNDEDREGIONARRAY_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.util.collection.BoundedRegionArray
 * Remapped: azi
 */
namespace BoundedRegionArray {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("azi", "net/minecraft/util/StaticCache2D", "net/minecraft/class_9762", "net/minecraft/util/collection/BoundedRegionArray", "net/minecraft/src/C_336561_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.util.collection.BoundedRegionArray#minX
    static jint get_field_minX(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "minX", "field_51878", "minX", "f_336720_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.collection.BoundedRegionArray#minX
    static void set_field_minX(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "minX", "field_51878", "minX", "f_336720_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.collection.BoundedRegionArray#minZ
    static jint get_field_minZ(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "minZ", "field_51879", "minZ", "f_337108_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.collection.BoundedRegionArray#minZ
    static void set_field_minZ(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "minZ", "field_51879", "minZ", "f_337108_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.collection.BoundedRegionArray#maxX
    static jint get_field_maxX(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "sizeX", "field_51880", "maxX", "f_337066_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.collection.BoundedRegionArray#maxX
    static void set_field_maxX(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "sizeX", "field_51880", "maxX", "f_337066_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.collection.BoundedRegionArray#maxZ
    static jint get_field_maxZ(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "sizeZ", "field_51881", "maxZ", "f_336997_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.collection.BoundedRegionArray#maxZ
    static void set_field_maxZ(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "sizeZ", "field_51881", "maxZ", "f_336997_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.collection.BoundedRegionArray#array
    static jobject get_field_array(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "cache", "field_51882", "array", "f_336902_"), "[Ljava/lang/Object;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.collection.BoundedRegionArray#array
    static void set_field_array(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "cache", "field_51882", "array", "f_336902_"), "[Ljava/lang/Object;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_create() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "create", "method_60483", "create", "m_339600_"), "(IIILazi$a;)Lazi;");
    }

    static jobject create(const jint& arg0, const jint& arg1, const jint& arg2, const jobject& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_create();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_forEach() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "forEach", "method_60484", "forEach", "m_338895_"), "(Ljava/util/function/Consumer;)V");
    }

    static void forEach(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_forEach();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_get() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "get", "method_60482", "get", "m_338758_"), "(II)Ljava/lang/Object;");
    }

    static jobject get(const jobject& obj, const jint& arg0, const jint& arg1) {
                
       const auto methodID = methodID_get();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_isWithinBounds() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "contains", "method_60485", "isWithinBounds", "m_338603_"), "(II)Z");
    }

    static jboolean isWithinBounds(const jobject& obj, const jint& arg0, const jint& arg1) {
                
       const auto methodID = methodID_isWithinBounds();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_toIndex() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getIndex", "method_60486", "toIndex", "m_340549_"), "(II)I");
    }

    static jint toIndex(const jobject& obj, const jint& arg0, const jint& arg1) {
                
       const auto methodID = methodID_toIndex();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_UTIL_COLLECTION_BOUNDEDREGIONARRAY_HPP