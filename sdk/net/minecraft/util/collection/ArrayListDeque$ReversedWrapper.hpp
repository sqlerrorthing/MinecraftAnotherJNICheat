// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_UTIL_COLLECTION_ARRAYLISTDEQUE$REVERSEDWRAPPER_HPP
#define NET_MINECRAFT_UTIL_COLLECTION_ARRAYLISTDEQUE$REVERSEDWRAPPER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.util.collection.ArrayListDeque$ReversedWrapper
 * Remapped: axb$b
 */
namespace ArrayListDeque$ReversedWrapper {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("axb$b", "net/minecraft/util/ArrayListDeque$ReversedView", "net/minecraft/class_8623$class_9633", "net/minecraft/util/collection/ArrayListDeque$ReversedWrapper", "net/minecraft/src/C_290101_$C_313623_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.util.collection.ArrayListDeque$ReversedWrapper#original
    static jobject get_field_original(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "source", "field_51346", "original", "f_316355_"), "Laxb;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.collection.ArrayListDeque$ReversedWrapper#original
    static void set_field_original(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "source", "field_51346", "original", "f_316355_"), "Laxb;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_reversed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "reversed", "method_59513", "reversed", "reversed"), "()Layk;");
    }

    static jobject reversed(const jobject& obj) {
                
       const auto methodID = methodID_reversed();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getFirst() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("getFirst", "getFirst", "", "", "getFirst"), "()Ljava/lang/Object;");
    }

    static jobject getFirst(const jobject& obj) {
                
       const auto methodID = methodID_getFirst();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getLast() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("getLast", "getLast", "", "", "getLast"), "()Ljava/lang/Object;");
    }

    static jobject getLast(const jobject& obj) {
                
       const auto methodID = methodID_getLast();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_addFirst() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("addFirst", "addFirst", "addFirst", "addFirst", "addFirst"), "(Ljava/lang/Object;)V");
    }

    static void addFirst(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_addFirst();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_addLast() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("addLast", "addLast", "addLast", "addLast", "addLast"), "(Ljava/lang/Object;)V");
    }

    static void addLast(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_addLast();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_offerFirst() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("offerFirst", "offerFirst", "offerFirst", "offerFirst", "offerFirst"), "(Ljava/lang/Object;)Z");
    }

    static jboolean offerFirst(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_offerFirst();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_offerLast() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("offerLast", "offerLast", "offerLast", "offerLast", "offerLast"), "(Ljava/lang/Object;)Z");
    }

    static jboolean offerLast(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_offerLast();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_pollFirst() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("pollFirst", "pollFirst", "", "", "pollFirst"), "()Ljava/lang/Object;");
    }

    static jobject pollFirst(const jobject& obj) {
                
       const auto methodID = methodID_pollFirst();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_pollLast() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("pollLast", "pollLast", "", "", "pollLast"), "()Ljava/lang/Object;");
    }

    static jobject pollLast(const jobject& obj) {
                
       const auto methodID = methodID_pollLast();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_peekFirst() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("peekFirst", "peekFirst", "", "", "peekFirst"), "()Ljava/lang/Object;");
    }

    static jobject peekFirst(const jobject& obj) {
                
       const auto methodID = methodID_peekFirst();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_peekLast() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("peekLast", "peekLast", "", "", "peekLast"), "()Ljava/lang/Object;");
    }

    static jobject peekLast(const jobject& obj) {
                
       const auto methodID = methodID_peekLast();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_removeFirst() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("removeFirst", "removeFirst", "", "", "removeFirst"), "()Ljava/lang/Object;");
    }

    static jobject removeFirst(const jobject& obj) {
                
       const auto methodID = methodID_removeFirst();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_removeLast() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("removeLast", "removeLast", "", "", "removeLast"), "()Ljava/lang/Object;");
    }

    static jobject removeLast(const jobject& obj) {
                
       const auto methodID = methodID_removeLast();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_removeFirstOccurrence() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("removeFirstOccurrence", "removeFirstOccurrence", "removeFirstOccurrence", "removeFirstOccurrence", "removeFirstOccurrence"), "(Ljava/lang/Object;)Z");
    }

    static jboolean removeFirstOccurrence(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_removeFirstOccurrence();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_removeLastOccurrence() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("removeLastOccurrence", "removeLastOccurrence", "removeLastOccurrence", "removeLastOccurrence", "removeLastOccurrence"), "(Ljava/lang/Object;)Z");
    }

    static jboolean removeLastOccurrence(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_removeLastOccurrence();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_descendingIterator() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("descendingIterator", "descendingIterator", "", "", "descendingIterator"), "()Ljava/util/Iterator;");
    }

    static jobject descendingIterator(const jobject& obj) {
                
       const auto methodID = methodID_descendingIterator();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_size() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("size", "size", "", "", "size"), "()I");
    }

    static jint size(const jobject& obj) {
                
       const auto methodID = methodID_size();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_isEmpty() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("isEmpty", "isEmpty", "", "", "isEmpty"), "()Z");
    }

    static jboolean isEmpty(const jobject& obj) {
                
       const auto methodID = methodID_isEmpty();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_contains() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("contains", "contains", "contains", "contains", "contains"), "(Ljava/lang/Object;)Z");
    }

    static jboolean contains(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_contains();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_get() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("get", "get", "get", "get", "get"), "(I)Ljava/lang/Object;");
    }

    static jobject get(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_get();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_set() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("set", "set", "set", "set", "set"), "(ILjava/lang/Object;)Ljava/lang/Object;");
    }

    static jobject set(const jobject& obj, const jint& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_set();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_add() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("add", "add", "add", "add", "add"), "(ILjava/lang/Object;)V");
    }

    static void add(const jobject& obj, const jint& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_add();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_remove() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("remove", "remove", "remove", "remove", "remove"), "(I)Ljava/lang/Object;");
    }

    static jobject remove(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_remove();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_indexOf() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("indexOf", "indexOf", "indexOf", "indexOf", "indexOf"), "(Ljava/lang/Object;)I");
    }

    static jint indexOf(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_indexOf();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_lastIndexOf() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("lastIndexOf", "lastIndexOf", "lastIndexOf", "lastIndexOf", "lastIndexOf"), "(Ljava/lang/Object;)I");
    }

    static jint lastIndexOf(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_lastIndexOf();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_subList() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("subList", "subList", "subList", "subList", "subList"), "(II)Ljava/util/List;");
    }

    static jobject subList(const jobject& obj, const jint& arg0, const jint& arg1) {
                
       const auto methodID = methodID_subList();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_iterator() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("iterator", "iterator", "", "", "iterator"), "()Ljava/util/Iterator;");
    }

    static jobject iterator(const jobject& obj) {
                
       const auto methodID = methodID_iterator();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_clear() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("clear", "clear", "", "", "clear"), "()V");
    }

    static void clear(const jobject& obj) {
                
       const auto methodID = methodID_clear();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getReversedIndex() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "reverseIndex", "method_59514", "getReversedIndex", "m_322291_"), "(I)I");
    }

    static jint getReversedIndex(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_getReversedIndex();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_UTIL_COLLECTION_ARRAYLISTDEQUE$REVERSEDWRAPPER_HPP