// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_UTIL_COLLECTION_SORTEDARRAYSET_HPP
#define NET_MINECRAFT_UTIL_COLLECTION_SORTEDARRAYSET_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.util.collection.SortedArraySet
 * Remapped: azg
 */
namespace SortedArraySet {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("azg", "net/minecraft/util/SortedArraySet", "net/minecraft/class_4706", "net/minecraft/util/collection/SortedArraySet", "net/minecraft/src/C_193_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.util.collection.SortedArraySet#DEFAULT_CAPACITY
    [[maybe_unused]] static jint get_field_DEFAULT_CAPACITY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "DEFAULT_INITIAL_CAPACITY", "field_29860", "DEFAULT_CAPACITY", "f_144974_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.util.collection.SortedArraySet#DEFAULT_CAPACITY
    [[maybe_unused]] static void set_field_DEFAULT_CAPACITY(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "DEFAULT_INITIAL_CAPACITY", "field_29860", "DEFAULT_CAPACITY", "f_144974_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.util.collection.SortedArraySet#comparator
    static jobject get_field_comparator(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "comparator", "field_21562", "comparator", "f_14240_"), "Ljava/util/Comparator;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.collection.SortedArraySet#comparator
    static void set_field_comparator(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "comparator", "field_21562", "comparator", "f_14240_"), "Ljava/util/Comparator;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.util.collection.SortedArraySet#elements
    static jobject get_field_elements(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "contents", "field_21563", "elements", "f_14241_"), "[Ljava/lang/Object;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.util.collection.SortedArraySet#elements
    static void set_field_elements(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "contents", "field_21563", "elements", "f_14241_"), "[Ljava/lang/Object;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.util.collection.SortedArraySet#size
    static jint get_field_size(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "size", "field_21564", "size", "f_14242_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static default field net.minecraft.util.collection.SortedArraySet#size
    static void set_field_size(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "size", "field_21564", "size", "f_14242_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    static jmethodID methodID_create() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "create", "method_34958", "create", "m_144975_"), "()Lazg;");
    }

    static jobject create() {
       const auto clazz = self();
       const auto methodID = methodID_create();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID__create() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "create", "method_23859", "create", "m_14246_"), "(I)Lazg;");
    }

    static jobject _create(const jint& arg0) {
       const auto clazz = self();
       const auto methodID = methodID__create();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID___create() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "create", "method_34959", "create", "m_144976_"), "(Ljava/util/Comparator;)Lazg;");
    }

    static jobject __create(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID___create();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID____create() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "create", "method_34960", "create", "m_144978_"), "(Ljava/util/Comparator;I)Lazg;");
    }

    static jobject ___create(const jobject& arg0, const jint& arg1) {
       const auto clazz = self();
       const auto methodID = methodID____create();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_cast() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "castRawArray", "method_23864", "cast", "m_14258_"), "([Ljava/lang/Object;)[Ljava/lang/Object;");
    }

    static jobject cast(const jarray& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_cast();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_binarySearch() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "findIndex", "method_23869", "binarySearch", "m_14269_"), "(Ljava/lang/Object;)I");
    }

    static jint binarySearch(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_binarySearch();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_insertionPoint() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "getInsertionPosition", "method_23866", "insertionPoint", "m_14263_"), "(I)I");
    }

    static jint insertionPoint(const jint& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_insertionPoint();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_add() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("add", "add", "add", "add", "add"), "(Ljava/lang/Object;)Z");
    }

    static jboolean add(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_add();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_ensureCapacity() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "grow", "method_23868", "ensureCapacity", "m_14267_"), "(I)V");
    }

    static void ensureCapacity(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_ensureCapacity();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__add() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "addInternal", "method_23863", "add", "m_14255_"), "(Ljava/lang/Object;I)V");
    }

    static void _add(const jobject& obj, const jobject& arg0, const jint& arg1) {
                
       const auto methodID = methodID__add();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_remove() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "removeInternal", "method_23870", "remove", "m_14274_"), "(I)V");
    }

    static void remove(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_remove();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_get() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "getInternal", "method_23871", "get", "m_14276_"), "(I)Ljava/lang/Object;");
    }

    static jobject get(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_get();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_addAndGet() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "addOrGet", "method_23862", "addAndGet", "m_14253_"), "(Ljava/lang/Object;)Ljava/lang/Object;");
    }

    static jobject addAndGet(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_addAndGet();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__remove() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("remove", "remove", "remove", "remove", "remove"), "(Ljava/lang/Object;)Z");
    }

    static jboolean _remove(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__remove();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getIfContains() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "get", "method_34961", "getIfContains", "m_144981_"), "(Ljava/lang/Object;)Ljava/lang/Object;");
    }

    static jobject getIfContains(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getIfContains();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_first() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "first", "method_23865", "first", "m_14262_"), "()Ljava/lang/Object;");
    }

    static jobject first(const jobject& obj) {
                
       const auto methodID = methodID_first();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_last() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "last", "method_34962", "last", "m_144983_"), "()Ljava/lang/Object;");
    }

    static jobject last(const jobject& obj) {
                
       const auto methodID = methodID_last();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_contains() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("contains", "contains", "contains", "contains", "contains"), "(Ljava/lang/Object;)Z");
    }

    static jboolean contains(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_contains();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_iterator() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("iterator", "iterator", "", "", "iterator"), "()Ljava/util/Iterator;");
    }

    static jobject iterator(const jobject& obj) {
                
       const auto methodID = methodID_iterator();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__size() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("size", "size", "", "", "size"), "()I");
    }

    static jint _size(const jobject& obj) {
                
       const auto methodID = methodID__size();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_toArray() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("toArray", "toArray", "", "", "toArray"), "()[Ljava/lang/Object;");
    }

    static jobject toArray(const jobject& obj) {
                
       const auto methodID = methodID_toArray();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__toArray() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("toArray", "toArray", "toArray", "toArray", "toArray"), "([Ljava/lang/Object;)[Ljava/lang/Object;");
    }

    static jobject _toArray(const jobject& obj, const jarray& arg0, const jobject& arg1) {
                
       const auto methodID = methodID__toArray();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_clear() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("clear", "clear", "", "", "clear"), "()V");
    }

    static void clear(const jobject& obj) {
                
       const auto methodID = methodID_clear();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_UTIL_COLLECTION_SORTEDARRAYSET_HPP