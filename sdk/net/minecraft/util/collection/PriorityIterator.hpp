// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_UTIL_COLLECTION_PRIORITYITERATOR_HPP
#define NET_MINECRAFT_UTIL_COLLECTION_PRIORITYITERATOR_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.util.collection.PriorityIterator
 * Remapped: ayz
 */
namespace PriorityIterator {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("ayz", "net/minecraft/util/SequencedPriorityIterator", "net/minecraft/class_8917", "net/minecraft/util/collection/PriorityIterator", "net/minecraft/src/C_302169_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.util.collection.PriorityIterator#LOWEST_PRIORITY
    [[maybe_unused]] static jint get_field_LOWEST_PRIORITY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "MIN_PRIO", "field_48714", "LOWEST_PRIORITY", "f_315833_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.util.collection.PriorityIterator#LOWEST_PRIORITY
    [[maybe_unused]] static void set_field_LOWEST_PRIORITY(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "MIN_PRIO", "field_48714", "LOWEST_PRIORITY", "f_315833_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.util.collection.PriorityIterator#maxPriorityQueue
    static jobject get_field_maxPriorityQueue(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "highestPrioQueue", "field_48715", "maxPriorityQueue", "f_314101_"), "Ljava/util/Deque;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.collection.PriorityIterator#maxPriorityQueue
    static void set_field_maxPriorityQueue(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "highestPrioQueue", "field_48715", "maxPriorityQueue", "f_314101_"), "Ljava/util/Deque;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.collection.PriorityIterator#maxPriority
    static jint get_field_maxPriority(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "highestPrio", "field_48716", "maxPriority", "f_316037_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.collection.PriorityIterator#maxPriority
    static void set_field_maxPriority(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "highestPrio", "field_48716", "maxPriority", "f_316037_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.collection.PriorityIterator#queuesByPriority
    static jobject get_field_queuesByPriority(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "queuesByPriority", "field_48717", "queuesByPriority", "f_313918_"), "Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.collection.PriorityIterator#queuesByPriority
    static void set_field_queuesByPriority(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "queuesByPriority", "field_48717", "queuesByPriority", "f_313918_"), "Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_enqueue() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "add", "method_54726", "enqueue", "m_307049_"), "(Ljava/lang/Object;I)V");
    }

    static void enqueue(const jobject& obj, const jobject& arg0, const jint& arg1) {
                
       const auto methodID = methodID_enqueue();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_computeNext() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("computeNext", "computeNext", "", "", "computeNext"), "()Ljava/lang/Object;");
    }

    static jobject computeNext(const jobject& obj) {
                
       const auto methodID = methodID_computeNext();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_refreshMaxPriority() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "switchCacheToNextHighestPrioQueue", "method_56533", "refreshMaxPriority", "m_323324_"), "()V");
    }

    static void refreshMaxPriority(const jobject& obj) {
                
       const auto methodID = methodID_refreshMaxPriority();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_UTIL_COLLECTION_PRIORITYITERATOR_HPP