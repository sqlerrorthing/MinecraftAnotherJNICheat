// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_UTIL_LANGUAGE_HPP
#define NET_MINECRAFT_UTIL_LANGUAGE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.util.Language
 * Remapped: tw
 */
namespace Language {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("tw", "net/minecraft/locale/Language", "net/minecraft/class_2477", "net/minecraft/util/Language", "net/minecraft/src/C_4907_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.util.Language#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "LOGGER", "field_11490", "LOGGER", "f_128101_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.util.Language#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "LOGGER", "field_11490", "LOGGER", "f_128101_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.util.Language#GSON
    [[maybe_unused]] static jobject get_field_GSON() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "GSON", "field_25307", "GSON", "f_128102_"), "Lcom/google/gson/Gson;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.util.Language#GSON
    [[maybe_unused]] static void set_field_GSON(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "GSON", "field_25307", "GSON", "f_128102_"), "Lcom/google/gson/Gson;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.util.Language#TOKEN_PATTERN
    [[maybe_unused]] static jobject get_field_TOKEN_PATTERN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "UNSUPPORTED_FORMAT_PATTERN", "field_11489", "TOKEN_PATTERN", "f_128103_"), "Ljava/util/regex/Pattern;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.util.Language#TOKEN_PATTERN
    [[maybe_unused]] static void set_field_TOKEN_PATTERN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "UNSUPPORTED_FORMAT_PATTERN", "field_11489", "TOKEN_PATTERN", "f_128103_"), "Ljava/util/regex/Pattern;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.Language#DEFAULT_LANGUAGE
    [[maybe_unused]] static jobject get_field_DEFAULT_LANGUAGE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "DEFAULT", "field_33187", "DEFAULT_LANGUAGE", "f_177832_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.Language#DEFAULT_LANGUAGE
    [[maybe_unused]] static void set_field_DEFAULT_LANGUAGE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "DEFAULT", "field_33187", "DEFAULT_LANGUAGE", "f_177832_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.util.Language#instance
    [[maybe_unused]] static jobject get_field_instance() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "instance", "field_11486", "instance", "f_128104_"), "Ltw;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.util.Language#instance
    [[maybe_unused]] static void set_field_instance(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "instance", "field_11486", "instance", "f_128104_"), "Ltw;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_create() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "loadDefault", "method_29429", "create", "m_128118_"), "()Ltw;");
    }

    static jobject create() {
       const auto clazz = self();
       const auto methodID = methodID_create();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_load() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "parseTranslations", "method_51465", "load", "m_280428_"), "(Ljava/util/function/BiConsumer;Ljava/lang/String;)V");
    }

    static void load(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_load();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__load() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "loadFromJson", "method_29425", "load", "m_128108_"), "(Ljava/io/InputStream;Ljava/util/function/BiConsumer;)V");
    }

    static void _load(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID__load();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getInstance() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getInstance", "method_10517", "getInstance", "m_128107_"), "()Ltw;");
    }

    static jobject getInstance() {
       const auto clazz = self();
       const auto methodID = methodID_getInstance();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_setInstance() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "inject", "method_29427", "setInstance", "m_128114_"), "(Ltw;)V");
    }

    static void setInstance(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_setInstance();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_get() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getOrDefault", "method_48307", "get", "m_6834_"), "(Ljava/lang/String;)Ljava/lang/String;");
    }

    static jobject get(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_get();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__get() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getOrDefault", "method_4679", "get", "m_118919_"), "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;");
    }

    static jobject _get(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID__get();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_hasTranslation() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "has", "method_4678", "hasTranslation", "m_6722_"), "(Ljava/lang/String;)Z");
    }

    static jboolean hasTranslation(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_hasTranslation();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isRightToLeft() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "isDefaultRightToLeft", "method_29428", "isRightToLeft", "m_6627_"), "()Z");
    }

    static jboolean isRightToLeft(const jobject& obj) {
                
       const auto methodID = methodID_isRightToLeft();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_reorder() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getVisualOrder", "method_30934", "reorder", "m_5536_"), "(Lxe;)Laya;");
    }

    static jobject reorder(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_reorder();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__reorder() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getVisualOrder", "method_30933", "reorder", "m_128112_"), "(Ljava/util/List;)Ljava/util/List;");
    }

    static jobject _reorder(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__reorder();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_UTIL_LANGUAGE_HPP