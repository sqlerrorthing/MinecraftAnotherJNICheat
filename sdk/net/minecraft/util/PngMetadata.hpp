// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_UTIL_PNGMETADATA_HPP
#define NET_MINECRAFT_UTIL_PNGMETADATA_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.util.PngMetadata
 * Remapped: ayt
 */
namespace PngMetadata {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("ayt", "net/minecraft/util/PngInfo", "net/minecraft/class_8800", "net/minecraft/util/PngMetadata", "net/minecraft/src/C_301616_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.util.PngMetadata#width
    static jint get_field_width(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "width", "comp_1965", "width", "f_301620_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.PngMetadata#width
    static void set_field_width(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "width", "comp_1965", "width", "f_301620_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.PngMetadata#height
    static jint get_field_height(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "height", "comp_1966", "height", "f_301618_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.PngMetadata#height
    static void set_field_height(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "height", "comp_1966", "height", "f_301618_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for static private field net.minecraft.util.PngMetadata#PNG_SIGNATURE
    [[maybe_unused]] static jlong get_field_PNG_SIGNATURE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "PNG_HEADER", "field_46201", "PNG_SIGNATURE", "f_301627_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticLongField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.util.PngMetadata#PNG_SIGNATURE
    [[maybe_unused]] static void set_field_PNG_SIGNATURE(const jlong &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "PNG_HEADER", "field_46201", "PNG_SIGNATURE", "f_301627_"), "J");
        return MinecraftSDK::env->SetStaticLongField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.util.PngMetadata#IHDR_CHUNK_TYPE
    [[maybe_unused]] static jint get_field_IHDR_CHUNK_TYPE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "IHDR_TYPE", "field_46202", "IHDR_CHUNK_TYPE", "f_301628_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.util.PngMetadata#IHDR_CHUNK_TYPE
    [[maybe_unused]] static void set_field_IHDR_CHUNK_TYPE(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "IHDR_TYPE", "field_46202", "IHDR_CHUNK_TYPE", "f_301628_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.util.PngMetadata#IHDR_CHUNK_LENGTH
    [[maybe_unused]] static jint get_field_IHDR_CHUNK_LENGTH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "IHDR_SIZE", "field_46203", "IHDR_CHUNK_LENGTH", "f_301622_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.util.PngMetadata#IHDR_CHUNK_LENGTH
    [[maybe_unused]] static void set_field_IHDR_CHUNK_LENGTH(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "IHDR_SIZE", "field_46203", "IHDR_CHUNK_LENGTH", "f_301622_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    static jmethodID methodID_fromStream() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "fromStream", "method_53877", "fromStream", "m_301670_"), "(Ljava/io/InputStream;)Layt;");
    }

    static jobject fromStream(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_fromStream();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_fromBytes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "fromBytes", "method_53878", "fromBytes", "m_301661_"), "([B)Layt;");
    }

    static jobject fromBytes(const jarray& arg0, const jbyte& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_fromBytes();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_validate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "validateHeader", "method_54945", "validate", "m_304649_"), "(Ljava/nio/ByteBuffer;)V");
    }

    static void validate(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_validate();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID__width() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "width", "comp_1965", "width", "f_301620_"), "()I");
    }

    static jint _width(const jobject& obj) {
                
       const auto methodID = methodID__width();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID__height() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "height", "comp_1966", "height", "f_301618_"), "()I");
    }

    static jint _height(const jobject& obj) {
                
       const auto methodID = methodID__height();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_UTIL_PNGMETADATA_HPP