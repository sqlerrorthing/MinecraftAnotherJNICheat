// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_UTIL_MATH_DIRECTION_HPP
#define NET_MINECRAFT_UTIL_MATH_DIRECTION_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.util.math.Direction
 * Remapped: ji
 */
namespace Direction {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("ji", "net/minecraft/core/Direction", "net/minecraft/class_2350", "net/minecraft/util/math/Direction", "net/minecraft/src/C_4687_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.util.math.Direction#DOWN
    [[maybe_unused]] static jobject get_field_DOWN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "DOWN", "field_11033", "DOWN", "DOWN"), "Lji;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.math.Direction#DOWN
    [[maybe_unused]] static void set_field_DOWN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "DOWN", "field_11033", "DOWN", "DOWN"), "Lji;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.math.Direction#UP
    [[maybe_unused]] static jobject get_field_UP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "UP", "field_11036", "UP", "UP"), "Lji;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.math.Direction#UP
    [[maybe_unused]] static void set_field_UP(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "UP", "field_11036", "UP", "UP"), "Lji;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.math.Direction#NORTH
    [[maybe_unused]] static jobject get_field_NORTH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "NORTH", "field_11043", "NORTH", "NORTH"), "Lji;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.math.Direction#NORTH
    [[maybe_unused]] static void set_field_NORTH(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "NORTH", "field_11043", "NORTH", "NORTH"), "Lji;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.math.Direction#SOUTH
    [[maybe_unused]] static jobject get_field_SOUTH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "SOUTH", "field_11035", "SOUTH", "SOUTH"), "Lji;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.math.Direction#SOUTH
    [[maybe_unused]] static void set_field_SOUTH(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "SOUTH", "field_11035", "SOUTH", "SOUTH"), "Lji;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.math.Direction#WEST
    [[maybe_unused]] static jobject get_field_WEST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "WEST", "field_11039", "WEST", "WEST"), "Lji;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.math.Direction#WEST
    [[maybe_unused]] static void set_field_WEST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "WEST", "field_11039", "WEST", "WEST"), "Lji;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.math.Direction#EAST
    [[maybe_unused]] static jobject get_field_EAST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "EAST", "field_11034", "EAST", "EAST"), "Lji;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.math.Direction#EAST
    [[maybe_unused]] static void set_field_EAST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "EAST", "field_11034", "EAST", "EAST"), "Lji;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.math.Direction#CODEC
    [[maybe_unused]] static jobject get_field_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "CODEC", "field_29502", "CODEC", "f_175356_"), "Lazk$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.math.Direction#CODEC
    [[maybe_unused]] static void set_field_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "CODEC", "field_29502", "CODEC", "f_175356_"), "Lazk$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.math.Direction#VERTICAL_CODEC
    [[maybe_unused]] static jobject get_field_VERTICAL_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "VERTICAL_CODEC", "field_35088", "VERTICAL_CODEC", "f_194527_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.math.Direction#VERTICAL_CODEC
    [[maybe_unused]] static void set_field_VERTICAL_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "VERTICAL_CODEC", "field_35088", "VERTICAL_CODEC", "f_194527_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.math.Direction#ID_TO_VALUE_FUNCTION
    [[maybe_unused]] static jobject get_field_ID_TO_VALUE_FUNCTION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "BY_ID", "field_48449", "ID_TO_VALUE_FUNCTION", "f_315953_"), "Ljava/util/function/IntFunction;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.math.Direction#ID_TO_VALUE_FUNCTION
    [[maybe_unused]] static void set_field_ID_TO_VALUE_FUNCTION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "BY_ID", "field_48449", "ID_TO_VALUE_FUNCTION", "f_315953_"), "Ljava/util/function/IntFunction;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.math.Direction#PACKET_CODEC
    [[maybe_unused]] static jobject get_field_PACKET_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "STREAM_CODEC", "field_48450", "PACKET_CODEC", "f_315582_"), "Lyx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.math.Direction#PACKET_CODEC
    [[maybe_unused]] static void set_field_PACKET_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "STREAM_CODEC", "field_48450", "PACKET_CODEC", "f_315582_"), "Lyx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.util.math.Direction#id
    static jint get_field_id(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "data3d", "field_11032", "id", "f_122339_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.math.Direction#id
    static void set_field_id(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "data3d", "field_11032", "id", "f_122339_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.math.Direction#idOpposite
    static jint get_field_idOpposite(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "oppositeIndex", "field_11031", "idOpposite", "f_122340_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.math.Direction#idOpposite
    static void set_field_idOpposite(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "oppositeIndex", "field_11031", "idOpposite", "f_122340_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.math.Direction#idHorizontal
    static jint get_field_idHorizontal(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "data2d", "field_11030", "idHorizontal", "f_122341_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.math.Direction#idHorizontal
    static void set_field_idHorizontal(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "data2d", "field_11030", "idHorizontal", "f_122341_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.math.Direction#name
    static jobject get_field_name(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "name", "field_11046", "name", "f_122342_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.math.Direction#name
    static void set_field_name(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "name", "field_11046", "name", "f_122342_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.math.Direction#axis
    static jobject get_field_axis(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("o", "axis", "field_11047", "axis", "f_122343_"), "Lji$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.math.Direction#axis
    static void set_field_axis(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("o", "axis", "field_11047", "axis", "f_122343_"), "Lji$a;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.math.Direction#direction
    static jobject get_field_direction(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("p", "axisDirection", "field_11044", "direction", "f_122344_"), "Lji$b;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.math.Direction#direction
    static void set_field_direction(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("p", "axisDirection", "field_11044", "direction", "f_122344_"), "Lji$b;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.math.Direction#vector
    static jobject get_field_vector(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("q", "normal", "field_11042", "vector", "f_122345_"), "Lkh;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.math.Direction#vector
    static void set_field_vector(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("q", "normal", "field_11042", "vector", "f_122345_"), "Lkh;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for static private field net.minecraft.util.math.Direction#ALL
    [[maybe_unused]] static jobject get_field_ALL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "VALUES", "field_11040", "ALL", "f_122346_"), "[Lji;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.util.math.Direction#ALL
    [[maybe_unused]] static void set_field_ALL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "VALUES", "field_11040", "ALL", "f_122346_"), "[Lji;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.util.math.Direction#VALUES
    [[maybe_unused]] static jobject get_field_VALUES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "BY_3D_DATA", "field_11038", "VALUES", "f_122348_"), "[Lji;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.util.math.Direction#VALUES
    [[maybe_unused]] static void set_field_VALUES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "BY_3D_DATA", "field_11038", "VALUES", "f_122348_"), "[Lji;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.util.math.Direction#HORIZONTAL
    [[maybe_unused]] static jobject get_field_HORIZONTAL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "BY_2D_DATA", "field_11041", "HORIZONTAL", "f_122349_"), "[Lji;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.util.math.Direction#HORIZONTAL
    [[maybe_unused]] static void set_field_HORIZONTAL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "BY_2D_DATA", "field_11041", "HORIZONTAL", "f_122349_"), "[Lji;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_values() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("values", "values", "values", "values", "values"), "()[Lji;");
    }

    static jobject values() {
       const auto clazz = self();
       const auto methodID = methodID_values();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_valueOf() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("valueOf", "valueOf", "valueOf", "valueOf", "valueOf"), "(Ljava/lang/String;)Lji;");
    }

    static jobject valueOf(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_valueOf();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getEntityFacingOrder() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "orderedByNearest", "method_10159", "getEntityFacingOrder", "m_122382_"), "(Lbsr;)[Lji;");
    }

    static jobject getEntityFacingOrder(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getEntityFacingOrder();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_listClosest() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "makeDirectionArray", "method_10145", "listClosest", "m_122398_"), "(Lji;Lji;Lji;)[Lji;");
    }

    static jobject listClosest(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_listClosest();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_transform() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "rotate", "method_23225", "transform", "m_252919_"), "(Lorg/joml/Matrix4f;Lji;)Lji;");
    }

    static jobject transform(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_transform();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_shuffle() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "allShuffled", "method_42014", "shuffle", "m_235667_"), "(Layw;)Ljava/util/Collection;");
    }

    static jobject shuffle(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_shuffle();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_stream() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "stream", "method_42013", "stream", "m_235666_"), "()Ljava/util/stream/Stream;");
    }

    static jobject stream() {
       const auto clazz = self();
       const auto methodID = methodID_stream();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_getRotationQuaternion() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getRotation", "method_23224", "getRotationQuaternion", "m_253075_"), "()Lorg/joml/Quaternionf;");
    }

    static jobject getRotationQuaternion(const jobject& obj) {
                
       const auto methodID = methodID_getRotationQuaternion();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getId() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "get3DDataValue", "method_10146", "getId", "m_122411_"), "()I");
    }

    static jint getId(const jobject& obj) {
                
       const auto methodID = methodID_getId();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getHorizontal() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "get2DDataValue", "method_10161", "getHorizontal", "m_122416_"), "()I");
    }

    static jint getHorizontal(const jobject& obj) {
                
       const auto methodID = methodID_getHorizontal();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getDirection() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "getAxisDirection", "method_10171", "getDirection", "m_122421_"), "()Lji$b;");
    }

    static jobject getDirection(const jobject& obj) {
                
       const auto methodID = methodID_getDirection();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getLookDirectionForAxis() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getFacingAxis", "method_32801", "getLookDirectionForAxis", "m_175357_"), "(Lbsr;Lji$a;)Lji;");
    }

    static jobject getLookDirectionForAxis(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_getLookDirectionForAxis();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getOpposite() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "getOpposite", "method_10153", "getOpposite", "m_122424_"), "()Lji;");
    }

    static jobject getOpposite(const jobject& obj) {
                
       const auto methodID = methodID_getOpposite();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_rotateClockwise() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getClockWise", "method_35833", "rotateClockwise", "m_175362_"), "(Lji$a;)Lji;");
    }

    static jobject rotateClockwise(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_rotateClockwise();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_rotateCounterclockwise() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getCounterClockWise", "method_35834", "rotateCounterclockwise", "m_175364_"), "(Lji$a;)Lji;");
    }

    static jobject rotateCounterclockwise(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_rotateCounterclockwise();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_rotateYClockwise() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "getClockWise", "method_10170", "rotateYClockwise", "m_122427_"), "()Lji;");
    }

    static jobject rotateYClockwise(const jobject& obj) {
                
       const auto methodID = methodID_rotateYClockwise();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_rotateXClockwise() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("r", "getClockWiseX", "method_35835", "rotateXClockwise", "m_175366_"), "()Lji;");
    }

    static jobject rotateXClockwise(const jobject& obj) {
                
       const auto methodID = methodID_rotateXClockwise();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_rotateXCounterclockwise() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("s", "getCounterClockWiseX", "method_35836", "rotateXCounterclockwise", "m_175367_"), "()Lji;");
    }

    static jobject rotateXCounterclockwise(const jobject& obj) {
                
       const auto methodID = methodID_rotateXCounterclockwise();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_rotateZClockwise() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("t", "getClockWiseZ", "method_35837", "rotateZClockwise", "m_175368_"), "()Lji;");
    }

    static jobject rotateZClockwise(const jobject& obj) {
                
       const auto methodID = methodID_rotateZClockwise();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_rotateZCounterclockwise() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("u", "getCounterClockWiseZ", "method_35838", "rotateZCounterclockwise", "m_175369_"), "()Lji;");
    }

    static jobject rotateZCounterclockwise(const jobject& obj) {
                
       const auto methodID = methodID_rotateZCounterclockwise();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_rotateYCounterclockwise() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("i", "getCounterClockWise", "method_10160", "rotateYCounterclockwise", "m_122428_"), "()Lji;");
    }

    static jobject rotateYCounterclockwise(const jobject& obj) {
                
       const auto methodID = methodID_rotateYCounterclockwise();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getOffsetX() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("j", "getStepX", "method_10148", "getOffsetX", "m_122429_"), "()I");
    }

    static jint getOffsetX(const jobject& obj) {
                
       const auto methodID = methodID_getOffsetX();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getOffsetY() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("k", "getStepY", "method_10164", "getOffsetY", "m_122430_"), "()I");
    }

    static jint getOffsetY(const jobject& obj) {
                
       const auto methodID = methodID_getOffsetY();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getOffsetZ() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("l", "getStepZ", "method_10165", "getOffsetZ", "m_122431_"), "()I");
    }

    static jint getOffsetZ(const jobject& obj) {
                
       const auto methodID = methodID_getOffsetZ();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getUnitVector() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("m", "step", "method_23955", "getUnitVector", "m_253071_"), "()Lorg/joml/Vector3f;");
    }

    static jobject getUnitVector(const jobject& obj) {
                
       const auto methodID = methodID_getUnitVector();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getName() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("n", "getName", "method_10151", "getName", "m_122433_"), "()Ljava/lang/String;");
    }

    static jobject getName(const jobject& obj) {
                
       const auto methodID = methodID_getName();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getAxis() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("o", "getAxis", "method_10166", "getAxis", "m_122434_"), "()Lji$a;");
    }

    static jobject getAxis(const jobject& obj) {
                
       const auto methodID = methodID_getAxis();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_byName() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "byName", "method_10168", "byName", "m_122402_"), "(Ljava/lang/String;)Lji;");
    }

    static jobject byName(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_byName();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_byId() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "from3DDataValue", "method_10143", "byId", "m_122376_"), "(I)Lji;");
    }

    static jobject byId(const jint& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_byId();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_fromHorizontal() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "from2DDataValue", "method_10139", "fromHorizontal", "m_122407_"), "(I)Lji;");
    }

    static jobject fromHorizontal(const jint& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_fromHorizontal();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_fromVector() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "fromDelta", "method_50026", "fromVector", "m_122378_"), "(III)Lji;");
    }

    static jobject fromVector(const jint& arg0, const jint& arg1, const jint& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_fromVector();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_fromRotation() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "fromYRot", "method_10150", "fromRotation", "m_122364_"), "(D)Lji;");
    }

    static jobject fromRotation(const jdouble& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_fromRotation();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_from() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "fromAxisAndDirection", "method_10169", "from", "m_122387_"), "(Lji$a;Lji$b;)Lji;");
    }

    static jobject from(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_from();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_asRotation() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("p", "toYRot", "method_10144", "asRotation", "m_122435_"), "()F");
    }

    static jfloat asRotation(const jobject& obj) {
                
       const auto methodID = methodID_asRotation();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID_random() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "getRandom", "method_10162", "random", "m_235672_"), "(Layw;)Lji;");
    }

    static jobject random(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_random();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getFacing() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getNearest", "method_10142", "getFacing", "m_122366_"), "(DDD)Lji;");
    }

    static jobject getFacing(const jdouble& arg0, const jdouble& arg1, const jdouble& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_getFacing();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID__getFacing() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getNearest", "method_10147", "getFacing", "m_122372_"), "(FFF)Lji;");
    }

    static jobject _getFacing(const jfloat& arg0, const jfloat& arg1, const jfloat& arg2) {
       const auto clazz = self();
       const auto methodID = methodID__getFacing();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID___getFacing() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getNearest", "method_58251", "getFacing", "m_324946_"), "(Lexc;)Lji;");
    }

    static jobject __getFacing(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID___getFacing();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_asString() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getSerializedName", "method_15434", "asString", "m_7912_"), "()Ljava/lang/String;");
    }

    static jobject asString(const jobject& obj) {
                
       const auto methodID = methodID_asString();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_validateVertical() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "verifyVertical", "method_38940", "validateVertical", "m_194528_"), "(Lji;)Lcom/mojang/serialization/DataResult;");
    }

    static jobject validateVertical(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_validateVertical();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_get() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "get", "method_10156", "get", "m_122390_"), "(Lji$b;Lji$a;)Lji;");
    }

    static jobject get(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_get();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getVector() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("q", "getNormal", "method_10163", "getVector", "m_122436_"), "()Lkh;");
    }

    static jobject getVector(const jobject& obj) {
                
       const auto methodID = methodID_getVector();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_pointsTo() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "isFacingAngle", "method_30928", "pointsTo", "m_122370_"), "(F)Z");
    }

    static jboolean pointsTo(const jobject& obj, const jfloat& arg0) {
                
       const auto methodID = methodID_pointsTo();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_UTIL_MATH_DIRECTION_HPP