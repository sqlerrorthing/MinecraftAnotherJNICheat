// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_UTIL_MATH_INTPROVIDER_INTPROVIDER_HPP
#define NET_MINECRAFT_UTIL_MATH_INTPROVIDER_INTPROVIDER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.util.math.intprovider.IntProvider
 * Remapped: bpw
 */
namespace IntProvider {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("bpw", "net/minecraft/util/valueproviders/IntProvider", "net/minecraft/class_6017", "net/minecraft/util/math/intprovider/IntProvider", "net/minecraft/src/C_141052_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.util.math.intprovider.IntProvider#INT_CODEC
    [[maybe_unused]] static jobject get_field_INT_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CONSTANT_OR_DISPATCH_CODEC", "field_29945", "INT_CODEC", "f_146530_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.util.math.intprovider.IntProvider#INT_CODEC
    [[maybe_unused]] static void set_field_INT_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CONSTANT_OR_DISPATCH_CODEC", "field_29945", "INT_CODEC", "f_146530_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.math.intprovider.IntProvider#VALUE_CODEC
    [[maybe_unused]] static jobject get_field_VALUE_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "CODEC", "field_29946", "VALUE_CODEC", "f_146531_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.math.intprovider.IntProvider#VALUE_CODEC
    [[maybe_unused]] static void set_field_VALUE_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "CODEC", "field_29946", "VALUE_CODEC", "f_146531_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.math.intprovider.IntProvider#NON_NEGATIVE_CODEC
    [[maybe_unused]] static jobject get_field_NON_NEGATIVE_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "NON_NEGATIVE_CODEC", "field_33450", "NON_NEGATIVE_CODEC", "f_146532_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.math.intprovider.IntProvider#NON_NEGATIVE_CODEC
    [[maybe_unused]] static void set_field_NON_NEGATIVE_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "NON_NEGATIVE_CODEC", "field_33450", "NON_NEGATIVE_CODEC", "f_146532_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.math.intprovider.IntProvider#POSITIVE_CODEC
    [[maybe_unused]] static jobject get_field_POSITIVE_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "POSITIVE_CODEC", "field_33451", "POSITIVE_CODEC", "f_146533_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.math.intprovider.IntProvider#POSITIVE_CODEC
    [[maybe_unused]] static void set_field_POSITIVE_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "POSITIVE_CODEC", "field_33451", "POSITIVE_CODEC", "f_146533_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_createValidatingCodec() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "codec", "method_35004", "createValidatingCodec", "m_146545_"), "(II)Lcom/mojang/serialization/Codec;");
    }

    static jobject createValidatingCodec(const jint& arg0, const jint& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_createValidatingCodec();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__createValidatingCodec() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "validateCodec", "method_49103", "createValidatingCodec", "m_322738_"), "(IILcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;");
    }

    static jobject _createValidatingCodec(const jint& arg0, const jint& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID__createValidatingCodec();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_method_58612() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "validate", "method_58612", "method_58612", "m_324944_"), "(IILbpw;)Lcom/mojang/serialization/DataResult;");
    }

    static jobject method_58612(const jint& arg0, const jint& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_method_58612();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_get() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "sample", "method_35008", "get", "m_214085_"), "(Layw;)I");
    }

    static jint get(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_get();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getMin() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getMinValue", "method_35009", "getMin", "m_142739_"), "()I");
    }

    static jint getMin(const jobject& obj) {
                
       const auto methodID = methodID_getMin();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getMax() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getMaxValue", "method_35011", "getMax", "m_142737_"), "()I");
    }

    static jint getMax(const jobject& obj) {
                
       const auto methodID = methodID_getMax();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getType() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getType", "method_35012", "getType", "m_141948_"), "()Lbpx;");
    }

    static jobject getType(const jobject& obj) {
                
       const auto methodID = methodID_getType();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_UTIL_MATH_INTPROVIDER_INTPROVIDER_HPP