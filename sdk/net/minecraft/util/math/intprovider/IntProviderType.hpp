// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_UTIL_MATH_INTPROVIDER_INTPROVIDERTYPE_HPP
#define NET_MINECRAFT_UTIL_MATH_INTPROVIDER_INTPROVIDERTYPE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.util.math.intprovider.IntProviderType
 * Remapped: bpx
 */
namespace IntProviderType {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("bpx", "net/minecraft/util/valueproviders/IntProviderType", "net/minecraft/class_6018", "net/minecraft/util/math/intprovider/IntProviderType", "net/minecraft/src/C_141053_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.util.math.intprovider.IntProviderType#CONSTANT
    [[maybe_unused]] static jobject get_field_CONSTANT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CONSTANT", "field_29947", "CONSTANT", "f_146550_"), "Lbpx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.math.intprovider.IntProviderType#CONSTANT
    [[maybe_unused]] static void set_field_CONSTANT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CONSTANT", "field_29947", "CONSTANT", "f_146550_"), "Lbpx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.math.intprovider.IntProviderType#UNIFORM
    [[maybe_unused]] static jobject get_field_UNIFORM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "UNIFORM", "field_29948", "UNIFORM", "f_146551_"), "Lbpx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.math.intprovider.IntProviderType#UNIFORM
    [[maybe_unused]] static void set_field_UNIFORM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "UNIFORM", "field_29948", "UNIFORM", "f_146551_"), "Lbpx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.math.intprovider.IntProviderType#BIASED_TO_BOTTOM
    [[maybe_unused]] static jobject get_field_BIASED_TO_BOTTOM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "BIASED_TO_BOTTOM", "field_33452", "BIASED_TO_BOTTOM", "f_146552_"), "Lbpx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.math.intprovider.IntProviderType#BIASED_TO_BOTTOM
    [[maybe_unused]] static void set_field_BIASED_TO_BOTTOM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "BIASED_TO_BOTTOM", "field_33452", "BIASED_TO_BOTTOM", "f_146552_"), "Lbpx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.math.intprovider.IntProviderType#CLAMPED
    [[maybe_unused]] static jobject get_field_CLAMPED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "CLAMPED", "field_33453", "CLAMPED", "f_146553_"), "Lbpx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.math.intprovider.IntProviderType#CLAMPED
    [[maybe_unused]] static void set_field_CLAMPED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "CLAMPED", "field_33453", "CLAMPED", "f_146553_"), "Lbpx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.math.intprovider.IntProviderType#WEIGHTED_LIST
    [[maybe_unused]] static jobject get_field_WEIGHTED_LIST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "WEIGHTED_LIST", "field_35034", "WEIGHTED_LIST", "f_185907_"), "Lbpx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.math.intprovider.IntProviderType#WEIGHTED_LIST
    [[maybe_unused]] static void set_field_WEIGHTED_LIST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "WEIGHTED_LIST", "field_35034", "WEIGHTED_LIST", "f_185907_"), "Lbpx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.math.intprovider.IntProviderType#CLAMPED_NORMAL
    [[maybe_unused]] static jobject get_field_CLAMPED_NORMAL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "CLAMPED_NORMAL", "field_35357", "CLAMPED_NORMAL", "f_185908_"), "Lbpx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.math.intprovider.IntProviderType#CLAMPED_NORMAL
    [[maybe_unused]] static void set_field_CLAMPED_NORMAL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "CLAMPED_NORMAL", "field_35357", "CLAMPED_NORMAL", "f_185908_"), "Lbpx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_codec() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("codec", "codec", "", "", "m_146560_"), "()Lcom/mojang/serialization/MapCodec;");
    }

    static jobject codec(const jobject& obj) {
                
       const auto methodID = methodID_codec();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_register() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "register", "method_35014", "register", "m_146557_"), "(Ljava/lang/String;Lcom/mojang/serialization/MapCodec;)Lbpx;");
    }

    static jobject register(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_register();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_UTIL_MATH_INTPROVIDER_INTPROVIDERTYPE_HPP