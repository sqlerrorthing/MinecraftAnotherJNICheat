// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_UTIL_MATH_BLOCKPOS$MUTABLE_HPP
#define NET_MINECRAFT_UTIL_MATH_BLOCKPOS$MUTABLE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.util.math.BlockPos$Mutable
 * Remapped: jd$a
 */
namespace BlockPos$Mutable {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("jd$a", "net/minecraft/core/BlockPos$MutableBlockPos", "net/minecraft/class_2338$class_2339", "net/minecraft/util/math/BlockPos$Mutable", "net/minecraft/src/C_4675_$C_4681_"));
        }
        return cachedClass;
    };

    static jmethodID methodID_add() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "offset", "method_10069", "add", "m_7918_"), "(III)Ljd;");
    }

    static jobject add(const jobject& obj, const jint& arg0, const jint& arg1, const jint& arg2) {
                
       const auto methodID = methodID_add();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_multiply() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "multiply", "method_35830", "multiply", "m_142393_"), "(I)Ljd;");
    }

    static jobject multiply(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_multiply();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_offset() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "relative", "method_10079", "offset", "m_5484_"), "(Lji;I)Ljd;");
    }

    static jobject offset(const jobject& obj, const jobject& arg0, const jint& arg1) {
                
       const auto methodID = methodID_offset();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__offset() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "relative", "method_30513", "offset", "m_5487_"), "(Lji$a;I)Ljd;");
    }

    static jobject _offset(const jobject& obj, const jobject& arg0, const jint& arg1) {
                
       const auto methodID = methodID__offset();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_rotate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "rotate", "method_10070", "rotate", "m_7954_"), "(Ldmm;)Ljd;");
    }

    static jobject rotate(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_rotate();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_set() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "set", "method_10103", "set", "m_122178_"), "(III)Ljd$a;");
    }

    static jobject set(const jobject& obj, const jint& arg0, const jint& arg1, const jint& arg2) {
                
       const auto methodID = methodID_set();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID__set() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "set", "method_10102", "set", "m_122169_"), "(DDD)Ljd$a;");
    }

    static jobject _set(const jobject& obj, const jdouble& arg0, const jdouble& arg1, const jdouble& arg2) {
                
       const auto methodID = methodID__set();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID___set() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "set", "method_10101", "set", "m_122190_"), "(Lkh;)Ljd$a;");
    }

    static jobject __set(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID___set();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID____set() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "set", "method_16363", "set", "m_122188_"), "(J)Ljd$a;");
    }

    static jobject ___set(const jobject& obj, const jlong& arg0) {
                
       const auto methodID = methodID____set();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_____set() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "set", "method_17965", "set", "m_122139_"), "(Lja;III)Ljd$a;");
    }

    static jobject ____set(const jobject& obj, const jobject& arg0, const jint& arg1, const jint& arg2, const jint& arg3) {
                
       const auto methodID = methodID_____set();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID______set() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setWithOffset", "method_25505", "set", "m_122159_"), "(Lkh;Lji;)Ljd$a;");
    }

    static jobject _____set(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID______set();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_______set() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setWithOffset", "method_25504", "set", "m_122154_"), "(Lkh;III)Ljd$a;");
    }

    static jobject ______set(const jobject& obj, const jobject& arg0, const jint& arg1, const jint& arg2, const jint& arg3) {
                
       const auto methodID = methodID_______set();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID________set() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setWithOffset", "method_35831", "set", "m_175306_"), "(Lkh;Lkh;)Ljd$a;");
    }

    static jobject _______set(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID________set();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_move() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "move", "method_10098", "move", "m_122173_"), "(Lji;)Ljd$a;");
    }

    static jobject move(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_move();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__move() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "move", "method_10104", "move", "m_122175_"), "(Lji;I)Ljd$a;");
    }

    static jobject _move(const jobject& obj, const jobject& arg0, const jint& arg1) {
                
       const auto methodID = methodID__move();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID___move() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "move", "method_10100", "move", "m_122184_"), "(III)Ljd$a;");
    }

    static jobject __move(const jobject& obj, const jint& arg0, const jint& arg1, const jint& arg2) {
                
       const auto methodID = methodID___move();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID____move() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "move", "method_30927", "move", "m_122193_"), "(Lkh;)Ljd$a;");
    }

    static jobject ___move(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID____move();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_clamp() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "clamp", "method_27158", "clamp", "m_122147_"), "(Lji$a;II)Ljd$a;");
    }

    static jobject clamp(const jobject& obj, const jobject& arg0, const jint& arg1, const jint& arg2) {
                
       const auto methodID = methodID_clamp();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_setX() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("p", "setX", "method_33097", "setX", "m_142451_"), "(I)Ljd$a;");
    }

    static jobject setX(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_setX();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setY() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("q", "setY", "method_33098", "setY", "m_142448_"), "(I)Ljd$a;");
    }

    static jobject setY(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_setY();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setZ() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("r", "setZ", "method_33099", "setZ", "m_142443_"), "(I)Ljd$a;");
    }

    static jobject setZ(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_setZ();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_toImmutable() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("j", "immutable", "method_10062", "toImmutable", "m_7949_"), "()Ljd;");
    }

    static jobject toImmutable(const jobject& obj) {
                
       const auto methodID = methodID_toImmutable();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_UTIL_MATH_BLOCKPOS$MUTABLE_HPP