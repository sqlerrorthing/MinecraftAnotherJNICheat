// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_UTIL_MATH_SPLINE$BUILDER_HPP
#define NET_MINECRAFT_UTIL_MATH_SPLINE$BUILDER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.util.math.Spline$Builder
 * Remapped: axp$b
 */
namespace Spline$Builder {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("axp$b", "net/minecraft/util/CubicSpline$Builder", "net/minecraft/class_6492$class_6493", "net/minecraft/util/math/Spline$Builder", "net/minecraft/src/C_182769_$C_182771_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.util.math.Spline$Builder#locationFunction
    static jobject get_field_locationFunction(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "coordinate", "field_34382", "locationFunction", "f_184287_"), "Lazq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.math.Spline$Builder#locationFunction
    static void set_field_locationFunction(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "coordinate", "field_34382", "locationFunction", "f_184287_"), "Lazq;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.math.Spline$Builder#amplifier
    static jobject get_field_amplifier(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "valueTransformer", "field_35661", "amplifier", "f_184288_"), "Lazq;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.math.Spline$Builder#amplifier
    static void set_field_amplifier(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "valueTransformer", "field_35661", "amplifier", "f_184288_"), "Lazq;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.math.Spline$Builder#locations
    static jobject get_field_locations(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "locations", "field_34383", "locations", "f_184289_"), "Lit/unimi/dsi/fastutil/floats/FloatList;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.math.Spline$Builder#locations
    static void set_field_locations(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "locations", "field_34383", "locations", "f_184289_"), "Lit/unimi/dsi/fastutil/floats/FloatList;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.math.Spline$Builder#values
    static jobject get_field_values(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "values", "field_34384", "values", "f_184290_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.math.Spline$Builder#values
    static void set_field_values(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "values", "field_34384", "values", "f_184290_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.math.Spline$Builder#derivatives
    static jobject get_field_derivatives(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "derivatives", "field_34385", "derivatives", "f_184291_"), "Lit/unimi/dsi/fastutil/floats/FloatList;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.math.Spline$Builder#derivatives
    static void set_field_derivatives(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "derivatives", "field_34385", "derivatives", "f_184291_"), "Lit/unimi/dsi/fastutil/floats/FloatList;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_add() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "addPoint", "method_41294", "add", "m_216114_"), "(FF)Laxp$b;");
    }

    static jobject add(const jobject& obj, const jfloat& arg0, const jfloat& arg1) {
                
       const auto methodID = methodID_add();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__add() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "addPoint", "method_37924", "add", "m_184298_"), "(FFF)Laxp$b;");
    }

    static jobject _add(const jobject& obj, const jfloat& arg0, const jfloat& arg1, const jfloat& arg2) {
                
       const auto methodID = methodID__add();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID___add() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "addPoint", "method_41295", "add", "m_216117_"), "(FLaxp;)Laxp$b;");
    }

    static jobject __add(const jobject& obj, const jfloat& arg0, const jobject& arg1) {
                
       const auto methodID = methodID___add();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_addPoint() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "addPoint", "method_37925", "addPoint", "m_184302_"), "(FLaxp;F)Laxp$b;");
    }

    static jobject addPoint(const jobject& obj, const jfloat& arg0, const jobject& arg1, const jfloat& arg2) {
                
       const auto methodID = methodID_addPoint();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_build() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "build", "method_37923", "build", "m_184297_"), "()Laxp;");
    }

    static jobject build(const jobject& obj) {
                
       const auto methodID = methodID_build();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_UTIL_MATH_SPLINE$BUILDER_HPP