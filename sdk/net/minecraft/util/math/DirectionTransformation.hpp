// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_UTIL_MATH_DIRECTIONTRANSFORMATION_HPP
#define NET_MINECRAFT_UTIL_MATH_DIRECTIONTRANSFORMATION_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.util.math.DirectionTransformation
 * Remapped: h
 */
namespace DirectionTransformation {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("h", "com/mojang/math/OctahedralGroup", "net/minecraft/class_4990", "net/minecraft/util/math/DirectionTransformation", "net/minecraft/src/C_1905_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.util.math.DirectionTransformation#IDENTITY
    [[maybe_unused]] static jobject get_field_IDENTITY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "IDENTITY", "field_23292", "IDENTITY", "IDENTITY"), "Lh;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.math.DirectionTransformation#IDENTITY
    [[maybe_unused]] static void set_field_IDENTITY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "IDENTITY", "field_23292", "IDENTITY", "IDENTITY"), "Lh;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.math.DirectionTransformation#ROT_180_FACE_XY
    [[maybe_unused]] static jobject get_field_ROT_180_FACE_XY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "ROT_180_FACE_XY", "field_23299", "ROT_180_FACE_XY", "ROT_180_FACE_XY"), "Lh;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.math.DirectionTransformation#ROT_180_FACE_XY
    [[maybe_unused]] static void set_field_ROT_180_FACE_XY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "ROT_180_FACE_XY", "field_23299", "ROT_180_FACE_XY", "ROT_180_FACE_XY"), "Lh;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.math.DirectionTransformation#ROT_180_FACE_XZ
    [[maybe_unused]] static jobject get_field_ROT_180_FACE_XZ() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "ROT_180_FACE_XZ", "field_23300", "ROT_180_FACE_XZ", "ROT_180_FACE_XZ"), "Lh;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.math.DirectionTransformation#ROT_180_FACE_XZ
    [[maybe_unused]] static void set_field_ROT_180_FACE_XZ(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "ROT_180_FACE_XZ", "field_23300", "ROT_180_FACE_XZ", "ROT_180_FACE_XZ"), "Lh;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.math.DirectionTransformation#ROT_180_FACE_YZ
    [[maybe_unused]] static jobject get_field_ROT_180_FACE_YZ() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "ROT_180_FACE_YZ", "field_23301", "ROT_180_FACE_YZ", "ROT_180_FACE_YZ"), "Lh;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.math.DirectionTransformation#ROT_180_FACE_YZ
    [[maybe_unused]] static void set_field_ROT_180_FACE_YZ(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "ROT_180_FACE_YZ", "field_23301", "ROT_180_FACE_YZ", "ROT_180_FACE_YZ"), "Lh;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.math.DirectionTransformation#ROT_120_NNN
    [[maybe_unused]] static jobject get_field_ROT_120_NNN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "ROT_120_NNN", "field_23302", "ROT_120_NNN", "ROT_120_NNN"), "Lh;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.math.DirectionTransformation#ROT_120_NNN
    [[maybe_unused]] static void set_field_ROT_120_NNN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "ROT_120_NNN", "field_23302", "ROT_120_NNN", "ROT_120_NNN"), "Lh;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.math.DirectionTransformation#ROT_120_NNP
    [[maybe_unused]] static jobject get_field_ROT_120_NNP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "ROT_120_NNP", "field_23303", "ROT_120_NNP", "ROT_120_NNP"), "Lh;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.math.DirectionTransformation#ROT_120_NNP
    [[maybe_unused]] static void set_field_ROT_120_NNP(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "ROT_120_NNP", "field_23303", "ROT_120_NNP", "ROT_120_NNP"), "Lh;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.math.DirectionTransformation#ROT_120_NPN
    [[maybe_unused]] static jobject get_field_ROT_120_NPN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "ROT_120_NPN", "field_23304", "ROT_120_NPN", "ROT_120_NPN"), "Lh;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.math.DirectionTransformation#ROT_120_NPN
    [[maybe_unused]] static void set_field_ROT_120_NPN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "ROT_120_NPN", "field_23304", "ROT_120_NPN", "ROT_120_NPN"), "Lh;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.math.DirectionTransformation#ROT_120_NPP
    [[maybe_unused]] static jobject get_field_ROT_120_NPP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "ROT_120_NPP", "field_23305", "ROT_120_NPP", "ROT_120_NPP"), "Lh;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.math.DirectionTransformation#ROT_120_NPP
    [[maybe_unused]] static void set_field_ROT_120_NPP(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "ROT_120_NPP", "field_23305", "ROT_120_NPP", "ROT_120_NPP"), "Lh;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.math.DirectionTransformation#ROT_120_PNN
    [[maybe_unused]] static jobject get_field_ROT_120_PNN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "ROT_120_PNN", "field_23306", "ROT_120_PNN", "ROT_120_PNN"), "Lh;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.math.DirectionTransformation#ROT_120_PNN
    [[maybe_unused]] static void set_field_ROT_120_PNN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "ROT_120_PNN", "field_23306", "ROT_120_PNN", "ROT_120_PNN"), "Lh;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.math.DirectionTransformation#ROT_120_PNP
    [[maybe_unused]] static jobject get_field_ROT_120_PNP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "ROT_120_PNP", "field_23307", "ROT_120_PNP", "ROT_120_PNP"), "Lh;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.math.DirectionTransformation#ROT_120_PNP
    [[maybe_unused]] static void set_field_ROT_120_PNP(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "ROT_120_PNP", "field_23307", "ROT_120_PNP", "ROT_120_PNP"), "Lh;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.math.DirectionTransformation#ROT_120_PPN
    [[maybe_unused]] static jobject get_field_ROT_120_PPN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "ROT_120_PPN", "field_23308", "ROT_120_PPN", "ROT_120_PPN"), "Lh;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.math.DirectionTransformation#ROT_120_PPN
    [[maybe_unused]] static void set_field_ROT_120_PPN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "ROT_120_PPN", "field_23308", "ROT_120_PPN", "ROT_120_PPN"), "Lh;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.math.DirectionTransformation#ROT_120_PPP
    [[maybe_unused]] static jobject get_field_ROT_120_PPP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "ROT_120_PPP", "field_23309", "ROT_120_PPP", "ROT_120_PPP"), "Lh;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.math.DirectionTransformation#ROT_120_PPP
    [[maybe_unused]] static void set_field_ROT_120_PPP(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "ROT_120_PPP", "field_23309", "ROT_120_PPP", "ROT_120_PPP"), "Lh;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.math.DirectionTransformation#ROT_180_EDGE_XY_NEG
    [[maybe_unused]] static jobject get_field_ROT_180_EDGE_XY_NEG() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "ROT_180_EDGE_XY_NEG", "field_23310", "ROT_180_EDGE_XY_NEG", "ROT_180_EDGE_XY_NEG"), "Lh;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.math.DirectionTransformation#ROT_180_EDGE_XY_NEG
    [[maybe_unused]] static void set_field_ROT_180_EDGE_XY_NEG(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "ROT_180_EDGE_XY_NEG", "field_23310", "ROT_180_EDGE_XY_NEG", "ROT_180_EDGE_XY_NEG"), "Lh;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.math.DirectionTransformation#ROT_180_EDGE_XY_POS
    [[maybe_unused]] static jobject get_field_ROT_180_EDGE_XY_POS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "ROT_180_EDGE_XY_POS", "field_23311", "ROT_180_EDGE_XY_POS", "ROT_180_EDGE_XY_POS"), "Lh;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.math.DirectionTransformation#ROT_180_EDGE_XY_POS
    [[maybe_unused]] static void set_field_ROT_180_EDGE_XY_POS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "ROT_180_EDGE_XY_POS", "field_23311", "ROT_180_EDGE_XY_POS", "ROT_180_EDGE_XY_POS"), "Lh;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.math.DirectionTransformation#ROT_180_EDGE_XZ_NEG
    [[maybe_unused]] static jobject get_field_ROT_180_EDGE_XZ_NEG() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "ROT_180_EDGE_XZ_NEG", "field_23312", "ROT_180_EDGE_XZ_NEG", "ROT_180_EDGE_XZ_NEG"), "Lh;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.math.DirectionTransformation#ROT_180_EDGE_XZ_NEG
    [[maybe_unused]] static void set_field_ROT_180_EDGE_XZ_NEG(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "ROT_180_EDGE_XZ_NEG", "field_23312", "ROT_180_EDGE_XZ_NEG", "ROT_180_EDGE_XZ_NEG"), "Lh;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.math.DirectionTransformation#ROT_180_EDGE_XZ_POS
    [[maybe_unused]] static jobject get_field_ROT_180_EDGE_XZ_POS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "ROT_180_EDGE_XZ_POS", "field_23313", "ROT_180_EDGE_XZ_POS", "ROT_180_EDGE_XZ_POS"), "Lh;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.math.DirectionTransformation#ROT_180_EDGE_XZ_POS
    [[maybe_unused]] static void set_field_ROT_180_EDGE_XZ_POS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "ROT_180_EDGE_XZ_POS", "field_23313", "ROT_180_EDGE_XZ_POS", "ROT_180_EDGE_XZ_POS"), "Lh;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.math.DirectionTransformation#ROT_180_EDGE_YZ_NEG
    [[maybe_unused]] static jobject get_field_ROT_180_EDGE_YZ_NEG() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "ROT_180_EDGE_YZ_NEG", "field_23314", "ROT_180_EDGE_YZ_NEG", "ROT_180_EDGE_YZ_NEG"), "Lh;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.math.DirectionTransformation#ROT_180_EDGE_YZ_NEG
    [[maybe_unused]] static void set_field_ROT_180_EDGE_YZ_NEG(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "ROT_180_EDGE_YZ_NEG", "field_23314", "ROT_180_EDGE_YZ_NEG", "ROT_180_EDGE_YZ_NEG"), "Lh;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.math.DirectionTransformation#ROT_180_EDGE_YZ_POS
    [[maybe_unused]] static jobject get_field_ROT_180_EDGE_YZ_POS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "ROT_180_EDGE_YZ_POS", "field_23315", "ROT_180_EDGE_YZ_POS", "ROT_180_EDGE_YZ_POS"), "Lh;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.math.DirectionTransformation#ROT_180_EDGE_YZ_POS
    [[maybe_unused]] static void set_field_ROT_180_EDGE_YZ_POS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "ROT_180_EDGE_YZ_POS", "field_23315", "ROT_180_EDGE_YZ_POS", "ROT_180_EDGE_YZ_POS"), "Lh;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.math.DirectionTransformation#ROT_90_X_NEG
    [[maybe_unused]] static jobject get_field_ROT_90_X_NEG() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "ROT_90_X_NEG", "field_23316", "ROT_90_X_NEG", "ROT_90_X_NEG"), "Lh;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.math.DirectionTransformation#ROT_90_X_NEG
    [[maybe_unused]] static void set_field_ROT_90_X_NEG(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "ROT_90_X_NEG", "field_23316", "ROT_90_X_NEG", "ROT_90_X_NEG"), "Lh;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.math.DirectionTransformation#ROT_90_X_POS
    [[maybe_unused]] static jobject get_field_ROT_90_X_POS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "ROT_90_X_POS", "field_23317", "ROT_90_X_POS", "ROT_90_X_POS"), "Lh;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.math.DirectionTransformation#ROT_90_X_POS
    [[maybe_unused]] static void set_field_ROT_90_X_POS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "ROT_90_X_POS", "field_23317", "ROT_90_X_POS", "ROT_90_X_POS"), "Lh;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.math.DirectionTransformation#ROT_90_Y_NEG
    [[maybe_unused]] static jobject get_field_ROT_90_Y_NEG() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "ROT_90_Y_NEG", "field_23318", "ROT_90_Y_NEG", "ROT_90_Y_NEG"), "Lh;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.math.DirectionTransformation#ROT_90_Y_NEG
    [[maybe_unused]] static void set_field_ROT_90_Y_NEG(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "ROT_90_Y_NEG", "field_23318", "ROT_90_Y_NEG", "ROT_90_Y_NEG"), "Lh;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.math.DirectionTransformation#ROT_90_Y_POS
    [[maybe_unused]] static jobject get_field_ROT_90_Y_POS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "ROT_90_Y_POS", "field_23319", "ROT_90_Y_POS", "ROT_90_Y_POS"), "Lh;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.math.DirectionTransformation#ROT_90_Y_POS
    [[maybe_unused]] static void set_field_ROT_90_Y_POS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "ROT_90_Y_POS", "field_23319", "ROT_90_Y_POS", "ROT_90_Y_POS"), "Lh;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.math.DirectionTransformation#ROT_90_Z_NEG
    [[maybe_unused]] static jobject get_field_ROT_90_Z_NEG() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "ROT_90_Z_NEG", "field_23320", "ROT_90_Z_NEG", "ROT_90_Z_NEG"), "Lh;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.math.DirectionTransformation#ROT_90_Z_NEG
    [[maybe_unused]] static void set_field_ROT_90_Z_NEG(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "ROT_90_Z_NEG", "field_23320", "ROT_90_Z_NEG", "ROT_90_Z_NEG"), "Lh;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.math.DirectionTransformation#ROT_90_Z_POS
    [[maybe_unused]] static jobject get_field_ROT_90_Z_POS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "ROT_90_Z_POS", "field_23321", "ROT_90_Z_POS", "ROT_90_Z_POS"), "Lh;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.math.DirectionTransformation#ROT_90_Z_POS
    [[maybe_unused]] static void set_field_ROT_90_Z_POS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "ROT_90_Z_POS", "field_23321", "ROT_90_Z_POS", "ROT_90_Z_POS"), "Lh;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.math.DirectionTransformation#INVERSION
    [[maybe_unused]] static jobject get_field_INVERSION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("y", "INVERSION", "field_23322", "INVERSION", "INVERSION"), "Lh;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.math.DirectionTransformation#INVERSION
    [[maybe_unused]] static void set_field_INVERSION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("y", "INVERSION", "field_23322", "INVERSION", "INVERSION"), "Lh;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.math.DirectionTransformation#INVERT_X
    [[maybe_unused]] static jobject get_field_INVERT_X() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("z", "INVERT_X", "field_23323", "INVERT_X", "INVERT_X"), "Lh;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.math.DirectionTransformation#INVERT_X
    [[maybe_unused]] static void set_field_INVERT_X(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("z", "INVERT_X", "field_23323", "INVERT_X", "INVERT_X"), "Lh;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.math.DirectionTransformation#INVERT_Y
    [[maybe_unused]] static jobject get_field_INVERT_Y() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("A", "INVERT_Y", "field_23266", "INVERT_Y", "INVERT_Y"), "Lh;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.math.DirectionTransformation#INVERT_Y
    [[maybe_unused]] static void set_field_INVERT_Y(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("A", "INVERT_Y", "field_23266", "INVERT_Y", "INVERT_Y"), "Lh;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.math.DirectionTransformation#INVERT_Z
    [[maybe_unused]] static jobject get_field_INVERT_Z() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("B", "INVERT_Z", "field_23267", "INVERT_Z", "INVERT_Z"), "Lh;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.math.DirectionTransformation#INVERT_Z
    [[maybe_unused]] static void set_field_INVERT_Z(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("B", "INVERT_Z", "field_23267", "INVERT_Z", "INVERT_Z"), "Lh;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.math.DirectionTransformation#ROT_60_REF_NNN
    [[maybe_unused]] static jobject get_field_ROT_60_REF_NNN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("C", "ROT_60_REF_NNN", "field_23268", "ROT_60_REF_NNN", "ROT_60_REF_NNN"), "Lh;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.math.DirectionTransformation#ROT_60_REF_NNN
    [[maybe_unused]] static void set_field_ROT_60_REF_NNN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("C", "ROT_60_REF_NNN", "field_23268", "ROT_60_REF_NNN", "ROT_60_REF_NNN"), "Lh;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.math.DirectionTransformation#ROT_60_REF_NNP
    [[maybe_unused]] static jobject get_field_ROT_60_REF_NNP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("D", "ROT_60_REF_NNP", "field_23269", "ROT_60_REF_NNP", "ROT_60_REF_NNP"), "Lh;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.math.DirectionTransformation#ROT_60_REF_NNP
    [[maybe_unused]] static void set_field_ROT_60_REF_NNP(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("D", "ROT_60_REF_NNP", "field_23269", "ROT_60_REF_NNP", "ROT_60_REF_NNP"), "Lh;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.math.DirectionTransformation#ROT_60_REF_NPN
    [[maybe_unused]] static jobject get_field_ROT_60_REF_NPN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("E", "ROT_60_REF_NPN", "field_23270", "ROT_60_REF_NPN", "ROT_60_REF_NPN"), "Lh;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.math.DirectionTransformation#ROT_60_REF_NPN
    [[maybe_unused]] static void set_field_ROT_60_REF_NPN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("E", "ROT_60_REF_NPN", "field_23270", "ROT_60_REF_NPN", "ROT_60_REF_NPN"), "Lh;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.math.DirectionTransformation#ROT_60_REF_NPP
    [[maybe_unused]] static jobject get_field_ROT_60_REF_NPP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("F", "ROT_60_REF_NPP", "field_23271", "ROT_60_REF_NPP", "ROT_60_REF_NPP"), "Lh;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.math.DirectionTransformation#ROT_60_REF_NPP
    [[maybe_unused]] static void set_field_ROT_60_REF_NPP(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("F", "ROT_60_REF_NPP", "field_23271", "ROT_60_REF_NPP", "ROT_60_REF_NPP"), "Lh;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.math.DirectionTransformation#ROT_60_REF_PNN
    [[maybe_unused]] static jobject get_field_ROT_60_REF_PNN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("G", "ROT_60_REF_PNN", "field_23272", "ROT_60_REF_PNN", "ROT_60_REF_PNN"), "Lh;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.math.DirectionTransformation#ROT_60_REF_PNN
    [[maybe_unused]] static void set_field_ROT_60_REF_PNN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("G", "ROT_60_REF_PNN", "field_23272", "ROT_60_REF_PNN", "ROT_60_REF_PNN"), "Lh;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.math.DirectionTransformation#ROT_60_REF_PNP
    [[maybe_unused]] static jobject get_field_ROT_60_REF_PNP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("H", "ROT_60_REF_PNP", "field_23273", "ROT_60_REF_PNP", "ROT_60_REF_PNP"), "Lh;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.math.DirectionTransformation#ROT_60_REF_PNP
    [[maybe_unused]] static void set_field_ROT_60_REF_PNP(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("H", "ROT_60_REF_PNP", "field_23273", "ROT_60_REF_PNP", "ROT_60_REF_PNP"), "Lh;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.math.DirectionTransformation#ROT_60_REF_PPN
    [[maybe_unused]] static jobject get_field_ROT_60_REF_PPN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("I", "ROT_60_REF_PPN", "field_23274", "ROT_60_REF_PPN", "ROT_60_REF_PPN"), "Lh;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.math.DirectionTransformation#ROT_60_REF_PPN
    [[maybe_unused]] static void set_field_ROT_60_REF_PPN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("I", "ROT_60_REF_PPN", "field_23274", "ROT_60_REF_PPN", "ROT_60_REF_PPN"), "Lh;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.math.DirectionTransformation#ROT_60_REF_PPP
    [[maybe_unused]] static jobject get_field_ROT_60_REF_PPP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("J", "ROT_60_REF_PPP", "field_23275", "ROT_60_REF_PPP", "ROT_60_REF_PPP"), "Lh;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.math.DirectionTransformation#ROT_60_REF_PPP
    [[maybe_unused]] static void set_field_ROT_60_REF_PPP(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("J", "ROT_60_REF_PPP", "field_23275", "ROT_60_REF_PPP", "ROT_60_REF_PPP"), "Lh;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.math.DirectionTransformation#SWAP_XY
    [[maybe_unused]] static jobject get_field_SWAP_XY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("K", "SWAP_XY", "field_23276", "SWAP_XY", "SWAP_XY"), "Lh;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.math.DirectionTransformation#SWAP_XY
    [[maybe_unused]] static void set_field_SWAP_XY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("K", "SWAP_XY", "field_23276", "SWAP_XY", "SWAP_XY"), "Lh;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.math.DirectionTransformation#SWAP_YZ
    [[maybe_unused]] static jobject get_field_SWAP_YZ() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("L", "SWAP_YZ", "field_23277", "SWAP_YZ", "SWAP_YZ"), "Lh;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.math.DirectionTransformation#SWAP_YZ
    [[maybe_unused]] static void set_field_SWAP_YZ(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("L", "SWAP_YZ", "field_23277", "SWAP_YZ", "SWAP_YZ"), "Lh;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.math.DirectionTransformation#SWAP_XZ
    [[maybe_unused]] static jobject get_field_SWAP_XZ() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("M", "SWAP_XZ", "field_23278", "SWAP_XZ", "SWAP_XZ"), "Lh;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.math.DirectionTransformation#SWAP_XZ
    [[maybe_unused]] static void set_field_SWAP_XZ(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("M", "SWAP_XZ", "field_23278", "SWAP_XZ", "SWAP_XZ"), "Lh;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.math.DirectionTransformation#SWAP_NEG_XY
    [[maybe_unused]] static jobject get_field_SWAP_NEG_XY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("N", "SWAP_NEG_XY", "field_23279", "SWAP_NEG_XY", "SWAP_NEG_XY"), "Lh;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.math.DirectionTransformation#SWAP_NEG_XY
    [[maybe_unused]] static void set_field_SWAP_NEG_XY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("N", "SWAP_NEG_XY", "field_23279", "SWAP_NEG_XY", "SWAP_NEG_XY"), "Lh;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.math.DirectionTransformation#SWAP_NEG_YZ
    [[maybe_unused]] static jobject get_field_SWAP_NEG_YZ() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("O", "SWAP_NEG_YZ", "field_23280", "SWAP_NEG_YZ", "SWAP_NEG_YZ"), "Lh;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.math.DirectionTransformation#SWAP_NEG_YZ
    [[maybe_unused]] static void set_field_SWAP_NEG_YZ(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("O", "SWAP_NEG_YZ", "field_23280", "SWAP_NEG_YZ", "SWAP_NEG_YZ"), "Lh;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.math.DirectionTransformation#SWAP_NEG_XZ
    [[maybe_unused]] static jobject get_field_SWAP_NEG_XZ() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("P", "SWAP_NEG_XZ", "field_23281", "SWAP_NEG_XZ", "SWAP_NEG_XZ"), "Lh;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.math.DirectionTransformation#SWAP_NEG_XZ
    [[maybe_unused]] static void set_field_SWAP_NEG_XZ(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("P", "SWAP_NEG_XZ", "field_23281", "SWAP_NEG_XZ", "SWAP_NEG_XZ"), "Lh;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.math.DirectionTransformation#ROT_90_REF_X_NEG
    [[maybe_unused]] static jobject get_field_ROT_90_REF_X_NEG() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Q", "ROT_90_REF_X_NEG", "field_23282", "ROT_90_REF_X_NEG", "ROT_90_REF_X_NEG"), "Lh;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.math.DirectionTransformation#ROT_90_REF_X_NEG
    [[maybe_unused]] static void set_field_ROT_90_REF_X_NEG(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("Q", "ROT_90_REF_X_NEG", "field_23282", "ROT_90_REF_X_NEG", "ROT_90_REF_X_NEG"), "Lh;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.math.DirectionTransformation#ROT_90_REF_X_POS
    [[maybe_unused]] static jobject get_field_ROT_90_REF_X_POS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("R", "ROT_90_REF_X_POS", "field_23283", "ROT_90_REF_X_POS", "ROT_90_REF_X_POS"), "Lh;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.math.DirectionTransformation#ROT_90_REF_X_POS
    [[maybe_unused]] static void set_field_ROT_90_REF_X_POS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("R", "ROT_90_REF_X_POS", "field_23283", "ROT_90_REF_X_POS", "ROT_90_REF_X_POS"), "Lh;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.math.DirectionTransformation#ROT_90_REF_Y_NEG
    [[maybe_unused]] static jobject get_field_ROT_90_REF_Y_NEG() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("S", "ROT_90_REF_Y_NEG", "field_23284", "ROT_90_REF_Y_NEG", "ROT_90_REF_Y_NEG"), "Lh;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.math.DirectionTransformation#ROT_90_REF_Y_NEG
    [[maybe_unused]] static void set_field_ROT_90_REF_Y_NEG(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("S", "ROT_90_REF_Y_NEG", "field_23284", "ROT_90_REF_Y_NEG", "ROT_90_REF_Y_NEG"), "Lh;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.math.DirectionTransformation#ROT_90_REF_Y_POS
    [[maybe_unused]] static jobject get_field_ROT_90_REF_Y_POS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("T", "ROT_90_REF_Y_POS", "field_23285", "ROT_90_REF_Y_POS", "ROT_90_REF_Y_POS"), "Lh;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.math.DirectionTransformation#ROT_90_REF_Y_POS
    [[maybe_unused]] static void set_field_ROT_90_REF_Y_POS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("T", "ROT_90_REF_Y_POS", "field_23285", "ROT_90_REF_Y_POS", "ROT_90_REF_Y_POS"), "Lh;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.math.DirectionTransformation#ROT_90_REF_Z_NEG
    [[maybe_unused]] static jobject get_field_ROT_90_REF_Z_NEG() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("U", "ROT_90_REF_Z_NEG", "field_23286", "ROT_90_REF_Z_NEG", "ROT_90_REF_Z_NEG"), "Lh;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.math.DirectionTransformation#ROT_90_REF_Z_NEG
    [[maybe_unused]] static void set_field_ROT_90_REF_Z_NEG(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("U", "ROT_90_REF_Z_NEG", "field_23286", "ROT_90_REF_Z_NEG", "ROT_90_REF_Z_NEG"), "Lh;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.math.DirectionTransformation#ROT_90_REF_Z_POS
    [[maybe_unused]] static jobject get_field_ROT_90_REF_Z_POS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("V", "ROT_90_REF_Z_POS", "field_23287", "ROT_90_REF_Z_POS", "ROT_90_REF_Z_POS"), "Lh;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.math.DirectionTransformation#ROT_90_REF_Z_POS
    [[maybe_unused]] static void set_field_ROT_90_REF_Z_POS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("V", "ROT_90_REF_Z_POS", "field_23287", "ROT_90_REF_Z_POS", "ROT_90_REF_Z_POS"), "Lh;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.util.math.DirectionTransformation#matrix
    static jobject get_field_matrix(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("X", "transformation", "field_23288", "matrix", "f_56473_"), "Lorg/joml/Matrix3f;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.math.DirectionTransformation#matrix
    static void set_field_matrix(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("X", "transformation", "field_23288", "matrix", "f_56473_"), "Lorg/joml/Matrix3f;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.math.DirectionTransformation#name
    static jobject get_field_name(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("Y", "name", "field_23289", "name", "f_56474_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.math.DirectionTransformation#name
    static void set_field_name(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("Y", "name", "field_23289", "name", "f_56474_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.math.DirectionTransformation#mappings
    static jobject get_field_mappings(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("Z", "rotatedDirections", "field_23290", "mappings", "f_56475_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.math.DirectionTransformation#mappings
    static void set_field_mappings(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("Z", "rotatedDirections", "field_23290", "mappings", "f_56475_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.math.DirectionTransformation#flipX
    static jboolean get_field_flipX(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aa", "invertX", "field_23291", "flipX", "f_56476_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.math.DirectionTransformation#flipX
    static void set_field_flipX(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("aa", "invertX", "field_23291", "flipX", "f_56476_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.math.DirectionTransformation#flipY
    static jboolean get_field_flipY(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ab", "invertY", "field_23293", "flipY", "f_56478_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.math.DirectionTransformation#flipY
    static void set_field_flipY(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ab", "invertY", "field_23293", "flipY", "f_56478_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.math.DirectionTransformation#flipZ
    static jboolean get_field_flipZ(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ac", "invertZ", "field_23294", "flipZ", "f_56479_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.math.DirectionTransformation#flipZ
    static void set_field_flipZ(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ac", "invertZ", "field_23294", "flipZ", "f_56479_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.math.DirectionTransformation#axisTransformation
    static jobject get_field_axisTransformation(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ad", "permutation", "field_23295", "axisTransformation", "f_56480_"), "Li;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.math.DirectionTransformation#axisTransformation
    static void set_field_axisTransformation(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("ad", "permutation", "field_23295", "axisTransformation", "f_56480_"), "Li;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for static private field net.minecraft.util.math.DirectionTransformation#COMBINATIONS
    [[maybe_unused]] static jobject get_field_COMBINATIONS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ae", "cayleyTable", "field_23296", "COMBINATIONS", "f_56481_"), "[[Lh;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.util.math.DirectionTransformation#COMBINATIONS
    [[maybe_unused]] static void set_field_COMBINATIONS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ae", "cayleyTable", "field_23296", "COMBINATIONS", "f_56481_"), "[[Lh;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.util.math.DirectionTransformation#INVERSES
    [[maybe_unused]] static jobject get_field_INVERSES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("af", "inverseTable", "field_23297", "INVERSES", "f_56482_"), "[Lh;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.util.math.DirectionTransformation#INVERSES
    [[maybe_unused]] static void set_field_INVERSES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("af", "inverseTable", "field_23297", "INVERSES", "f_56482_"), "[Lh;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_values() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("values", "values", "values", "values", "values"), "()[Lh;");
    }

    static jobject values() {
       const auto clazz = self();
       const auto methodID = methodID_values();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_valueOf() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("valueOf", "valueOf", "valueOf", "valueOf", "valueOf"), "(Ljava/lang/String;)Lh;");
    }

    static jobject valueOf(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_valueOf();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getAxisFlips() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "packInversions", "method_26391", "getAxisFlips", "m_56534_"), "()Lit/unimi/dsi/fastutil/booleans/BooleanList;");
    }

    static jobject getAxisFlips(const jobject& obj) {
                
       const auto methodID = methodID_getAxisFlips();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_prepend() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "compose", "method_26385", "prepend", "m_56521_"), "(Lh;)Lh;");
    }

    static jobject prepend(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_prepend();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_inverse() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "inverse", "method_35813", "inverse", "m_174944_"), "()Lh;");
    }

    static jobject inverse(const jobject& obj) {
                
       const auto methodID = methodID_inverse();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getMatrix() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "transformation", "method_35814", "getMatrix", "m_253203_"), "()Lorg/joml/Matrix3f;");
    }

    static jobject getMatrix(const jobject& obj) {
                
       const auto methodID = methodID_getMatrix();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_asString() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getSerializedName", "method_15434", "asString", "m_7912_"), "()Ljava/lang/String;");
    }

    static jobject asString(const jobject& obj) {
                
       const auto methodID = methodID_asString();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_map() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "rotate", "method_26388", "map", "m_56528_"), "(Lji;)Lji;");
    }

    static jobject map(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_map();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_shouldFlipDirection() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "inverts", "method_26387", "shouldFlipDirection", "m_56526_"), "(Lji$a;)Z");
    }

    static jboolean shouldFlipDirection(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_shouldFlipDirection();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_mapJigsawOrientation() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "rotate", "method_26389", "mapJigsawOrientation", "m_56530_"), "(Ljk;)Ljk;");
    }

    static jobject mapJigsawOrientation(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_mapJigsawOrientation();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_UTIL_MATH_DIRECTIONTRANSFORMATION_HPP