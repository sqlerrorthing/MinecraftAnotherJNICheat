// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_UTIL_MATH_GRAVITYFIELD_HPP
#define NET_MINECRAFT_UTIL_MATH_GRAVITYFIELD_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.util.math.GravityField
 * Remapped: ddk
 */
namespace GravityField {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("ddk", "net/minecraft/world/level/PotentialCalculator", "net/minecraft/class_5263", "net/minecraft/util/math/GravityField", "net/minecraft/src/C_1616_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.util.math.GravityField#points
    static jobject get_field_points(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "charges", "field_24401", "points", "f_47190_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.math.GravityField#points
    static void set_field_points(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "charges", "field_24401", "points", "f_47190_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_addPoint() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "addCharge", "method_27831", "addPoint", "m_47192_"), "(Ljd;D)V");
    }

    static void addPoint(const jobject& obj, const jobject& arg0, const jdouble& arg1) {
                
       const auto methodID = methodID_addPoint();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_calculate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getPotentialEnergyChange", "method_27832", "calculate", "m_47195_"), "(Ljd;D)D");
    }

    static jdouble calculate(const jobject& obj, const jobject& arg0, const jdouble& arg1) {
                
       const auto methodID = methodID_calculate();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_UTIL_MATH_GRAVITYFIELD_HPP