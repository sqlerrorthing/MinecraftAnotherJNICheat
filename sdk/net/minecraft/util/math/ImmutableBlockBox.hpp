// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_UTIL_MATH_IMMUTABLEBLOCKBOX_HPP
#define NET_MINECRAFT_UTIL_MATH_IMMUTABLEBLOCKBOX_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.util.math.ImmutableBlockBox
 * Remapped: jb
 */
namespace ImmutableBlockBox {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("jb", "net/minecraft/core/BlockBox", "net/minecraft/class_9380", "net/minecraft/util/math/ImmutableBlockBox", "net/minecraft/src/C_313636_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.util.math.ImmutableBlockBox#min
    static jobject get_field_min(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "min", "comp_2466", "min", "f_315022_"), "Ljd;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.math.ImmutableBlockBox#min
    static void set_field_min(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "min", "comp_2466", "min", "f_315022_"), "Ljd;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.math.ImmutableBlockBox#max
    static jobject get_field_max(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "max", "comp_2467", "max", "f_315343_"), "Ljd;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.math.ImmutableBlockBox#max
    static void set_field_max(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "max", "comp_2467", "max", "f_315343_"), "Ljd;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for static public field net.minecraft.util.math.ImmutableBlockBox#PACKET_CODEC
    [[maybe_unused]] static jobject get_field_PACKET_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "STREAM_CODEC", "field_49907", "PACKET_CODEC", "f_314337_"), "Lyx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.math.ImmutableBlockBox#PACKET_CODEC
    [[maybe_unused]] static void set_field_PACKET_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "STREAM_CODEC", "field_49907", "PACKET_CODEC", "f_314337_"), "Lyx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_of() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "of", "method_58236", "of", "m_321337_"), "(Ljd;)Ljb;");
    }

    static jobject of(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_of();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID__of() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "of", "method_58237", "of", "m_318760_"), "(Ljd;Ljd;)Ljb;");
    }

    static jobject _of(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID__of();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_encompass() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "include", "method_58241", "encompass", "m_322874_"), "(Ljd;)Ljb;");
    }

    static jobject encompass(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_encompass();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isSingleBlock() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "isBlock", "method_58235", "isSingleBlock", "m_320598_"), "()Z");
    }

    static jboolean isSingleBlock(const jobject& obj) {
                
       const auto methodID = methodID_isSingleBlock();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_includes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "contains", "method_58244", "includes", "m_323467_"), "(Ljd;)Z");
    }

    static jboolean includes(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_includes();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_enclosingBox() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "aabb", "method_58240", "enclosingBox", "m_322580_"), "()Lewx;");
    }

    static jobject enclosingBox(const jobject& obj) {
                
       const auto methodID = methodID_enclosingBox();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_iterator() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("iterator", "iterator", "", "", "iterator"), "()Ljava/util/Iterator;");
    }

    static jobject iterator(const jobject& obj) {
                
       const auto methodID = methodID_iterator();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getBlockCountX() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "sizeX", "method_58243", "getBlockCountX", "m_323830_"), "()I");
    }

    static jint getBlockCountX(const jobject& obj) {
                
       const auto methodID = methodID_getBlockCountX();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getBlockCountY() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "sizeY", "method_58245", "getBlockCountY", "m_322159_"), "()I");
    }

    static jint getBlockCountY(const jobject& obj) {
                
       const auto methodID = methodID_getBlockCountY();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getBlockCountZ() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "sizeZ", "method_58246", "getBlockCountZ", "m_321501_"), "()I");
    }

    static jint getBlockCountZ(const jobject& obj) {
                
       const auto methodID = methodID_getBlockCountZ();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_expand() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "extend", "method_58238", "expand", "m_320451_"), "(Lji;I)Ljb;");
    }

    static jobject expand(const jobject& obj, const jobject& arg0, const jint& arg1) {
                
       const auto methodID = methodID_expand();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_move() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "move", "method_58242", "move", "m_320499_"), "(Lji;I)Ljb;");
    }

    static jobject move(const jobject& obj, const jobject& arg0, const jint& arg1) {
                
       const auto methodID = methodID_move();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__move() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "offset", "method_58239", "move", "m_322256_"), "(Lkh;)Ljb;");
    }

    static jobject _move(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__move();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__min() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "min", "comp_2466", "min", "f_315022_"), "()Ljd;");
    }

    static jobject _min(const jobject& obj) {
                
       const auto methodID = methodID__min();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__max() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "max", "comp_2467", "max", "f_315343_"), "()Ljd;");
    }

    static jobject _max(const jobject& obj) {
                
       const auto methodID = methodID__max();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_UTIL_MATH_IMMUTABLEBLOCKBOX_HPP