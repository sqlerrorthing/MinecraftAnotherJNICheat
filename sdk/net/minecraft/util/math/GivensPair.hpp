// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_UTIL_MATH_GIVENSPAIR_HPP
#define NET_MINECRAFT_UTIL_MATH_GIVENSPAIR_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.util.math.GivensPair
 * Remapped: e
 */
namespace GivensPair {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("e", "com/mojang/math/GivensParameters", "net/minecraft/class_8218", "net/minecraft/util/math/GivensPair", "net/minecraft/src/C_276130_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.util.math.GivensPair#sinHalf
    static jfloat get_field_sinHalf(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "sinHalf", "comp_1317", "sinHalf", "f_276143_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.math.GivensPair#sinHalf
    static void set_field_sinHalf(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "sinHalf", "comp_1317", "sinHalf", "f_276143_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.math.GivensPair#cosHalf
    static jfloat get_field_cosHalf(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "cosHalf", "comp_1318", "cosHalf", "f_276137_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.math.GivensPair#cosHalf
    static void set_field_cosHalf(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "cosHalf", "comp_1318", "cosHalf", "f_276137_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    static jmethodID methodID_normalize() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "fromUnnormalized", "method_49727", "normalize", "m_276229_"), "(FF)Le;");
    }

    static jobject normalize(const jfloat& arg0, const jfloat& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_normalize();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_fromAngle() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "fromPositiveAngle", "method_49726", "fromAngle", "m_276195_"), "(F)Le;");
    }

    static jobject fromAngle(const jfloat& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_fromAngle();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_negateSin() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "inverse", "method_49725", "negateSin", "m_276224_"), "()Le;");
    }

    static jobject negateSin(const jobject& obj) {
                
       const auto methodID = methodID_negateSin();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_setXRotation() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "aroundX", "method_49729", "setXRotation", "m_276196_"), "(Lorg/joml/Quaternionf;)Lorg/joml/Quaternionf;");
    }

    static jobject setXRotation(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setXRotation();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setYRotation() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "aroundY", "method_49732", "setYRotation", "m_276212_"), "(Lorg/joml/Quaternionf;)Lorg/joml/Quaternionf;");
    }

    static jobject setYRotation(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setYRotation();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setZRotation() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "aroundZ", "method_49735", "setZRotation", "m_276202_"), "(Lorg/joml/Quaternionf;)Lorg/joml/Quaternionf;");
    }

    static jobject setZRotation(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setZRotation();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_cosDouble() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "cos", "method_49730", "cosDouble", "m_276191_"), "()F");
    }

    static jfloat cosDouble(const jobject& obj) {
                
       const auto methodID = methodID_cosDouble();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID_sinDouble() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "sin", "method_49733", "sinDouble", "m_276211_"), "()F");
    }

    static jfloat sinDouble(const jobject& obj) {
                
       const auto methodID = methodID_sinDouble();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID_setRotationX() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "aroundX", "method_49728", "setRotationX", "m_276201_"), "(Lorg/joml/Matrix3f;)Lorg/joml/Matrix3f;");
    }

    static jobject setRotationX(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setRotationX();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setRotationY() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "aroundY", "method_49731", "setRotationY", "m_276214_"), "(Lorg/joml/Matrix3f;)Lorg/joml/Matrix3f;");
    }

    static jobject setRotationY(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setRotationY();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setRotationZ() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "aroundZ", "method_49734", "setRotationZ", "m_276210_"), "(Lorg/joml/Matrix3f;)Lorg/joml/Matrix3f;");
    }

    static jobject setRotationZ(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_setRotationZ();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__sinHalf() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "sinHalf", "comp_1317", "sinHalf", "f_276143_"), "()F");
    }

    static jfloat _sinHalf(const jobject& obj) {
                
       const auto methodID = methodID__sinHalf();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID__cosHalf() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "cosHalf", "comp_1318", "cosHalf", "f_276137_"), "()F");
    }

    static jfloat _cosHalf(const jobject& obj) {
                
       const auto methodID = methodID__cosHalf();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_UTIL_MATH_GIVENSPAIR_HPP