// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_UTIL_MATH_BLOCKBOX_HPP
#define NET_MINECRAFT_UTIL_MATH_BLOCKBOX_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.util.math.BlockBox
 * Remapped: ejj
 */
namespace BlockBox {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("ejj", "net/minecraft/world/level/levelgen/structure/BoundingBox", "net/minecraft/class_3341", "net/minecraft/util/math/BlockBox", "net/minecraft/src/C_2478_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.util.math.BlockBox#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "LOGGER", "field_31548", "LOGGER", "f_162355_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.util.math.BlockBox#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "LOGGER", "field_31548", "LOGGER", "f_162355_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.math.BlockBox#CODEC
    [[maybe_unused]] static jobject get_field_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CODEC", "field_29325", "CODEC", "f_162354_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.math.BlockBox#CODEC
    [[maybe_unused]] static void set_field_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CODEC", "field_29325", "CODEC", "f_162354_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.util.math.BlockBox#minX
    static jint get_field_minX(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "minX", "field_14380", "minX", "f_162356_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.math.BlockBox#minX
    static void set_field_minX(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "minX", "field_14380", "minX", "f_162356_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.math.BlockBox#minY
    static jint get_field_minY(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "minY", "field_14379", "minY", "f_162357_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.math.BlockBox#minY
    static void set_field_minY(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "minY", "field_14379", "minY", "f_162357_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.math.BlockBox#minZ
    static jint get_field_minZ(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "minZ", "field_14378", "minZ", "f_162358_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.math.BlockBox#minZ
    static void set_field_minZ(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "minZ", "field_14378", "minZ", "f_162358_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.math.BlockBox#maxX
    static jint get_field_maxX(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "maxX", "field_14377", "maxX", "f_162359_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.math.BlockBox#maxX
    static void set_field_maxX(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "maxX", "field_14377", "maxX", "f_162359_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.math.BlockBox#maxY
    static jint get_field_maxY(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "maxY", "field_14376", "maxY", "f_162360_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.math.BlockBox#maxY
    static void set_field_maxY(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "maxY", "field_14376", "maxY", "f_162360_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.math.BlockBox#maxZ
    static jint get_field_maxZ(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "maxZ", "field_14381", "maxZ", "f_162361_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.math.BlockBox#maxZ
    static void set_field_maxZ(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "maxZ", "field_14381", "maxZ", "f_162361_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    static jmethodID methodID_create() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "fromCorners", "method_34390", "create", "m_162375_"), "(Lkh;Lkh;)Lejj;");
    }

    static jobject create(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_create();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_infinite() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "infinite", "method_14665", "infinite", "m_71044_"), "()Lejj;");
    }

    static jobject infinite() {
       const auto clazz = self();
       const auto methodID = methodID_infinite();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_rotated() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "orientBox", "method_14667", "rotated", "m_71031_"), "(IIIIIIIIILji;)Lejj;");
    }

    static jobject rotated(const jint& arg0, const jint& arg1, const jint& arg2, const jint& arg3, const jint& arg4, const jint& arg5, const jint& arg6, const jint& arg7, const jint& arg8, const jobject& arg9) {
       const auto clazz = self();
       const auto methodID = methodID_rotated();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9);
    };
    
    static jmethodID methodID_streamChunkPos() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "intersectingChunks", "method_54883", "streamChunkPos", "m_306717_"), "()Ljava/util/stream/Stream;");
    }

    static jobject streamChunkPos(const jobject& obj) {
                
       const auto methodID = methodID_streamChunkPos();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_intersects() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "intersects", "method_14657", "intersects", "m_71049_"), "(Lejj;)Z");
    }

    static jboolean intersects(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_intersects();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_intersectsXZ() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "intersects", "method_14669", "intersectsXZ", "m_71019_"), "(IIII)Z");
    }

    static jboolean intersectsXZ(const jobject& obj, const jint& arg0, const jint& arg1, const jint& arg2, const jint& arg3) {
                
       const auto methodID = methodID_intersectsXZ();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_encompassPositions() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "encapsulatingPositions", "method_35411", "encompassPositions", "m_162378_"), "(Ljava/lang/Iterable;)Ljava/util/Optional;");
    }

    static jobject encompassPositions(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_encompassPositions();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_encompass() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "encapsulatingBoxes", "method_35413", "encompass", "m_162388_"), "(Ljava/lang/Iterable;)Ljava/util/Optional;");
    }

    static jobject encompass(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_encompass();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID__encompass() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "encapsulate", "method_35412", "encompass", "m_162386_"), "(Lejj;)Lejj;");
    }

    static jobject _encompass(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__encompass();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID___encompass() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "encapsulate", "method_34389", "encompass", "m_162371_"), "(Ljd;)Lejj;");
    }

    static jobject __encompass(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID___encompass();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_move() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "move", "method_14661", "move", "m_162367_"), "(III)Lejj;");
    }

    static jobject move(const jobject& obj, const jint& arg0, const jint& arg1, const jint& arg2) {
                
       const auto methodID = methodID_move();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID__move() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "move", "method_29299", "move", "m_162373_"), "(Lkh;)Lejj;");
    }

    static jobject _move(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__move();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_offset() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "moved", "method_19311", "offset", "m_71045_"), "(III)Lejj;");
    }

    static jobject offset(const jobject& obj, const jint& arg0, const jint& arg1, const jint& arg2) {
                
       const auto methodID = methodID_offset();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_expand() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "inflatedBy", "method_35410", "expand", "m_191961_"), "(I)Lejj;");
    }

    static jobject expand(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_expand();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__expand() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "inflatedBy", "method_59718", "expand", "m_320482_"), "(III)Lejj;");
    }

    static jobject _expand(const jobject& obj, const jint& arg0, const jint& arg1, const jint& arg2) {
                
       const auto methodID = methodID__expand();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_contains() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "isInside", "method_14662", "contains", "m_71051_"), "(Lkh;)Z");
    }

    static jboolean contains(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_contains();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__contains() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "isInside", "method_47593", "contains", "m_260866_"), "(III)Z");
    }

    static jboolean _contains(const jobject& obj, const jint& arg0, const jint& arg1, const jint& arg2) {
                
       const auto methodID = methodID__contains();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_getDimensions() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getLength", "method_14659", "getDimensions", "m_71053_"), "()Lkh;");
    }

    static jobject getDimensions(const jobject& obj) {
                
       const auto methodID = methodID_getDimensions();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getBlockCountX() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getXSpan", "method_35414", "getBlockCountX", "m_71056_"), "()I");
    }

    static jint getBlockCountX(const jobject& obj) {
                
       const auto methodID = methodID_getBlockCountX();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getBlockCountY() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "getYSpan", "method_14660", "getBlockCountY", "m_71057_"), "()I");
    }

    static jint getBlockCountY(const jobject& obj) {
                
       const auto methodID = methodID_getBlockCountY();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getBlockCountZ() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "getZSpan", "method_14663", "getBlockCountZ", "m_71058_"), "()I");
    }

    static jint getBlockCountZ(const jobject& obj) {
                
       const auto methodID = methodID_getBlockCountZ();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getCenter() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "getCenter", "method_22874", "getCenter", "m_162394_"), "()Ljd;");
    }

    static jobject getCenter(const jobject& obj) {
                
       const auto methodID = methodID_getCenter();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_forEachVertex() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "forAllCorners", "method_34391", "forEachVertex", "m_162380_"), "(Ljava/util/function/Consumer;)V");
    }

    static void forEachVertex(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_forEachVertex();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getMinX() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "minX", "method_35415", "getMinX", "m_162395_"), "()I");
    }

    static jint getMinX(const jobject& obj) {
                
       const auto methodID = methodID_getMinX();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getMinY() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("i", "minY", "method_35416", "getMinY", "m_162396_"), "()I");
    }

    static jint getMinY(const jobject& obj) {
                
       const auto methodID = methodID_getMinY();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getMinZ() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("j", "minZ", "method_35417", "getMinZ", "m_162398_"), "()I");
    }

    static jint getMinZ(const jobject& obj) {
                
       const auto methodID = methodID_getMinZ();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getMaxX() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("k", "maxX", "method_35418", "getMaxX", "m_162399_"), "()I");
    }

    static jint getMaxX(const jobject& obj) {
                
       const auto methodID = methodID_getMaxX();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getMaxY() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("l", "maxY", "method_35419", "getMaxY", "m_162400_"), "()I");
    }

    static jint getMaxY(const jobject& obj) {
                
       const auto methodID = methodID_getMaxY();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getMaxZ() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("m", "maxZ", "method_35420", "getMaxZ", "m_162401_"), "()I");
    }

    static jint getMaxZ(const jobject& obj) {
                
       const auto methodID = methodID_getMaxZ();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_UTIL_MATH_BLOCKBOX_HPP