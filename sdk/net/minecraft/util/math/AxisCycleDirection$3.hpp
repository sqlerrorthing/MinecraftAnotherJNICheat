// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_UTIL_MATH_AXISCYCLEDIRECTION$3_HPP
#define NET_MINECRAFT_UTIL_MATH_AXISCYCLEDIRECTION$3_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.util.math.AxisCycleDirection$3
 * Remapped: ja$3
 */
namespace AxisCycleDirection$3 {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("ja$3", "net/minecraft/core/AxisCycle$3", "net/minecraft/class_2335$3", "net/minecraft/util/math/AxisCycleDirection$3", "net/minecraft/src/C_4670_$C_4673_"));
        }
        return cachedClass;
    };

    static jmethodID methodID_choose() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "cycle", "method_10056", "choose", "m_7758_"), "(IIILji$a;)I");
    }

    static jint choose(const jobject& obj, const jint& arg0, const jint& arg1, const jint& arg2, const jobject& arg3) {
                
       const auto methodID = methodID_choose();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID__choose() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "cycle", "method_35819", "choose", "m_142567_"), "(DDDLji$a;)D");
    }

    static jdouble _choose(const jobject& obj, const jdouble& arg0, const jdouble& arg1, const jdouble& arg2, const jobject& arg3) {
                
       const auto methodID = methodID__choose();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_cycle() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "cycle", "method_10058", "cycle", "m_7314_"), "(Lji$a;)Lji$a;");
    }

    static jobject cycle(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_cycle();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_opposite() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "inverse", "method_10055", "opposite", "m_7634_"), "()Lja;");
    }

    static jobject opposite(const jobject& obj) {
                
       const auto methodID = methodID_opposite();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_UTIL_MATH_AXISCYCLEDIRECTION$3_HPP