// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_UTIL_MATH_FLOATPROVIDER_FLOATPROVIDERTYPE_HPP
#define NET_MINECRAFT_UTIL_MATH_FLOATPROVIDER_FLOATPROVIDERTYPE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.util.math.floatprovider.FloatProviderType
 * Remapped: bpv
 */
namespace FloatProviderType {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("bpv", "net/minecraft/util/valueproviders/FloatProviderType", "net/minecraft/class_5864", "net/minecraft/util/math/floatprovider/FloatProviderType", "net/minecraft/src/C_141051_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.util.math.floatprovider.FloatProviderType#CONSTANT
    [[maybe_unused]] static jobject get_field_CONSTANT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CONSTANT", "field_29008", "CONSTANT", "f_146519_"), "Lbpv;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.math.floatprovider.FloatProviderType#CONSTANT
    [[maybe_unused]] static void set_field_CONSTANT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CONSTANT", "field_29008", "CONSTANT", "f_146519_"), "Lbpv;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.math.floatprovider.FloatProviderType#UNIFORM
    [[maybe_unused]] static jobject get_field_UNIFORM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "UNIFORM", "field_29009", "UNIFORM", "f_146520_"), "Lbpv;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.math.floatprovider.FloatProviderType#UNIFORM
    [[maybe_unused]] static void set_field_UNIFORM(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "UNIFORM", "field_29009", "UNIFORM", "f_146520_"), "Lbpv;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.math.floatprovider.FloatProviderType#CLAMPED_NORMAL
    [[maybe_unused]] static jobject get_field_CLAMPED_NORMAL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "CLAMPED_NORMAL", "field_29010", "CLAMPED_NORMAL", "f_146521_"), "Lbpv;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.math.floatprovider.FloatProviderType#CLAMPED_NORMAL
    [[maybe_unused]] static void set_field_CLAMPED_NORMAL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "CLAMPED_NORMAL", "field_29010", "CLAMPED_NORMAL", "f_146521_"), "Lbpv;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.math.floatprovider.FloatProviderType#TRAPEZOID
    [[maybe_unused]] static jobject get_field_TRAPEZOID() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "TRAPEZOID", "field_29011", "TRAPEZOID", "f_146522_"), "Lbpv;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.math.floatprovider.FloatProviderType#TRAPEZOID
    [[maybe_unused]] static void set_field_TRAPEZOID(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "TRAPEZOID", "field_29011", "TRAPEZOID", "f_146522_"), "Lbpv;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_codec() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("codec", "codec", "", "", "m_146529_"), "()Lcom/mojang/serialization/MapCodec;");
    }

    static jobject codec(const jobject& obj) {
                
       const auto methodID = methodID_codec();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_register() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "register", "method_33925", "register", "m_146526_"), "(Ljava/lang/String;Lcom/mojang/serialization/MapCodec;)Lbpv;");
    }

    static jobject register(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_register();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_UTIL_MATH_FLOATPROVIDER_FLOATPROVIDERTYPE_HPP