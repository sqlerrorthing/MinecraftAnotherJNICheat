// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_UTIL_MATH_ROTATIONAXIS_HPP
#define NET_MINECRAFT_UTIL_MATH_ROTATIONAXIS_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.util.math.RotationAxis
 * Remapped: a
 */
namespace RotationAxis {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("a", "com/mojang/math/Axis", "net/minecraft/class_7833", "net/minecraft/util/math/RotationAxis", "net/minecraft/src/C_252363_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.util.math.RotationAxis#NEGATIVE_X
    [[maybe_unused]] static jobject get_field_NEGATIVE_X() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "XN", "field_40713", "NEGATIVE_X", "f_252495_"), "La;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.math.RotationAxis#NEGATIVE_X
    [[maybe_unused]] static void set_field_NEGATIVE_X(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "XN", "field_40713", "NEGATIVE_X", "f_252495_"), "La;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.math.RotationAxis#POSITIVE_X
    [[maybe_unused]] static jobject get_field_POSITIVE_X() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "XP", "field_40714", "POSITIVE_X", "f_252529_"), "La;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.math.RotationAxis#POSITIVE_X
    [[maybe_unused]] static void set_field_POSITIVE_X(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "XP", "field_40714", "POSITIVE_X", "f_252529_"), "La;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.math.RotationAxis#NEGATIVE_Y
    [[maybe_unused]] static jobject get_field_NEGATIVE_Y() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "YN", "field_40715", "NEGATIVE_Y", "f_252392_"), "La;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.math.RotationAxis#NEGATIVE_Y
    [[maybe_unused]] static void set_field_NEGATIVE_Y(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "YN", "field_40715", "NEGATIVE_Y", "f_252392_"), "La;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.math.RotationAxis#POSITIVE_Y
    [[maybe_unused]] static jobject get_field_POSITIVE_Y() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "YP", "field_40716", "POSITIVE_Y", "f_252436_"), "La;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.math.RotationAxis#POSITIVE_Y
    [[maybe_unused]] static void set_field_POSITIVE_Y(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "YP", "field_40716", "POSITIVE_Y", "f_252436_"), "La;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.math.RotationAxis#NEGATIVE_Z
    [[maybe_unused]] static jobject get_field_NEGATIVE_Z() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "ZN", "field_40717", "NEGATIVE_Z", "f_252393_"), "La;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.math.RotationAxis#NEGATIVE_Z
    [[maybe_unused]] static void set_field_NEGATIVE_Z(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "ZN", "field_40717", "NEGATIVE_Z", "f_252393_"), "La;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.math.RotationAxis#POSITIVE_Z
    [[maybe_unused]] static jobject get_field_POSITIVE_Z() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "ZP", "field_40718", "POSITIVE_Z", "f_252403_"), "La;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.math.RotationAxis#POSITIVE_Z
    [[maybe_unused]] static void set_field_POSITIVE_Z(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "ZP", "field_40718", "POSITIVE_Z", "f_252403_"), "La;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_of() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("of", "of", "method_46356", "of", "m_253057_"), "(Lorg/joml/Vector3f;)La;");
    }

    static jobject of(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_of();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_rotation() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("rotation", "rotation", "rotation", "rotation", "m_252961_"), "(F)Lorg/joml/Quaternionf;");
    }

    static jobject rotation(const jobject& obj, const jfloat& arg0) {
                
       const auto methodID = methodID_rotation();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_rotationDegrees() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("rotationDegrees", "rotationDegrees", "rotationDegrees", "rotationDegrees", "m_252977_"), "(F)Lorg/joml/Quaternionf;");
    }

    static jobject rotationDegrees(const jobject& obj, const jfloat& arg0) {
                
       const auto methodID = methodID_rotationDegrees();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_UTIL_MATH_ROTATIONAXIS_HPP