// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_UTIL_MATH_RANDOM_RANDOMSEQUENCE_HPP
#define NET_MINECRAFT_UTIL_MATH_RANDOM_RANDOMSEQUENCE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.util.math.random.RandomSequence
 * Remapped: bqx
 */
namespace RandomSequence {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("bqx", "net/minecraft/world/RandomSequence", "net/minecraft/class_8564", "net/minecraft/util/math/random/RandomSequence", "net/minecraft/src/C_286931_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.util.math.random.RandomSequence#CODEC
    [[maybe_unused]] static jobject get_field_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CODEC", "field_44859", "CODEC", "f_286999_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.math.random.RandomSequence#CODEC
    [[maybe_unused]] static void set_field_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CODEC", "field_44859", "CODEC", "f_286999_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.util.math.random.RandomSequence#source
    static jobject get_field_source(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "source", "field_44860", "source", "f_287004_"), "Ldzz;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.math.random.RandomSequence#source
    static void set_field_source(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "source", "field_44860", "source", "f_287004_"), "Ldzz;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_createSource() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "createSequence", "method_52189", "createSource", "m_289190_"), "(JLjava/util/Optional;)Ldzz;");
    }

    static jobject createSource(const jlong& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_createSource();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_createSeed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "seedForKey", "method_52171", "createSeed", "m_288221_"), "(Lakr;)Ldzn$a;");
    }

    static jobject createSeed(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_createSeed();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getSource() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "random", "method_51839", "getSource", "m_287244_"), "()Layw;");
    }

    static jobject getSource(const jobject& obj) {
                
       const auto methodID = methodID_getSource();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_UTIL_MATH_RANDOM_RANDOMSEQUENCE_HPP