// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_UTIL_MATH_GRAVITYFIELD$POINT_HPP
#define NET_MINECRAFT_UTIL_MATH_GRAVITYFIELD$POINT_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.util.math.GravityField$Point
 * Remapped: ddk$a
 */
namespace GravityField$Point {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("ddk$a", "net/minecraft/world/level/PotentialCalculator$PointCharge", "net/minecraft/class_5263$class_5264", "net/minecraft/util/math/GravityField$Point", "net/minecraft/src/C_1616_$C_1617_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.util.math.GravityField$Point#pos
    static jobject get_field_pos(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "pos", "field_24402", "pos", "f_47198_"), "Ljd;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.math.GravityField$Point#pos
    static void set_field_pos(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "pos", "field_24402", "pos", "f_47198_"), "Ljd;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.math.GravityField$Point#mass
    static jdouble get_field_mass(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "charge", "field_24403", "mass", "f_47199_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetDoubleField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.math.GravityField$Point#mass
    static void set_field_mass(const jobject &obj, const jdouble &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "charge", "field_24403", "mass", "f_47199_"), "D");
        return MinecraftSDK::env->SetDoubleField(obj, fieldID, value);
    };

    static jmethodID methodID_getGravityFactor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getPotentialChange", "method_27833", "getGravityFactor", "m_47203_"), "(Ljd;)D");
    }

    static jdouble getGravityFactor(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getGravityFactor();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_UTIL_MATH_GRAVITYFIELD$POINT_HPP