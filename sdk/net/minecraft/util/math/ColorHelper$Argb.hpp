// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_UTIL_MATH_COLORHELPER$ARGB_HPP
#define NET_MINECRAFT_UTIL_MATH_COLORHELPER$ARGB_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.util.math.ColorHelper$Argb
 * Remapped: axy$b
 */
namespace ColorHelper$Argb {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("axy$b", "net/minecraft/util/FastColor$ARGB32", "net/minecraft/class_5253$class_5254", "net/minecraft/util/math/ColorHelper$Argb", "net/minecraft/src/C_174_$C_175_"));
        }
        return cachedClass;
    };

    static jmethodID methodID_getAlpha() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "alpha", "method_27762", "getAlpha", "m_13655_"), "(I)I");
    }

    static jint getAlpha(const jint& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getAlpha();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getRed() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "red", "method_27765", "getRed", "m_13665_"), "(I)I");
    }

    static jint getRed(const jint& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getRed();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getGreen() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "green", "method_27766", "getGreen", "m_13667_"), "(I)I");
    }

    static jint getGreen(const jint& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getGreen();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getBlue() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("d", "blue", "method_27767", "getBlue", "m_13669_"), "(I)I");
    }

    static jint getBlue(const jint& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getBlue();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getArgb() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "color", "method_27764", "getArgb", "m_13660_"), "(IIII)I");
    }

    static jint getArgb(const jint& arg0, const jint& arg1, const jint& arg2, const jint& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_getArgb();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID__getArgb() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "color", "method_57173", "getArgb", "m_322882_"), "(III)I");
    }

    static jint _getArgb(const jint& arg0, const jint& arg1, const jint& arg2) {
       const auto clazz = self();
       const auto methodID = methodID__getArgb();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_mixColor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "multiply", "method_27763", "mixColor", "m_13657_"), "(II)I");
    }

    static jint mixColor(const jint& arg0, const jint& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_mixColor();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_lerp() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "lerp", "method_48780", "lerp", "m_269105_"), "(FII)I");
    }

    static jint lerp(const jfloat& arg0, const jint& arg1, const jint& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_lerp();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_fullAlpha() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("e", "opaque", "method_57174", "fullAlpha", "m_321570_"), "(I)I");
    }

    static jint fullAlpha(const jint& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_fullAlpha();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_withAlpha() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "color", "method_58144", "withAlpha", "m_320289_"), "(II)I");
    }

    static jint withAlpha(const jint& arg0, const jint& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_withAlpha();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_fromFloats() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "colorFromFloat", "method_59554", "fromFloats", "m_323842_"), "(FFFF)I");
    }

    static jint fromFloats(const jfloat& arg0, const jfloat& arg1, const jfloat& arg2, const jfloat& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_fromFloats();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_averageArgb() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "average", "method_60676", "averageArgb", "m_339391_"), "(II)I");
    }

    static jint averageArgb(const jint& arg0, const jint& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_averageArgb();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_UTIL_MATH_COLORHELPER$ARGB_HPP