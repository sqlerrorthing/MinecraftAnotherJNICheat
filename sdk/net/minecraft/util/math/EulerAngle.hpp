// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_UTIL_MATH_EULERANGLE_HPP
#define NET_MINECRAFT_UTIL_MATH_EULERANGLE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.util.math.EulerAngle
 * Remapped: ke
 */
namespace EulerAngle {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("ke", "net/minecraft/core/Rotations", "net/minecraft/class_2379", "net/minecraft/util/math/EulerAngle", "net/minecraft/src/C_4709_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.util.math.EulerAngle#PACKET_CODEC
    [[maybe_unused]] static jobject get_field_PACKET_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "STREAM_CODEC", "field_48452", "PACKET_CODEC", "f_316585_"), "Lyx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.math.EulerAngle#PACKET_CODEC
    [[maybe_unused]] static void set_field_PACKET_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "STREAM_CODEC", "field_48452", "PACKET_CODEC", "f_316585_"), "Lyx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for protected field net.minecraft.util.math.EulerAngle#pitch
    static jfloat get_field_pitch(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "x", "field_11165", "pitch", "f_123146_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.util.math.EulerAngle#pitch
    static void set_field_pitch(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "x", "field_11165", "pitch", "f_123146_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.util.math.EulerAngle#yaw
    static jfloat get_field_yaw(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "y", "field_11164", "yaw", "f_123147_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.util.math.EulerAngle#yaw
    static void set_field_yaw(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "y", "field_11164", "yaw", "f_123147_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for protected field net.minecraft.util.math.EulerAngle#roll
    static jfloat get_field_roll(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "z", "field_11163", "roll", "f_123148_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static protected field net.minecraft.util.math.EulerAngle#roll
    static void set_field_roll(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "z", "field_11163", "roll", "f_123148_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    static jmethodID methodID_toNbt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "save", "method_10255", "toNbt", "m_123155_"), "()Luh;");
    }

    static jobject toNbt(const jobject& obj) {
                
       const auto methodID = methodID_toNbt();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getPitch() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getX", "method_10256", "getPitch", "m_123156_"), "()F");
    }

    static jfloat getPitch(const jobject& obj) {
                
       const auto methodID = methodID_getPitch();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID_getYaw() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getY", "method_10257", "getYaw", "m_123157_"), "()F");
    }

    static jfloat getYaw(const jobject& obj) {
                
       const auto methodID = methodID_getYaw();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID_getRoll() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "getZ", "method_10258", "getRoll", "m_123158_"), "()F");
    }

    static jfloat getRoll(const jobject& obj) {
                
       const auto methodID = methodID_getRoll();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID_getWrappedPitch() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "getWrappedX", "method_35845", "getWrappedPitch", "m_175532_"), "()F");
    }

    static jfloat getWrappedPitch(const jobject& obj) {
                
       const auto methodID = methodID_getWrappedPitch();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID_getWrappedYaw() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "getWrappedY", "method_35846", "getWrappedYaw", "m_175533_"), "()F");
    }

    static jfloat getWrappedYaw(const jobject& obj) {
                
       const auto methodID = methodID_getWrappedYaw();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID_getWrappedRoll() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "getWrappedZ", "method_35847", "getWrappedRoll", "m_175534_"), "()F");
    }

    static jfloat getWrappedRoll(const jobject& obj) {
                
       const auto methodID = methodID_getWrappedRoll();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_UTIL_MATH_EULERANGLE_HPP