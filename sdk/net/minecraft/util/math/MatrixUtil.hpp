// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_UTIL_MATH_MATRIXUTIL_HPP
#define NET_MINECRAFT_UTIL_MATH_MATRIXUTIL_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.util.math.MatrixUtil
 * Remapped: f
 */
namespace MatrixUtil {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("f", "com/mojang/math/MatrixUtil", "net/minecraft/class_7837", "net/minecraft/util/math/MatrixUtil", "net/minecraft/src/C_252379_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.util.math.MatrixUtil#COT_PI_OVER_8
    [[maybe_unused]] static jfloat get_field_COT_PI_OVER_8() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "G", "field_40746", "COT_PI_OVER_8", "f_252537_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.util.math.MatrixUtil#COT_PI_OVER_8
    [[maybe_unused]] static void set_field_COT_PI_OVER_8(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "G", "field_40746", "COT_PI_OVER_8", "f_252537_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.util.math.MatrixUtil#SIN_COS_PI_OVER_8
    [[maybe_unused]] static jobject get_field_SIN_COS_PI_OVER_8() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "PI_4", "field_43146", "SIN_COS_PI_OVER_8", "f_276163_"), "Le;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.util.math.MatrixUtil#SIN_COS_PI_OVER_8
    [[maybe_unused]] static void set_field_SIN_COS_PI_OVER_8(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "PI_4", "field_43146", "SIN_COS_PI_OVER_8", "f_276163_"), "Le;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_scale() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "mulComponentWise", "method_46414", "scale", "m_253023_"), "(Lorg/joml/Matrix4f;F)Lorg/joml/Matrix4f;");
    }

    static jobject scale(const jobject& arg0, const jfloat& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_scale();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_approximateGivensQuaternion() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "approxGivensQuat", "method_46411", "approximateGivensQuaternion", "m_276207_"), "(FFF)Le;");
    }

    static jobject approximateGivensQuaternion(const jfloat& arg0, const jfloat& arg1, const jfloat& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_approximateGivensQuaternion();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_qrGivensQuaternion() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "qrGivensQuat", "method_46410", "qrGivensQuaternion", "m_252892_"), "(FF)Le;");
    }

    static jobject qrGivensQuaternion(const jfloat& arg0, const jfloat& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_qrGivensQuaternion();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_conjugate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "similarityTransform", "method_49742", "conjugate", "m_276192_"), "(Lorg/joml/Matrix3f;Lorg/joml/Matrix3f;)V");
    }

    static void conjugate(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_conjugate();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_applyJacobiIteration() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "stepJacobi", "method_46415", "applyJacobiIteration", "m_276219_"), "(Lorg/joml/Matrix3f;Lorg/joml/Matrix3f;Lorg/joml/Quaternionf;Lorg/joml/Quaternionf;)V");
    }

    static void applyJacobiIteration(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jobject& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_applyJacobiIteration();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_applyJacobiIterations() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "eigenvalueJacobi", "method_49741", "applyJacobiIterations", "m_276221_"), "(Lorg/joml/Matrix3f;I)Lorg/joml/Quaternionf;");
    }

    static jobject applyJacobiIterations(const jobject& arg0, const jint& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_applyJacobiIterations();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_svdDecompose() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "svdDecompose", "method_46412", "svdDecompose", "m_253103_"), "(Lorg/joml/Matrix3f;)Lorg/apache/commons/lang3/tuple/Triple;");
    }

    static jobject svdDecompose(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_svdDecompose();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_isTranslation() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "isPureTranslation", "method_56826", "isTranslation", "m_321551_"), "(Lorg/joml/Matrix4f;)Z");
    }

    static jboolean isTranslation(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_isTranslation();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_isOrthonormal() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "isOrthonormal", "method_56827", "isOrthonormal", "m_319661_"), "(Lorg/joml/Matrix4f;)Z");
    }

    static jboolean isOrthonormal(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_isOrthonormal();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_UTIL_MATH_MATRIXUTIL_HPP