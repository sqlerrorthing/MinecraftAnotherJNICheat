// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_UTIL_MATH_VEC3I_HPP
#define NET_MINECRAFT_UTIL_MATH_VEC3I_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.util.math.Vec3i
 * Remapped: kh
 */
namespace Vec3i {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("kh", "net/minecraft/core/Vec3i", "net/minecraft/class_2382", "net/minecraft/util/math/Vec3i", "net/minecraft/src/C_4713_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.util.math.Vec3i#CODEC
    [[maybe_unused]] static jobject get_field_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "CODEC", "field_25123", "CODEC", "f_123287_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.math.Vec3i#CODEC
    [[maybe_unused]] static void set_field_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "CODEC", "field_25123", "CODEC", "f_123287_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.math.Vec3i#ZERO
    [[maybe_unused]] static jobject get_field_ZERO() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "ZERO", "field_11176", "ZERO", "f_123288_"), "Lkh;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.math.Vec3i#ZERO
    [[maybe_unused]] static void set_field_ZERO(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "ZERO", "field_11176", "ZERO", "f_123288_"), "Lkh;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.util.math.Vec3i#x
    static jint get_field_x(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "x", "field_11175", "x", "f_123285_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.math.Vec3i#x
    static void set_field_x(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "x", "field_11175", "x", "f_123285_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.math.Vec3i#y
    static jint get_field_y(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "y", "field_11174", "y", "f_123286_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.math.Vec3i#y
    static void set_field_y(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "y", "field_11174", "y", "f_123286_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.math.Vec3i#z
    static jint get_field_z(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "z", "field_11173", "z", "f_123289_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.math.Vec3i#z
    static void set_field_z(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "z", "field_11173", "z", "f_123289_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    static jmethodID methodID_createOffsetCodec() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("v", "offsetCodec", "method_39677", "createOffsetCodec", "m_194650_"), "(I)Lcom/mojang/serialization/Codec;");
    }

    static jobject createOffsetCodec(const jint& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_createOffsetCodec();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_compareTo() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("i", "compareTo", "method_10265", "compareTo", "compareTo"), "(Lkh;)I");
    }

    static jint compareTo(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_compareTo();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getX() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("u", "getX", "method_10263", "getX", "m_123341_"), "()I");
    }

    static jint getX(const jobject& obj) {
                
       const auto methodID = methodID_getX();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getY() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("v", "getY", "method_10264", "getY", "m_123342_"), "()I");
    }

    static jint getY(const jobject& obj) {
                
       const auto methodID = methodID_getY();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getZ() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("w", "getZ", "method_10260", "getZ", "m_123343_"), "()I");
    }

    static jint getZ(const jobject& obj) {
                
       const auto methodID = methodID_getZ();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_setX() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("u", "setX", "method_20787", "setX", "m_142451_"), "(I)Lkh;");
    }

    static jobject setX(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_setX();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setY() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("t", "setY", "method_10099", "setY", "m_142448_"), "(I)Lkh;");
    }

    static jobject setY(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_setY();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_setZ() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("s", "setZ", "method_20788", "setZ", "m_142443_"), "(I)Lkh;");
    }

    static jobject setZ(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_setZ();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_add() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "offset", "method_34592", "add", "m_7918_"), "(III)Lkh;");
    }

    static jobject add(const jobject& obj, const jint& arg0, const jint& arg1, const jint& arg2) {
                
       const auto methodID = methodID_add();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID__add() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "offset", "method_35853", "add", "m_121955_"), "(Lkh;)Lkh;");
    }

    static jobject _add(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__add();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_subtract() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "subtract", "method_35852", "subtract", "m_121996_"), "(Lkh;)Lkh;");
    }

    static jobject subtract(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_subtract();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_multiply() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("o", "multiply", "method_35862", "multiply", "m_142393_"), "(I)Lkh;");
    }

    static jobject multiply(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_multiply();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_up() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("q", "above", "method_30931", "up", "m_7494_"), "()Lkh;");
    }

    static jobject up(const jobject& obj) {
                
       const auto methodID = methodID_up();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__up() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("n", "above", "method_30930", "up", "m_6630_"), "(I)Lkh;");
    }

    static jobject _up(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID__up();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_down() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("p", "below", "method_23228", "down", "m_7495_"), "()Lkh;");
    }

    static jobject down(const jobject& obj) {
                
       const auto methodID = methodID_down();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__down() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("m", "below", "method_23227", "down", "m_6625_"), "(I)Lkh;");
    }

    static jobject _down(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID__down();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_north() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("o", "north", "method_35861", "north", "m_122012_"), "()Lkh;");
    }

    static jobject north(const jobject& obj) {
                
       const auto methodID = methodID_north();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__north() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("l", "north", "method_35860", "north", "m_122013_"), "(I)Lkh;");
    }

    static jobject _north(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID__north();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_south() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("n", "south", "method_35859", "south", "m_122019_"), "()Lkh;");
    }

    static jobject south(const jobject& obj) {
                
       const auto methodID = methodID_south();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__south() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("k", "south", "method_35858", "south", "m_122020_"), "(I)Lkh;");
    }

    static jobject _south(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID__south();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_west() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("m", "west", "method_35857", "west", "m_122024_"), "()Lkh;");
    }

    static jobject west(const jobject& obj) {
                
       const auto methodID = methodID_west();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__west() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("j", "west", "method_35856", "west", "m_122025_"), "(I)Lkh;");
    }

    static jobject _west(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID__west();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_east() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("l", "east", "method_35855", "east", "m_122029_"), "()Lkh;");
    }

    static jobject east(const jobject& obj) {
                
       const auto methodID = methodID_east();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__east() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("i", "east", "method_35854", "east", "m_122030_"), "(I)Lkh;");
    }

    static jobject _east(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID__east();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_offset() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "relative", "method_35851", "offset", "m_121945_"), "(Lji;)Lkh;");
    }

    static jobject offset(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_offset();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__offset() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "relative", "method_23226", "offset", "m_5484_"), "(Lji;I)Lkh;");
    }

    static jobject _offset(const jobject& obj, const jobject& arg0, const jint& arg1) {
                
       const auto methodID = methodID__offset();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID___offset() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "relative", "method_35850", "offset", "m_5487_"), "(Lji$a;I)Lkh;");
    }

    static jobject __offset(const jobject& obj, const jobject& arg0, const jint& arg1) {
                
       const auto methodID = methodID___offset();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_crossProduct() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "cross", "method_10259", "crossProduct", "m_7724_"), "(Lkh;)Lkh;");
    }

    static jobject crossProduct(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_crossProduct();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isWithinDistance() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "closerThan", "method_19771", "isWithinDistance", "m_123314_"), "(Lkh;D)Z");
    }

    static jboolean isWithinDistance(const jobject& obj, const jobject& arg0, const jdouble& arg1) {
                
       const auto methodID = methodID_isWithinDistance();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__isWithinDistance() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "closerToCenterThan", "method_19769", "isWithinDistance", "m_203195_"), "(Ljw;D)Z");
    }

    static jboolean _isWithinDistance(const jobject& obj, const jobject& arg0, const jdouble& arg1) {
                
       const auto methodID = methodID__isWithinDistance();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getSquaredDistance() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("j", "distSqr", "method_10262", "getSquaredDistance", "m_123331_"), "(Lkh;)D");
    }

    static jdouble getSquaredDistance(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getSquaredDistance();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__getSquaredDistance() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "distToCenterSqr", "method_19770", "getSquaredDistance", "m_203193_"), "(Ljw;)D");
    }

    static jdouble _getSquaredDistance(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__getSquaredDistance();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getSquaredDistanceFromCenter() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "distToCenterSqr", "method_10268", "getSquaredDistanceFromCenter", "m_203198_"), "(DDD)D");
    }

    static jdouble getSquaredDistanceFromCenter(const jobject& obj, const jdouble& arg0, const jdouble& arg1, const jdouble& arg2) {
                
       const auto methodID = methodID_getSquaredDistanceFromCenter();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID___getSquaredDistance() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "distToLowCornerSqr", "method_40081", "getSquaredDistance", "m_203202_"), "(DDD)D");
    }

    static jdouble __getSquaredDistance(const jobject& obj, const jdouble& arg0, const jdouble& arg1, const jdouble& arg2) {
                
       const auto methodID = methodID___getSquaredDistance();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_getManhattanDistance() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("k", "distManhattan", "method_19455", "getManhattanDistance", "m_123333_"), "(Lkh;)I");
    }

    static jint getManhattanDistance(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getManhattanDistance();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getComponentAlongAxis() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "get", "method_30558", "getComponentAlongAxis", "m_123304_"), "(Lji$a;)I");
    }

    static jint getComponentAlongAxis(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getComponentAlongAxis();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_toShortString() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("x", "toShortString", "method_23854", "toShortString", "m_123344_"), "()Ljava/lang/String;");
    }

    static jobject toShortString(const jobject& obj) {
                
       const auto methodID = methodID_toShortString();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_UTIL_MATH_VEC3I_HPP