// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_UTIL_MATH_WORDPACKEDARRAY_HPP
#define NET_MINECRAFT_UTIL_MATH_WORDPACKEDARRAY_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.util.math.WordPackedArray
 * Remapped: baa
 */
namespace WordPackedArray {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("baa", "net/minecraft/util/datafix/PackedBitStorage", "net/minecraft/class_5298", "net/minecraft/util/math/WordPackedArray", "net/minecraft/src/C_212_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.util.math.WordPackedArray#BIT_TO_LONG_INDEX_SHIFT
    [[maybe_unused]] static jint get_field_BIT_TO_LONG_INDEX_SHIFT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "BIT_TO_LONG_SHIFT", "field_29862", "BIT_TO_LONG_INDEX_SHIFT", "f_145044_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.util.math.WordPackedArray#BIT_TO_LONG_INDEX_SHIFT
    [[maybe_unused]] static void set_field_BIT_TO_LONG_INDEX_SHIFT(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "BIT_TO_LONG_SHIFT", "field_29862", "BIT_TO_LONG_INDEX_SHIFT", "f_145044_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.util.math.WordPackedArray#array
    static jlong get_field_array(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "data", "field_24641", "array", "f_14550_"), "[J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.math.WordPackedArray#array
    static void set_field_array(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "data", "field_24641", "array", "f_14550_"), "[J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.math.WordPackedArray#unitSize
    static jint get_field_unitSize(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "bits", "field_24642", "unitSize", "f_14551_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.math.WordPackedArray#unitSize
    static void set_field_unitSize(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "bits", "field_24642", "unitSize", "f_14551_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.math.WordPackedArray#maxValue
    static jlong get_field_maxValue(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "mask", "field_24643", "maxValue", "f_14552_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.math.WordPackedArray#maxValue
    static void set_field_maxValue(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "mask", "field_24643", "maxValue", "f_14552_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.math.WordPackedArray#length
    static jint get_field_length(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "size", "field_24644", "length", "f_14553_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.math.WordPackedArray#length
    static void set_field_length(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "size", "field_24644", "length", "f_14553_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    static jmethodID methodID_set() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "set", "method_28153", "set", "m_14564_"), "(II)V");
    }

    static void set(const jobject& obj, const jint& arg0, const jint& arg1) {
                
       const auto methodID = methodID_set();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_get() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "get", "method_28152", "get", "m_14562_"), "(I)I");
    }

    static jint get(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_get();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getAlignedArray() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getRaw", "method_28151", "getAlignedArray", "m_14561_"), "()[J");
    }

    static jlong getAlignedArray(const jobject& obj) {
                
       const auto methodID = methodID_getAlignedArray();
       return MinecraftSDK::env->CallLongMethod(obj, methodID);
    };
    
    static jmethodID methodID_getUnitSize() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getBits", "method_28154", "getUnitSize", "m_14567_"), "()I");
    }

    static jint getUnitSize(const jobject& obj) {
                
       const auto methodID = methodID_getUnitSize();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_UTIL_MATH_WORDPACKEDARRAY_HPP