// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_UTIL_MATH_BLOCKPOS_HPP
#define NET_MINECRAFT_UTIL_MATH_BLOCKPOS_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.util.math.BlockPos
 * Remapped: jd
 */
namespace BlockPos {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("jd", "net/minecraft/core/BlockPos", "net/minecraft/class_2338", "net/minecraft/util/math/BlockPos", "net/minecraft/src/C_4675_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.util.math.BlockPos#CODEC
    [[maybe_unused]] static jobject get_field_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CODEC", "field_25064", "CODEC", "f_121852_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.math.BlockPos#CODEC
    [[maybe_unused]] static void set_field_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CODEC", "field_25064", "CODEC", "f_121852_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.math.BlockPos#PACKET_CODEC
    [[maybe_unused]] static jobject get_field_PACKET_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "STREAM_CODEC", "field_48404", "PACKET_CODEC", "f_316462_"), "Lyx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.math.BlockPos#PACKET_CODEC
    [[maybe_unused]] static void set_field_PACKET_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "STREAM_CODEC", "field_48404", "PACKET_CODEC", "f_316462_"), "Lyx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.util.math.BlockPos#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "LOGGER", "field_18789", "LOGGER", "f_121854_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.util.math.BlockPos#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "LOGGER", "field_18789", "LOGGER", "f_121854_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.math.BlockPos#ORIGIN
    [[maybe_unused]] static jobject get_field_ORIGIN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "ZERO", "field_10980", "ORIGIN", "f_121853_"), "Ljd;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.math.BlockPos#ORIGIN
    [[maybe_unused]] static void set_field_ORIGIN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "ZERO", "field_10980", "ORIGIN", "f_121853_"), "Ljd;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.util.math.BlockPos#SIZE_BITS_X
    [[maybe_unused]] static jint get_field_SIZE_BITS_X() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "PACKED_X_LENGTH", "field_10978", "SIZE_BITS_X", "f_121855_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.util.math.BlockPos#SIZE_BITS_X
    [[maybe_unused]] static void set_field_SIZE_BITS_X(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "PACKED_X_LENGTH", "field_10978", "SIZE_BITS_X", "f_121855_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.util.math.BlockPos#SIZE_BITS_Z
    [[maybe_unused]] static jint get_field_SIZE_BITS_Z() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "PACKED_Z_LENGTH", "field_10977", "SIZE_BITS_Z", "f_121856_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.util.math.BlockPos#SIZE_BITS_Z
    [[maybe_unused]] static void set_field_SIZE_BITS_Z(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "PACKED_Z_LENGTH", "field_10977", "SIZE_BITS_Z", "f_121856_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.math.BlockPos#SIZE_BITS_Y
    [[maybe_unused]] static jint get_field_SIZE_BITS_Y() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "PACKED_Y_LENGTH", "field_10975", "SIZE_BITS_Y", "f_121857_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.math.BlockPos#SIZE_BITS_Y
    [[maybe_unused]] static void set_field_SIZE_BITS_Y(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "PACKED_Y_LENGTH", "field_10975", "SIZE_BITS_Y", "f_121857_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.util.math.BlockPos#BITS_X
    [[maybe_unused]] static jlong get_field_BITS_X() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "PACKED_X_MASK", "field_10976", "BITS_X", "f_121858_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticLongField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.util.math.BlockPos#BITS_X
    [[maybe_unused]] static void set_field_BITS_X(const jlong &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "PACKED_X_MASK", "field_10976", "BITS_X", "f_121858_"), "J");
        return MinecraftSDK::env->SetStaticLongField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.util.math.BlockPos#BITS_Y
    [[maybe_unused]] static jlong get_field_BITS_Y() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "PACKED_Y_MASK", "field_10974", "BITS_Y", "f_121859_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticLongField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.util.math.BlockPos#BITS_Y
    [[maybe_unused]] static void set_field_BITS_Y(const jlong &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "PACKED_Y_MASK", "field_10974", "BITS_Y", "f_121859_"), "J");
        return MinecraftSDK::env->SetStaticLongField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.util.math.BlockPos#BITS_Z
    [[maybe_unused]] static jlong get_field_BITS_Z() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "PACKED_Z_MASK", "field_10973", "BITS_Z", "f_121860_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticLongField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.util.math.BlockPos#BITS_Z
    [[maybe_unused]] static void set_field_BITS_Z(const jlong &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "PACKED_Z_MASK", "field_10973", "BITS_Z", "f_121860_"), "J");
        return MinecraftSDK::env->SetStaticLongField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.util.math.BlockPos#field_33083
    [[maybe_unused]] static jint get_field_field_33083() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "Y_OFFSET", "field_33083", "field_33083", "f_175261_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.util.math.BlockPos#field_33083
    [[maybe_unused]] static void set_field_field_33083(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "Y_OFFSET", "field_33083", "field_33083", "f_175261_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.util.math.BlockPos#BIT_SHIFT_Z
    [[maybe_unused]] static jint get_field_BIT_SHIFT_Z() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "Z_OFFSET", "field_10983", "BIT_SHIFT_Z", "f_121861_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.util.math.BlockPos#BIT_SHIFT_Z
    [[maybe_unused]] static void set_field_BIT_SHIFT_Z(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "Z_OFFSET", "field_10983", "BIT_SHIFT_Z", "f_121861_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.util.math.BlockPos#BIT_SHIFT_X
    [[maybe_unused]] static jint get_field_BIT_SHIFT_X() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "X_OFFSET", "field_10981", "BIT_SHIFT_X", "f_121862_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.util.math.BlockPos#BIT_SHIFT_X
    [[maybe_unused]] static void set_field_BIT_SHIFT_X(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "X_OFFSET", "field_10981", "BIT_SHIFT_X", "f_121862_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    static jmethodID methodID_offset() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "offset", "method_10060", "offset", "m_121915_"), "(JLji;)J");
    }

    static jlong offset(const jlong& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_offset();
       return MinecraftSDK::env->CallStaticLongMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_add() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "offset", "method_10096", "add", "m_121910_"), "(JIII)J");
    }

    static jlong add(const jlong& arg0, const jint& arg1, const jint& arg2, const jint& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_add();
       return MinecraftSDK::env->CallStaticLongMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_unpackLongX() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getX", "method_10061", "unpackLongX", "m_121983_"), "(J)I");
    }

    static jint unpackLongX(const jlong& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_unpackLongX();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_unpackLongY() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "getY", "method_10071", "unpackLongY", "m_122008_"), "(J)I");
    }

    static jint unpackLongY(const jlong& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_unpackLongY();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_unpackLongZ() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "getZ", "method_10083", "unpackLongZ", "m_122015_"), "(J)I");
    }

    static jint unpackLongZ(const jlong& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_unpackLongZ();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_fromLong() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("d", "of", "method_10092", "fromLong", "m_122022_"), "(J)Ljd;");
    }

    static jobject fromLong(const jlong& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_fromLong();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_ofFloored() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "containing", "method_49637", "ofFloored", "m_274561_"), "(DDD)Ljd;");
    }

    static jobject ofFloored(const jdouble& arg0, const jdouble& arg1, const jdouble& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_ofFloored();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID__ofFloored() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "containing", "method_49638", "ofFloored", "m_274446_"), "(Ljw;)Ljd;");
    }

    static jobject _ofFloored(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID__ofFloored();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_min() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "min", "method_58249", "min", "m_319889_"), "(Ljd;Ljd;)Ljd;");
    }

    static jobject min(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_min();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_max() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "max", "method_58250", "max", "m_323725_"), "(Ljd;Ljd;)Ljd;");
    }

    static jobject max(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_max();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_asLong() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "asLong", "method_10063", "asLong", "m_121878_"), "()J");
    }

    static jlong asLong(const jobject& obj) {
                
       const auto methodID = methodID_asLong();
       return MinecraftSDK::env->CallLongMethod(obj, methodID);
    };
    
    static jmethodID methodID__asLong() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "asLong", "method_10064", "asLong", "m_121882_"), "(III)J");
    }

    static jlong _asLong(const jint& arg0, const jint& arg1, const jint& arg2) {
       const auto clazz = self();
       const auto methodID = methodID__asLong();
       return MinecraftSDK::env->CallStaticLongMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_removeChunkSectionLocalY() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("e", "getFlatIndex", "method_10091", "removeChunkSectionLocalY", "m_122027_"), "(J)J");
    }

    static jlong removeChunkSectionLocalY(const jlong& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_removeChunkSectionLocalY();
       return MinecraftSDK::env->CallStaticLongMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID__add() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "offset", "method_10069", "add", "m_7918_"), "(III)Ljd;");
    }

    static jobject _add(const jobject& obj, const jint& arg0, const jint& arg1, const jint& arg2) {
                
       const auto methodID = methodID__add();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_toCenterPos() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getCenter", "method_46558", "toCenterPos", "m_252807_"), "()Lexc;");
    }

    static jobject toCenterPos(const jobject& obj) {
                
       const auto methodID = methodID_toCenterPos();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_toBottomCenterPos() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getBottomCenter", "method_61082", "toBottomCenterPos", "m_338514_"), "()Lexc;");
    }

    static jobject toBottomCenterPos(const jobject& obj) {
                
       const auto methodID = methodID_toBottomCenterPos();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID___add() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "offset", "method_10081", "add", "m_121955_"), "(Lkh;)Ljd;");
    }

    static jobject __add(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID___add();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_subtract() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "subtract", "method_10059", "subtract", "m_121996_"), "(Lkh;)Ljd;");
    }

    static jobject subtract(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_subtract();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_multiply() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "multiply", "method_35830", "multiply", "m_142393_"), "(I)Ljd;");
    }

    static jobject multiply(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_multiply();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_up() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "above", "method_10084", "up", "m_7494_"), "()Ljd;");
    }

    static jobject up(const jobject& obj) {
                
       const auto methodID = methodID_up();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__up() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "above", "method_10086", "up", "m_6630_"), "(I)Ljd;");
    }

    static jobject _up(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID__up();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_down() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "below", "method_10074", "down", "m_7495_"), "()Ljd;");
    }

    static jobject down(const jobject& obj) {
                
       const auto methodID = methodID_down();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__down() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "below", "method_10087", "down", "m_6625_"), "(I)Ljd;");
    }

    static jobject _down(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID__down();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_north() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "north", "method_10095", "north", "m_122012_"), "()Ljd;");
    }

    static jobject north(const jobject& obj) {
                
       const auto methodID = methodID_north();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__north() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "north", "method_10076", "north", "m_122013_"), "(I)Ljd;");
    }

    static jobject _north(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID__north();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_south() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "south", "method_10072", "south", "m_122019_"), "()Ljd;");
    }

    static jobject south(const jobject& obj) {
                
       const auto methodID = methodID_south();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__south() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "south", "method_10077", "south", "m_122020_"), "(I)Ljd;");
    }

    static jobject _south(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID__south();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_west() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "west", "method_10067", "west", "m_122024_"), "()Ljd;");
    }

    static jobject west(const jobject& obj) {
                
       const auto methodID = methodID_west();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__west() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "west", "method_10088", "west", "m_122025_"), "(I)Ljd;");
    }

    static jobject _west(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID__west();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_east() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("i", "east", "method_10078", "east", "m_122029_"), "()Ljd;");
    }

    static jobject east(const jobject& obj) {
                
       const auto methodID = methodID_east();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__east() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "east", "method_10089", "east", "m_122030_"), "(I)Ljd;");
    }

    static jobject _east(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID__east();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__offset() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "relative", "method_10093", "offset", "m_121945_"), "(Lji;)Ljd;");
    }

    static jobject _offset(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__offset();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID___offset() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "relative", "method_10079", "offset", "m_5484_"), "(Lji;I)Ljd;");
    }

    static jobject __offset(const jobject& obj, const jobject& arg0, const jint& arg1) {
                
       const auto methodID = methodID___offset();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID____offset() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "relative", "method_30513", "offset", "m_5487_"), "(Lji$a;I)Ljd;");
    }

    static jobject ___offset(const jobject& obj, const jobject& arg0, const jint& arg1) {
                
       const auto methodID = methodID____offset();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_rotate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "rotate", "method_10070", "rotate", "m_7954_"), "(Ldmm;)Ljd;");
    }

    static jobject rotate(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_rotate();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_crossProduct() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "cross", "method_10075", "crossProduct", "m_7724_"), "(Lkh;)Ljd;");
    }

    static jobject crossProduct(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_crossProduct();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_withY() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "atY", "method_33096", "withY", "m_175288_"), "(I)Ljd;");
    }

    static jobject withY(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_withY();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_toImmutable() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("j", "immutable", "method_10062", "toImmutable", "m_7949_"), "()Ljd;");
    }

    static jobject toImmutable(const jobject& obj) {
                
       const auto methodID = methodID_toImmutable();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_mutableCopy() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("k", "mutable", "method_25503", "mutableCopy", "m_122032_"), "()Ljd$a;");
    }

    static jobject mutableCopy(const jobject& obj) {
                
       const auto methodID = methodID_mutableCopy();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_clampToWithin() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "clampLocationWithin", "method_60913", "clampToWithin", "m_340016_"), "(Lexc;)Lexc;");
    }

    static jobject clampToWithin(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_clampToWithin();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_iterateRandomly() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "randomInCube", "method_34848", "iterateRandomly", "m_235650_"), "(Layw;ILjd;I)Ljava/lang/Iterable;");
    }

    static jobject iterateRandomly(const jobject& arg0, const jint& arg1, const jobject& arg2, const jint& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_iterateRandomly();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_streamSouthEastSquare() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "squareOutSouthEast", "method_51686", "streamSouthEastSquare", "m_284476_"), "(Ljd;)Ljava/util/stream/Stream;");
    }

    static jobject streamSouthEastSquare(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_streamSouthEastSquare();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID__iterateRandomly() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "randomBetweenClosed", "method_27156", "iterateRandomly", "m_235641_"), "(Layw;IIIIIII)Ljava/lang/Iterable;");
    }

    static jobject _iterateRandomly(const jobject& arg0, const jint& arg1, const jint& arg2, const jint& arg3, const jint& arg4, const jint& arg5, const jint& arg6, const jint& arg7) {
       const auto clazz = self();
       const auto methodID = methodID__iterateRandomly();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
    };
    
    static jmethodID methodID_iterateOutwards() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "withinManhattan", "method_25996", "iterateOutwards", "m_121925_"), "(Ljd;III)Ljava/lang/Iterable;");
    }

    static jobject iterateOutwards(const jobject& arg0, const jint& arg1, const jint& arg2, const jint& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_iterateOutwards();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_findClosest() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "findClosestMatch", "method_25997", "findClosest", "m_121930_"), "(Ljd;IILjava/util/function/Predicate;)Ljava/util/Optional;");
    }

    static jobject findClosest(const jobject& arg0, const jint& arg1, const jint& arg2, const jobject& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_findClosest();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_streamOutwards() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "withinManhattanStream", "method_25998", "streamOutwards", "m_121985_"), "(Ljd;III)Ljava/util/stream/Stream;");
    }

    static jobject streamOutwards(const jobject& arg0, const jint& arg1, const jint& arg2, const jint& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_streamOutwards();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_iterate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "betweenClosed", "method_10097", "iterate", "m_121940_"), "(Ljd;Ljd;)Ljava/lang/Iterable;");
    }

    static jobject iterate(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_iterate();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_stream() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("d", "betweenClosedStream", "method_20437", "stream", "m_121990_"), "(Ljd;Ljd;)Ljava/util/stream/Stream;");
    }

    static jobject stream(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_stream();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__stream() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "betweenClosedStream", "method_23627", "stream", "m_121919_"), "(Lejj;)Ljava/util/stream/Stream;");
    }

    static jobject _stream(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID__stream();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID___stream() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "betweenClosedStream", "method_29715", "stream", "m_121921_"), "(Lewx;)Ljava/util/stream/Stream;");
    }

    static jobject __stream(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID___stream();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID____stream() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "betweenClosedStream", "method_17962", "stream", "m_121886_"), "(IIIIII)Ljava/util/stream/Stream;");
    }

    static jobject ___stream(const jint& arg0, const jint& arg1, const jint& arg2, const jint& arg3, const jint& arg4, const jint& arg5) {
       const auto clazz = self();
       const auto methodID = methodID____stream();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4, arg5);
    };
    
    static jmethodID methodID__iterate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "betweenClosed", "method_10094", "iterate", "m_121976_"), "(IIIIII)Ljava/lang/Iterable;");
    }

    static jobject _iterate(const jint& arg0, const jint& arg1, const jint& arg2, const jint& arg3, const jint& arg4, const jint& arg5) {
       const auto clazz = self();
       const auto methodID = methodID__iterate();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4, arg5);
    };
    
    static jmethodID methodID_iterateInSquare() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "spiralAround", "method_30512", "iterateInSquare", "m_121935_"), "(Ljd;ILji;Lji;)Ljava/lang/Iterable;");
    }

    static jobject iterateInSquare(const jobject& arg0, const jint& arg1, const jobject& arg2, const jobject& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_iterateInSquare();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_iterateRecursively() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "breadthFirstTraversal", "method_49925", "iterateRecursively", "m_276833_"), "(Ljd;IILjava/util/function/BiConsumer;Ljava/util/function/Predicate;)I");
    }

    static jint iterateRecursively(const jobject& arg0, const jint& arg1, const jint& arg2, const jobject& arg3, const jobject& arg4) {
       const auto clazz = self();
       const auto methodID = methodID_iterateRecursively();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
};

#endif // NET_MINECRAFT_UTIL_MATH_BLOCKPOS_HPP