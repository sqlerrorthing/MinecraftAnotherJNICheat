// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_UTIL_MATH_MATHCONSTANTS_HPP
#define NET_MINECRAFT_UTIL_MATH_MATHCONSTANTS_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.util.math.MathConstants
 * Remapped: b
 */
namespace MathConstants {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("b", "com/mojang/math/Constants", "net/minecraft/class_5973", "net/minecraft/util/math/MathConstants", "net/minecraft/src/C_140945_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.util.math.MathConstants#PI
    [[maybe_unused]] static jfloat get_field_PI() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "PI", "field_29658", "PI", "f_142767_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.math.MathConstants#PI
    [[maybe_unused]] static void set_field_PI(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "PI", "field_29658", "PI", "f_142767_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.math.MathConstants#DEGREES_PER_RADIAN
    [[maybe_unused]] static jfloat get_field_DEGREES_PER_RADIAN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "RAD_TO_DEG", "field_29659", "DEGREES_PER_RADIAN", "f_142768_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.math.MathConstants#DEGREES_PER_RADIAN
    [[maybe_unused]] static void set_field_DEGREES_PER_RADIAN(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "RAD_TO_DEG", "field_29659", "DEGREES_PER_RADIAN", "f_142768_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.math.MathConstants#RADIANS_PER_DEGREE
    [[maybe_unused]] static jfloat get_field_RADIANS_PER_DEGREE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "DEG_TO_RAD", "field_29660", "RADIANS_PER_DEGREE", "f_142769_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.math.MathConstants#RADIANS_PER_DEGREE
    [[maybe_unused]] static void set_field_RADIANS_PER_DEGREE(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "DEG_TO_RAD", "field_29660", "RADIANS_PER_DEGREE", "f_142769_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.math.MathConstants#EPSILON
    [[maybe_unused]] static jfloat get_field_EPSILON() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "EPSILON", "field_29661", "EPSILON", "f_142770_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticFloatField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.math.MathConstants#EPSILON
    [[maybe_unused]] static void set_field_EPSILON(const jfloat &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "EPSILON", "field_29661", "EPSILON", "f_142770_"), "F");
        return MinecraftSDK::env->SetStaticFloatField(clazz, fieldID, value);
    };

};

#endif // NET_MINECRAFT_UTIL_MATH_MATHCONSTANTS_HPP