// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_UTIL_ACTIONRESULT_HPP
#define NET_MINECRAFT_UTIL_ACTIONRESULT_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.util.ActionResult
 * Remapped: bqr
 */
namespace ActionResult {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("bqr", "net/minecraft/world/InteractionResult", "net/minecraft/class_1269", "net/minecraft/util/ActionResult", "net/minecraft/src/C_471_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.util.ActionResult#SUCCESS
    [[maybe_unused]] static jobject get_field_SUCCESS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "SUCCESS", "field_5812", "SUCCESS", "SUCCESS"), "Lbqr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.ActionResult#SUCCESS
    [[maybe_unused]] static void set_field_SUCCESS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "SUCCESS", "field_5812", "SUCCESS", "SUCCESS"), "Lbqr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.ActionResult#SUCCESS_NO_ITEM_USED
    [[maybe_unused]] static jobject get_field_SUCCESS_NO_ITEM_USED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "SUCCESS_NO_ITEM_USED", "field_51370", "SUCCESS_NO_ITEM_USED", "SUCCESS_NO_ITEM_USED"), "Lbqr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.ActionResult#SUCCESS_NO_ITEM_USED
    [[maybe_unused]] static void set_field_SUCCESS_NO_ITEM_USED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "SUCCESS_NO_ITEM_USED", "field_51370", "SUCCESS_NO_ITEM_USED", "SUCCESS_NO_ITEM_USED"), "Lbqr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.ActionResult#CONSUME
    [[maybe_unused]] static jobject get_field_CONSUME() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "CONSUME", "field_21466", "CONSUME", "CONSUME"), "Lbqr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.ActionResult#CONSUME
    [[maybe_unused]] static void set_field_CONSUME(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "CONSUME", "field_21466", "CONSUME", "CONSUME"), "Lbqr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.ActionResult#CONSUME_PARTIAL
    [[maybe_unused]] static jobject get_field_CONSUME_PARTIAL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "CONSUME_PARTIAL", "field_33562", "CONSUME_PARTIAL", "CONSUME_PARTIAL"), "Lbqr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.ActionResult#CONSUME_PARTIAL
    [[maybe_unused]] static void set_field_CONSUME_PARTIAL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "CONSUME_PARTIAL", "field_33562", "CONSUME_PARTIAL", "CONSUME_PARTIAL"), "Lbqr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.ActionResult#PASS
    [[maybe_unused]] static jobject get_field_PASS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "PASS", "field_5811", "PASS", "PASS"), "Lbqr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.ActionResult#PASS
    [[maybe_unused]] static void set_field_PASS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "PASS", "field_5811", "PASS", "PASS"), "Lbqr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.ActionResult#FAIL
    [[maybe_unused]] static jobject get_field_FAIL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "FAIL", "field_5814", "FAIL", "FAIL"), "Lbqr;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.ActionResult#FAIL
    [[maybe_unused]] static void set_field_FAIL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "FAIL", "field_5814", "FAIL", "FAIL"), "Lbqr;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_values() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("values", "values", "values", "values", "values"), "()[Lbqr;");
    }

    static jobject values() {
       const auto clazz = self();
       const auto methodID = methodID_values();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_valueOf() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("valueOf", "valueOf", "valueOf", "valueOf", "valueOf"), "(Ljava/lang/String;)Lbqr;");
    }

    static jobject valueOf(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_valueOf();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_isAccepted() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "consumesAction", "method_23665", "isAccepted", "m_19077_"), "()Z");
    }

    static jboolean isAccepted(const jobject& obj) {
                
       const auto methodID = methodID_isAccepted();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_shouldSwingHand() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "shouldSwing", "method_23666", "shouldSwingHand", "m_19080_"), "()Z");
    }

    static jboolean shouldSwingHand(const jobject& obj) {
                
       const auto methodID = methodID_shouldSwingHand();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_shouldIncrementStat() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "indicateItemUse", "method_36360", "shouldIncrementStat", "m_146666_"), "()Z");
    }

    static jboolean shouldIncrementStat(const jobject& obj) {
                
       const auto methodID = methodID_shouldIncrementStat();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_success() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "sidedSuccess", "method_29236", "success", "m_19078_"), "(Z)Lbqr;");
    }

    static jobject success(const jboolean& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_success();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_UTIL_ACTIONRESULT_HPP