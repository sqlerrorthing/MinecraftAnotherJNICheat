// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_UTIL_PROFILING_JFR_EVENT_SERVERTICKTIMEEVENT_HPP
#define NET_MINECRAFT_UTIL_PROFILING_JFR_EVENT_SERVERTICKTIMEEVENT_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.util.profiling.jfr.event.ServerTickTimeEvent
 * Remapped: net/minecraft/util/profiling/jfr/event/ServerTickTimeEvent
 */
namespace ServerTickTimeEvent {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("net/minecraft/util/profiling/jfr/event/ServerTickTimeEvent", "net/minecraft/util/profiling/jfr/event/ServerTickTimeEvent", "net/minecraft/util/profiling/jfr/event/ServerTickTimeEvent", "net/minecraft/util/profiling/jfr/event/ServerTickTimeEvent", "net/minecraft/util/profiling/jfr/event/ServerTickTimeEvent"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.util.profiling.jfr.event.ServerTickTimeEvent#EVENT_NAME
    [[maybe_unused]] static jobject get_field_EVENT_NAME() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("EVENT_NAME", "EVENT_NAME", "", "", "EVENT_NAME"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.profiling.jfr.event.ServerTickTimeEvent#EVENT_NAME
    [[maybe_unused]] static void set_field_EVENT_NAME(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("EVENT_NAME", "EVENT_NAME", "", "", "EVENT_NAME"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.profiling.jfr.event.ServerTickTimeEvent#TYPE
    [[maybe_unused]] static jobject get_field_TYPE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("TYPE", "TYPE", "", "", "TYPE"), "Ljdk/jfr/EventType;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.profiling.jfr.event.ServerTickTimeEvent#TYPE
    [[maybe_unused]] static void set_field_TYPE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("TYPE", "TYPE", "", "", "TYPE"), "Ljdk/jfr/EventType;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for public field net.minecraft.util.profiling.jfr.event.ServerTickTimeEvent#averageTickDurationNanos
    static jlong get_field_averageTickDurationNanos(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("averageTickDurationNanos", "averageTickDurationNanos", "", "", "averageTickDurationNanos"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static public field net.minecraft.util.profiling.jfr.event.ServerTickTimeEvent#averageTickDurationNanos
    static void set_field_averageTickDurationNanos(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("averageTickDurationNanos", "averageTickDurationNanos", "", "", "averageTickDurationNanos"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

};

#endif // NET_MINECRAFT_UTIL_PROFILING_JFR_EVENT_SERVERTICKTIMEEVENT_HPP