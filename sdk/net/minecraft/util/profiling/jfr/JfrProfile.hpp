// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_UTIL_PROFILING_JFR_JFRPROFILE_HPP
#define NET_MINECRAFT_UTIL_PROFILING_JFR_JFRPROFILE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.util.profiling.jfr.JfrProfile
 * Remapped: bnv
 */
namespace JfrProfile {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("bnv", "net/minecraft/util/profiling/jfr/parse/JfrStatsResult", "net/minecraft/class_6517", "net/minecraft/util/profiling/jfr/JfrProfile", "net/minecraft/src/C_182821_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.util.profiling.jfr.JfrProfile#startTime
    static jobject get_field_startTime(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "recordingStarted", "comp_3", "startTime", "f_185478_"), "Ljava/time/Instant;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.profiling.jfr.JfrProfile#startTime
    static void set_field_startTime(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "recordingStarted", "comp_3", "startTime", "f_185478_"), "Ljava/time/Instant;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.profiling.jfr.JfrProfile#endTime
    static jobject get_field_endTime(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "recordingEnded", "comp_4", "endTime", "f_185479_"), "Ljava/time/Instant;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.profiling.jfr.JfrProfile#endTime
    static void set_field_endTime(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "recordingEnded", "comp_4", "endTime", "f_185479_"), "Ljava/time/Instant;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.profiling.jfr.JfrProfile#duration
    static jobject get_field_duration(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "recordingDuration", "comp_5", "duration", "f_185480_"), "Ljava/time/Duration;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.profiling.jfr.JfrProfile#duration
    static void set_field_duration(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "recordingDuration", "comp_5", "duration", "f_185480_"), "Ljava/time/Duration;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.profiling.jfr.JfrProfile#worldGenDuration
    static jobject get_field_worldGenDuration(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "worldCreationDuration", "comp_6", "worldGenDuration", "f_185481_"), "Ljava/time/Duration;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.profiling.jfr.JfrProfile#worldGenDuration
    static void set_field_worldGenDuration(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "worldCreationDuration", "comp_6", "worldGenDuration", "f_185481_"), "Ljava/time/Duration;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.profiling.jfr.JfrProfile#serverTickTimeSamples
    static jobject get_field_serverTickTimeSamples(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "tickTimes", "comp_7", "serverTickTimeSamples", "f_185482_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.profiling.jfr.JfrProfile#serverTickTimeSamples
    static void set_field_serverTickTimeSamples(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "tickTimes", "comp_7", "serverTickTimeSamples", "f_185482_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.profiling.jfr.JfrProfile#cpuLoadSamples
    static jobject get_field_cpuLoadSamples(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "cpuLoadStats", "comp_8", "cpuLoadSamples", "f_185483_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.profiling.jfr.JfrProfile#cpuLoadSamples
    static void set_field_cpuLoadSamples(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "cpuLoadStats", "comp_8", "cpuLoadSamples", "f_185483_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.profiling.jfr.JfrProfile#gcHeapSummaryStatistics
    static jobject get_field_gcHeapSummaryStatistics(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "heapSummary", "comp_9", "gcHeapSummaryStatistics", "f_185484_"), "Lbod$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.profiling.jfr.JfrProfile#gcHeapSummaryStatistics
    static void set_field_gcHeapSummaryStatistics(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("g", "heapSummary", "comp_9", "gcHeapSummaryStatistics", "f_185484_"), "Lbod$a;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.profiling.jfr.JfrProfile#threadAllocationMap
    static jobject get_field_threadAllocationMap(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "threadAllocationSummary", "comp_10", "threadAllocationMap", "f_185485_"), "Lbog$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.profiling.jfr.JfrProfile#threadAllocationMap
    static void set_field_threadAllocationMap(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "threadAllocationSummary", "comp_10", "threadAllocationMap", "f_185485_"), "Lbog$a;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.profiling.jfr.JfrProfile#packetReadStatistics
    static jobject get_field_packetReadStatistics(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "receivedPacketsSummary", "comp_11", "packetReadStatistics", "f_185486_"), "Lboe;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.profiling.jfr.JfrProfile#packetReadStatistics
    static void set_field_packetReadStatistics(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "receivedPacketsSummary", "comp_11", "packetReadStatistics", "f_185486_"), "Lboe;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.profiling.jfr.JfrProfile#packetSentStatistics
    static jobject get_field_packetSentStatistics(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "sentPacketsSummary", "comp_12", "packetSentStatistics", "f_185487_"), "Lboe;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.profiling.jfr.JfrProfile#packetSentStatistics
    static void set_field_packetSentStatistics(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("j", "sentPacketsSummary", "comp_12", "packetSentStatistics", "f_185487_"), "Lboe;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.profiling.jfr.JfrProfile#writtenChunks
    static jobject get_field_writtenChunks(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "writtenChunks", "comp_2339", "writtenChunks", "f_314724_"), "Lboe;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.profiling.jfr.JfrProfile#writtenChunks
    static void set_field_writtenChunks(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("k", "writtenChunks", "comp_2339", "writtenChunks", "f_314724_"), "Lboe;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.profiling.jfr.JfrProfile#readChunks
    static jobject get_field_readChunks(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "readChunks", "comp_2340", "readChunks", "f_316428_"), "Lboe;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.profiling.jfr.JfrProfile#readChunks
    static void set_field_readChunks(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "readChunks", "comp_2340", "readChunks", "f_316428_"), "Lboe;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.profiling.jfr.JfrProfile#fileWriteStatistics
    static jobject get_field_fileWriteStatistics(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "fileWrites", "comp_13", "fileWriteStatistics", "f_185488_"), "Lboc$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.profiling.jfr.JfrProfile#fileWriteStatistics
    static void set_field_fileWriteStatistics(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "fileWrites", "comp_13", "fileWriteStatistics", "f_185488_"), "Lboc$a;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.profiling.jfr.JfrProfile#fileReadStatistics
    static jobject get_field_fileReadStatistics(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "fileReads", "comp_14", "fileReadStatistics", "f_185489_"), "Lboc$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.profiling.jfr.JfrProfile#fileReadStatistics
    static void set_field_fileReadStatistics(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "fileReads", "comp_14", "fileReadStatistics", "f_185489_"), "Lboc$a;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.profiling.jfr.JfrProfile#chunkGenerationSamples
    static jobject get_field_chunkGenerationSamples(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("o", "chunkGenStats", "comp_15", "chunkGenerationSamples", "f_185490_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.profiling.jfr.JfrProfile#chunkGenerationSamples
    static void set_field_chunkGenerationSamples(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("o", "chunkGenStats", "comp_15", "chunkGenerationSamples", "f_185490_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_getChunkGenerationSampleStatistics() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "chunkGenSummary", "method_38006", "getChunkGenerationSampleStatistics", "m_185505_"), "()Ljava/util/List;");
    }

    static jobject getChunkGenerationSampleStatistics(const jobject& obj) {
                
       const auto methodID = methodID_getChunkGenerationSampleStatistics();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_toJson() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "asJson", "method_38009", "toJson", "m_185510_"), "()Ljava/lang/String;");
    }

    static jobject toJson(const jobject& obj) {
                
       const auto methodID = methodID_toJson();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__startTime() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "recordingStarted", "comp_3", "startTime", "f_185478_"), "()Ljava/time/Instant;");
    }

    static jobject _startTime(const jobject& obj) {
                
       const auto methodID = methodID__startTime();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__endTime() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "recordingEnded", "comp_4", "endTime", "f_185479_"), "()Ljava/time/Instant;");
    }

    static jobject _endTime(const jobject& obj) {
                
       const auto methodID = methodID__endTime();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__duration() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "recordingDuration", "comp_5", "duration", "f_185480_"), "()Ljava/time/Duration;");
    }

    static jobject _duration(const jobject& obj) {
                
       const auto methodID = methodID__duration();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__worldGenDuration() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "worldCreationDuration", "comp_6", "worldGenDuration", "f_185481_"), "()Ljava/time/Duration;");
    }

    static jobject _worldGenDuration(const jobject& obj) {
                
       const auto methodID = methodID__worldGenDuration();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__serverTickTimeSamples() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "tickTimes", "comp_7", "serverTickTimeSamples", "f_185482_"), "()Ljava/util/List;");
    }

    static jobject _serverTickTimeSamples(const jobject& obj) {
                
       const auto methodID = methodID__serverTickTimeSamples();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__cpuLoadSamples() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "cpuLoadStats", "comp_8", "cpuLoadSamples", "f_185483_"), "()Ljava/util/List;");
    }

    static jobject _cpuLoadSamples(const jobject& obj) {
                
       const auto methodID = methodID__cpuLoadSamples();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__gcHeapSummaryStatistics() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("i", "heapSummary", "comp_9", "gcHeapSummaryStatistics", "f_185484_"), "()Lbod$a;");
    }

    static jobject _gcHeapSummaryStatistics(const jobject& obj) {
                
       const auto methodID = methodID__gcHeapSummaryStatistics();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__threadAllocationMap() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("j", "threadAllocationSummary", "comp_10", "threadAllocationMap", "f_185485_"), "()Lbog$a;");
    }

    static jobject _threadAllocationMap(const jobject& obj) {
                
       const auto methodID = methodID__threadAllocationMap();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__packetReadStatistics() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("k", "receivedPacketsSummary", "comp_11", "packetReadStatistics", "f_185486_"), "()Lboe;");
    }

    static jobject _packetReadStatistics(const jobject& obj) {
                
       const auto methodID = methodID__packetReadStatistics();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__packetSentStatistics() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("l", "sentPacketsSummary", "comp_12", "packetSentStatistics", "f_185487_"), "()Lboe;");
    }

    static jobject _packetSentStatistics(const jobject& obj) {
                
       const auto methodID = methodID__packetSentStatistics();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__writtenChunks() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("m", "writtenChunks", "comp_2339", "writtenChunks", "f_314724_"), "()Lboe;");
    }

    static jobject _writtenChunks(const jobject& obj) {
                
       const auto methodID = methodID__writtenChunks();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__readChunks() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("n", "readChunks", "comp_2340", "readChunks", "f_316428_"), "()Lboe;");
    }

    static jobject _readChunks(const jobject& obj) {
                
       const auto methodID = methodID__readChunks();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__fileWriteStatistics() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("o", "fileWrites", "comp_13", "fileWriteStatistics", "f_185488_"), "()Lboc$a;");
    }

    static jobject _fileWriteStatistics(const jobject& obj) {
                
       const auto methodID = methodID__fileWriteStatistics();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__fileReadStatistics() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("p", "fileReads", "comp_14", "fileReadStatistics", "f_185489_"), "()Lboc$a;");
    }

    static jobject _fileReadStatistics(const jobject& obj) {
                
       const auto methodID = methodID__fileReadStatistics();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__chunkGenerationSamples() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("q", "chunkGenStats", "comp_15", "chunkGenerationSamples", "f_185490_"), "()Ljava/util/List;");
    }

    static jobject _chunkGenerationSamples(const jobject& obj) {
                
       const auto methodID = methodID__chunkGenerationSamples();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_UTIL_PROFILING_JFR_JFRPROFILE_HPP