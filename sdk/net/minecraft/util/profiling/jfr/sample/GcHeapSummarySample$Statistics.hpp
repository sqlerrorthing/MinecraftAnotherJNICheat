// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_UTIL_PROFILING_JFR_SAMPLE_GCHEAPSUMMARYSAMPLE$STATISTICS_HPP
#define NET_MINECRAFT_UTIL_PROFILING_JFR_SAMPLE_GCHEAPSUMMARYSAMPLE$STATISTICS_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.util.profiling.jfr.sample.GcHeapSummarySample$Statistics
 * Remapped: bod$a
 */
namespace GcHeapSummarySample$Statistics {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("bod$a", "net/minecraft/util/profiling/jfr/stats/GcHeapStat$Summary", "net/minecraft/class_6525$class_6526", "net/minecraft/util/profiling/jfr/sample/GcHeapSummarySample$Statistics", "net/minecraft/src/C_182829_$C_182830_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.util.profiling.jfr.sample.GcHeapSummarySample$Statistics#duration
    static jobject get_field_duration(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "duration", "comp_37", "duration", "f_185705_"), "Ljava/time/Duration;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.profiling.jfr.sample.GcHeapSummarySample$Statistics#duration
    static void set_field_duration(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "duration", "comp_37", "duration", "f_185705_"), "Ljava/time/Duration;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.profiling.jfr.sample.GcHeapSummarySample$Statistics#gcDuration
    static jobject get_field_gcDuration(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "gcTotalDuration", "comp_38", "gcDuration", "f_185706_"), "Ljava/time/Duration;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.profiling.jfr.sample.GcHeapSummarySample$Statistics#gcDuration
    static void set_field_gcDuration(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "gcTotalDuration", "comp_38", "gcDuration", "f_185706_"), "Ljava/time/Duration;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.profiling.jfr.sample.GcHeapSummarySample$Statistics#count
    static jint get_field_count(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "totalGCs", "comp_39", "count", "f_185707_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.profiling.jfr.sample.GcHeapSummarySample$Statistics#count
    static void set_field_count(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "totalGCs", "comp_39", "count", "f_185707_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.profiling.jfr.sample.GcHeapSummarySample$Statistics#allocatedBytesPerSecond
    static jdouble get_field_allocatedBytesPerSecond(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "allocationRateBytesPerSecond", "comp_40", "allocatedBytesPerSecond", "f_185708_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetDoubleField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.profiling.jfr.sample.GcHeapSummarySample$Statistics#allocatedBytesPerSecond
    static void set_field_allocatedBytesPerSecond(const jobject &obj, const jdouble &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "allocationRateBytesPerSecond", "comp_40", "allocatedBytesPerSecond", "f_185708_"), "D");
        return MinecraftSDK::env->SetDoubleField(obj, fieldID, value);
    };

    static jmethodID methodID_getGcDurationRatio() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "gcOverHead", "method_38043", "getGcDurationRatio", "m_185714_"), "()F");
    }

    static jfloat getGcDurationRatio(const jobject& obj) {
                
       const auto methodID = methodID_getGcDurationRatio();
       return MinecraftSDK::env->CallFloatMethod(obj, methodID);
    };
    
    static jmethodID methodID__duration() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "duration", "comp_37", "duration", "f_185705_"), "()Ljava/time/Duration;");
    }

    static jobject _duration(const jobject& obj) {
                
       const auto methodID = methodID__duration();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__gcDuration() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "gcTotalDuration", "comp_38", "gcDuration", "f_185706_"), "()Ljava/time/Duration;");
    }

    static jobject _gcDuration(const jobject& obj) {
                
       const auto methodID = methodID__gcDuration();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__count() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "totalGCs", "comp_39", "count", "f_185707_"), "()I");
    }

    static jint _count(const jobject& obj) {
                
       const auto methodID = methodID__count();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID__allocatedBytesPerSecond() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "allocationRateBytesPerSecond", "comp_40", "allocatedBytesPerSecond", "f_185708_"), "()D");
    }

    static jdouble _allocatedBytesPerSecond(const jobject& obj) {
                
       const auto methodID = methodID__allocatedBytesPerSecond();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_UTIL_PROFILING_JFR_SAMPLE_GCHEAPSUMMARYSAMPLE$STATISTICS_HPP