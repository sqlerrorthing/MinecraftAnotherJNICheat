// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_UTIL_PROFILING_JFR_SAMPLE_LONGRUNNINGSAMPLESTATISTICS_HPP
#define NET_MINECRAFT_UTIL_PROFILING_JFR_SAMPLE_LONGRUNNINGSAMPLESTATISTICS_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.util.profiling.jfr.sample.LongRunningSampleStatistics
 * Remapped: boj
 */
namespace LongRunningSampleStatistics {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("boj", "net/minecraft/util/profiling/jfr/stats/TimedStatSummary", "net/minecraft/class_6535", "net/minecraft/util/profiling/jfr/sample/LongRunningSampleStatistics", "net/minecraft/src/C_182840_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.util.profiling.jfr.sample.LongRunningSampleStatistics#fastestSample
    static jobject get_field_fastestSample(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "fastest", "comp_54", "fastestSample", "f_185833_"), "Lboi;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.profiling.jfr.sample.LongRunningSampleStatistics#fastestSample
    static void set_field_fastestSample(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "fastest", "comp_54", "fastestSample", "f_185833_"), "Lboi;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.profiling.jfr.sample.LongRunningSampleStatistics#slowestSample
    static jobject get_field_slowestSample(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "slowest", "comp_55", "slowestSample", "f_185834_"), "Lboi;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.profiling.jfr.sample.LongRunningSampleStatistics#slowestSample
    static void set_field_slowestSample(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "slowest", "comp_55", "slowestSample", "f_185834_"), "Lboi;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.profiling.jfr.sample.LongRunningSampleStatistics#secondSlowestSample
    static jobject get_field_secondSlowestSample(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "secondSlowest", "comp_56", "secondSlowestSample", "f_185835_"), "Lboi;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.profiling.jfr.sample.LongRunningSampleStatistics#secondSlowestSample
    static void set_field_secondSlowestSample(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "secondSlowest", "comp_56", "secondSlowestSample", "f_185835_"), "Lboi;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.profiling.jfr.sample.LongRunningSampleStatistics#count
    static jint get_field_count(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "count", "comp_57", "count", "f_185836_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.profiling.jfr.sample.LongRunningSampleStatistics#count
    static void set_field_count(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "count", "comp_57", "count", "f_185836_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.profiling.jfr.sample.LongRunningSampleStatistics#quantiles
    static jobject get_field_quantiles(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "percentilesNanos", "comp_58", "quantiles", "f_185837_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.profiling.jfr.sample.LongRunningSampleStatistics#quantiles
    static void set_field_quantiles(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "percentilesNanos", "comp_58", "quantiles", "f_185837_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.profiling.jfr.sample.LongRunningSampleStatistics#totalDuration
    static jobject get_field_totalDuration(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "totalDuration", "comp_59", "totalDuration", "f_185838_"), "Ljava/time/Duration;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.profiling.jfr.sample.LongRunningSampleStatistics#totalDuration
    static void set_field_totalDuration(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "totalDuration", "comp_59", "totalDuration", "f_185838_"), "Ljava/time/Duration;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_fromSamples() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "summary", "method_38060", "fromSamples", "m_185849_"), "(Ljava/util/List;)Lboj;");
    }

    static jobject fromSamples(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_fromSamples();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID__fastestSample() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "fastest", "comp_54", "fastestSample", "f_185833_"), "()Lboi;");
    }

    static jobject _fastestSample(const jobject& obj) {
                
       const auto methodID = methodID__fastestSample();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__slowestSample() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "slowest", "comp_55", "slowestSample", "f_185834_"), "()Lboi;");
    }

    static jobject _slowestSample(const jobject& obj) {
                
       const auto methodID = methodID__slowestSample();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__secondSlowestSample() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "secondSlowest", "comp_56", "secondSlowestSample", "f_185835_"), "()Lboi;");
    }

    static jobject _secondSlowestSample(const jobject& obj) {
                
       const auto methodID = methodID__secondSlowestSample();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__count() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "count", "comp_57", "count", "f_185836_"), "()I");
    }

    static jint _count(const jobject& obj) {
                
       const auto methodID = methodID__count();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID__quantiles() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "percentilesNanos", "comp_58", "quantiles", "f_185837_"), "()Ljava/util/Map;");
    }

    static jobject _quantiles(const jobject& obj) {
                
       const auto methodID = methodID__quantiles();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__totalDuration() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "totalDuration", "comp_59", "totalDuration", "f_185838_"), "()Ljava/time/Duration;");
    }

    static jobject _totalDuration(const jobject& obj) {
                
       const auto methodID = methodID__totalDuration();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_UTIL_PROFILING_JFR_SAMPLE_LONGRUNNINGSAMPLESTATISTICS_HPP