// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_UTIL_PROFILING_JFR_SAMPLE_CPULOADSAMPLE_HPP
#define NET_MINECRAFT_UTIL_PROFILING_JFR_SAMPLE_CPULOADSAMPLE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.util.profiling.jfr.sample.CpuLoadSample
 * Remapped: bob
 */
namespace CpuLoadSample {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("bob", "net/minecraft/util/profiling/jfr/stats/CpuLoadStat", "net/minecraft/class_6522", "net/minecraft/util/profiling/jfr/sample/CpuLoadSample", "net/minecraft/src/C_182826_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.util.profiling.jfr.sample.CpuLoadSample#jvm
    static jdouble get_field_jvm(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "jvm", "comp_22", "jvm", "f_185614_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetDoubleField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.profiling.jfr.sample.CpuLoadSample#jvm
    static void set_field_jvm(const jobject &obj, const jdouble &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "jvm", "comp_22", "jvm", "f_185614_"), "D");
        return MinecraftSDK::env->SetDoubleField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.profiling.jfr.sample.CpuLoadSample#userJvm
    static jdouble get_field_userJvm(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "userJvm", "comp_23", "userJvm", "f_185615_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetDoubleField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.profiling.jfr.sample.CpuLoadSample#userJvm
    static void set_field_userJvm(const jobject &obj, const jdouble &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "userJvm", "comp_23", "userJvm", "f_185615_"), "D");
        return MinecraftSDK::env->SetDoubleField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.profiling.jfr.sample.CpuLoadSample#system
    static jdouble get_field_system(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "system", "comp_24", "system", "f_185616_"), "D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetDoubleField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.profiling.jfr.sample.CpuLoadSample#system
    static void set_field_system(const jobject &obj, const jdouble &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "system", "comp_24", "system", "f_185616_"), "D");
        return MinecraftSDK::env->SetDoubleField(obj, fieldID, value);
    };

    static jmethodID methodID_fromEvent() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "from", "method_38032", "fromEvent", "m_185622_"), "(Ljdk/jfr/consumer/RecordedEvent;)Lbob;");
    }

    static jobject fromEvent(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_fromEvent();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID__jvm() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "jvm", "comp_22", "jvm", "f_185614_"), "()D");
    }

    static jdouble _jvm(const jobject& obj) {
                
       const auto methodID = methodID__jvm();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID);
    };
    
    static jmethodID methodID__userJvm() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "userJvm", "comp_23", "userJvm", "f_185615_"), "()D");
    }

    static jdouble _userJvm(const jobject& obj) {
                
       const auto methodID = methodID__userJvm();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID);
    };
    
    static jmethodID methodID__system() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "system", "comp_24", "system", "f_185616_"), "()D");
    }

    static jdouble _system(const jobject& obj) {
                
       const auto methodID = methodID__system();
       return MinecraftSDK::env->CallDoubleMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_UTIL_PROFILING_JFR_SAMPLE_CPULOADSAMPLE_HPP