// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_UTIL_PROFILING_JFR_JFRLISTENER_HPP
#define NET_MINECRAFT_UTIL_PROFILING_JFR_JFRLISTENER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.util.profiling.jfr.JfrListener
 * Remapped: bnn
 */
namespace JfrListener {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("bnn", "net/minecraft/util/profiling/jfr/SummaryReporter", "net/minecraft/class_6507", "net/minecraft/util/profiling/jfr/JfrListener", "net/minecraft/src/C_182811_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.util.profiling.jfr.JfrListener#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LOGGER", "field_34926", "LOGGER", "f_185394_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.util.profiling.jfr.JfrListener#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LOGGER", "field_34926", "LOGGER", "f_185394_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.util.profiling.jfr.JfrListener#stopCallback
    static jobject get_field_stopCallback(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "onDeregistration", "field_34417", "stopCallback", "f_185395_"), "Ljava/lang/Runnable;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.profiling.jfr.JfrListener#stopCallback
    static void set_field_stopCallback(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "onDeregistration", "field_34417", "stopCallback", "f_185395_"), "Ljava/lang/Runnable;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_stop() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "recordingStopped", "method_38663", "stop", "m_185400_"), "(Ljava/nio/file/Path;)V");
    }

    static void stop(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_stop();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_log() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "infoWithFallback", "method_37991", "log", "m_201932_"), "(Ljava/util/function/Supplier;)V");
    }

    static void log(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_log();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_warn() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "warnWithFallback", "method_37992", "warn", "m_201934_"), "(Ljava/util/function/Supplier;Ljava/lang/Throwable;)V");
    }

    static void warn(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_warn();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_UTIL_PROFILING_JFR_JFRLISTENER_HPP