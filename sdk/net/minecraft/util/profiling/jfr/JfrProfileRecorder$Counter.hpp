// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_UTIL_PROFILING_JFR_JFRPROFILERECORDER$COUNTER_HPP
#define NET_MINECRAFT_UTIL_PROFILING_JFR_JFRPROFILERECORDER$COUNTER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.util.profiling.jfr.JfrProfileRecorder$Counter
 * Remapped: bnu$a
 */
namespace JfrProfileRecorder$Counter {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("bnu$a", "net/minecraft/util/profiling/jfr/parse/JfrStatsParser$MutableCountAndSize", "net/minecraft/class_6516$class_6766", "net/minecraft/util/profiling/jfr/JfrProfileRecorder$Counter", "net/minecraft/src/C_182818_$C_182820_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.util.profiling.jfr.JfrProfileRecorder$Counter#totalCount
    static jlong get_field_totalCount(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "count", "field_35581", "totalCount", "f_185472_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.profiling.jfr.JfrProfileRecorder$Counter#totalCount
    static void set_field_totalCount(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "count", "field_35581", "totalCount", "f_185472_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.profiling.jfr.JfrProfileRecorder$Counter#totalBytes
    static jlong get_field_totalBytes(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "totalSize", "field_35582", "totalBytes", "f_185473_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetLongField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.profiling.jfr.JfrProfileRecorder$Counter#totalBytes
    static void set_field_totalBytes(const jobject &obj, const jlong &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "totalSize", "field_35582", "totalBytes", "f_185473_"), "J");
        return MinecraftSDK::env->SetLongField(obj, fieldID, value);
    };

    static jmethodID methodID_add() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "increment", "method_39437", "add", "m_185476_"), "(I)V");
    }

    static void add(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_add();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_toStatistics() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "toCountAndSize", "method_39436", "toStatistics", "m_185475_"), "()Lboe$a;");
    }

    static jobject toStatistics(const jobject& obj) {
                
       const auto methodID = methodID_toStatistics();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_UTIL_PROFILING_JFR_JFRPROFILERECORDER$COUNTER_HPP