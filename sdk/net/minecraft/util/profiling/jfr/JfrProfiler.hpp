// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_UTIL_PROFILING_JFR_JFRPROFILER_HPP
#define NET_MINECRAFT_UTIL_PROFILING_JFR_JFRPROFILER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.util.profiling.jfr.JfrProfiler
 * Remapped: bnk
 */
namespace JfrProfiler {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("bnk", "net/minecraft/util/profiling/jfr/JfrProfiler", "net/minecraft/class_6505", "net/minecraft/util/profiling/jfr/JfrProfiler", "net/minecraft/src/C_182806_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.util.profiling.jfr.JfrProfiler#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "LOGGER", "field_34408", "LOGGER", "f_185288_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.util.profiling.jfr.JfrProfiler#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "LOGGER", "field_34408", "LOGGER", "f_185288_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.profiling.jfr.JfrProfiler#MINECRAFT
    [[maybe_unused]] static jobject get_field_MINECRAFT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "ROOT_CATEGORY", "field_34403", "MINECRAFT", "f_185284_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.profiling.jfr.JfrProfiler#MINECRAFT
    [[maybe_unused]] static void set_field_MINECRAFT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "ROOT_CATEGORY", "field_34403", "MINECRAFT", "f_185284_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.profiling.jfr.JfrProfiler#WORLD_GENERATION
    [[maybe_unused]] static jobject get_field_WORLD_GENERATION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "WORLD_GEN_CATEGORY", "field_34404", "WORLD_GENERATION", "f_185285_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.profiling.jfr.JfrProfiler#WORLD_GENERATION
    [[maybe_unused]] static void set_field_WORLD_GENERATION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "WORLD_GEN_CATEGORY", "field_34404", "WORLD_GENERATION", "f_185285_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.profiling.jfr.JfrProfiler#TICKING
    [[maybe_unused]] static jobject get_field_TICKING() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "TICK_CATEGORY", "field_34405", "TICKING", "f_185286_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.profiling.jfr.JfrProfiler#TICKING
    [[maybe_unused]] static void set_field_TICKING(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "TICK_CATEGORY", "field_34405", "TICKING", "f_185286_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.profiling.jfr.JfrProfiler#NETWORK
    [[maybe_unused]] static jobject get_field_NETWORK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "NETWORK_CATEGORY", "field_34406", "NETWORK", "f_185287_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.profiling.jfr.JfrProfiler#NETWORK
    [[maybe_unused]] static void set_field_NETWORK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "NETWORK_CATEGORY", "field_34406", "NETWORK", "f_185287_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.profiling.jfr.JfrProfiler#STORAGE
    [[maybe_unused]] static jobject get_field_STORAGE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "STORAGE_CATEGORY", "field_49058", "STORAGE", "f_314267_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.profiling.jfr.JfrProfiler#STORAGE
    [[maybe_unused]] static void set_field_STORAGE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "STORAGE_CATEGORY", "field_49058", "STORAGE", "f_314267_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.util.profiling.jfr.JfrProfiler#EVENTS
    [[maybe_unused]] static jobject get_field_EVENTS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "CUSTOM_EVENTS", "field_34407", "EVENTS", "f_185289_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.util.profiling.jfr.JfrProfiler#EVENTS
    [[maybe_unused]] static void set_field_EVENTS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "CUSTOM_EVENTS", "field_34407", "EVENTS", "f_185289_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.util.profiling.jfr.JfrProfiler#CONFIG_PATH
    [[maybe_unused]] static jobject get_field_CONFIG_PATH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "FLIGHT_RECORDER_CONFIG", "field_34409", "CONFIG_PATH", "f_185290_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.util.profiling.jfr.JfrProfiler#CONFIG_PATH
    [[maybe_unused]] static void set_field_CONFIG_PATH(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "FLIGHT_RECORDER_CONFIG", "field_34409", "CONFIG_PATH", "f_185290_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.util.profiling.jfr.JfrProfiler#DATE_TIME_FORMAT
    [[maybe_unused]] static jobject get_field_DATE_TIME_FORMAT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "DATE_TIME_FORMATTER", "field_34410", "DATE_TIME_FORMAT", "f_185291_"), "Ljava/time/format/DateTimeFormatter;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.util.profiling.jfr.JfrProfiler#DATE_TIME_FORMAT
    [[maybe_unused]] static void set_field_DATE_TIME_FORMAT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "DATE_TIME_FORMATTER", "field_34410", "DATE_TIME_FORMAT", "f_185291_"), "Ljava/time/format/DateTimeFormatter;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.util.profiling.jfr.JfrProfiler#INSTANCE
    [[maybe_unused]] static jobject get_field_INSTANCE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "INSTANCE", "field_35576", "INSTANCE", "f_185292_"), "Lbnk;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.util.profiling.jfr.JfrProfiler#INSTANCE
    [[maybe_unused]] static void set_field_INSTANCE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "INSTANCE", "field_35576", "INSTANCE", "f_185292_"), "Lbnk;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for default field net.minecraft.util.profiling.jfr.JfrProfiler#currentRecording
    static jobject get_field_currentRecording(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "recording", "field_34411", "currentRecording", "f_185293_"), "Ljdk/jfr/Recording;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.util.profiling.jfr.JfrProfiler#currentRecording
    static void set_field_currentRecording(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("l", "recording", "field_34411", "currentRecording", "f_185293_"), "Ljdk/jfr/Recording;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.profiling.jfr.JfrProfiler#tickTime
    static jfloat get_field_tickTime(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "currentAverageTickTime", "field_35577", "tickTime", "f_185294_"), "F");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetFloatField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.profiling.jfr.JfrProfiler#tickTime
    static void set_field_tickTime(const jobject &obj, const jfloat &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("m", "currentAverageTickTime", "field_35577", "tickTime", "f_185294_"), "F");
        return MinecraftSDK::env->SetFloatField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.profiling.jfr.JfrProfiler#summaryRecorderByAddress
    static jobject get_field_summaryRecorderByAddress(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "networkTrafficByAddress", "field_35578", "summaryRecorderByAddress", "f_185295_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.profiling.jfr.JfrProfiler#summaryRecorderByAddress
    static void set_field_summaryRecorderByAddress(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("n", "networkTrafficByAddress", "field_35578", "summaryRecorderByAddress", "f_185295_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_getInstance() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getInstance", "method_39428", "getInstance", "m_185298_"), "()Lbnk;");
    }

    static jobject getInstance() {
       const auto clazz = self();
       const auto methodID = methodID_getInstance();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_start() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "start", "method_37981", "start", "m_183425_"), "(Lbnj;)Z");
    }

    static jboolean start(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_start();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_stop() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "stop", "method_37980", "stop", "m_183243_"), "()Ljava/nio/file/Path;");
    }

    static jobject stop(const jobject& obj) {
                
       const auto methodID = methodID_stop();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_isProfiling() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "isRunning", "method_37984", "isProfiling", "m_183608_"), "()Z");
    }

    static jboolean isProfiling(const jobject& obj) {
                
       const auto methodID = methodID_isProfiling();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isAvailable() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "isAvailable", "method_38658", "isAvailable", "m_183609_"), "()Z");
    }

    static jboolean isAvailable(const jobject& obj) {
                
       const auto methodID = methodID_isAvailable();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID__start() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "start", "method_37983", "start", "m_185316_"), "(Ljava/io/Reader;Lbnj;)Z");
    }

    static jboolean _start(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID__start();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_addListener() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "setupSummaryListener", "method_38660", "addListener", "m_185330_"), "()V");
    }

    static void addListener(const jobject& obj) {
                
       const auto methodID = methodID_addListener();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_onTick() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "onServerTick", "method_38654", "onTick", "m_183597_"), "(F)V");
    }

    static void onTick(const jobject& obj, const jfloat& arg0) {
                
       const auto methodID = methodID_onTick();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_onPacketReceived() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "onPacketReceived", "method_38656", "onPacketReceived", "m_183510_"), "(Lvu;Lzi;Ljava/net/SocketAddress;I)V");
    }

    static void onPacketReceived(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jint& arg3) {
                
       const auto methodID = methodID_onPacketReceived();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_onPacketSent() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "onPacketSent", "method_38657", "onPacketSent", "m_183508_"), "(Lvu;Lzi;Ljava/net/SocketAddress;I)V");
    }

    static void onPacketSent(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jint& arg3) {
                
       const auto methodID = methodID_onPacketSent();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_getOrCreateSummaryRecorder() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "networkStatFor", "method_39429", "getOrCreateSummaryRecorder", "m_185319_"), "(Ljava/net/SocketAddress;)Lnet/minecraft/util/profiling/jfr/event/NetworkSummaryEvent$b;");
    }

    static jobject getOrCreateSummaryRecorder(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getOrCreateSummaryRecorder();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_onChunkRegionRead() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "onRegionFileRead", "method_56979", "onChunkRegionRead", "m_321210_"), "(Ldws;Ldcd;Ldwr;I)V");
    }

    static void onChunkRegionRead(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jint& arg3) {
                
       const auto methodID = methodID_onChunkRegionRead();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_onChunkRegionWrite() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "onRegionFileWrite", "method_56980", "onChunkRegionWrite", "m_319778_"), "(Ldws;Ldcd;Ldwr;I)V");
    }

    static void onChunkRegionWrite(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2, const jint& arg3) {
                
       const auto methodID = methodID_onChunkRegionWrite();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_startWorldLoadProfiling() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "onWorldLoadedStarted", "method_38659", "startWorldLoadProfiling", "m_183494_"), "()Lbno;");
    }

    static jobject startWorldLoadProfiling(const jobject& obj) {
                
       const auto methodID = methodID_startWorldLoadProfiling();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_startChunkGenerationProfiling() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "onChunkGenerate", "method_38655", "startChunkGenerationProfiling", "m_183559_"), "(Ldcd;Lakq;Ljava/lang/String;)Lbno;");
    }

    static jobject startChunkGenerationProfiling(const jobject& obj, const jobject& arg0, const jobject& arg1, const jobject& arg2) {
                
       const auto methodID = methodID_startChunkGenerationProfiling();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1, arg2);
    };
    
};

#endif // NET_MINECRAFT_UTIL_PROFILING_JFR_JFRPROFILER_HPP