// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_UTIL_FORMATTING_HPP
#define NET_MINECRAFT_UTIL_FORMATTING_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.util.Formatting
 * Remapped: n
 */
namespace Formatting {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("n", "net/minecraft/ChatFormatting", "net/minecraft/class_124", "net/minecraft/util/Formatting", "net/minecraft/src/C_4856_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.util.Formatting#BLACK
    [[maybe_unused]] static jobject get_field_BLACK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "BLACK", "field_1074", "BLACK", "BLACK"), "Ln;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.Formatting#BLACK
    [[maybe_unused]] static void set_field_BLACK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "BLACK", "field_1074", "BLACK", "BLACK"), "Ln;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.Formatting#DARK_BLUE
    [[maybe_unused]] static jobject get_field_DARK_BLUE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "DARK_BLUE", "field_1058", "DARK_BLUE", "DARK_BLUE"), "Ln;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.Formatting#DARK_BLUE
    [[maybe_unused]] static void set_field_DARK_BLUE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "DARK_BLUE", "field_1058", "DARK_BLUE", "DARK_BLUE"), "Ln;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.Formatting#DARK_GREEN
    [[maybe_unused]] static jobject get_field_DARK_GREEN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "DARK_GREEN", "field_1077", "DARK_GREEN", "DARK_GREEN"), "Ln;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.Formatting#DARK_GREEN
    [[maybe_unused]] static void set_field_DARK_GREEN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "DARK_GREEN", "field_1077", "DARK_GREEN", "DARK_GREEN"), "Ln;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.Formatting#DARK_AQUA
    [[maybe_unused]] static jobject get_field_DARK_AQUA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "DARK_AQUA", "field_1062", "DARK_AQUA", "DARK_AQUA"), "Ln;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.Formatting#DARK_AQUA
    [[maybe_unused]] static void set_field_DARK_AQUA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "DARK_AQUA", "field_1062", "DARK_AQUA", "DARK_AQUA"), "Ln;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.Formatting#DARK_RED
    [[maybe_unused]] static jobject get_field_DARK_RED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "DARK_RED", "field_1079", "DARK_RED", "DARK_RED"), "Ln;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.Formatting#DARK_RED
    [[maybe_unused]] static void set_field_DARK_RED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "DARK_RED", "field_1079", "DARK_RED", "DARK_RED"), "Ln;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.Formatting#DARK_PURPLE
    [[maybe_unused]] static jobject get_field_DARK_PURPLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "DARK_PURPLE", "field_1064", "DARK_PURPLE", "DARK_PURPLE"), "Ln;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.Formatting#DARK_PURPLE
    [[maybe_unused]] static void set_field_DARK_PURPLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "DARK_PURPLE", "field_1064", "DARK_PURPLE", "DARK_PURPLE"), "Ln;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.Formatting#GOLD
    [[maybe_unused]] static jobject get_field_GOLD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "GOLD", "field_1065", "GOLD", "GOLD"), "Ln;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.Formatting#GOLD
    [[maybe_unused]] static void set_field_GOLD(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "GOLD", "field_1065", "GOLD", "GOLD"), "Ln;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.Formatting#GRAY
    [[maybe_unused]] static jobject get_field_GRAY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "GRAY", "field_1080", "GRAY", "GRAY"), "Ln;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.Formatting#GRAY
    [[maybe_unused]] static void set_field_GRAY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "GRAY", "field_1080", "GRAY", "GRAY"), "Ln;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.Formatting#DARK_GRAY
    [[maybe_unused]] static jobject get_field_DARK_GRAY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "DARK_GRAY", "field_1063", "DARK_GRAY", "DARK_GRAY"), "Ln;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.Formatting#DARK_GRAY
    [[maybe_unused]] static void set_field_DARK_GRAY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "DARK_GRAY", "field_1063", "DARK_GRAY", "DARK_GRAY"), "Ln;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.Formatting#BLUE
    [[maybe_unused]] static jobject get_field_BLUE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "BLUE", "field_1078", "BLUE", "BLUE"), "Ln;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.Formatting#BLUE
    [[maybe_unused]] static void set_field_BLUE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "BLUE", "field_1078", "BLUE", "BLUE"), "Ln;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.Formatting#GREEN
    [[maybe_unused]] static jobject get_field_GREEN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "GREEN", "field_1060", "GREEN", "GREEN"), "Ln;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.Formatting#GREEN
    [[maybe_unused]] static void set_field_GREEN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "GREEN", "field_1060", "GREEN", "GREEN"), "Ln;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.Formatting#AQUA
    [[maybe_unused]] static jobject get_field_AQUA() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "AQUA", "field_1075", "AQUA", "AQUA"), "Ln;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.Formatting#AQUA
    [[maybe_unused]] static void set_field_AQUA(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "AQUA", "field_1075", "AQUA", "AQUA"), "Ln;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.Formatting#RED
    [[maybe_unused]] static jobject get_field_RED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "RED", "field_1061", "RED", "RED"), "Ln;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.Formatting#RED
    [[maybe_unused]] static void set_field_RED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "RED", "field_1061", "RED", "RED"), "Ln;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.Formatting#LIGHT_PURPLE
    [[maybe_unused]] static jobject get_field_LIGHT_PURPLE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "LIGHT_PURPLE", "field_1076", "LIGHT_PURPLE", "LIGHT_PURPLE"), "Ln;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.Formatting#LIGHT_PURPLE
    [[maybe_unused]] static void set_field_LIGHT_PURPLE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "LIGHT_PURPLE", "field_1076", "LIGHT_PURPLE", "LIGHT_PURPLE"), "Ln;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.Formatting#YELLOW
    [[maybe_unused]] static jobject get_field_YELLOW() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "YELLOW", "field_1054", "YELLOW", "YELLOW"), "Ln;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.Formatting#YELLOW
    [[maybe_unused]] static void set_field_YELLOW(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "YELLOW", "field_1054", "YELLOW", "YELLOW"), "Ln;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.Formatting#WHITE
    [[maybe_unused]] static jobject get_field_WHITE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "WHITE", "field_1068", "WHITE", "WHITE"), "Ln;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.Formatting#WHITE
    [[maybe_unused]] static void set_field_WHITE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "WHITE", "field_1068", "WHITE", "WHITE"), "Ln;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.Formatting#OBFUSCATED
    [[maybe_unused]] static jobject get_field_OBFUSCATED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "OBFUSCATED", "field_1051", "OBFUSCATED", "OBFUSCATED"), "Ln;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.Formatting#OBFUSCATED
    [[maybe_unused]] static void set_field_OBFUSCATED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("q", "OBFUSCATED", "field_1051", "OBFUSCATED", "OBFUSCATED"), "Ln;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.Formatting#BOLD
    [[maybe_unused]] static jobject get_field_BOLD() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "BOLD", "field_1067", "BOLD", "BOLD"), "Ln;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.Formatting#BOLD
    [[maybe_unused]] static void set_field_BOLD(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("r", "BOLD", "field_1067", "BOLD", "BOLD"), "Ln;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.Formatting#STRIKETHROUGH
    [[maybe_unused]] static jobject get_field_STRIKETHROUGH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "STRIKETHROUGH", "field_1055", "STRIKETHROUGH", "STRIKETHROUGH"), "Ln;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.Formatting#STRIKETHROUGH
    [[maybe_unused]] static void set_field_STRIKETHROUGH(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("s", "STRIKETHROUGH", "field_1055", "STRIKETHROUGH", "STRIKETHROUGH"), "Ln;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.Formatting#UNDERLINE
    [[maybe_unused]] static jobject get_field_UNDERLINE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "UNDERLINE", "field_1073", "UNDERLINE", "UNDERLINE"), "Ln;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.Formatting#UNDERLINE
    [[maybe_unused]] static void set_field_UNDERLINE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("t", "UNDERLINE", "field_1073", "UNDERLINE", "UNDERLINE"), "Ln;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.Formatting#ITALIC
    [[maybe_unused]] static jobject get_field_ITALIC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "ITALIC", "field_1056", "ITALIC", "ITALIC"), "Ln;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.Formatting#ITALIC
    [[maybe_unused]] static void set_field_ITALIC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("u", "ITALIC", "field_1056", "ITALIC", "ITALIC"), "Ln;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.Formatting#RESET
    [[maybe_unused]] static jobject get_field_RESET() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "RESET", "field_1070", "RESET", "RESET"), "Ln;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.Formatting#RESET
    [[maybe_unused]] static void set_field_RESET(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("v", "RESET", "field_1070", "RESET", "RESET"), "Ln;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.Formatting#CODEC
    [[maybe_unused]] static jobject get_field_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "CODEC", "field_39218", "CODEC", "f_236796_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.Formatting#CODEC
    [[maybe_unused]] static void set_field_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("w", "CODEC", "field_39218", "CODEC", "f_236796_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.Formatting#FORMATTING_CODE_PREFIX
    [[maybe_unused]] static jchar get_field_FORMATTING_CODE_PREFIX() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "PREFIX_CODE", "field_33292", "FORMATTING_CODE_PREFIX", "f_178509_"), "C");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticCharField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.Formatting#FORMATTING_CODE_PREFIX
    [[maybe_unused]] static void set_field_FORMATTING_CODE_PREFIX(const jchar &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("x", "PREFIX_CODE", "field_33292", "FORMATTING_CODE_PREFIX", "f_178509_"), "C");
        return MinecraftSDK::env->SetStaticCharField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.util.Formatting#BY_NAME
    [[maybe_unused]] static jobject get_field_BY_NAME() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("y", "FORMATTING_BY_NAME", "field_1052", "BY_NAME", "f_126619_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.util.Formatting#BY_NAME
    [[maybe_unused]] static void set_field_BY_NAME(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("y", "FORMATTING_BY_NAME", "field_1052", "BY_NAME", "f_126619_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.util.Formatting#FORMATTING_CODE_PATTERN
    [[maybe_unused]] static jobject get_field_FORMATTING_CODE_PATTERN() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("z", "STRIP_FORMATTING_PATTERN", "field_1066", "FORMATTING_CODE_PATTERN", "f_126620_"), "Ljava/util/regex/Pattern;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.util.Formatting#FORMATTING_CODE_PATTERN
    [[maybe_unused]] static void set_field_FORMATTING_CODE_PATTERN(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("z", "STRIP_FORMATTING_PATTERN", "field_1066", "FORMATTING_CODE_PATTERN", "f_126620_"), "Ljava/util/regex/Pattern;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.util.Formatting#name
    static jobject get_field_name(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("A", "name", "field_1057", "name", "f_126621_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.Formatting#name
    static void set_field_name(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("A", "name", "field_1057", "name", "f_126621_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.Formatting#code
    static jchar get_field_code(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("B", "code", "field_1059", "code", "f_126622_"), "C");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetCharField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.Formatting#code
    static void set_field_code(const jobject &obj, const jchar &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("B", "code", "field_1059", "code", "f_126622_"), "C");
        return MinecraftSDK::env->SetCharField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.Formatting#modifier
    static jboolean get_field_modifier(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("C", "isFormat", "field_1081", "modifier", "f_126592_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.Formatting#modifier
    static void set_field_modifier(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("C", "isFormat", "field_1081", "modifier", "f_126592_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.Formatting#stringValue
    static jobject get_field_stringValue(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("D", "toString", "field_1069", "stringValue", "f_126593_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.Formatting#stringValue
    static void set_field_stringValue(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("D", "toString", "field_1069", "stringValue", "f_126593_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.Formatting#colorIndex
    static jint get_field_colorIndex(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("E", "id", "field_1071", "colorIndex", "f_126594_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.Formatting#colorIndex
    static void set_field_colorIndex(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("E", "id", "field_1071", "colorIndex", "f_126594_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.Formatting#colorValue
    static jobject get_field_colorValue(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("F", "color", "field_1053", "colorValue", "f_126595_"), "Ljava/lang/Integer;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.Formatting#colorValue
    static void set_field_colorValue(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("F", "color", "field_1053", "colorValue", "f_126595_"), "Ljava/lang/Integer;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_values() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("values", "values", "values", "values", "values"), "()[Ln;");
    }

    static jobject values() {
       const auto clazz = self();
       const auto methodID = methodID_values();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_valueOf() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("valueOf", "valueOf", "valueOf", "valueOf", "valueOf"), "(Ljava/lang/String;)Ln;");
    }

    static jobject valueOf(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_valueOf();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_sanitize() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "cleanName", "method_535", "sanitize", "m_126662_"), "(Ljava/lang/String;)Ljava/lang/String;");
    }

    static jobject sanitize(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_sanitize();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getCode() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getChar", "method_36145", "getCode", "m_178510_"), "()C");
    }

    static jchar getCode(const jobject& obj) {
                
       const auto methodID = methodID_getCode();
       return MinecraftSDK::env->CallCharMethod(obj, methodID);
    };
    
    static jmethodID methodID_getColorIndex() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getId", "method_536", "getColorIndex", "m_126656_"), "()I");
    }

    static jint getColorIndex(const jobject& obj) {
                
       const auto methodID = methodID_getColorIndex();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_isModifier() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "isFormat", "method_542", "isModifier", "m_126661_"), "()Z");
    }

    static jboolean isModifier(const jobject& obj) {
                
       const auto methodID = methodID_isModifier();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_isColor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "isColor", "method_543", "isColor", "m_126664_"), "()Z");
    }

    static jboolean isColor(const jobject& obj) {
                
       const auto methodID = methodID_isColor();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getColorValue() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "getColor", "method_532", "getColorValue", "m_126665_"), "()Ljava/lang/Integer;");
    }

    static jobject getColorValue(const jobject& obj) {
                
       const auto methodID = methodID_getColorValue();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getName() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "getName", "method_537", "getName", "m_126666_"), "()Ljava/lang/String;");
    }

    static jobject getName(const jobject& obj) {
                
       const auto methodID = methodID_getName();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_strip() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "stripFormatting", "method_539", "strip", "m_126649_"), "(Ljava/lang/String;)Ljava/lang/String;");
    }

    static jobject strip(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_strip();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_byName() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "getByName", "method_533", "byName", "m_126657_"), "(Ljava/lang/String;)Ln;");
    }

    static jobject byName(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_byName();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_byColorIndex() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getById", "method_534", "byColorIndex", "m_126647_"), "(I)Ln;");
    }

    static jobject byColorIndex(const jint& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_byColorIndex();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_byCode() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getByCode", "method_544", "byCode", "m_126645_"), "(C)Ln;");
    }

    static jobject byCode(const jchar& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_byCode();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getNames() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getNames", "method_540", "getNames", "m_126653_"), "(ZZ)Ljava/util/Collection;");
    }

    static jobject getNames(const jboolean& arg0, const jboolean& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_getNames();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_asString() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "getSerializedName", "method_15434", "asString", "m_7912_"), "()Ljava/lang/String;");
    }

    static jobject asString(const jobject& obj) {
                
       const auto methodID = methodID_asString();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_UTIL_FORMATTING_HPP