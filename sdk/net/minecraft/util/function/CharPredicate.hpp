// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_UTIL_FUNCTION_CHARPREDICATE_HPP
#define NET_MINECRAFT_UTIL_FUNCTION_CHARPREDICATE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.util.function.CharPredicate
 * Remapped: m
 */
namespace CharPredicate {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("m", "net/minecraft/CharPredicate", "net/minecraft/class_5462", "net/minecraft/util/function/CharPredicate", "net/minecraft/src/C_4824_"));
        }
        return cachedClass;
    };

    static jmethodID methodID_test() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("test", "test", "test", "test", "m_125854_"), "(C)Z");
    }

    static jboolean test(const jobject& obj, const jchar& arg0) {
                
       const auto methodID = methodID_test();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_and() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("and", "and", "method_36125", "and", "m_178286_"), "(Lm;)Lm;");
    }

    static jobject and(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_and();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_negate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("negate", "negate", "method_36123", "negate", "m_178283_"), "()Lm;");
    }

    static jobject negate(const jobject& obj) {
                
       const auto methodID = methodID_negate();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_or() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("or", "or", "method_36127", "or", "m_178291_"), "(Lm;)Lm;");
    }

    static jobject or(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_or();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_UTIL_FUNCTION_CHARPREDICATE_HPP