// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_UTIL_FUNCTION_BOOLEANBIFUNCTION_HPP
#define NET_MINECRAFT_UTIL_FUNCTION_BOOLEANBIFUNCTION_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.util.function.BooleanBiFunction
 * Remapped: exg
 */
namespace BooleanBiFunction {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("exg", "net/minecraft/world/phys/shapes/BooleanOp", "net/minecraft/class_247", "net/minecraft/util/function/BooleanBiFunction", "net/minecraft/src/C_3050_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.util.function.BooleanBiFunction#FALSE
    [[maybe_unused]] static jobject get_field_FALSE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "FALSE", "field_16897", "FALSE", "f_82681_"), "Lexg;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.function.BooleanBiFunction#FALSE
    [[maybe_unused]] static void set_field_FALSE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "FALSE", "field_16897", "FALSE", "f_82681_"), "Lexg;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.function.BooleanBiFunction#NOT_OR
    [[maybe_unused]] static jobject get_field_NOT_OR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "NOT_OR", "field_16885", "NOT_OR", "f_82682_"), "Lexg;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.function.BooleanBiFunction#NOT_OR
    [[maybe_unused]] static void set_field_NOT_OR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "NOT_OR", "field_16885", "NOT_OR", "f_82682_"), "Lexg;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.function.BooleanBiFunction#ONLY_SECOND
    [[maybe_unused]] static jobject get_field_ONLY_SECOND() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "ONLY_SECOND", "field_16893", "ONLY_SECOND", "f_82683_"), "Lexg;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.function.BooleanBiFunction#ONLY_SECOND
    [[maybe_unused]] static void set_field_ONLY_SECOND(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "ONLY_SECOND", "field_16893", "ONLY_SECOND", "f_82683_"), "Lexg;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.function.BooleanBiFunction#NOT_FIRST
    [[maybe_unused]] static jobject get_field_NOT_FIRST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "NOT_FIRST", "field_16894", "NOT_FIRST", "f_82684_"), "Lexg;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.function.BooleanBiFunction#NOT_FIRST
    [[maybe_unused]] static void set_field_NOT_FIRST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "NOT_FIRST", "field_16894", "NOT_FIRST", "f_82684_"), "Lexg;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.function.BooleanBiFunction#ONLY_FIRST
    [[maybe_unused]] static jobject get_field_ONLY_FIRST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "ONLY_FIRST", "field_16886", "ONLY_FIRST", "f_82685_"), "Lexg;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.function.BooleanBiFunction#ONLY_FIRST
    [[maybe_unused]] static void set_field_ONLY_FIRST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "ONLY_FIRST", "field_16886", "ONLY_FIRST", "f_82685_"), "Lexg;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.function.BooleanBiFunction#NOT_SECOND
    [[maybe_unused]] static jobject get_field_NOT_SECOND() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "NOT_SECOND", "field_16898", "NOT_SECOND", "f_82686_"), "Lexg;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.function.BooleanBiFunction#NOT_SECOND
    [[maybe_unused]] static void set_field_NOT_SECOND(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "NOT_SECOND", "field_16898", "NOT_SECOND", "f_82686_"), "Lexg;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.function.BooleanBiFunction#NOT_SAME
    [[maybe_unused]] static jobject get_field_NOT_SAME() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "NOT_SAME", "field_16892", "NOT_SAME", "f_82687_"), "Lexg;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.function.BooleanBiFunction#NOT_SAME
    [[maybe_unused]] static void set_field_NOT_SAME(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "NOT_SAME", "field_16892", "NOT_SAME", "f_82687_"), "Lexg;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.function.BooleanBiFunction#NOT_AND
    [[maybe_unused]] static jobject get_field_NOT_AND() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "NOT_AND", "field_16888", "NOT_AND", "f_82688_"), "Lexg;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.function.BooleanBiFunction#NOT_AND
    [[maybe_unused]] static void set_field_NOT_AND(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "NOT_AND", "field_16888", "NOT_AND", "f_82688_"), "Lexg;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.function.BooleanBiFunction#AND
    [[maybe_unused]] static jobject get_field_AND() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "AND", "field_16896", "AND", "f_82689_"), "Lexg;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.function.BooleanBiFunction#AND
    [[maybe_unused]] static void set_field_AND(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "AND", "field_16896", "AND", "f_82689_"), "Lexg;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.function.BooleanBiFunction#SAME
    [[maybe_unused]] static jobject get_field_SAME() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "SAME", "field_16890", "SAME", "f_82690_"), "Lexg;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.function.BooleanBiFunction#SAME
    [[maybe_unused]] static void set_field_SAME(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "SAME", "field_16890", "SAME", "f_82690_"), "Lexg;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.function.BooleanBiFunction#SECOND
    [[maybe_unused]] static jobject get_field_SECOND() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "SECOND", "field_16887", "SECOND", "f_82691_"), "Lexg;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.function.BooleanBiFunction#SECOND
    [[maybe_unused]] static void set_field_SECOND(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "SECOND", "field_16887", "SECOND", "f_82691_"), "Lexg;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.function.BooleanBiFunction#CAUSES
    [[maybe_unused]] static jobject get_field_CAUSES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "CAUSES", "field_16889", "CAUSES", "f_82692_"), "Lexg;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.function.BooleanBiFunction#CAUSES
    [[maybe_unused]] static void set_field_CAUSES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "CAUSES", "field_16889", "CAUSES", "f_82692_"), "Lexg;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.function.BooleanBiFunction#FIRST
    [[maybe_unused]] static jobject get_field_FIRST() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "FIRST", "field_16891", "FIRST", "f_82693_"), "Lexg;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.function.BooleanBiFunction#FIRST
    [[maybe_unused]] static void set_field_FIRST(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "FIRST", "field_16891", "FIRST", "f_82693_"), "Lexg;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.function.BooleanBiFunction#CAUSED_BY
    [[maybe_unused]] static jobject get_field_CAUSED_BY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "CAUSED_BY", "field_16899", "CAUSED_BY", "f_82694_"), "Lexg;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.function.BooleanBiFunction#CAUSED_BY
    [[maybe_unused]] static void set_field_CAUSED_BY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "CAUSED_BY", "field_16899", "CAUSED_BY", "f_82694_"), "Lexg;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.function.BooleanBiFunction#OR
    [[maybe_unused]] static jobject get_field_OR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "OR", "field_1366", "OR", "f_82695_"), "Lexg;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.function.BooleanBiFunction#OR
    [[maybe_unused]] static void set_field_OR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "OR", "field_1366", "OR", "f_82695_"), "Lexg;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.function.BooleanBiFunction#TRUE
    [[maybe_unused]] static jobject get_field_TRUE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "TRUE", "field_16895", "TRUE", "f_82696_"), "Lexg;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.function.BooleanBiFunction#TRUE
    [[maybe_unused]] static void set_field_TRUE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "TRUE", "field_16895", "TRUE", "f_82696_"), "Lexg;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_apply() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("apply", "apply", "apply", "apply", "m_82701_"), "(ZZ)Z");
    }

    static jboolean apply(const jobject& obj, const jboolean& arg0, const jboolean& arg1) {
                
       const auto methodID = methodID_apply();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_UTIL_FUNCTION_BOOLEANBIFUNCTION_HPP