// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_UTIL_FUNCTION_LAZYITERATIONCONSUMER$NEXTITERATION_HPP
#define NET_MINECRAFT_UTIL_FUNCTION_LAZYITERATIONCONSUMER$NEXTITERATION_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.util.function.LazyIterationConsumer$NextIteration
 * Remapped: axa$a
 */
namespace LazyIterationConsumer$NextIteration {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("axa$a", "net/minecraft/util/AbortableIterationConsumer$Continuation", "net/minecraft/class_7927$class_7928", "net/minecraft/util/function/LazyIterationConsumer$NextIteration", "net/minecraft/src/C_260372_$C_260376_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.util.function.LazyIterationConsumer$NextIteration#CONTINUE
    [[maybe_unused]] static jobject get_field_CONTINUE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CONTINUE", "field_41283", "CONTINUE", "CONTINUE"), "Laxa$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.function.LazyIterationConsumer$NextIteration#CONTINUE
    [[maybe_unused]] static void set_field_CONTINUE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CONTINUE", "field_41283", "CONTINUE", "CONTINUE"), "Laxa$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.function.LazyIterationConsumer$NextIteration#ABORT
    [[maybe_unused]] static jobject get_field_ABORT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "ABORT", "field_41284", "ABORT", "ABORT"), "Laxa$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.function.LazyIterationConsumer$NextIteration#ABORT
    [[maybe_unused]] static void set_field_ABORT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "ABORT", "field_41284", "ABORT", "ABORT"), "Laxa$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_values() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("values", "values", "values", "values", "values"), "()[Laxa$a;");
    }

    static jobject values() {
       const auto clazz = self();
       const auto methodID = methodID_values();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_valueOf() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("valueOf", "valueOf", "valueOf", "valueOf", "valueOf"), "(Ljava/lang/String;)Laxa$a;");
    }

    static jobject valueOf(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_valueOf();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_shouldAbort() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "shouldAbort", "method_47543", "shouldAbort", "m_261146_"), "()Z");
    }

    static jboolean shouldAbort(const jobject& obj) {
                
       const auto methodID = methodID_shouldAbort();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_UTIL_FUNCTION_LAZYITERATIONCONSUMER$NEXTITERATION_HPP