// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_UTIL_SHAPE_SIMPLEPAIRLIST_HPP
#define NET_MINECRAFT_UTIL_SHAPE_SIMPLEPAIRLIST_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.util.shape.SimplePairList
 * Remapped: exp
 */
namespace SimplePairList {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("exp", "net/minecraft/world/phys/shapes/IndirectMerger", "net/minecraft/class_254", "net/minecraft/util/shape/SimplePairList", "net/minecraft/src/C_3065_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.util.shape.SimplePairList#ZERO
    [[maybe_unused]] static jobject get_field_ZERO() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "EMPTY", "field_27346", "ZERO", "f_166021_"), "Lit/unimi/dsi/fastutil/doubles/DoubleList;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.util.shape.SimplePairList#ZERO
    [[maybe_unused]] static void set_field_ZERO(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "EMPTY", "field_27346", "ZERO", "f_166021_"), "Lit/unimi/dsi/fastutil/doubles/DoubleList;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.util.shape.SimplePairList#valueIndices
    static jdouble get_field_valueIndices(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "result", "field_1377", "valueIndices", "f_82997_"), "[D");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetDoubleField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.shape.SimplePairList#valueIndices
    static void set_field_valueIndices(const jobject &obj, const jdouble &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "result", "field_1377", "valueIndices", "f_82997_"), "[D");
        return MinecraftSDK::env->SetDoubleField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.shape.SimplePairList#minValues
    static jint get_field_minValues(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "firstIndices", "field_1376", "minValues", "f_82998_"), "[I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.shape.SimplePairList#minValues
    static void set_field_minValues(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "firstIndices", "field_1376", "minValues", "f_82998_"), "[I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.shape.SimplePairList#maxValues
    static jint get_field_maxValues(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "secondIndices", "field_1378", "maxValues", "f_82999_"), "[I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.shape.SimplePairList#maxValues
    static void set_field_maxValues(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "secondIndices", "field_1378", "maxValues", "f_82999_"), "[I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.shape.SimplePairList#size
    static jint get_field_size(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "resultLength", "field_27347", "size", "f_166022_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.shape.SimplePairList#size
    static void set_field_size(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "resultLength", "field_27347", "size", "f_166022_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    static jmethodID methodID_forEachPair() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "forMergedIndexes", "method_1065", "forEachPair", "m_6200_"), "(Lexo$a;)Z");
    }

    static jboolean forEachPair(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_forEachPair();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__size() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("size", "size", "", "", "size"), "()I");
    }

    static jint _size(const jobject& obj) {
                
       const auto methodID = methodID__size();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
    static jmethodID methodID_getPairs() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getList", "method_1066", "getPairs", "m_6241_"), "()Lit/unimi/dsi/fastutil/doubles/DoubleList;");
    }

    static jobject getPairs(const jobject& obj) {
                
       const auto methodID = methodID_getPairs();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_UTIL_SHAPE_SIMPLEPAIRLIST_HPP