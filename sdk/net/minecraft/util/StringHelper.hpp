// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_UTIL_STRINGHELPER_HPP
#define NET_MINECRAFT_UTIL_STRINGHELPER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.util.StringHelper
 * Remapped: azl
 */
namespace StringHelper {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("azl", "net/minecraft/util/StringUtil", "net/minecraft/class_3544", "net/minecraft/util/StringHelper", "net/minecraft/src/C_200_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.util.StringHelper#FORMATTING_CODE
    [[maybe_unused]] static jobject get_field_FORMATTING_CODE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "STRIP_COLOR_PATTERN", "field_15771", "FORMATTING_CODE", "f_14402_"), "Ljava/util/regex/Pattern;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.util.StringHelper#FORMATTING_CODE
    [[maybe_unused]] static void set_field_FORMATTING_CODE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "STRIP_COLOR_PATTERN", "field_15771", "FORMATTING_CODE", "f_14402_"), "Ljava/util/regex/Pattern;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.util.StringHelper#LINE_BREAK
    [[maybe_unused]] static jobject get_field_LINE_BREAK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "LINE_PATTERN", "field_29204", "LINE_BREAK", "f_144995_"), "Ljava/util/regex/Pattern;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.util.StringHelper#LINE_BREAK
    [[maybe_unused]] static void set_field_LINE_BREAK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "LINE_PATTERN", "field_29204", "LINE_BREAK", "f_144995_"), "Ljava/util/regex/Pattern;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.util.StringHelper#ENDS_WITH_LINE_BREAK
    [[maybe_unused]] static jobject get_field_ENDS_WITH_LINE_BREAK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "LINE_END_PATTERN", "field_33559", "ENDS_WITH_LINE_BREAK", "f_144996_"), "Ljava/util/regex/Pattern;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.util.StringHelper#ENDS_WITH_LINE_BREAK
    [[maybe_unused]] static void set_field_ENDS_WITH_LINE_BREAK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "LINE_END_PATTERN", "field_33559", "ENDS_WITH_LINE_BREAK", "f_144996_"), "Ljava/util/regex/Pattern;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_formatTicks() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "formatTickDuration", "method_15439", "formatTicks", "m_14404_"), "(IF)Ljava/lang/String;");
    }

    static jobject formatTicks(const jint& arg0, const jfloat& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_formatTicks();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_stripTextFormat() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "stripColor", "method_15440", "stripTextFormat", "m_14406_"), "(Ljava/lang/String;)Ljava/lang/String;");
    }

    static jobject stripTextFormat(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_stripTextFormat();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_isEmpty() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "isNullOrEmpty", "method_15438", "isEmpty", "m_14408_"), "(Ljava/lang/String;)Z");
    }

    static jboolean isEmpty(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_isEmpty();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_truncate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "truncateStringIfNecessary", "method_34963", "truncate", "m_144998_"), "(Ljava/lang/String;IZ)Ljava/lang/String;");
    }

    static jobject truncate(const jobject& arg0, const jint& arg1, const jboolean& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_truncate();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_countLines() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "lineCount", "method_34238", "countLines", "m_145002_"), "(Ljava/lang/String;)I");
    }

    static jint countLines(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_countLines();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_endsWithLineBreak() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("d", "endsWithNewLine", "method_36358", "endsWithLineBreak", "m_145004_"), "(Ljava/lang/String;)Z");
    }

    static jboolean endsWithLineBreak(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_endsWithLineBreak();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_truncateChat() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("e", "trimChatMessage", "method_43681", "truncateChat", "m_216469_"), "(Ljava/lang/String;)Ljava/lang/String;");
    }

    static jobject truncateChat(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_truncateChat();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_isValidChar() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "isAllowedChatCharacter", "method_57175", "isValidChar", "m_324425_"), "(C)Z");
    }

    static jboolean isValidChar(const jchar& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_isValidChar();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_isValidPlayerName() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("f", "isValidPlayerName", "method_57179", "isValidPlayerName", "m_319148_"), "(Ljava/lang/String;)Z");
    }

    static jboolean isValidPlayerName(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_isValidPlayerName();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_stripInvalidChars() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("g", "filterText", "method_57180", "stripInvalidChars", "m_319203_"), "(Ljava/lang/String;)Ljava/lang/String;");
    }

    static jobject stripInvalidChars(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_stripInvalidChars();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID__stripInvalidChars() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "filterText", "method_57177", "stripInvalidChars", "m_323063_"), "(Ljava/lang/String;Z)Ljava/lang/String;");
    }

    static jobject _stripInvalidChars(const jobject& arg0, const jboolean& arg1) {
       const auto clazz = self();
       const auto methodID = methodID__stripInvalidChars();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_isWhitespace() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "isWhitespace", "method_57176", "isWhitespace", "m_321934_"), "(I)Z");
    }

    static jboolean isWhitespace(const jint& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_isWhitespace();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_isBlank() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("h", "isBlank", "method_57181", "isBlank", "m_320314_"), "(Ljava/lang/String;)Z");
    }

    static jboolean isBlank(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_isBlank();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_UTIL_STRINGHELPER_HPP