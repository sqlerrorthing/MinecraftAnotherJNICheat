// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_UTIL_PATH_CACHEFILES$CACHEENTRY_HPP
#define NET_MINECRAFT_UTIL_PATH_CACHEFILES$CACHEENTRY_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.util.path.CacheFiles$CacheEntry
 * Remapped: ask$a
 */
namespace CacheFiles$CacheEntry {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("ask$a", "net/minecraft/server/packs/DownloadCacheCleaner$PathAndPriority", "net/minecraft/class_9055$class_9056", "net/minecraft/util/path/CacheFiles$CacheEntry", "net/minecraft/src/C_301882_$C_301890_"));
        }
        return cachedClass;
    };

    // getter for default field net.minecraft.util.path.CacheFiles$CacheEntry#path
    static jobject get_field_path(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "path", "comp_2168", "path", "f_302336_"), "Ljava/nio/file/Path;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static default field net.minecraft.util.path.CacheFiles$CacheEntry#path
    static void set_field_path(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "path", "comp_2168", "path", "f_302336_"), "Ljava/nio/file/Path;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for default field net.minecraft.util.path.CacheFiles$CacheEntry#removalPriority
    static jint get_field_removalPriority(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "removalPriority", "comp_2169", "removalPriority", "f_303116_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static default field net.minecraft.util.path.CacheFiles$CacheEntry#removalPriority
    static void set_field_removalPriority(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "removalPriority", "comp_2169", "removalPriority", "f_303116_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for static public field net.minecraft.util.path.CacheFiles$CacheEntry#COMPARATOR
    [[maybe_unused]] static jobject get_field_COMPARATOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "HIGHEST_PRIORITY_FIRST", "field_47677", "COMPARATOR", "f_302746_"), "Ljava/util/Comparator;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.path.CacheFiles$CacheEntry#COMPARATOR
    [[maybe_unused]] static void set_field_COMPARATOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "HIGHEST_PRIORITY_FIRST", "field_47677", "COMPARATOR", "f_302746_"), "Ljava/util/Comparator;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID__path() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "path", "comp_2168", "path", "f_302336_"), "()Ljava/nio/file/Path;");
    }

    static jobject _path(const jobject& obj) {
                
       const auto methodID = methodID__path();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__removalPriority() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "removalPriority", "comp_2169", "removalPriority", "f_303116_"), "()I");
    }

    static jint _removalPriority(const jobject& obj) {
                
       const auto methodID = methodID__removalPriority();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_UTIL_PATH_CACHEFILES$CACHEENTRY_HPP