// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_UTIL_PATH_ALLOWEDSYMLINKPATHMATCHER_HPP
#define NET_MINECRAFT_UTIL_PATH_ALLOWEDSYMLINKPATHMATCHER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.util.path.AllowedSymlinkPathMatcher
 * Remapped: ewu
 */
namespace AllowedSymlinkPathMatcher {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("ewu", "net/minecraft/world/level/validation/PathAllowList", "net/minecraft/class_8582", "net/minecraft/util/path/AllowedSymlinkPathMatcher", "net/minecraft/src/C_289813_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.util.path.AllowedSymlinkPathMatcher#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LOGGER", "field_44958", "LOGGER", "f_289832_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.util.path.AllowedSymlinkPathMatcher#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LOGGER", "field_44958", "LOGGER", "f_289832_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.util.path.AllowedSymlinkPathMatcher#COMMENT_LINE_PREFIX
    [[maybe_unused]] static jobject get_field_COMMENT_LINE_PREFIX() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "COMMENT_PREFIX", "field_44959", "COMMENT_LINE_PREFIX", "f_289821_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.util.path.AllowedSymlinkPathMatcher#COMMENT_LINE_PREFIX
    [[maybe_unused]] static void set_field_COMMENT_LINE_PREFIX(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "COMMENT_PREFIX", "field_44959", "COMMENT_LINE_PREFIX", "f_289821_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.util.path.AllowedSymlinkPathMatcher#allowedEntries
    static jobject get_field_allowedEntries(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "entries", "field_44960", "allowedEntries", "f_289820_"), "Ljava/util/List;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.path.AllowedSymlinkPathMatcher#allowedEntries
    static void set_field_allowedEntries(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "entries", "field_44960", "allowedEntries", "f_289820_"), "Ljava/util/List;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.path.AllowedSymlinkPathMatcher#matcherCache
    static jobject get_field_matcherCache(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "compiledPaths", "field_44961", "matcherCache", "f_289818_"), "Ljava/util/Map;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.path.AllowedSymlinkPathMatcher#matcherCache
    static void set_field_matcherCache(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "compiledPaths", "field_44961", "matcherCache", "f_289818_"), "Ljava/util/Map;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_get() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getForFileSystem", "method_52249", "get", "m_289852_"), "(Ljava/nio/file/FileSystem;)Ljava/nio/file/PathMatcher;");
    }

    static jobject get(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_get();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_matches() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("matches", "matches", "matches", "matches", "matches"), "(Ljava/nio/file/Path;)Z");
    }

    static jboolean matches(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_matches();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_fromReader() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "readPlain", "method_52247", "fromReader", "m_289888_"), "(Ljava/io/BufferedReader;)Lewu;");
    }

    static jobject fromReader(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_fromReader();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_UTIL_PATH_ALLOWEDSYMLINKPATHMATCHER_HPP