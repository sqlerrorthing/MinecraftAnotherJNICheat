// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_UTIL_PATH_ALLOWEDSYMLINKPATHMATCHER$ENTRYTYPE_HPP
#define NET_MINECRAFT_UTIL_PATH_ALLOWEDSYMLINKPATHMATCHER$ENTRYTYPE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.util.path.AllowedSymlinkPathMatcher$EntryType
 * Remapped: ewu$b
 */
namespace AllowedSymlinkPathMatcher$EntryType {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("ewu$b", "net/minecraft/world/level/validation/PathAllowList$EntryType", "net/minecraft/class_8582$class_8584", "net/minecraft/util/path/AllowedSymlinkPathMatcher$EntryType", "net/minecraft/src/C_289813_$C_289815_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.util.path.AllowedSymlinkPathMatcher$EntryType#DEFAULT
    [[maybe_unused]] static jobject get_field_DEFAULT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "FILESYSTEM", "field_44962", "DEFAULT", "f_289828_"), "Lewu$b;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.path.AllowedSymlinkPathMatcher$EntryType#DEFAULT
    [[maybe_unused]] static void set_field_DEFAULT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "FILESYSTEM", "field_44962", "DEFAULT", "f_289828_"), "Lewu$b;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.path.AllowedSymlinkPathMatcher$EntryType#PREFIX
    [[maybe_unused]] static jobject get_field_PREFIX() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "PREFIX", "field_44963", "PREFIX", "f_289838_"), "Lewu$b;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.path.AllowedSymlinkPathMatcher$EntryType#PREFIX
    [[maybe_unused]] static void set_field_PREFIX(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "PREFIX", "field_44963", "PREFIX", "f_289838_"), "Lewu$b;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_compile() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("compile", "compile", "compile", "compile", "m_289905_"), "(Ljava/nio/file/FileSystem;Ljava/lang/String;)Ljava/nio/file/PathMatcher;");
    }

    static jobject compile(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID_compile();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_UTIL_PATH_ALLOWEDSYMLINKPATHMATCHER$ENTRYTYPE_HPP