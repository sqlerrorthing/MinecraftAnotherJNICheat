// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_UTIL_IDENTIFIER_HPP
#define NET_MINECRAFT_UTIL_IDENTIFIER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.util.Identifier
 * Remapped: akr
 */
namespace Identifier {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("akr", "net/minecraft/resources/ResourceLocation", "net/minecraft/class_2960", "net/minecraft/util/Identifier", "net/minecraft/src/C_5265_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.util.Identifier#CODEC
    [[maybe_unused]] static jobject get_field_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CODEC", "field_25139", "CODEC", "f_135803_"), "Lcom/mojang/serialization/Codec;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.Identifier#CODEC
    [[maybe_unused]] static void set_field_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "CODEC", "field_25139", "CODEC", "f_135803_"), "Lcom/mojang/serialization/Codec;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.Identifier#PACKET_CODEC
    [[maybe_unused]] static jobject get_field_PACKET_CODEC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "STREAM_CODEC", "field_48267", "PACKET_CODEC", "f_314488_"), "Lyx;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.Identifier#PACKET_CODEC
    [[maybe_unused]] static void set_field_PACKET_CODEC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "STREAM_CODEC", "field_48267", "PACKET_CODEC", "f_314488_"), "Lyx;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.Identifier#COMMAND_EXCEPTION
    [[maybe_unused]] static jobject get_field_COMMAND_EXCEPTION() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "ERROR_INVALID", "field_13354", "COMMAND_EXCEPTION", "f_135806_"), "Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.Identifier#COMMAND_EXCEPTION
    [[maybe_unused]] static void set_field_COMMAND_EXCEPTION(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "ERROR_INVALID", "field_13354", "COMMAND_EXCEPTION", "f_135806_"), "Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.Identifier#NAMESPACE_SEPARATOR
    [[maybe_unused]] static jchar get_field_NAMESPACE_SEPARATOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "NAMESPACE_SEPARATOR", "field_33380", "NAMESPACE_SEPARATOR", "f_179907_"), "C");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticCharField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.Identifier#NAMESPACE_SEPARATOR
    [[maybe_unused]] static void set_field_NAMESPACE_SEPARATOR(const jchar &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "NAMESPACE_SEPARATOR", "field_33380", "NAMESPACE_SEPARATOR", "f_179907_"), "C");
        return MinecraftSDK::env->SetStaticCharField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.Identifier#DEFAULT_NAMESPACE
    [[maybe_unused]] static jobject get_field_DEFAULT_NAMESPACE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "DEFAULT_NAMESPACE", "field_33381", "DEFAULT_NAMESPACE", "f_179908_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.Identifier#DEFAULT_NAMESPACE
    [[maybe_unused]] static void set_field_DEFAULT_NAMESPACE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "DEFAULT_NAMESPACE", "field_33381", "DEFAULT_NAMESPACE", "f_179908_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.Identifier#REALMS_NAMESPACE
    [[maybe_unused]] static jobject get_field_REALMS_NAMESPACE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "REALMS_NAMESPACE", "field_33382", "REALMS_NAMESPACE", "f_179909_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.Identifier#REALMS_NAMESPACE
    [[maybe_unused]] static void set_field_REALMS_NAMESPACE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "REALMS_NAMESPACE", "field_33382", "REALMS_NAMESPACE", "f_179909_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.util.Identifier#namespace
    static jobject get_field_namespace(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "namespace", "field_13353", "namespace", "f_135804_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.Identifier#namespace
    static void set_field_namespace(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("h", "namespace", "field_13353", "namespace", "f_135804_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.Identifier#path
    static jobject get_field_path(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "path", "field_13355", "path", "f_135805_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.Identifier#path
    static void set_field_path(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("i", "path", "field_13355", "path", "f_135805_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_ofValidated() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("d", "createUntrusted", "method_60936", "ofValidated", "m_339033_"), "(Ljava/lang/String;Ljava/lang/String;)Lakr;");
    }

    static jobject ofValidated(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_ofValidated();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_of() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "fromNamespaceAndPath", "method_60655", "of", "m_339182_"), "(Ljava/lang/String;Ljava/lang/String;)Lakr;");
    }

    static jobject of(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_of();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__of() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "parse", "method_60654", "of", "m_338530_"), "(Ljava/lang/String;)Lakr;");
    }

    static jobject _of(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID__of();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_ofVanilla() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "withDefaultNamespace", "method_60656", "ofVanilla", "m_340282_"), "(Ljava/lang/String;)Lakr;");
    }

    static jobject ofVanilla(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_ofVanilla();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_tryParse() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "tryParse", "method_12829", "tryParse", "m_135820_"), "(Ljava/lang/String;)Lakr;");
    }

    static jobject tryParse(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_tryParse();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID__tryParse() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "tryBuild", "method_43902", "tryParse", "m_214293_"), "(Ljava/lang/String;Ljava/lang/String;)Lakr;");
    }

    static jobject _tryParse(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID__tryParse();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_splitOn() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "bySeparator", "method_12838", "splitOn", "m_339830_"), "(Ljava/lang/String;C)Lakr;");
    }

    static jobject splitOn(const jobject& arg0, const jchar& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_splitOn();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_trySplitOn() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "tryBySeparator", "method_60935", "trySplitOn", "m_338964_"), "(Ljava/lang/String;C)Lakr;");
    }

    static jobject trySplitOn(const jobject& arg0, const jchar& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_trySplitOn();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_validate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("d", "read", "method_29186", "validate", "m_135837_"), "(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;");
    }

    static jobject validate(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_validate();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getPath() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getPath", "method_12832", "getPath", "m_135815_"), "()Ljava/lang/String;");
    }

    static jobject getPath(const jobject& obj) {
                
       const auto methodID = methodID_getPath();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_getNamespace() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "getNamespace", "method_12836", "getNamespace", "m_135827_"), "()Ljava/lang/String;");
    }

    static jobject getNamespace(const jobject& obj) {
                
       const auto methodID = methodID_getNamespace();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_withPath() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "withPath", "method_45136", "withPath", "m_247449_"), "(Ljava/lang/String;)Lakr;");
    }

    static jobject withPath(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_withPath();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__withPath() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "withPath", "method_45134", "withPath", "m_247266_"), "(Ljava/util/function/UnaryOperator;)Lakr;");
    }

    static jobject _withPath(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__withPath();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_withPrefixedPath() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("f", "withPrefix", "method_45138", "withPrefixedPath", "m_246208_"), "(Ljava/lang/String;)Lakr;");
    }

    static jobject withPrefixedPath(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_withPrefixedPath();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_withSuffixedPath() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("g", "withSuffix", "method_48331", "withSuffixedPath", "m_266382_"), "(Ljava/lang/String;)Lakr;");
    }

    static jobject withSuffixedPath(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_withSuffixedPath();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_compareTo() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "compareTo", "method_12833", "compareTo", "compareTo"), "(Lakr;)I");
    }

    static jint compareTo(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_compareTo();
       return MinecraftSDK::env->CallIntMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_toUnderscoreSeparatedString() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "toDebugFileName", "method_36181", "toUnderscoreSeparatedString", "m_179910_"), "()Ljava/lang/String;");
    }

    static jobject toUnderscoreSeparatedString(const jobject& obj) {
                
       const auto methodID = methodID_toUnderscoreSeparatedString();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_toTranslationKey() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "toLanguageKey", "method_42094", "toTranslationKey", "m_214298_"), "()Ljava/lang/String;");
    }

    static jobject toTranslationKey(const jobject& obj) {
                
       const auto methodID = methodID_toTranslationKey();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_toShortTranslationKey() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("e", "toShortLanguageKey", "method_43903", "toShortTranslationKey", "m_214299_"), "()Ljava/lang/String;");
    }

    static jobject toShortTranslationKey(const jobject& obj) {
                
       const auto methodID = methodID_toShortTranslationKey();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID__toTranslationKey() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("h", "toLanguageKey", "method_42093", "toTranslationKey", "m_214296_"), "(Ljava/lang/String;)Ljava/lang/String;");
    }

    static jobject _toTranslationKey(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID__toTranslationKey();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID___toTranslationKey() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "toLanguageKey", "method_48747", "toTranslationKey", "m_269108_"), "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;");
    }

    static jobject __toTranslationKey(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID___toTranslationKey();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_readString() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "readGreedy", "method_58275", "readString", "m_324283_"), "(Lcom/mojang/brigadier/StringReader;)Ljava/lang/String;");
    }

    static jobject readString(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_readString();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_fromCommandInput() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "read", "method_12835", "fromCommandInput", "m_135818_"), "(Lcom/mojang/brigadier/StringReader;)Lakr;");
    }

    static jobject fromCommandInput(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_fromCommandInput();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_fromCommandInputNonEmpty() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "readNonEmpty", "method_58274", "fromCommandInputNonEmpty", "m_320588_"), "(Lcom/mojang/brigadier/StringReader;)Lakr;");
    }

    static jobject fromCommandInputNonEmpty(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_fromCommandInputNonEmpty();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_isCharValid() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "isAllowedInResourceLocation", "method_12831", "isCharValid", "m_135816_"), "(C)Z");
    }

    static jboolean isCharValid(const jchar& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_isCharValid();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_isPathValid() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("i", "isValidPath", "method_20208", "isPathValid", "m_135841_"), "(Ljava/lang/String;)Z");
    }

    static jboolean isPathValid(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_isPathValid();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_isNamespaceValid() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("j", "isValidNamespace", "method_20209", "isNamespaceValid", "m_135843_"), "(Ljava/lang/String;)Z");
    }

    static jboolean isNamespaceValid(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_isNamespaceValid();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_validateNamespace() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("e", "assertValidNamespace", "method_45135", "validateNamespace", "m_245413_"), "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;");
    }

    static jobject validateNamespace(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_validateNamespace();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_isPathCharacterValid() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "validPathChar", "method_29184", "isPathCharacterValid", "m_135828_"), "(C)Z");
    }

    static jboolean isPathCharacterValid(const jchar& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_isPathCharacterValid();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_isNamespaceCharacterValid() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "validNamespaceChar", "method_29185", "isNamespaceCharacterValid", "m_135835_"), "(C)Z");
    }

    static jboolean isNamespaceCharacterValid(const jchar& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_isNamespaceCharacterValid();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_validatePath() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("f", "assertValidPath", "method_45137", "validatePath", "m_245185_"), "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;");
    }

    static jobject validatePath(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_validatePath();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_UTIL_IDENTIFIER_HPP