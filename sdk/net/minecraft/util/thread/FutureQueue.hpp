// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_UTIL_THREAD_FUTUREQUEUE_HPP
#define NET_MINECRAFT_UTIL_THREAD_FUTUREQUEUE_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.util.thread.FutureQueue
 * Remapped: azm
 */
namespace FutureQueue {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("azm", "net/minecraft/util/TaskChainer", "net/minecraft/class_7620", "net/minecraft/util/thread/FutureQueue", "net/minecraft/src/C_241579_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.util.thread.FutureQueue#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LOGGER", "field_39831", "LOGGER", "f_241683_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.thread.FutureQueue#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LOGGER", "field_39831", "LOGGER", "f_241683_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_immediate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("immediate", "immediate", "immediate", "immediate", "m_247687_"), "(Ljava/util/concurrent/Executor;)Lazm;");
    }

    static jobject immediate(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_immediate();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_append() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("append", "append", "append", "append", "m_306542_"), "(Ljava/lang/Runnable;)V");
    }

    static void append(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_append();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__append() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("append", "append", "append", "append", "m_241849_"), "(Ljava/util/concurrent/CompletableFuture;Ljava/util/function/Consumer;)V");
    }

    static void _append(const jobject& obj, const jobject& arg0, const jobject& arg1) {
                
       const auto methodID = methodID__append();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
};

#endif // NET_MINECRAFT_UTIL_THREAD_FUTUREQUEUE_HPP