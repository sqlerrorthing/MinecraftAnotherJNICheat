// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_UTIL_THREAD_TASKQUEUE$PRIORITIZED_HPP
#define NET_MINECRAFT_UTIL_THREAD_TASKQUEUE$PRIORITIZED_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.util.thread.TaskQueue$Prioritized
 * Remapped: bpm$a
 */
namespace TaskQueue$Prioritized {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("bpm$a", "net/minecraft/util/thread/StrictQueue$FixedPriorityQueue", "net/minecraft/class_3847$class_3848", "net/minecraft/util/thread/TaskQueue$Prioritized", "net/minecraft/src/C_454_$C_455_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.util.thread.TaskQueue$Prioritized#queue
    static jobject get_field_queue(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "queues", "field_35032", "queue", "f_185865_"), "[Ljava/util/Queue;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.thread.TaskQueue$Prioritized#queue
    static void set_field_queue(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "queues", "field_35032", "queue", "f_185865_"), "[Ljava/util/Queue;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.thread.TaskQueue$Prioritized#queueSize
    static jobject get_field_queueSize(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "size", "field_35033", "queueSize", "f_185866_"), "Ljava/util/concurrent/atomic/AtomicInteger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.thread.TaskQueue$Prioritized#queueSize
    static void set_field_queueSize(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "size", "field_35033", "queueSize", "f_185866_"), "Ljava/util/concurrent/atomic/AtomicInteger;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_poll() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("d", "pop", "method_17346", "poll", "m_6610_"), "()Ljava/lang/Runnable;");
    }

    static jobject poll(const jobject& obj) {
                
       const auto methodID = methodID_poll();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_add() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "push", "method_16913", "add", "m_6944_"), "(Lbpm$b;)Z");
    }

    static jboolean add(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_add();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_isEmpty() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "isEmpty", "method_16911", "isEmpty", "m_7263_"), "()Z");
    }

    static jboolean isEmpty(const jobject& obj) {
                
       const auto methodID = methodID_isEmpty();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID);
    };
    
    static jmethodID methodID_getSize() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "size", "method_34706", "getSize", "m_142732_"), "()I");
    }

    static jint getSize(const jobject& obj) {
                
       const auto methodID = methodID_getSize();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_UTIL_THREAD_TASKQUEUE$PRIORITIZED_HPP