// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_UTIL_THREAD_TASKQUEUE$PRIORITIZEDTASK_HPP
#define NET_MINECRAFT_UTIL_THREAD_TASKQUEUE$PRIORITIZEDTASK_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.util.thread.TaskQueue$PrioritizedTask
 * Remapped: bpm$b
 */
namespace TaskQueue$PrioritizedTask {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("bpm$b", "net/minecraft/util/thread/StrictQueue$IntRunnable", "net/minecraft/class_3847$class_3907", "net/minecraft/util/thread/TaskQueue$PrioritizedTask", "net/minecraft/src/C_454_$C_456_"));
        }
        return cachedClass;
    };

    // getter for default field net.minecraft.util.thread.TaskQueue$PrioritizedTask#priority
    static jint get_field_priority(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "priority", "field_17278", "priority", "f_18783_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static default field net.minecraft.util.thread.TaskQueue$PrioritizedTask#priority
    static void set_field_priority(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "priority", "field_17278", "priority", "f_18783_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field net.minecraft.util.thread.TaskQueue$PrioritizedTask#runnable
    static jobject get_field_runnable(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "task", "field_17279", "runnable", "f_18784_"), "Ljava/lang/Runnable;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.thread.TaskQueue$PrioritizedTask#runnable
    static void set_field_runnable(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "task", "field_17279", "runnable", "f_18784_"), "Ljava/lang/Runnable;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_run() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("run", "run", "", "", "run"), "()V");
    }

    static void run(const jobject& obj) {
                
       const auto methodID = methodID_run();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_getPriority() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getPriority", "method_17347", "getPriority", "m_18788_"), "()I");
    }

    static jint getPriority(const jobject& obj) {
                
       const auto methodID = methodID_getPriority();
       return MinecraftSDK::env->CallIntMethod(obj, methodID);
    };
    
};

#endif // NET_MINECRAFT_UTIL_THREAD_TASKQUEUE$PRIORITIZEDTASK_HPP