// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_UTIL_THREAD_EXECUTORSAMPLING_HPP
#define NET_MINECRAFT_UTIL_THREAD_EXECUTORSAMPLING_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.util.thread.ExecutorSampling
 * Remapped: bon
 */
namespace ExecutorSampling {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("bon", "net/minecraft/util/profiling/metrics/MetricsRegistry", "net/minecraft/class_5950", "net/minecraft/util/thread/ExecutorSampling", "net/minecraft/src/C_141017_"));
        }
        return cachedClass;
    };

    // getter for static public field net.minecraft.util.thread.ExecutorSampling#INSTANCE
    [[maybe_unused]] static jobject get_field_INSTANCE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "INSTANCE", "field_29555", "INSTANCE", "f_146067_"), "Lbon;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.thread.ExecutorSampling#INSTANCE
    [[maybe_unused]] static void set_field_INSTANCE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "INSTANCE", "field_29555", "INSTANCE", "f_146067_"), "Lbon;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for private field net.minecraft.util.thread.ExecutorSampling#activeExecutors
    static jobject get_field_activeExecutors(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "measuredInstances", "field_29556", "activeExecutors", "f_146068_"), "Ljava/util/WeakHashMap;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.thread.ExecutorSampling#activeExecutors
    static void set_field_activeExecutors(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "measuredInstances", "field_29556", "activeExecutors", "f_146068_"), "Ljava/util/WeakHashMap;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_add() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "add", "method_34702", "add", "m_146072_"), "(Lbop;)V");
    }

    static void add(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_add();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_createSamplers() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "getRegisteredSamplers", "method_37178", "createSamplers", "m_146071_"), "()Ljava/util/List;");
    }

    static jobject createSamplers(const jobject& obj) {
                
       const auto methodID = methodID_createSamplers();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
    static jmethodID methodID_mergeSimilarSamplers() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "aggregateDuplicates", "method_37180", "mergeSimilarSamplers", "m_146076_"), "(Ljava/util/Map;)Ljava/util/List;");
    }

    static jobject mergeSimilarSamplers(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_mergeSimilarSamplers();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_UTIL_THREAD_EXECUTORSAMPLING_HPP