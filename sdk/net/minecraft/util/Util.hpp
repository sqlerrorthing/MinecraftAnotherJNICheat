// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_UTIL_UTIL_HPP
#define NET_MINECRAFT_UTIL_UTIL_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.util.Util
 * Remapped: ad
 */
namespace Util {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("ad", "net/minecraft/Util", "net/minecraft/class_156", "net/minecraft/util/Util", "net/minecraft/src/C_5322_"));
        }
        return cachedClass;
    };

    // getter for static default field net.minecraft.util.Util#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "LOGGER", "field_1129", "LOGGER", "f_137446_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static default field net.minecraft.util.Util#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "LOGGER", "field_1129", "LOGGER", "f_137446_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.util.Util#MAX_PARALLELISM
    [[maybe_unused]] static jint get_field_MAX_PARALLELISM() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "DEFAULT_MAX_THREADS", "field_34891", "MAX_PARALLELISM", "f_183935_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.util.Util#MAX_PARALLELISM
    [[maybe_unused]] static void set_field_MAX_PARALLELISM(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "DEFAULT_MAX_THREADS", "field_34891", "MAX_PARALLELISM", "f_183935_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.util.Util#BACKUP_ATTEMPTS
    [[maybe_unused]] static jint get_field_BACKUP_ATTEMPTS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "DEFAULT_SAFE_FILE_OPERATION_RETRIES", "field_46764", "BACKUP_ATTEMPTS", "f_303362_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.util.Util#BACKUP_ATTEMPTS
    [[maybe_unused]] static void set_field_BACKUP_ATTEMPTS(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "DEFAULT_SAFE_FILE_OPERATION_RETRIES", "field_46764", "BACKUP_ATTEMPTS", "f_303362_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.util.Util#MAX_BG_THREADS_PROPERTY
    [[maybe_unused]] static jobject get_field_MAX_BG_THREADS_PROPERTY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "MAX_THREADS_SYSTEM_PROPERTY", "field_34892", "MAX_BG_THREADS_PROPERTY", "f_183936_"), "Ljava/lang/String;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.util.Util#MAX_BG_THREADS_PROPERTY
    [[maybe_unused]] static void set_field_MAX_BG_THREADS_PROPERTY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "MAX_THREADS_SYSTEM_PROPERTY", "field_34892", "MAX_BG_THREADS_PROPERTY", "f_183936_"), "Ljava/lang/String;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.util.Util#MAIN_WORKER_EXECUTOR
    [[maybe_unused]] static jobject get_field_MAIN_WORKER_EXECUTOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "BACKGROUND_EXECUTOR", "field_18035", "MAIN_WORKER_EXECUTOR", "f_137444_"), "Ljava/util/concurrent/ExecutorService;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.util.Util#MAIN_WORKER_EXECUTOR
    [[maybe_unused]] static void set_field_MAIN_WORKER_EXECUTOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "BACKGROUND_EXECUTOR", "field_18035", "MAIN_WORKER_EXECUTOR", "f_137444_"), "Ljava/util/concurrent/ExecutorService;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.util.Util#IO_WORKER_EXECUTOR
    [[maybe_unused]] static jobject get_field_IO_WORKER_EXECUTOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "IO_POOL", "field_24477", "IO_WORKER_EXECUTOR", "f_137445_"), "Ljava/util/concurrent/ExecutorService;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.util.Util#IO_WORKER_EXECUTOR
    [[maybe_unused]] static void set_field_IO_WORKER_EXECUTOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "IO_POOL", "field_24477", "IO_WORKER_EXECUTOR", "f_137445_"), "Ljava/util/concurrent/ExecutorService;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.util.Util#DOWNLOAD_WORKER_EXECUTOR
    [[maybe_unused]] static jobject get_field_DOWNLOAD_WORKER_EXECUTOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "DOWNLOAD_POOL", "field_47571", "DOWNLOAD_WORKER_EXECUTOR", "f_302521_"), "Ljava/util/concurrent/ExecutorService;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.util.Util#DOWNLOAD_WORKER_EXECUTOR
    [[maybe_unused]] static void set_field_DOWNLOAD_WORKER_EXECUTOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "DOWNLOAD_POOL", "field_47571", "DOWNLOAD_WORKER_EXECUTOR", "f_302521_"), "Ljava/util/concurrent/ExecutorService;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.util.Util#DATE_TIME_FORMATTER
    [[maybe_unused]] static jobject get_field_DATE_TIME_FORMATTER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "FILENAME_DATE_TIME_FORMATTER", "field_39824", "DATE_TIME_FORMATTER", "f_241646_"), "Ljava/time/format/DateTimeFormatter;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.util.Util#DATE_TIME_FORMATTER
    [[maybe_unused]] static void set_field_DATE_TIME_FORMATTER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "FILENAME_DATE_TIME_FORMATTER", "field_39824", "DATE_TIME_FORMATTER", "f_241646_"), "Ljava/time/format/DateTimeFormatter;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.Util#field_46220
    [[maybe_unused]] static jint get_field_field_46220() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LINEAR_LOOKUP_THRESHOLD", "field_46220", "field_46220", "f_303450_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.Util#field_46220
    [[maybe_unused]] static void set_field_field_46220(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LINEAR_LOOKUP_THRESHOLD", "field_46220", "field_46220", "f_303450_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.util.Util#SUPPORTED_URI_PROTOCOLS
    [[maybe_unused]] static jobject get_field_SUPPORTED_URI_PROTOCOLS() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "ALLOWED_UNTRUSTED_LINK_PROTOCOLS", "field_52196", "SUPPORTED_URI_PROTOCOLS", "f_337259_"), "Ljava/util/Set;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.util.Util#SUPPORTED_URI_PROTOCOLS
    [[maybe_unused]] static void set_field_SUPPORTED_URI_PROTOCOLS(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "ALLOWED_UNTRUSTED_LINK_PROTOCOLS", "field_52196", "SUPPORTED_URI_PROTOCOLS", "f_337259_"), "Ljava/util/Set;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.Util#field_45714
    [[maybe_unused]] static jlong get_field_field_45714() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "NANOS_PER_MILLI", "field_45714", "field_45714", "f_291561_"), "J");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticLongField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.Util#field_45714
    [[maybe_unused]] static void set_field_field_45714(const jlong &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "NANOS_PER_MILLI", "field_45714", "field_45714", "f_291561_"), "J");
        return MinecraftSDK::env->SetStaticLongField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.Util#nanoTimeSupplier
    [[maybe_unused]] static jobject get_field_nanoTimeSupplier() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "timeSource", "field_1128", "nanoTimeSupplier", "f_137440_"), "Lazo$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.Util#nanoTimeSupplier
    [[maybe_unused]] static void set_field_nanoTimeSupplier(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "timeSource", "field_1128", "nanoTimeSupplier", "f_137440_"), "Lazo$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.Util#TICKER
    [[maybe_unused]] static jobject get_field_TICKER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "TICKER", "field_37250", "TICKER", "f_211544_"), "Lcom/google/common/base/Ticker;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.Util#TICKER
    [[maybe_unused]] static void set_field_TICKER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "TICKER", "field_37250", "TICKER", "f_211544_"), "Lcom/google/common/base/Ticker;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.Util#NIL_UUID
    [[maybe_unused]] static jobject get_field_NIL_UUID() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "NIL_UUID", "field_25140", "NIL_UUID", "f_137441_"), "Ljava/util/UUID;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.Util#NIL_UUID
    [[maybe_unused]] static void set_field_NIL_UUID(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "NIL_UUID", "field_25140", "NIL_UUID", "f_137441_"), "Ljava/util/UUID;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field net.minecraft.util.Util#JAR_FILE_SYSTEM_PROVIDER
    [[maybe_unused]] static jobject get_field_JAR_FILE_SYSTEM_PROVIDER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "ZIP_FILE_SYSTEM_PROVIDER", "field_33859", "JAR_FILE_SYSTEM_PROVIDER", "f_143778_"), "Ljava/nio/file/spi/FileSystemProvider;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field net.minecraft.util.Util#JAR_FILE_SYSTEM_PROVIDER
    [[maybe_unused]] static void set_field_JAR_FILE_SYSTEM_PROVIDER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "ZIP_FILE_SYSTEM_PROVIDER", "field_33859", "JAR_FILE_SYSTEM_PROVIDER", "f_143778_"), "Ljava/nio/file/spi/FileSystemProvider;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.util.Util#missingBreakpointHandler
    [[maybe_unused]] static jobject get_field_missingBreakpointHandler() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "thePauser", "field_34893", "missingBreakpointHandler", "f_183937_"), "Ljava/util/function/Consumer;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.util.Util#missingBreakpointHandler
    [[maybe_unused]] static void set_field_missingBreakpointHandler(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "thePauser", "field_34893", "missingBreakpointHandler", "f_183937_"), "Ljava/util/function/Consumer;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_toMap() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "toMap", "method_664", "toMap", "m_137448_"), "()Ljava/util/stream/Collector;");
    }

    static jobject toMap() {
       const auto clazz = self();
       const auto methodID = methodID_toMap();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_toArrayList() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "toMutableList", "method_58579", "toArrayList", "m_323807_"), "()Ljava/util/stream/Collector;");
    }

    static jobject toArrayList() {
       const auto clazz = self();
       const auto methodID = methodID_toArrayList();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_getValueAsString() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getPropertyName", "method_650", "getValueAsString", "m_137453_"), "(Lduf;Ljava/lang/Object;)Ljava/lang/String;");
    }

    static jobject getValueAsString(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_getValueAsString();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_createTranslationKey() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "makeDescriptionId", "method_646", "createTranslationKey", "m_137492_"), "(Ljava/lang/String;Lakr;)Ljava/lang/String;");
    }

    static jobject createTranslationKey(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_createTranslationKey();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getMeasuringTimeMs() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "getMillis", "method_658", "getMeasuringTimeMs", "m_137550_"), "()J");
    }

    static jlong getMeasuringTimeMs() {
       const auto clazz = self();
       const auto methodID = methodID_getMeasuringTimeMs();
       return MinecraftSDK::env->CallStaticLongMethod(clazz, methodID);
    };
    
    static jmethodID methodID_getMeasuringTimeNano() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("d", "getNanos", "method_648", "getMeasuringTimeNano", "m_137569_"), "()J");
    }

    static jlong getMeasuringTimeNano() {
       const auto clazz = self();
       const auto methodID = methodID_getMeasuringTimeNano();
       return MinecraftSDK::env->CallStaticLongMethod(clazz, methodID);
    };
    
    static jmethodID methodID_getEpochTimeMs() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("e", "getEpochMillis", "method_659", "getEpochTimeMs", "m_137574_"), "()J");
    }

    static jlong getEpochTimeMs() {
       const auto clazz = self();
       const auto methodID = methodID_getEpochTimeMs();
       return MinecraftSDK::env->CallStaticLongMethod(clazz, methodID);
    };
    
    static jmethodID methodID_getFormattedCurrentTime() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("f", "getFilenameFormattedDateTime", "method_44893", "getFormattedCurrentTime", "m_241986_"), "()Ljava/lang/String;");
    }

    static jobject getFormattedCurrentTime() {
       const auto clazz = self();
       const auto methodID = methodID_getFormattedCurrentTime();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_createWorker() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "makeExecutor", "method_28122", "createWorker", "m_137477_"), "(Ljava/lang/String;)Ljava/util/concurrent/ExecutorService;");
    }

    static jobject createWorker(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_createWorker();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getMaxBackgroundThreads() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("n", "getMaxThreads", "method_38648", "getMaxBackgroundThreads", "m_183993_"), "()I");
    }

    static jint getMaxBackgroundThreads() {
       const auto clazz = self();
       const auto methodID = methodID_getMaxBackgroundThreads();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID);
    };
    
    static jmethodID methodID_getMainWorkerExecutor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("g", "backgroundExecutor", "method_18349", "getMainWorkerExecutor", "m_183991_"), "()Ljava/util/concurrent/ExecutorService;");
    }

    static jobject getMainWorkerExecutor() {
       const auto clazz = self();
       const auto methodID = methodID_getMainWorkerExecutor();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_getIoWorkerExecutor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("h", "ioPool", "method_27958", "getIoWorkerExecutor", "m_183992_"), "()Ljava/util/concurrent/ExecutorService;");
    }

    static jobject getIoWorkerExecutor() {
       const auto clazz = self();
       const auto methodID = methodID_getIoWorkerExecutor();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_getDownloadWorkerExecutor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("i", "nonCriticalIoPool", "method_55473", "getDownloadWorkerExecutor", "m_306705_"), "()Ljava/util/concurrent/ExecutorService;");
    }

    static jobject getDownloadWorkerExecutor() {
       const auto clazz = self();
       const auto methodID = methodID_getDownloadWorkerExecutor();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_shutdownExecutors() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("j", "shutdownExecutors", "method_18350", "shutdownExecutors", "m_137580_"), "()V");
    }

    static void shutdownExecutors() {
       const auto clazz = self();
       const auto methodID = methodID_shutdownExecutors();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID);
    };
    
    static jmethodID methodID_attemptShutdown() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "shutdownExecutor", "method_27957", "attemptShutdown", "m_137531_"), "(Ljava/util/concurrent/ExecutorService;)V");
    }

    static void attemptShutdown(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_attemptShutdown();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_createIoWorker() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "makeIoExecutor", "method_27959", "createIoWorker", "m_137586_"), "(Ljava/lang/String;Z)Ljava/util/concurrent/ExecutorService;");
    }

    static jobject createIoWorker(const jobject& arg0, const jboolean& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_createIoWorker();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_throwUnchecked() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "throwAsRuntime", "method_24155", "throwUnchecked", "m_137559_"), "(Ljava/lang/Throwable;)V");
    }

    static void throwUnchecked(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_throwUnchecked();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_uncaughtExceptionHandler() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "onThreadException", "method_18347", "uncaughtExceptionHandler", "m_137495_"), "(Ljava/lang/Thread;Ljava/lang/Throwable;)V");
    }

    static void uncaughtExceptionHandler(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_uncaughtExceptionHandler();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getChoiceType() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "fetchChoiceType", "method_29187", "getChoiceType", "m_137456_"), "(Lcom/mojang/datafixers/DSL$TypeReference;Ljava/lang/String;)Lcom/mojang/datafixers/types/Type;");
    }

    static jobject getChoiceType(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_getChoiceType();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getChoiceTypeInternal() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "doFetchChoiceType", "method_29191", "getChoiceTypeInternal", "m_137551_"), "(Lcom/mojang/datafixers/DSL$TypeReference;Ljava/lang/String;)Lcom/mojang/datafixers/types/Type;");
    }

    static jobject getChoiceTypeInternal(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_getChoiceTypeInternal();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_debugRunnable() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "wrapThreadWithTaskName", "method_33787", "debugRunnable", "m_143787_"), "(Ljava/lang/String;Ljava/lang/Runnable;)Ljava/lang/Runnable;");
    }

    static jobject debugRunnable(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_debugRunnable();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_debugSupplier() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "wrapThreadWithTaskName", "method_37910", "debugSupplier", "m_183946_"), "(Ljava/lang/String;Ljava/util/function/Supplier;)Ljava/util/function/Supplier;");
    }

    static jobject debugSupplier(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_debugSupplier();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_registryValueToString() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getRegisteredName", "method_57107", "registryValueToString", "m_322642_"), "(Ljz;Ljava/lang/Object;)Ljava/lang/String;");
    }

    static jobject registryValueToString(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_registryValueToString();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_allOf() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "allOf", "method_56613", "allOf", "m_322468_"), "(Ljava/util/List;)Ljava/util/function/Predicate;");
    }

    static jobject allOf(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_allOf();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_anyOf() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "anyOf", "method_56616", "anyOf", "m_321702_"), "(Ljava/util/List;)Ljava/util/function/Predicate;");
    }

    static jobject anyOf(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_anyOf();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_isSymmetrical() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "isSymmetrical", "method_59901", "isSymmetrical", "m_340468_"), "(IILjava/util/List;)Z");
    }

    static jboolean isSymmetrical(const jint& arg0, const jint& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_isSymmetrical();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_getOperatingSystem() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("k", "getPlatform", "method_668", "getOperatingSystem", "m_137581_"), "()Lad$a;");
    }

    static jobject getOperatingSystem() {
       const auto clazz = self();
       const auto methodID = methodID_getOperatingSystem();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_validateUri() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "parseAndValidateUntrustedUri", "method_60931", "validateUri", "m_340630_"), "(Ljava/lang/String;)Ljava/net/URI;");
    }

    static jobject validateUri(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_validateUri();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getJVMFlags() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("l", "getVmArguments", "method_651", "getJVMFlags", "m_137582_"), "()Ljava/util/stream/Stream;");
    }

    static jobject getJVMFlags() {
       const auto clazz = self();
       const auto methodID = methodID_getJVMFlags();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_getLast() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "lastOf", "method_20793", "getLast", "m_137509_"), "(Ljava/util/List;)Ljava/lang/Object;");
    }

    static jobject getLast(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getLast();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_next() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "findNextInIterable", "method_660", "next", "m_137466_"), "(Ljava/lang/Iterable;Ljava/lang/Object;)Ljava/lang/Object;");
    }

    static jobject next(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_next();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_previous() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "findPreviousInIterable", "method_645", "previous", "m_137554_"), "(Ljava/lang/Iterable;Ljava/lang/Object;)Ljava/lang/Object;");
    }

    static jobject previous(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_previous();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_make() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "make", "method_656", "make", "m_137537_"), "(Ljava/util/function/Supplier;)Ljava/lang/Object;");
    }

    static jobject make(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_make();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID__make() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "make", "method_654", "make", "m_137469_"), "(Ljava/lang/Object;Ljava/util/function/Consumer;)Ljava/lang/Object;");
    }

    static jobject _make(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID__make();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_combineSafe() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("d", "sequence", "method_33791", "combineSafe", "m_137567_"), "(Ljava/util/List;)Ljava/util/concurrent/CompletableFuture;");
    }

    static jobject combineSafe(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_combineSafe();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_combine() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("e", "sequenceFailFast", "method_652", "combine", "m_143840_"), "(Ljava/util/List;)Ljava/util/concurrent/CompletableFuture;");
    }

    static jobject combine(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_combine();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_combineCancellable() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("f", "sequenceFailFastAndCancel", "method_43373", "combineCancellable", "m_214684_"), "(Ljava/util/List;)Ljava/util/concurrent/CompletableFuture;");
    }

    static jobject combineCancellable(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_combineCancellable();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID__combine() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "fallibleSequence", "method_43370", "combine", "m_214631_"), "(Ljava/util/List;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;");
    }

    static jobject _combine(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID__combine();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_ifPresentOrElse() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "ifElse", "method_17974", "ifPresentOrElse", "m_137521_"), "(Ljava/util/Optional;Ljava/util/function/Consumer;Ljava/lang/Runnable;)Ljava/util/Optional;");
    }

    static jobject ifPresentOrElse(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_ifPresentOrElse();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID__debugSupplier() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "name", "method_41238", "debugSupplier", "m_214655_"), "(Ljava/util/function/Supplier;Ljava/util/function/Supplier;)Ljava/util/function/Supplier;");
    }

    static jobject _debugSupplier(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID__debugSupplier();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__debugRunnable() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "name", "method_18839", "debugRunnable", "m_137474_"), "(Ljava/lang/Runnable;Ljava/util/function/Supplier;)Ljava/lang/Runnable;");
    }

    static jobject _debugRunnable(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID__debugRunnable();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_error() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "logAndPauseIfInIde", "method_33559", "error", "m_143785_"), "(Ljava/lang/String;)V");
    }

    static void error(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_error();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID__error() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "logAndPauseIfInIde", "method_39977", "error", "m_200890_"), "(Ljava/lang/String;Ljava/lang/Throwable;)V");
    }

    static void _error(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID__error();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_throwOrPause() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "pauseInIde", "method_22320", "throwOrPause", "m_137570_"), "(Ljava/lang/Throwable;)Ljava/lang/Throwable;");
    }

    static jobject throwOrPause(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_throwOrPause();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_setMissingBreakpointHandler() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "setPause", "method_38646", "setMissingBreakpointHandler", "m_183969_"), "(Ljava/util/function/Consumer;)V");
    }

    static void setMissingBreakpointHandler(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_setMissingBreakpointHandler();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_pause() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("d", "doPause", "method_33560", "pause", "m_183984_"), "(Ljava/lang/String;)V");
    }

    static void pause(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_pause();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getInnermostMessage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "describeError", "method_22321", "getInnermostMessage", "m_137575_"), "(Ljava/lang/Throwable;)Ljava/lang/String;");
    }

    static jobject getInnermostMessage(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getInnermostMessage();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getRandom() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getRandom", "method_27173", "getRandom", "m_214670_"), "([Ljava/lang/Object;Layw;)Ljava/lang/Object;");
    }

    static jobject getRandom(const jarray& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_getRandom();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID__getRandom() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getRandom", "method_27172", "getRandom", "m_214667_"), "([ILayw;)I");
    }

    static jint _getRandom(const jarray& arg0, const jint& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID__getRandom();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID___getRandom() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "getRandom", "method_32309", "getRandom", "m_214621_"), "(Ljava/util/List;Layw;)Ljava/lang/Object;");
    }

    static jobject __getRandom(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID___getRandom();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_getRandomOrEmpty() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "getRandomSafe", "method_40083", "getRandomOrEmpty", "m_214676_"), "(Ljava/util/List;Layw;)Ljava/util/Optional;");
    }

    static jobject getRandomOrEmpty(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_getRandomOrEmpty();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_renameTask() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "createRenamer", "method_30625", "renameTask", "m_137502_"), "(Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljava/util/function/BooleanSupplier;");
    }

    static jobject renameTask(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_renameTask();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_deleteTask() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "createDeleter", "method_30624", "deleteTask", "m_137500_"), "(Ljava/nio/file/Path;)Ljava/util/function/BooleanSupplier;");
    }

    static jobject deleteTask(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_deleteTask();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_deletionVerifyTask() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "createFileDeletedCheck", "method_30628", "deletionVerifyTask", "m_137561_"), "(Ljava/nio/file/Path;)Ljava/util/function/BooleanSupplier;");
    }

    static jobject deletionVerifyTask(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_deletionVerifyTask();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_existenceCheckTask() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "createFileCreatedCheck", "method_30629", "existenceCheckTask", "m_137572_"), "(Ljava/nio/file/Path;)Ljava/util/function/BooleanSupplier;");
    }

    static jobject existenceCheckTask(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_existenceCheckTask();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_attemptTasks() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "executeInSequence", "method_30627", "attemptTasks", "m_137548_"), "([Ljava/util/function/BooleanSupplier;)Z");
    }

    static jboolean attemptTasks(const jarray& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_attemptTasks();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__attemptTasks() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "runWithRetries", "method_30622", "attemptTasks", "m_137449_"), "(ILjava/lang/String;[Ljava/util/function/BooleanSupplier;)Z");
    }

    static jboolean _attemptTasks(const jint& arg0, const jobject& arg1, const jarray& arg2, const jobject& arg3) {
       const auto clazz = self();
       const auto methodID = methodID__attemptTasks();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_backupAndReplace() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "safeReplaceFile", "method_30626", "backupAndReplace", "m_137505_"), "(Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/nio/file/Path;)V");
    }

    static void backupAndReplace(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_backupAndReplace();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID__backupAndReplace() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "safeReplaceOrMoveFile", "method_41204", "backupAndReplace", "m_212224_"), "(Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/nio/file/Path;Z)Z");
    }

    static jboolean _backupAndReplace(const jobject& arg0, const jobject& arg1, const jobject& arg2, const jboolean& arg3) {
       const auto clazz = self();
       const auto methodID = methodID__backupAndReplace();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_moveCursor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "offsetByCodepoints", "method_27761", "moveCursor", "m_137479_"), "(Ljava/lang/String;II)I");
    }

    static jint moveCursor(const jobject& arg0, const jint& arg1, const jint& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_moveCursor();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_addPrefix() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "prefix", "method_29188", "addPrefix", "m_137489_"), "(Ljava/lang/String;Ljava/util/function/Consumer;)Ljava/util/function/Consumer;");
    }

    static jobject addPrefix(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_addPrefix();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_decodeFixedLengthArray() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "fixedSize", "method_29190", "decodeFixedLengthArray", "m_137539_"), "(Ljava/util/stream/IntStream;I)Lcom/mojang/serialization/DataResult;");
    }

    static jobject decodeFixedLengthArray(const jobject& arg0, const jint& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_decodeFixedLengthArray();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__decodeFixedLengthArray() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "fixedSize", "method_51822", "decodeFixedLengthArray", "m_287262_"), "(Ljava/util/stream/LongStream;I)Lcom/mojang/serialization/DataResult;");
    }

    static jobject _decodeFixedLengthArray(const jobject& arg0, const jint& arg1) {
       const auto clazz = self();
       const auto methodID = methodID__decodeFixedLengthArray();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_decodeFixedLengthList() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "fixedSize", "method_33141", "decodeFixedLengthList", "m_143795_"), "(Ljava/util/List;I)Lcom/mojang/serialization/DataResult;");
    }

    static jobject decodeFixedLengthList(const jobject& arg0, const jint& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_decodeFixedLengthList();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_startTimerHack() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("m", "startTimerHackThread", "method_29476", "startTimerHack", "m_137584_"), "()V");
    }

    static void startTimerHack() {
       const auto clazz = self();
       const auto methodID = methodID_startTimerHack();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID);
    };
    
    static jmethodID methodID_relativeCopy() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "copyBetweenDirs", "method_29775", "relativeCopy", "m_137563_"), "(Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/nio/file/Path;)V");
    }

    static void relativeCopy(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_relativeCopy();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_replaceInvalidChars() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "sanitizeName", "method_30309", "replaceInvalidChars", "m_137483_"), "(Ljava/lang/String;Lm;)Ljava/lang/String;");
    }

    static jobject replaceInvalidChars(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_replaceInvalidChars();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_cachedMapper() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "singleKeyCache", "method_48746", "cachedMapper", "m_269175_"), "(Ljava/util/function/Function;)Laze;");
    }

    static jobject cachedMapper(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_cachedMapper();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_memoize() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "memoize", "method_34866", "memoize", "m_143827_"), "(Ljava/util/function/Function;)Ljava/util/function/Function;");
    }

    static jobject memoize(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_memoize();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID__memoize() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "memoize", "method_34865", "memoize", "m_143821_"), "(Ljava/util/function/BiFunction;)Ljava/util/function/BiFunction;");
    }

    static jobject _memoize(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID__memoize();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_copyShuffled() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "toShuffledList", "method_43252", "copyShuffled", "m_214661_"), "(Ljava/util/stream/Stream;Layw;)Ljava/util/List;");
    }

    static jobject copyShuffled(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_copyShuffled();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_shuffle() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "toShuffledList", "method_43251", "shuffle", "m_214658_"), "(Ljava/util/stream/IntStream;Layw;)Lit/unimi/dsi/fastutil/ints/IntArrayList;");
    }

    static jobject shuffle(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_shuffle();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__copyShuffled() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "shuffledCopy", "method_43253", "copyShuffled", "m_214681_"), "([Ljava/lang/Object;Layw;)Ljava/util/List;");
    }

    static jobject _copyShuffled(const jarray& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID__copyShuffled();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID___copyShuffled() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "shuffledCopy", "method_43027", "copyShuffled", "m_214611_"), "(Lit/unimi/dsi/fastutil/objects/ObjectArrayList;Layw;)Ljava/util/List;");
    }

    static jobject __copyShuffled(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID___copyShuffled();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__shuffle() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "shuffle", "method_43028", "shuffle", "m_214673_"), "(Ljava/util/List;Layw;)V");
    }

    static void _shuffle(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID__shuffle();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_waitAndApply() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "blockUntilDone", "method_43499", "waitAndApply", "m_214679_"), "(Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;");
    }

    static jobject waitAndApply(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_waitAndApply();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID__waitAndApply() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "blockUntilDone", "method_43498", "waitAndApply", "m_214652_"), "(Ljava/util/function/Function;Ljava/util/function/Predicate;)Ljava/lang/Object;");
    }

    static jobject _waitAndApply(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID__waitAndApply();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_lastIndexGetter() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("g", "createIndexLookup", "method_43658", "lastIndexGetter", "m_214686_"), "(Ljava/util/List;)Ljava/util/function/ToIntFunction;");
    }

    static jobject lastIndexGetter(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_lastIndexGetter();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_lastIdentityIndexGetter() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("h", "createIndexIdentityLookup", "method_53909", "lastIdentityIndexGetter", "m_307438_"), "(Ljava/util/List;)Ljava/util/function/ToIntFunction;");
    }

    static jobject lastIdentityIndexGetter(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_lastIdentityIndexGetter();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_apply() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "writeAndReadTypedOrThrow", "method_54907", "apply", "m_306942_"), "(Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/types/Type;Ljava/util/function/UnaryOperator;)Lcom/mojang/datafixers/Typed;");
    }

    static jobject apply(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_apply();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_readTyped() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "readTypedOrThrow", "method_54908", "readTyped", "m_305473_"), "(Lcom/mojang/datafixers/types/Type;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/Typed;");
    }

    static jobject readTyped(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_readTyped();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__readTyped() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "readTypedOrThrow", "method_55333", "readTyped", "m_306397_"), "(Lcom/mojang/datafixers/types/Type;Lcom/mojang/serialization/Dynamic;Z)Lcom/mojang/datafixers/Typed;");
    }

    static jobject _readTyped(const jobject& arg0, const jobject& arg1, const jboolean& arg2) {
       const auto clazz = self();
       const auto methodID = methodID__readTyped();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_withAppended() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "copyAndAdd", "method_57108", "withAppended", "m_324319_"), "(Ljava/util/List;Ljava/lang/Object;)Ljava/util/List;");
    }

    static jobject withAppended(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_withAppended();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_withPrepended() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "copyAndAdd", "method_58272", "withPrepended", "m_321242_"), "(Ljava/lang/Object;Ljava/util/List;)Ljava/util/List;");
    }

    static jobject withPrepended(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_withPrepended();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_mapWith() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "copyAndPut", "method_57109", "mapWith", "m_321632_"), "(Ljava/util/Map;Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map;");
    }

    static jobject mapWith(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_mapWith();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
};

#endif // NET_MINECRAFT_UTIL_UTIL_HPP