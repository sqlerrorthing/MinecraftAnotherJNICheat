// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_UTIL_DELEGATINGDATAOUTPUT_HPP
#define NET_MINECRAFT_UTIL_DELEGATINGDATAOUTPUT_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.util.DelegatingDataOutput
 * Remapped: axr
 */
namespace DelegatingDataOutput {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("axr", "net/minecraft/util/DelegateDataOutput", "net/minecraft/class_8941", "net/minecraft/util/DelegatingDataOutput", "net/minecraft/src/C_302154_"));
        }
        return cachedClass;
    };

    // getter for private field net.minecraft.util.DelegatingDataOutput#delegate
    static jobject get_field_delegate(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "parent", "field_47218", "delegate", "f_302684_"), "Ljava/io/DataOutput;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field net.minecraft.util.DelegatingDataOutput#delegate
    static void set_field_delegate(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "parent", "field_47218", "delegate", "f_302684_"), "Ljava/io/DataOutput;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    static jmethodID methodID_write() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("write", "write", "write", "write", "write"), "(I)V");
    }

    static void write(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_write();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID__write() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("write", "write", "write", "write", "write"), "([B)V");
    }

    static void _write(const jobject& obj, const jarray& arg0, const jbyte& arg1) {
                
       const auto methodID = methodID__write();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1);
    };
    
    static jmethodID methodID___write() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("write", "write", "write", "write", "write"), "([BII)V");
    }

    static void __write(const jobject& obj, const jarray& arg0, const jbyte& arg1, const jint& arg2, const jint& arg3) {
                
       const auto methodID = methodID___write();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_writeBoolean() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("writeBoolean", "writeBoolean", "writeBoolean", "writeBoolean", "writeBoolean"), "(Z)V");
    }

    static void writeBoolean(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_writeBoolean();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_writeByte() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("writeByte", "writeByte", "writeByte", "writeByte", "writeByte"), "(I)V");
    }

    static void writeByte(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_writeByte();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_writeShort() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("writeShort", "writeShort", "writeShort", "writeShort", "writeShort"), "(I)V");
    }

    static void writeShort(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_writeShort();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_writeChar() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("writeChar", "writeChar", "writeChar", "writeChar", "writeChar"), "(I)V");
    }

    static void writeChar(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_writeChar();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_writeInt() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("writeInt", "writeInt", "writeInt", "writeInt", "writeInt"), "(I)V");
    }

    static void writeInt(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_writeInt();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_writeLong() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("writeLong", "writeLong", "writeLong", "writeLong", "writeLong"), "(J)V");
    }

    static void writeLong(const jobject& obj, const jlong& arg0) {
                
       const auto methodID = methodID_writeLong();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_writeFloat() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("writeFloat", "writeFloat", "writeFloat", "writeFloat", "writeFloat"), "(F)V");
    }

    static void writeFloat(const jobject& obj, const jfloat& arg0) {
                
       const auto methodID = methodID_writeFloat();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_writeDouble() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("writeDouble", "writeDouble", "writeDouble", "writeDouble", "writeDouble"), "(D)V");
    }

    static void writeDouble(const jobject& obj, const jdouble& arg0) {
                
       const auto methodID = methodID_writeDouble();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_writeBytes() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("writeBytes", "writeBytes", "writeBytes", "writeBytes", "writeBytes"), "(Ljava/lang/String;)V");
    }

    static void writeBytes(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_writeBytes();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_writeChars() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("writeChars", "writeChars", "writeChars", "writeChars", "writeChars"), "(Ljava/lang/String;)V");
    }

    static void writeChars(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_writeChars();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_writeUTF() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("writeUTF", "writeUTF", "writeUTF", "writeUTF", "writeUTF"), "(Ljava/lang/String;)V");
    }

    static void writeUTF(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_writeUTF();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_UTIL_DELEGATINGDATAOUTPUT_HPP