// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_UTIL_PATHUTIL_HPP
#define NET_MINECRAFT_UTIL_PATHUTIL_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.util.PathUtil
 * Remapped: v
 */
namespace PathUtil {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("v", "net/minecraft/FileUtil", "net/minecraft/class_4239", "net/minecraft/util/PathUtil", "net/minecraft/src/C_5144_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.util.PathUtil#FILE_NAME_WITH_COUNT
    [[maybe_unused]] static jobject get_field_FILE_NAME_WITH_COUNT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "COPY_COUNTER_PATTERN", "field_18956", "FILE_NAME_WITH_COUNT", "f_133725_"), "Ljava/util/regex/Pattern;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.util.PathUtil#FILE_NAME_WITH_COUNT
    [[maybe_unused]] static void set_field_FILE_NAME_WITH_COUNT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "COPY_COUNTER_PATTERN", "field_18956", "FILE_NAME_WITH_COUNT", "f_133725_"), "Ljava/util/regex/Pattern;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.util.PathUtil#MAX_NAME_LENGTH
    [[maybe_unused]] static jint get_field_MAX_NAME_LENGTH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "MAX_FILE_NAME", "field_33384", "MAX_NAME_LENGTH", "f_179920_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.util.PathUtil#MAX_NAME_LENGTH
    [[maybe_unused]] static void set_field_MAX_NAME_LENGTH(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "MAX_FILE_NAME", "field_33384", "MAX_NAME_LENGTH", "f_179920_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.util.PathUtil#RESERVED_WINDOWS_NAMES
    [[maybe_unused]] static jobject get_field_RESERVED_WINDOWS_NAMES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "RESERVED_WINDOWS_FILENAMES", "field_18955", "RESERVED_WINDOWS_NAMES", "f_133726_"), "Ljava/util/regex/Pattern;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.util.PathUtil#RESERVED_WINDOWS_NAMES
    [[maybe_unused]] static void set_field_RESERVED_WINDOWS_NAMES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "RESERVED_WINDOWS_FILENAMES", "field_18955", "RESERVED_WINDOWS_NAMES", "f_133726_"), "Ljava/util/regex/Pattern;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.util.PathUtil#VALID_FILE_NAME
    [[maybe_unused]] static jobject get_field_VALID_FILE_NAME() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "STRICT_PATH_SEGMENT_CHECK", "field_40712", "VALID_FILE_NAME", "f_244114_"), "Ljava/util/regex/Pattern;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.util.PathUtil#VALID_FILE_NAME
    [[maybe_unused]] static void set_field_VALID_FILE_NAME(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "STRICT_PATH_SEGMENT_CHECK", "field_40712", "VALID_FILE_NAME", "f_244114_"), "Ljava/util/regex/Pattern;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID_replaceInvalidChars() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "sanitizeName", "method_61105", "replaceInvalidChars", "m_339677_"), "(Ljava/lang/String;)Ljava/lang/String;");
    }

    static jobject replaceInvalidChars(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_replaceInvalidChars();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getNextUniqueName() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "findAvailableName", "method_19773", "getNextUniqueName", "m_133730_"), "(Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;");
    }

    static jobject getNextUniqueName(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_getNextUniqueName();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_isNormal() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "isPathNormalized", "method_20200", "isNormal", "m_133728_"), "(Ljava/nio/file/Path;)Z");
    }

    static jboolean isNormal(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_isNormal();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_isAllowedName() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "isPathPortable", "method_20201", "isAllowedName", "m_133734_"), "(Ljava/nio/file/Path;)Z");
    }

    static jboolean isAllowedName(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_isAllowedName();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getResourcePath() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "createPathToResource", "method_20202", "getResourcePath", "m_133736_"), "(Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;)Ljava/nio/file/Path;");
    }

    static jobject getResourcePath(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_getResourcePath();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_getPosixFullPath() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "getFullResourcePath", "method_34675", "getPosixFullPath", "m_179922_"), "(Ljava/lang/String;)Ljava/lang/String;");
    }

    static jobject getPosixFullPath(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_getPosixFullPath();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_normalizeToPosix() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "normalizeResourcePath", "method_34676", "normalizeToPosix", "m_179924_"), "(Ljava/lang/String;)Ljava/lang/String;");
    }

    static jobject normalizeToPosix(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_normalizeToPosix();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_split() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("d", "decomposePath", "method_46346", "split", "m_245538_"), "(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;");
    }

    static jobject split(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_split();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getPath() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "resolvePath", "method_46344", "getPath", "m_245247_"), "(Ljava/nio/file/Path;Ljava/util/List;)Ljava/nio/file/Path;");
    }

    static jobject getPath(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_getPath();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_isFileNameValid() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("e", "isValidStrictPathSegment", "method_46347", "isFileNameValid", "m_245636_"), "(Ljava/lang/String;)Z");
    }

    static jboolean isFileNameValid(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_isFileNameValid();
       return MinecraftSDK::env->CallStaticBooleanMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_validatePath() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "validatePath", "method_46345", "validatePath", "m_245411_"), "([Ljava/lang/String;)V");
    }

    static void validatePath(const jarray& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_validatePath();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_createDirectories() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("c", "createDirectoriesSafe", "method_47525", "createDirectories", "m_257659_"), "(Ljava/nio/file/Path;)V");
    }

    static void createDirectories(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_createDirectories();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_UTIL_PATHUTIL_HPP