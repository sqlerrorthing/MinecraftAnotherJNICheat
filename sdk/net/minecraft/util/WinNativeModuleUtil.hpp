// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef NET_MINECRAFT_UTIL_WINNATIVEMODULEUTIL_HPP
#define NET_MINECRAFT_UTIL_WINNATIVEMODULEUTIL_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: net.minecraft.util.WinNativeModuleUtil
 * Remapped: ayp
 */
namespace WinNativeModuleUtil {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("ayp", "net/minecraft/util/NativeModuleLister", "net/minecraft/class_6498", "net/minecraft/util/WinNativeModuleUtil", "net/minecraft/src/C_182783_"));
        }
        return cachedClass;
    };

    // getter for static private field net.minecraft.util.WinNativeModuleUtil#LOGGER
    [[maybe_unused]] static jobject get_field_LOGGER() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LOGGER", "field_34391", "LOGGER", "f_184659_"), "Lorg/slf4j/Logger;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.util.WinNativeModuleUtil#LOGGER
    [[maybe_unused]] static void set_field_LOGGER(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "LOGGER", "field_34391", "LOGGER", "f_184659_"), "Lorg/slf4j/Logger;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.util.WinNativeModuleUtil#CODE_PAGE_MASK
    [[maybe_unused]] static jint get_field_CODE_PAGE_MASK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "LANG_MASK", "field_34392", "CODE_PAGE_MASK", "f_184660_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.util.WinNativeModuleUtil#CODE_PAGE_MASK
    [[maybe_unused]] static void set_field_CODE_PAGE_MASK(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "LANG_MASK", "field_34392", "CODE_PAGE_MASK", "f_184660_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.util.WinNativeModuleUtil#EN_US_CODE_PAGE
    [[maybe_unused]] static jint get_field_EN_US_CODE_PAGE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "DEFAULT_LANG", "field_34393", "EN_US_CODE_PAGE", "f_184661_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.util.WinNativeModuleUtil#EN_US_CODE_PAGE
    [[maybe_unused]] static void set_field_EN_US_CODE_PAGE(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "DEFAULT_LANG", "field_34393", "EN_US_CODE_PAGE", "f_184661_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.util.WinNativeModuleUtil#LANGUAGE_ID_MASK
    [[maybe_unused]] static jint get_field_LANGUAGE_ID_MASK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "CODEPAGE_MASK", "field_34394", "LANGUAGE_ID_MASK", "f_184662_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.util.WinNativeModuleUtil#LANGUAGE_ID_MASK
    [[maybe_unused]] static void set_field_LANGUAGE_ID_MASK(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "CODEPAGE_MASK", "field_34394", "LANGUAGE_ID_MASK", "f_184662_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field net.minecraft.util.WinNativeModuleUtil#LANGUAGE_ID
    [[maybe_unused]] static jint get_field_LANGUAGE_ID() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "DEFAULT_CODEPAGE", "field_34395", "LANGUAGE_ID", "f_184663_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field net.minecraft.util.WinNativeModuleUtil#LANGUAGE_ID
    [[maybe_unused]] static void set_field_LANGUAGE_ID(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "DEFAULT_CODEPAGE", "field_34395", "LANGUAGE_ID", "f_184663_"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    static jmethodID methodID_collectNativeModules() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "listModules", "method_37961", "collectNativeModules", "m_184666_"), "()Ljava/util/List;");
    }

    static jobject collectNativeModules() {
       const auto clazz = self();
       const auto methodID = methodID_collectNativeModules();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_createNativeModuleInfo() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "tryGetVersion", "method_37964", "createNativeModuleInfo", "m_184673_"), "(Ljava/lang/String;)Ljava/util/Optional;");
    }

    static jobject createNativeModuleInfo(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_createNativeModuleInfo();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_getStringFileInfoPath() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "langTableKey", "method_37965", "getStringFileInfoPath", "m_184675_"), "(Ljava/lang/String;II)Ljava/lang/String;");
    }

    static jobject getStringFileInfoPath(const jobject& arg0, const jint& arg1, const jint& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_getStringFileInfoPath();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_getEnglishTranslationIndex() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "findLangAndCodepage", "method_37967", "getEnglishTranslationIndex", "m_184681_"), "([I)Ljava/util/OptionalInt;");
    }

    static jobject getEnglishTranslationIndex(const jarray& arg0, const jint& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_getEnglishTranslationIndex();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_query() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "queryVersionValue", "method_37963", "query", "m_184669_"), "(Lcom/sun/jna/Pointer;Ljava/lang/String;Lcom/sun/jna/ptr/IntByReference;)Lcom/sun/jna/Pointer;");
    }

    static jobject query(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_query();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_queryString() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("b", "queryVersionString", "method_37970", "queryString", "m_184686_"), "(Lcom/sun/jna/Pointer;Ljava/lang/String;Lcom/sun/jna/ptr/IntByReference;)Ljava/lang/String;");
    }

    static jobject queryString(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_queryString();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_addDetailTo() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("a", "addCrashSection", "method_37966", "addDetailTo", "m_184679_"), "(Lp;)V");
    }

    static void addDetailTo(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_addDetailTo();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
};

#endif // NET_MINECRAFT_UTIL_WINNATIVEMODULEUTIL_HPP