// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef COM_MOJANG_BLAZE3D_PLATFORM_GLSTATEMANAGER_HPP
#define COM_MOJANG_BLAZE3D_PLATFORM_GLSTATEMANAGER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: com.mojang.blaze3d.platform.GlStateManager
 * Remapped: com/mojang/blaze3d/platform/GlStateManager
 */
namespace GlStateManager {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("com/mojang/blaze3d/platform/GlStateManager", "com/mojang/blaze3d/platform/GlStateManager", "com/mojang/blaze3d/platform/GlStateManager", "com/mojang/blaze3d/platform/GlStateManager", "com/mojang/blaze3d/platform/GlStateManager"));
        }
        return cachedClass;
    };

    // getter for static private field com.mojang.blaze3d.platform.GlStateManager#ON_LINUX
    [[maybe_unused]] static jboolean get_field_ON_LINUX() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ON_LINUX", "ON_LINUX", "", "", "ON_LINUX"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticBooleanField(clazz, fieldID);
    };

    // setter for static private field com.mojang.blaze3d.platform.GlStateManager#ON_LINUX
    [[maybe_unused]] static void set_field_ON_LINUX(const jboolean &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("ON_LINUX", "ON_LINUX", "", "", "ON_LINUX"), "Z");
        return MinecraftSDK::env->SetStaticBooleanField(clazz, fieldID, value);
    };

    // getter for static public field com.mojang.blaze3d.platform.GlStateManager#TEXTURE_COUNT
    [[maybe_unused]] static jint get_field_TEXTURE_COUNT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("TEXTURE_COUNT", "TEXTURE_COUNT", "", "", "TEXTURE_COUNT"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static public field com.mojang.blaze3d.platform.GlStateManager#TEXTURE_COUNT
    [[maybe_unused]] static void set_field_TEXTURE_COUNT(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("TEXTURE_COUNT", "TEXTURE_COUNT", "", "", "TEXTURE_COUNT"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field com.mojang.blaze3d.platform.GlStateManager#BLEND
    [[maybe_unused]] static jobject get_field_BLEND() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("BLEND", "BLEND", "", "", "BLEND"), "Lcom/mojang/blaze3d/platform/GlStateManager$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field com.mojang.blaze3d.platform.GlStateManager#BLEND
    [[maybe_unused]] static void set_field_BLEND(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("BLEND", "BLEND", "", "", "BLEND"), "Lcom/mojang/blaze3d/platform/GlStateManager$a;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field com.mojang.blaze3d.platform.GlStateManager#DEPTH
    [[maybe_unused]] static jobject get_field_DEPTH() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("DEPTH", "DEPTH", "", "", "DEPTH"), "Lcom/mojang/blaze3d/platform/GlStateManager$f;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field com.mojang.blaze3d.platform.GlStateManager#DEPTH
    [[maybe_unused]] static void set_field_DEPTH(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("DEPTH", "DEPTH", "", "", "DEPTH"), "Lcom/mojang/blaze3d/platform/GlStateManager$f;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field com.mojang.blaze3d.platform.GlStateManager#CULL
    [[maybe_unused]] static jobject get_field_CULL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("CULL", "CULL", "", "", "CULL"), "Lcom/mojang/blaze3d/platform/GlStateManager$e;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field com.mojang.blaze3d.platform.GlStateManager#CULL
    [[maybe_unused]] static void set_field_CULL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("CULL", "CULL", "", "", "CULL"), "Lcom/mojang/blaze3d/platform/GlStateManager$e;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field com.mojang.blaze3d.platform.GlStateManager#POLY_OFFSET
    [[maybe_unused]] static jobject get_field_POLY_OFFSET() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("POLY_OFFSET", "POLY_OFFSET", "", "", "POLY_OFFSET"), "Lcom/mojang/blaze3d/platform/GlStateManager$h;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field com.mojang.blaze3d.platform.GlStateManager#POLY_OFFSET
    [[maybe_unused]] static void set_field_POLY_OFFSET(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("POLY_OFFSET", "POLY_OFFSET", "", "", "POLY_OFFSET"), "Lcom/mojang/blaze3d/platform/GlStateManager$h;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field com.mojang.blaze3d.platform.GlStateManager#COLOR_LOGIC
    [[maybe_unused]] static jobject get_field_COLOR_LOGIC() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("COLOR_LOGIC", "COLOR_LOGIC", "", "", "COLOR_LOGIC"), "Lcom/mojang/blaze3d/platform/GlStateManager$c;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field com.mojang.blaze3d.platform.GlStateManager#COLOR_LOGIC
    [[maybe_unused]] static void set_field_COLOR_LOGIC(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("COLOR_LOGIC", "COLOR_LOGIC", "", "", "COLOR_LOGIC"), "Lcom/mojang/blaze3d/platform/GlStateManager$c;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field com.mojang.blaze3d.platform.GlStateManager#STENCIL
    [[maybe_unused]] static jobject get_field_STENCIL() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("STENCIL", "STENCIL", "", "", "STENCIL"), "Lcom/mojang/blaze3d/platform/GlStateManager$k;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field com.mojang.blaze3d.platform.GlStateManager#STENCIL
    [[maybe_unused]] static void set_field_STENCIL(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("STENCIL", "STENCIL", "", "", "STENCIL"), "Lcom/mojang/blaze3d/platform/GlStateManager$k;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field com.mojang.blaze3d.platform.GlStateManager#SCISSOR
    [[maybe_unused]] static jobject get_field_SCISSOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("SCISSOR", "SCISSOR", "", "", "SCISSOR"), "Lcom/mojang/blaze3d/platform/GlStateManager$i;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field com.mojang.blaze3d.platform.GlStateManager#SCISSOR
    [[maybe_unused]] static void set_field_SCISSOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("SCISSOR", "SCISSOR", "", "", "SCISSOR"), "Lcom/mojang/blaze3d/platform/GlStateManager$i;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field com.mojang.blaze3d.platform.GlStateManager#activeTexture
    [[maybe_unused]] static jint get_field_activeTexture() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("activeTexture", "activeTexture", "", "", "activeTexture"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticIntField(clazz, fieldID);
    };

    // setter for static private field com.mojang.blaze3d.platform.GlStateManager#activeTexture
    [[maybe_unused]] static void set_field_activeTexture(const jint &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("activeTexture", "activeTexture", "", "", "activeTexture"), "I");
        return MinecraftSDK::env->SetStaticIntField(clazz, fieldID, value);
    };

    // getter for static private field com.mojang.blaze3d.platform.GlStateManager#TEXTURES
    [[maybe_unused]] static jobject get_field_TEXTURES() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("TEXTURES", "TEXTURES", "", "", "TEXTURES"), "[Lcom/mojang/blaze3d/platform/GlStateManager$l;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field com.mojang.blaze3d.platform.GlStateManager#TEXTURES
    [[maybe_unused]] static void set_field_TEXTURES(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("TEXTURES", "TEXTURES", "", "", "TEXTURES"), "[Lcom/mojang/blaze3d/platform/GlStateManager$l;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static private field com.mojang.blaze3d.platform.GlStateManager#COLOR_MASK
    [[maybe_unused]] static jobject get_field_COLOR_MASK() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("COLOR_MASK", "COLOR_MASK", "", "", "COLOR_MASK"), "Lcom/mojang/blaze3d/platform/GlStateManager$d;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static private field com.mojang.blaze3d.platform.GlStateManager#COLOR_MASK
    [[maybe_unused]] static void set_field_COLOR_MASK(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("COLOR_MASK", "COLOR_MASK", "", "", "COLOR_MASK"), "Lcom/mojang/blaze3d/platform/GlStateManager$d;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    static jmethodID methodID__disableScissorTest() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("_disableScissorTest", "_disableScissorTest", "", "", "_disableScissorTest"), "()V");
    }

    static void _disableScissorTest() {
       const auto clazz = self();
       const auto methodID = methodID__disableScissorTest();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID);
    };
    
    static jmethodID methodID__enableScissorTest() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("_enableScissorTest", "_enableScissorTest", "", "", "_enableScissorTest"), "()V");
    }

    static void _enableScissorTest() {
       const auto clazz = self();
       const auto methodID = methodID__enableScissorTest();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID);
    };
    
    static jmethodID methodID__scissorBox() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("_scissorBox", "_scissorBox", "_scissorBox", "_scissorBox", "_scissorBox"), "(IIII)V");
    }

    static void _scissorBox(const jint& arg0, const jint& arg1, const jint& arg2, const jint& arg3) {
       const auto clazz = self();
       const auto methodID = methodID__scissorBox();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID__disableDepthTest() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("_disableDepthTest", "_disableDepthTest", "", "", "_disableDepthTest"), "()V");
    }

    static void _disableDepthTest() {
       const auto clazz = self();
       const auto methodID = methodID__disableDepthTest();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID);
    };
    
    static jmethodID methodID__enableDepthTest() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("_enableDepthTest", "_enableDepthTest", "", "", "_enableDepthTest"), "()V");
    }

    static void _enableDepthTest() {
       const auto clazz = self();
       const auto methodID = methodID__enableDepthTest();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID);
    };
    
    static jmethodID methodID__depthFunc() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("_depthFunc", "_depthFunc", "_depthFunc", "_depthFunc", "_depthFunc"), "(I)V");
    }

    static void _depthFunc(const jint& arg0) {
       const auto clazz = self();
       const auto methodID = methodID__depthFunc();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID__depthMask() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("_depthMask", "_depthMask", "_depthMask", "_depthMask", "_depthMask"), "(Z)V");
    }

    static void _depthMask(const jboolean& arg0) {
       const auto clazz = self();
       const auto methodID = methodID__depthMask();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID__disableBlend() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("_disableBlend", "_disableBlend", "", "", "_disableBlend"), "()V");
    }

    static void _disableBlend() {
       const auto clazz = self();
       const auto methodID = methodID__disableBlend();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID);
    };
    
    static jmethodID methodID__enableBlend() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("_enableBlend", "_enableBlend", "", "", "_enableBlend"), "()V");
    }

    static void _enableBlend() {
       const auto clazz = self();
       const auto methodID = methodID__enableBlend();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID);
    };
    
    static jmethodID methodID__blendFunc() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("_blendFunc", "_blendFunc", "_blendFunc", "_blendFunc", "_blendFunc"), "(II)V");
    }

    static void _blendFunc(const jint& arg0, const jint& arg1) {
       const auto clazz = self();
       const auto methodID = methodID__blendFunc();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__blendFuncSeparate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("_blendFuncSeparate", "_blendFuncSeparate", "_blendFuncSeparate", "_blendFuncSeparate", "_blendFuncSeparate"), "(IIII)V");
    }

    static void _blendFuncSeparate(const jint& arg0, const jint& arg1, const jint& arg2, const jint& arg3) {
       const auto clazz = self();
       const auto methodID = methodID__blendFuncSeparate();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID__blendEquation() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("_blendEquation", "_blendEquation", "_blendEquation", "_blendEquation", "_blendEquation"), "(I)V");
    }

    static void _blendEquation(const jint& arg0) {
       const auto clazz = self();
       const auto methodID = methodID__blendEquation();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_glGetProgrami() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("glGetProgrami", "glGetProgrami", "glGetProgrami", "glGetProgrami", "glGetProgrami"), "(II)I");
    }

    static jint glGetProgrami(const jint& arg0, const jint& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_glGetProgrami();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_glAttachShader() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("glAttachShader", "glAttachShader", "glAttachShader", "glAttachShader", "glAttachShader"), "(II)V");
    }

    static void glAttachShader(const jint& arg0, const jint& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_glAttachShader();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_glDeleteShader() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("glDeleteShader", "glDeleteShader", "glDeleteShader", "glDeleteShader", "glDeleteShader"), "(I)V");
    }

    static void glDeleteShader(const jint& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_glDeleteShader();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_glCreateShader() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("glCreateShader", "glCreateShader", "glCreateShader", "glCreateShader", "glCreateShader"), "(I)I");
    }

    static jint glCreateShader(const jint& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_glCreateShader();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_glShaderSource() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("glShaderSource", "glShaderSource", "glShaderSource", "glShaderSource", "glShaderSource"), "(ILjava/util/List;)V");
    }

    static void glShaderSource(const jint& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_glShaderSource();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_glCompileShader() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("glCompileShader", "glCompileShader", "glCompileShader", "glCompileShader", "glCompileShader"), "(I)V");
    }

    static void glCompileShader(const jint& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_glCompileShader();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_glGetShaderi() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("glGetShaderi", "glGetShaderi", "glGetShaderi", "glGetShaderi", "glGetShaderi"), "(II)I");
    }

    static jint glGetShaderi(const jint& arg0, const jint& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_glGetShaderi();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__glUseProgram() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("_glUseProgram", "_glUseProgram", "_glUseProgram", "_glUseProgram", "_glUseProgram"), "(I)V");
    }

    static void _glUseProgram(const jint& arg0) {
       const auto clazz = self();
       const auto methodID = methodID__glUseProgram();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_glCreateProgram() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("glCreateProgram", "glCreateProgram", "", "", "glCreateProgram"), "()I");
    }

    static jint glCreateProgram() {
       const auto clazz = self();
       const auto methodID = methodID_glCreateProgram();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID);
    };
    
    static jmethodID methodID_glDeleteProgram() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("glDeleteProgram", "glDeleteProgram", "glDeleteProgram", "glDeleteProgram", "glDeleteProgram"), "(I)V");
    }

    static void glDeleteProgram(const jint& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_glDeleteProgram();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_glLinkProgram() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("glLinkProgram", "glLinkProgram", "glLinkProgram", "glLinkProgram", "glLinkProgram"), "(I)V");
    }

    static void glLinkProgram(const jint& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_glLinkProgram();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID__glGetUniformLocation() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("_glGetUniformLocation", "_glGetUniformLocation", "_glGetUniformLocation", "_glGetUniformLocation", "_glGetUniformLocation"), "(ILjava/lang/CharSequence;)I");
    }

    static jint _glGetUniformLocation(const jint& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID__glGetUniformLocation();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__glUniform1() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("_glUniform1", "_glUniform1", "_glUniform1", "_glUniform1", "_glUniform1"), "(ILjava/nio/IntBuffer;)V");
    }

    static void _glUniform1(const jint& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID__glUniform1();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__glUniform1i() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("_glUniform1i", "_glUniform1i", "_glUniform1i", "_glUniform1i", "_glUniform1i"), "(II)V");
    }

    static void _glUniform1i(const jint& arg0, const jint& arg1) {
       const auto clazz = self();
       const auto methodID = methodID__glUniform1i();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID___glUniform1() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("_glUniform1", "_glUniform1", "_glUniform1", "_glUniform1", "_glUniform1"), "(ILjava/nio/FloatBuffer;)V");
    }

    static void __glUniform1(const jint& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID___glUniform1();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__glUniform2() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("_glUniform2", "_glUniform2", "_glUniform2", "_glUniform2", "_glUniform2"), "(ILjava/nio/IntBuffer;)V");
    }

    static void _glUniform2(const jint& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID__glUniform2();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID___glUniform2() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("_glUniform2", "_glUniform2", "_glUniform2", "_glUniform2", "_glUniform2"), "(ILjava/nio/FloatBuffer;)V");
    }

    static void __glUniform2(const jint& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID___glUniform2();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__glUniform3() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("_glUniform3", "_glUniform3", "_glUniform3", "_glUniform3", "_glUniform3"), "(ILjava/nio/IntBuffer;)V");
    }

    static void _glUniform3(const jint& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID__glUniform3();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID___glUniform3() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("_glUniform3", "_glUniform3", "_glUniform3", "_glUniform3", "_glUniform3"), "(ILjava/nio/FloatBuffer;)V");
    }

    static void __glUniform3(const jint& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID___glUniform3();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__glUniform4() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("_glUniform4", "_glUniform4", "_glUniform4", "_glUniform4", "_glUniform4"), "(ILjava/nio/IntBuffer;)V");
    }

    static void _glUniform4(const jint& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID__glUniform4();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID___glUniform4() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("_glUniform4", "_glUniform4", "_glUniform4", "_glUniform4", "_glUniform4"), "(ILjava/nio/FloatBuffer;)V");
    }

    static void __glUniform4(const jint& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID___glUniform4();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__glUniformMatrix2() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("_glUniformMatrix2", "_glUniformMatrix2", "_glUniformMatrix2", "_glUniformMatrix2", "_glUniformMatrix2"), "(IZLjava/nio/FloatBuffer;)V");
    }

    static void _glUniformMatrix2(const jint& arg0, const jboolean& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID__glUniformMatrix2();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID__glUniformMatrix3() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("_glUniformMatrix3", "_glUniformMatrix3", "_glUniformMatrix3", "_glUniformMatrix3", "_glUniformMatrix3"), "(IZLjava/nio/FloatBuffer;)V");
    }

    static void _glUniformMatrix3(const jint& arg0, const jboolean& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID__glUniformMatrix3();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID__glUniformMatrix4() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("_glUniformMatrix4", "_glUniformMatrix4", "_glUniformMatrix4", "_glUniformMatrix4", "_glUniformMatrix4"), "(IZLjava/nio/FloatBuffer;)V");
    }

    static void _glUniformMatrix4(const jint& arg0, const jboolean& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID__glUniformMatrix4();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID__glGetAttribLocation() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("_glGetAttribLocation", "_glGetAttribLocation", "_glGetAttribLocation", "_glGetAttribLocation", "_glGetAttribLocation"), "(ILjava/lang/CharSequence;)I");
    }

    static jint _glGetAttribLocation(const jint& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID__glGetAttribLocation();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__glBindAttribLocation() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("_glBindAttribLocation", "_glBindAttribLocation", "_glBindAttribLocation", "_glBindAttribLocation", "_glBindAttribLocation"), "(IILjava/lang/CharSequence;)V");
    }

    static void _glBindAttribLocation(const jint& arg0, const jint& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID__glBindAttribLocation();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID__glGenBuffers() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("_glGenBuffers", "_glGenBuffers", "", "", "_glGenBuffers"), "()I");
    }

    static jint _glGenBuffers() {
       const auto clazz = self();
       const auto methodID = methodID__glGenBuffers();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID);
    };
    
    static jmethodID methodID__glGenVertexArrays() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("_glGenVertexArrays", "_glGenVertexArrays", "", "", "_glGenVertexArrays"), "()I");
    }

    static jint _glGenVertexArrays() {
       const auto clazz = self();
       const auto methodID = methodID__glGenVertexArrays();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID);
    };
    
    static jmethodID methodID__glBindBuffer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("_glBindBuffer", "_glBindBuffer", "_glBindBuffer", "_glBindBuffer", "_glBindBuffer"), "(II)V");
    }

    static void _glBindBuffer(const jint& arg0, const jint& arg1) {
       const auto clazz = self();
       const auto methodID = methodID__glBindBuffer();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__glBindVertexArray() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("_glBindVertexArray", "_glBindVertexArray", "_glBindVertexArray", "_glBindVertexArray", "_glBindVertexArray"), "(I)V");
    }

    static void _glBindVertexArray(const jint& arg0) {
       const auto clazz = self();
       const auto methodID = methodID__glBindVertexArray();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID__glBufferData() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("_glBufferData", "_glBufferData", "_glBufferData", "_glBufferData", "_glBufferData"), "(ILjava/nio/ByteBuffer;I)V");
    }

    static void _glBufferData(const jint& arg0, const jobject& arg1, const jint& arg2) {
       const auto clazz = self();
       const auto methodID = methodID__glBufferData();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID___glBufferData() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("_glBufferData", "_glBufferData", "_glBufferData", "_glBufferData", "_glBufferData"), "(IJI)V");
    }

    static void __glBufferData(const jint& arg0, const jlong& arg1, const jint& arg2) {
       const auto clazz = self();
       const auto methodID = methodID___glBufferData();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_mapBuffer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("_glMapBuffer", "_glMapBuffer", "_glMapBuffer", "mapBuffer", "_glMapBuffer"), "(II)Ljava/nio/ByteBuffer;");
    }

    static jobject mapBuffer(const jint& arg0, const jint& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_mapBuffer();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__glUnmapBuffer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("_glUnmapBuffer", "_glUnmapBuffer", "_glUnmapBuffer", "_glUnmapBuffer", "_glUnmapBuffer"), "(I)V");
    }

    static void _glUnmapBuffer(const jint& arg0) {
       const auto clazz = self();
       const auto methodID = methodID__glUnmapBuffer();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID__glDeleteBuffers() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("_glDeleteBuffers", "_glDeleteBuffers", "_glDeleteBuffers", "_glDeleteBuffers", "_glDeleteBuffers"), "(I)V");
    }

    static void _glDeleteBuffers(const jint& arg0) {
       const auto clazz = self();
       const auto methodID = methodID__glDeleteBuffers();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID__glCopyTexSubImage2D() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("_glCopyTexSubImage2D", "_glCopyTexSubImage2D", "_glCopyTexSubImage2D", "_glCopyTexSubImage2D", "_glCopyTexSubImage2D"), "(IIIIIIII)V");
    }

    static void _glCopyTexSubImage2D(const jint& arg0, const jint& arg1, const jint& arg2, const jint& arg3, const jint& arg4, const jint& arg5, const jint& arg6, const jint& arg7) {
       const auto clazz = self();
       const auto methodID = methodID__glCopyTexSubImage2D();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
    };
    
    static jmethodID methodID__glDeleteVertexArrays() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("_glDeleteVertexArrays", "_glDeleteVertexArrays", "_glDeleteVertexArrays", "_glDeleteVertexArrays", "_glDeleteVertexArrays"), "(I)V");
    }

    static void _glDeleteVertexArrays(const jint& arg0) {
       const auto clazz = self();
       const auto methodID = methodID__glDeleteVertexArrays();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID__glBindFramebuffer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("_glBindFramebuffer", "_glBindFramebuffer", "_glBindFramebuffer", "_glBindFramebuffer", "_glBindFramebuffer"), "(II)V");
    }

    static void _glBindFramebuffer(const jint& arg0, const jint& arg1) {
       const auto clazz = self();
       const auto methodID = methodID__glBindFramebuffer();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__glBlitFrameBuffer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("_glBlitFrameBuffer", "_glBlitFrameBuffer", "_glBlitFrameBuffer", "_glBlitFrameBuffer", "_glBlitFrameBuffer"), "(IIIIIIIIII)V");
    }

    static void _glBlitFrameBuffer(const jint& arg0, const jint& arg1, const jint& arg2, const jint& arg3, const jint& arg4, const jint& arg5, const jint& arg6, const jint& arg7, const jint& arg8, const jint& arg9) {
       const auto clazz = self();
       const auto methodID = methodID__glBlitFrameBuffer();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9);
    };
    
    static jmethodID methodID__glBindRenderbuffer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("_glBindRenderbuffer", "_glBindRenderbuffer", "_glBindRenderbuffer", "_glBindRenderbuffer", "_glBindRenderbuffer"), "(II)V");
    }

    static void _glBindRenderbuffer(const jint& arg0, const jint& arg1) {
       const auto clazz = self();
       const auto methodID = methodID__glBindRenderbuffer();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__glDeleteRenderbuffers() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("_glDeleteRenderbuffers", "_glDeleteRenderbuffers", "_glDeleteRenderbuffers", "_glDeleteRenderbuffers", "_glDeleteRenderbuffers"), "(I)V");
    }

    static void _glDeleteRenderbuffers(const jint& arg0) {
       const auto clazz = self();
       const auto methodID = methodID__glDeleteRenderbuffers();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID__glDeleteFramebuffers() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("_glDeleteFramebuffers", "_glDeleteFramebuffers", "_glDeleteFramebuffers", "_glDeleteFramebuffers", "_glDeleteFramebuffers"), "(I)V");
    }

    static void _glDeleteFramebuffers(const jint& arg0) {
       const auto clazz = self();
       const auto methodID = methodID__glDeleteFramebuffers();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_glGenFramebuffers() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("glGenFramebuffers", "glGenFramebuffers", "", "", "glGenFramebuffers"), "()I");
    }

    static jint glGenFramebuffers() {
       const auto clazz = self();
       const auto methodID = methodID_glGenFramebuffers();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID);
    };
    
    static jmethodID methodID_glGenRenderbuffers() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("glGenRenderbuffers", "glGenRenderbuffers", "", "", "glGenRenderbuffers"), "()I");
    }

    static jint glGenRenderbuffers() {
       const auto clazz = self();
       const auto methodID = methodID_glGenRenderbuffers();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID);
    };
    
    static jmethodID methodID__glRenderbufferStorage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("_glRenderbufferStorage", "_glRenderbufferStorage", "_glRenderbufferStorage", "_glRenderbufferStorage", "_glRenderbufferStorage"), "(IIII)V");
    }

    static void _glRenderbufferStorage(const jint& arg0, const jint& arg1, const jint& arg2, const jint& arg3) {
       const auto clazz = self();
       const auto methodID = methodID__glRenderbufferStorage();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID__glFramebufferRenderbuffer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("_glFramebufferRenderbuffer", "_glFramebufferRenderbuffer", "_glFramebufferRenderbuffer", "_glFramebufferRenderbuffer", "_glFramebufferRenderbuffer"), "(IIII)V");
    }

    static void _glFramebufferRenderbuffer(const jint& arg0, const jint& arg1, const jint& arg2, const jint& arg3) {
       const auto clazz = self();
       const auto methodID = methodID__glFramebufferRenderbuffer();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_glCheckFramebufferStatus() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("glCheckFramebufferStatus", "glCheckFramebufferStatus", "glCheckFramebufferStatus", "glCheckFramebufferStatus", "glCheckFramebufferStatus"), "(I)I");
    }

    static jint glCheckFramebufferStatus(const jint& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_glCheckFramebufferStatus();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID__glFramebufferTexture2D() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("_glFramebufferTexture2D", "_glFramebufferTexture2D", "_glFramebufferTexture2D", "_glFramebufferTexture2D", "_glFramebufferTexture2D"), "(IIIII)V");
    }

    static void _glFramebufferTexture2D(const jint& arg0, const jint& arg1, const jint& arg2, const jint& arg3, const jint& arg4) {
       const auto clazz = self();
       const auto methodID = methodID__glFramebufferTexture2D();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID_getBoundFramebuffer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("getBoundFramebuffer", "getBoundFramebuffer", "", "", "getBoundFramebuffer"), "()I");
    }

    static jint getBoundFramebuffer() {
       const auto clazz = self();
       const auto methodID = methodID_getBoundFramebuffer();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID);
    };
    
    static jmethodID methodID_glActiveTexture() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("glActiveTexture", "glActiveTexture", "glActiveTexture", "glActiveTexture", "glActiveTexture"), "(I)V");
    }

    static void glActiveTexture(const jint& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_glActiveTexture();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID_glBlendFuncSeparate() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("glBlendFuncSeparate", "glBlendFuncSeparate", "glBlendFuncSeparate", "glBlendFuncSeparate", "glBlendFuncSeparate"), "(IIII)V");
    }

    static void glBlendFuncSeparate(const jint& arg0, const jint& arg1, const jint& arg2, const jint& arg3) {
       const auto clazz = self();
       const auto methodID = methodID_glBlendFuncSeparate();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID_glGetShaderInfoLog() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("glGetShaderInfoLog", "glGetShaderInfoLog", "glGetShaderInfoLog", "glGetShaderInfoLog", "glGetShaderInfoLog"), "(II)Ljava/lang/String;");
    }

    static jobject glGetShaderInfoLog(const jint& arg0, const jint& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_glGetShaderInfoLog();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_glGetProgramInfoLog() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("glGetProgramInfoLog", "glGetProgramInfoLog", "glGetProgramInfoLog", "glGetProgramInfoLog", "glGetProgramInfoLog"), "(II)Ljava/lang/String;");
    }

    static jobject glGetProgramInfoLog(const jint& arg0, const jint& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_glGetProgramInfoLog();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_setupLevelDiffuseLighting() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("setupLevelDiffuseLighting", "setupLevelDiffuseLighting", "", "", "setupLevelDiffuseLighting"), "(Lorg/joml/Vector3f;Lorg/joml/Vector3f;Lorg/joml/Matrix4f;)V");
    }

    static void setupLevelDiffuseLighting(const jobject& arg0, const jobject& arg1, const jobject& arg2) {
       const auto clazz = self();
       const auto methodID = methodID_setupLevelDiffuseLighting();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID_setupGuiFlatDiffuseLighting() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("setupGuiFlatDiffuseLighting", "setupGuiFlatDiffuseLighting", "", "", "setupGuiFlatDiffuseLighting"), "(Lorg/joml/Vector3f;Lorg/joml/Vector3f;)V");
    }

    static void setupGuiFlatDiffuseLighting(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_setupGuiFlatDiffuseLighting();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID_setupGui3DDiffuseLighting() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("setupGui3DDiffuseLighting", "setupGui3DDiffuseLighting", "", "", "setupGui3DDiffuseLighting"), "(Lorg/joml/Vector3f;Lorg/joml/Vector3f;)V");
    }

    static void setupGui3DDiffuseLighting(const jobject& arg0, const jobject& arg1) {
       const auto clazz = self();
       const auto methodID = methodID_setupGui3DDiffuseLighting();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__enableCull() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("_enableCull", "_enableCull", "", "", "_enableCull"), "()V");
    }

    static void _enableCull() {
       const auto clazz = self();
       const auto methodID = methodID__enableCull();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID);
    };
    
    static jmethodID methodID__disableCull() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("_disableCull", "_disableCull", "", "", "_disableCull"), "()V");
    }

    static void _disableCull() {
       const auto clazz = self();
       const auto methodID = methodID__disableCull();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID);
    };
    
    static jmethodID methodID__polygonMode() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("_polygonMode", "_polygonMode", "_polygonMode", "_polygonMode", "_polygonMode"), "(II)V");
    }

    static void _polygonMode(const jint& arg0, const jint& arg1) {
       const auto clazz = self();
       const auto methodID = methodID__polygonMode();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__enablePolygonOffset() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("_enablePolygonOffset", "_enablePolygonOffset", "", "", "_enablePolygonOffset"), "()V");
    }

    static void _enablePolygonOffset() {
       const auto clazz = self();
       const auto methodID = methodID__enablePolygonOffset();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID);
    };
    
    static jmethodID methodID__disablePolygonOffset() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("_disablePolygonOffset", "_disablePolygonOffset", "", "", "_disablePolygonOffset"), "()V");
    }

    static void _disablePolygonOffset() {
       const auto clazz = self();
       const auto methodID = methodID__disablePolygonOffset();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID);
    };
    
    static jmethodID methodID__polygonOffset() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("_polygonOffset", "_polygonOffset", "_polygonOffset", "_polygonOffset", "_polygonOffset"), "(FF)V");
    }

    static void _polygonOffset(const jfloat& arg0, const jfloat& arg1) {
       const auto clazz = self();
       const auto methodID = methodID__polygonOffset();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__enableColorLogicOp() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("_enableColorLogicOp", "_enableColorLogicOp", "", "", "_enableColorLogicOp"), "()V");
    }

    static void _enableColorLogicOp() {
       const auto clazz = self();
       const auto methodID = methodID__enableColorLogicOp();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID);
    };
    
    static jmethodID methodID__disableColorLogicOp() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("_disableColorLogicOp", "_disableColorLogicOp", "", "", "_disableColorLogicOp"), "()V");
    }

    static void _disableColorLogicOp() {
       const auto clazz = self();
       const auto methodID = methodID__disableColorLogicOp();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID);
    };
    
    static jmethodID methodID__logicOp() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("_logicOp", "_logicOp", "_logicOp", "_logicOp", "_logicOp"), "(I)V");
    }

    static void _logicOp(const jint& arg0) {
       const auto clazz = self();
       const auto methodID = methodID__logicOp();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID__activeTexture() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("_activeTexture", "_activeTexture", "_activeTexture", "_activeTexture", "_activeTexture"), "(I)V");
    }

    static void _activeTexture(const jint& arg0) {
       const auto clazz = self();
       const auto methodID = methodID__activeTexture();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID__texParameter() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("_texParameter", "_texParameter", "_texParameter", "_texParameter", "_texParameter"), "(IIF)V");
    }

    static void _texParameter(const jint& arg0, const jint& arg1, const jfloat& arg2) {
       const auto clazz = self();
       const auto methodID = methodID__texParameter();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID___texParameter() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("_texParameter", "_texParameter", "_texParameter", "_texParameter", "_texParameter"), "(III)V");
    }

    static void __texParameter(const jint& arg0, const jint& arg1, const jint& arg2) {
       const auto clazz = self();
       const auto methodID = methodID___texParameter();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID__getTexLevelParameter() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("_getTexLevelParameter", "_getTexLevelParameter", "_getTexLevelParameter", "_getTexLevelParameter", "_getTexLevelParameter"), "(III)I");
    }

    static jint _getTexLevelParameter(const jint& arg0, const jint& arg1, const jint& arg2) {
       const auto clazz = self();
       const auto methodID = methodID__getTexLevelParameter();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID__genTexture() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("_genTexture", "_genTexture", "", "", "_genTexture"), "()I");
    }

    static jint _genTexture() {
       const auto clazz = self();
       const auto methodID = methodID__genTexture();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID);
    };
    
    static jmethodID methodID__genTextures() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("_genTextures", "_genTextures", "_genTextures", "_genTextures", "_genTextures"), "([I)V");
    }

    static void _genTextures(const jarray& arg0, const jint& arg1) {
       const auto clazz = self();
       const auto methodID = methodID__genTextures();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__deleteTexture() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("_deleteTexture", "_deleteTexture", "_deleteTexture", "_deleteTexture", "_deleteTexture"), "(I)V");
    }

    static void _deleteTexture(const jint& arg0) {
       const auto clazz = self();
       const auto methodID = methodID__deleteTexture();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID__deleteTextures() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("_deleteTextures", "_deleteTextures", "_deleteTextures", "_deleteTextures", "_deleteTextures"), "([I)V");
    }

    static void _deleteTextures(const jarray& arg0, const jint& arg1) {
       const auto clazz = self();
       const auto methodID = methodID__deleteTextures();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__bindTexture() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("_bindTexture", "_bindTexture", "_bindTexture", "_bindTexture", "_bindTexture"), "(I)V");
    }

    static void _bindTexture(const jint& arg0) {
       const auto clazz = self();
       const auto methodID = methodID__bindTexture();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID__getActiveTexture() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("_getActiveTexture", "_getActiveTexture", "", "", "_getActiveTexture"), "()I");
    }

    static jint _getActiveTexture() {
       const auto clazz = self();
       const auto methodID = methodID__getActiveTexture();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID);
    };
    
    static jmethodID methodID__texImage2D() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("_texImage2D", "_texImage2D", "_texImage2D", "_texImage2D", "_texImage2D"), "(IIIIIIIILjava/nio/IntBuffer;)V");
    }

    static void _texImage2D(const jint& arg0, const jint& arg1, const jint& arg2, const jint& arg3, const jint& arg4, const jint& arg5, const jint& arg6, const jint& arg7, const jobject& arg8) {
       const auto clazz = self();
       const auto methodID = methodID__texImage2D();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8);
    };
    
    static jmethodID methodID__texSubImage2D() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("_texSubImage2D", "_texSubImage2D", "_texSubImage2D", "_texSubImage2D", "_texSubImage2D"), "(IIIIIIIIJ)V");
    }

    static void _texSubImage2D(const jint& arg0, const jint& arg1, const jint& arg2, const jint& arg3, const jint& arg4, const jint& arg5, const jint& arg6, const jint& arg7, const jlong& arg8) {
       const auto clazz = self();
       const auto methodID = methodID__texSubImage2D();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8);
    };
    
    static jmethodID methodID_upload() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("upload", "upload", "upload", "upload", "upload"), "(IIIIILfaj$a;Ljava/nio/IntBuffer;Ljava/util/function/Consumer;)V");
    }

    static void upload(const jint& arg0, const jint& arg1, const jint& arg2, const jint& arg3, const jint& arg4, const jobject& arg5, const jobject& arg6, const jobject& arg7) {
       const auto clazz = self();
       const auto methodID = methodID_upload();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
    };
    
    static jmethodID methodID__upload() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("_upload", "_upload", "_upload", "_upload", "_upload"), "(IIIIILfaj$a;Ljava/nio/IntBuffer;Ljava/util/function/Consumer;)V");
    }

    static void _upload(const jint& arg0, const jint& arg1, const jint& arg2, const jint& arg3, const jint& arg4, const jobject& arg5, const jobject& arg6, const jobject& arg7) {
       const auto clazz = self();
       const auto methodID = methodID__upload();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);
    };
    
    static jmethodID methodID__getTexImage() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("_getTexImage", "_getTexImage", "_getTexImage", "_getTexImage", "_getTexImage"), "(IIIIJ)V");
    }

    static void _getTexImage(const jint& arg0, const jint& arg1, const jint& arg2, const jint& arg3, const jlong& arg4) {
       const auto clazz = self();
       const auto methodID = methodID__getTexImage();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID__viewport() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("_viewport", "_viewport", "_viewport", "_viewport", "_viewport"), "(IIII)V");
    }

    static void _viewport(const jint& arg0, const jint& arg1, const jint& arg2, const jint& arg3) {
       const auto clazz = self();
       const auto methodID = methodID__viewport();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID__colorMask() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("_colorMask", "_colorMask", "_colorMask", "_colorMask", "_colorMask"), "(ZZZZ)V");
    }

    static void _colorMask(const jboolean& arg0, const jboolean& arg1, const jboolean& arg2, const jboolean& arg3) {
       const auto clazz = self();
       const auto methodID = methodID__colorMask();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID__stencilFunc() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("_stencilFunc", "_stencilFunc", "_stencilFunc", "_stencilFunc", "_stencilFunc"), "(III)V");
    }

    static void _stencilFunc(const jint& arg0, const jint& arg1, const jint& arg2) {
       const auto clazz = self();
       const auto methodID = methodID__stencilFunc();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID__stencilMask() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("_stencilMask", "_stencilMask", "_stencilMask", "_stencilMask", "_stencilMask"), "(I)V");
    }

    static void _stencilMask(const jint& arg0) {
       const auto clazz = self();
       const auto methodID = methodID__stencilMask();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID__stencilOp() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("_stencilOp", "_stencilOp", "_stencilOp", "_stencilOp", "_stencilOp"), "(III)V");
    }

    static void _stencilOp(const jint& arg0, const jint& arg1, const jint& arg2) {
       const auto clazz = self();
       const auto methodID = methodID__stencilOp();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2);
    };
    
    static jmethodID methodID__clearDepth() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("_clearDepth", "_clearDepth", "_clearDepth", "_clearDepth", "_clearDepth"), "(D)V");
    }

    static void _clearDepth(const jdouble& arg0) {
       const auto clazz = self();
       const auto methodID = methodID__clearDepth();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID__clearColor() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("_clearColor", "_clearColor", "_clearColor", "_clearColor", "_clearColor"), "(FFFF)V");
    }

    static void _clearColor(const jfloat& arg0, const jfloat& arg1, const jfloat& arg2, const jfloat& arg3) {
       const auto clazz = self();
       const auto methodID = methodID__clearColor();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID__clearStencil() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("_clearStencil", "_clearStencil", "_clearStencil", "_clearStencil", "_clearStencil"), "(I)V");
    }

    static void _clearStencil(const jint& arg0) {
       const auto clazz = self();
       const auto methodID = methodID__clearStencil();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID__clear() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("_clear", "_clear", "_clear", "_clear", "_clear"), "(IZ)V");
    }

    static void _clear(const jint& arg0, const jboolean& arg1) {
       const auto clazz = self();
       const auto methodID = methodID__clear();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__glDrawPixels() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("_glDrawPixels", "_glDrawPixels", "_glDrawPixels", "_glDrawPixels", "_glDrawPixels"), "(IIIIJ)V");
    }

    static void _glDrawPixels(const jint& arg0, const jint& arg1, const jint& arg2, const jint& arg3, const jlong& arg4) {
       const auto clazz = self();
       const auto methodID = methodID__glDrawPixels();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID__vertexAttribPointer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("_vertexAttribPointer", "_vertexAttribPointer", "_vertexAttribPointer", "_vertexAttribPointer", "_vertexAttribPointer"), "(IIIZIJ)V");
    }

    static void _vertexAttribPointer(const jint& arg0, const jint& arg1, const jint& arg2, const jboolean& arg3, const jint& arg4, const jlong& arg5) {
       const auto clazz = self();
       const auto methodID = methodID__vertexAttribPointer();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4, arg5);
    };
    
    static jmethodID methodID__vertexAttribIPointer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("_vertexAttribIPointer", "_vertexAttribIPointer", "_vertexAttribIPointer", "_vertexAttribIPointer", "_vertexAttribIPointer"), "(IIIIJ)V");
    }

    static void _vertexAttribIPointer(const jint& arg0, const jint& arg1, const jint& arg2, const jint& arg3, const jlong& arg4) {
       const auto clazz = self();
       const auto methodID = methodID__vertexAttribIPointer();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4);
    };
    
    static jmethodID methodID__enableVertexAttribArray() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("_enableVertexAttribArray", "_enableVertexAttribArray", "_enableVertexAttribArray", "_enableVertexAttribArray", "_enableVertexAttribArray"), "(I)V");
    }

    static void _enableVertexAttribArray(const jint& arg0) {
       const auto clazz = self();
       const auto methodID = methodID__enableVertexAttribArray();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID__disableVertexAttribArray() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("_disableVertexAttribArray", "_disableVertexAttribArray", "_disableVertexAttribArray", "_disableVertexAttribArray", "_disableVertexAttribArray"), "(I)V");
    }

    static void _disableVertexAttribArray(const jint& arg0) {
       const auto clazz = self();
       const auto methodID = methodID__disableVertexAttribArray();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID__drawElements() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("_drawElements", "_drawElements", "_drawElements", "_drawElements", "_drawElements"), "(IIIJ)V");
    }

    static void _drawElements(const jint& arg0, const jint& arg1, const jint& arg2, const jlong& arg3) {
       const auto clazz = self();
       const auto methodID = methodID__drawElements();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3);
    };
    
    static jmethodID methodID__pixelStore() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("_pixelStore", "_pixelStore", "_pixelStore", "_pixelStore", "_pixelStore"), "(II)V");
    }

    static void _pixelStore(const jint& arg0, const jint& arg1) {
       const auto clazz = self();
       const auto methodID = methodID__pixelStore();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1);
    };
    
    static jmethodID methodID__readPixels() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("_readPixels", "_readPixels", "_readPixels", "_readPixels", "_readPixels"), "(IIIIIILjava/nio/ByteBuffer;)V");
    }

    static void _readPixels(const jint& arg0, const jint& arg1, const jint& arg2, const jint& arg3, const jint& arg4, const jint& arg5, const jobject& arg6) {
       const auto clazz = self();
       const auto methodID = methodID__readPixels();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6);
    };
    
    static jmethodID methodID___readPixels() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("_readPixels", "_readPixels", "_readPixels", "_readPixels", "_readPixels"), "(IIIIIIJ)V");
    }

    static void __readPixels(const jint& arg0, const jint& arg1, const jint& arg2, const jint& arg3, const jint& arg4, const jint& arg5, const jlong& arg6) {
       const auto clazz = self();
       const auto methodID = methodID___readPixels();
       MinecraftSDK::env->CallStaticVoidMethod(clazz, methodID, arg0, arg1, arg2, arg3, arg4, arg5, arg6);
    };
    
    static jmethodID methodID__getError() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("_getError", "_getError", "", "", "_getError"), "()I");
    }

    static jint _getError() {
       const auto clazz = self();
       const auto methodID = methodID__getError();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID);
    };
    
    static jmethodID methodID__getString() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("_getString", "_getString", "_getString", "_getString", "_getString"), "(I)Ljava/lang/String;");
    }

    static jobject _getString(const jint& arg0) {
       const auto clazz = self();
       const auto methodID = methodID__getString();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
    static jmethodID methodID__getInteger() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("_getInteger", "_getInteger", "_getInteger", "_getInteger", "_getInteger"), "(I)I");
    }

    static jint _getInteger(const jint& arg0) {
       const auto clazz = self();
       const auto methodID = methodID__getInteger();
       return MinecraftSDK::env->CallStaticIntMethod(clazz, methodID, arg0);
    };
    
};

#endif // COM_MOJANG_BLAZE3D_PLATFORM_GLSTATEMANAGER_HPP