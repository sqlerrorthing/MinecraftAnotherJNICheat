// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef COM_MOJANG_BLAZE3D_PLATFORM_GLSTATEMANAGER$LOGICOP_HPP
#define COM_MOJANG_BLAZE3D_PLATFORM_GLSTATEMANAGER$LOGICOP_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: com.mojang.blaze3d.platform.GlStateManager$LogicOp
 * Remapped: com/mojang/blaze3d/platform/GlStateManager$g
 */
namespace GlStateManager$LogicOp {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("com/mojang/blaze3d/platform/GlStateManager$g", "com/mojang/blaze3d/platform/GlStateManager$LogicOp", "com/mojang/blaze3d/platform/GlStateManager$class_1030", "com/mojang/blaze3d/platform/GlStateManager$LogicOp", "com/mojang/blaze3d/platform/GlStateManager$C_3128_"));
        }
        return cachedClass;
    };

    // getter for static public field com.mojang.blaze3d.platform.GlStateManager$LogicOp#AND
    [[maybe_unused]] static jobject get_field_AND() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "AND", "field_5120", "AND", "AND"), "Lcom/mojang/blaze3d/platform/GlStateManager$g;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field com.mojang.blaze3d.platform.GlStateManager$LogicOp#AND
    [[maybe_unused]] static void set_field_AND(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("a", "AND", "field_5120", "AND", "AND"), "Lcom/mojang/blaze3d/platform/GlStateManager$g;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field com.mojang.blaze3d.platform.GlStateManager$LogicOp#AND_INVERTED
    [[maybe_unused]] static jobject get_field_AND_INVERTED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "AND_INVERTED", "field_5112", "AND_INVERTED", "AND_INVERTED"), "Lcom/mojang/blaze3d/platform/GlStateManager$g;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field com.mojang.blaze3d.platform.GlStateManager$LogicOp#AND_INVERTED
    [[maybe_unused]] static void set_field_AND_INVERTED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("b", "AND_INVERTED", "field_5112", "AND_INVERTED", "AND_INVERTED"), "Lcom/mojang/blaze3d/platform/GlStateManager$g;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field com.mojang.blaze3d.platform.GlStateManager$LogicOp#AND_REVERSE
    [[maybe_unused]] static jobject get_field_AND_REVERSE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "AND_REVERSE", "field_5117", "AND_REVERSE", "AND_REVERSE"), "Lcom/mojang/blaze3d/platform/GlStateManager$g;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field com.mojang.blaze3d.platform.GlStateManager$LogicOp#AND_REVERSE
    [[maybe_unused]] static void set_field_AND_REVERSE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("c", "AND_REVERSE", "field_5117", "AND_REVERSE", "AND_REVERSE"), "Lcom/mojang/blaze3d/platform/GlStateManager$g;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field com.mojang.blaze3d.platform.GlStateManager$LogicOp#CLEAR
    [[maybe_unused]] static jobject get_field_CLEAR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "CLEAR", "field_5103", "CLEAR", "CLEAR"), "Lcom/mojang/blaze3d/platform/GlStateManager$g;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field com.mojang.blaze3d.platform.GlStateManager$LogicOp#CLEAR
    [[maybe_unused]] static void set_field_CLEAR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("d", "CLEAR", "field_5103", "CLEAR", "CLEAR"), "Lcom/mojang/blaze3d/platform/GlStateManager$g;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field com.mojang.blaze3d.platform.GlStateManager$LogicOp#COPY
    [[maybe_unused]] static jobject get_field_COPY() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "COPY", "field_5118", "COPY", "COPY"), "Lcom/mojang/blaze3d/platform/GlStateManager$g;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field com.mojang.blaze3d.platform.GlStateManager$LogicOp#COPY
    [[maybe_unused]] static void set_field_COPY(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("e", "COPY", "field_5118", "COPY", "COPY"), "Lcom/mojang/blaze3d/platform/GlStateManager$g;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field com.mojang.blaze3d.platform.GlStateManager$LogicOp#COPY_INVERTED
    [[maybe_unused]] static jobject get_field_COPY_INVERTED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "COPY_INVERTED", "field_5113", "COPY_INVERTED", "COPY_INVERTED"), "Lcom/mojang/blaze3d/platform/GlStateManager$g;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field com.mojang.blaze3d.platform.GlStateManager$LogicOp#COPY_INVERTED
    [[maybe_unused]] static void set_field_COPY_INVERTED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("f", "COPY_INVERTED", "field_5113", "COPY_INVERTED", "COPY_INVERTED"), "Lcom/mojang/blaze3d/platform/GlStateManager$g;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field com.mojang.blaze3d.platform.GlStateManager$LogicOp#EQUIV
    [[maybe_unused]] static jobject get_field_EQUIV() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "EQUIV", "field_5119", "EQUIV", "EQUIV"), "Lcom/mojang/blaze3d/platform/GlStateManager$g;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field com.mojang.blaze3d.platform.GlStateManager$LogicOp#EQUIV
    [[maybe_unused]] static void set_field_EQUIV(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("g", "EQUIV", "field_5119", "EQUIV", "EQUIV"), "Lcom/mojang/blaze3d/platform/GlStateManager$g;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field com.mojang.blaze3d.platform.GlStateManager$LogicOp#INVERT
    [[maybe_unused]] static jobject get_field_INVERT() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "INVERT", "field_5109", "INVERT", "INVERT"), "Lcom/mojang/blaze3d/platform/GlStateManager$g;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field com.mojang.blaze3d.platform.GlStateManager$LogicOp#INVERT
    [[maybe_unused]] static void set_field_INVERT(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("h", "INVERT", "field_5109", "INVERT", "INVERT"), "Lcom/mojang/blaze3d/platform/GlStateManager$g;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field com.mojang.blaze3d.platform.GlStateManager$LogicOp#NAND
    [[maybe_unused]] static jobject get_field_NAND() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "NAND", "field_5114", "NAND", "NAND"), "Lcom/mojang/blaze3d/platform/GlStateManager$g;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field com.mojang.blaze3d.platform.GlStateManager$LogicOp#NAND
    [[maybe_unused]] static void set_field_NAND(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("i", "NAND", "field_5114", "NAND", "NAND"), "Lcom/mojang/blaze3d/platform/GlStateManager$g;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field com.mojang.blaze3d.platform.GlStateManager$LogicOp#NOOP
    [[maybe_unused]] static jobject get_field_NOOP() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "NOOP", "field_5115", "NOOP", "NOOP"), "Lcom/mojang/blaze3d/platform/GlStateManager$g;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field com.mojang.blaze3d.platform.GlStateManager$LogicOp#NOOP
    [[maybe_unused]] static void set_field_NOOP(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("j", "NOOP", "field_5115", "NOOP", "NOOP"), "Lcom/mojang/blaze3d/platform/GlStateManager$g;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field com.mojang.blaze3d.platform.GlStateManager$LogicOp#NOR
    [[maybe_unused]] static jobject get_field_NOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "NOR", "field_5104", "NOR", "NOR"), "Lcom/mojang/blaze3d/platform/GlStateManager$g;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field com.mojang.blaze3d.platform.GlStateManager$LogicOp#NOR
    [[maybe_unused]] static void set_field_NOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("k", "NOR", "field_5104", "NOR", "NOR"), "Lcom/mojang/blaze3d/platform/GlStateManager$g;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field com.mojang.blaze3d.platform.GlStateManager$LogicOp#OR
    [[maybe_unused]] static jobject get_field_OR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "OR", "field_5105", "OR", "OR"), "Lcom/mojang/blaze3d/platform/GlStateManager$g;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field com.mojang.blaze3d.platform.GlStateManager$LogicOp#OR
    [[maybe_unused]] static void set_field_OR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("l", "OR", "field_5105", "OR", "OR"), "Lcom/mojang/blaze3d/platform/GlStateManager$g;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field com.mojang.blaze3d.platform.GlStateManager$LogicOp#OR_INVERTED
    [[maybe_unused]] static jobject get_field_OR_INVERTED() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "OR_INVERTED", "field_5116", "OR_INVERTED", "OR_INVERTED"), "Lcom/mojang/blaze3d/platform/GlStateManager$g;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field com.mojang.blaze3d.platform.GlStateManager$LogicOp#OR_INVERTED
    [[maybe_unused]] static void set_field_OR_INVERTED(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("m", "OR_INVERTED", "field_5116", "OR_INVERTED", "OR_INVERTED"), "Lcom/mojang/blaze3d/platform/GlStateManager$g;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field com.mojang.blaze3d.platform.GlStateManager$LogicOp#OR_REVERSE
    [[maybe_unused]] static jobject get_field_OR_REVERSE() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "OR_REVERSE", "field_5110", "OR_REVERSE", "OR_REVERSE"), "Lcom/mojang/blaze3d/platform/GlStateManager$g;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field com.mojang.blaze3d.platform.GlStateManager$LogicOp#OR_REVERSE
    [[maybe_unused]] static void set_field_OR_REVERSE(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("n", "OR_REVERSE", "field_5110", "OR_REVERSE", "OR_REVERSE"), "Lcom/mojang/blaze3d/platform/GlStateManager$g;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field com.mojang.blaze3d.platform.GlStateManager$LogicOp#SET
    [[maybe_unused]] static jobject get_field_SET() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "SET", "field_5107", "SET", "SET"), "Lcom/mojang/blaze3d/platform/GlStateManager$g;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field com.mojang.blaze3d.platform.GlStateManager$LogicOp#SET
    [[maybe_unused]] static void set_field_SET(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("o", "SET", "field_5107", "SET", "SET"), "Lcom/mojang/blaze3d/platform/GlStateManager$g;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for static public field com.mojang.blaze3d.platform.GlStateManager$LogicOp#XOR
    [[maybe_unused]] static jobject get_field_XOR() {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "XOR", "field_5111", "XOR", "XOR"), "Lcom/mojang/blaze3d/platform/GlStateManager$g;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetStaticObjectField(clazz, fieldID);
    };

    // setter for static public field com.mojang.blaze3d.platform.GlStateManager$LogicOp#XOR
    [[maybe_unused]] static void set_field_XOR(const jobject &value) {
        const auto clazz = self();
        const auto fieldID = MinecraftSDK::env->GetStaticFieldID(clazz, MinecraftSDK::getRemapped("p", "XOR", "field_5111", "XOR", "XOR"), "Lcom/mojang/blaze3d/platform/GlStateManager$g;");
        return MinecraftSDK::env->SetStaticObjectField(clazz, fieldID, value);
    };

    // getter for public field com.mojang.blaze3d.platform.GlStateManager$LogicOp#value
    static jint get_field_value(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("q", "value", "field_5108", "value", "f_84715_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static public field com.mojang.blaze3d.platform.GlStateManager$LogicOp#value
    static void set_field_value(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("q", "value", "field_5108", "value", "f_84715_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    static jmethodID methodID_values() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("values", "values", "values", "values", "values"), "()[Lcom/mojang/blaze3d/platform/GlStateManager$g;");
    }

    static jobject values() {
       const auto clazz = self();
       const auto methodID = methodID_values();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID);
    };
    
    static jmethodID methodID_valueOf() {
       const auto clazz = self();
       return MinecraftSDK::env->GetStaticMethodID(clazz, MinecraftSDK::getRemapped("valueOf", "valueOf", "valueOf", "valueOf", "valueOf"), "(Ljava/lang/String;)Lcom/mojang/blaze3d/platform/GlStateManager$g;");
    }

    static jobject valueOf(const jobject& arg0) {
       const auto clazz = self();
       const auto methodID = methodID_valueOf();
       return MinecraftSDK::env->CallStaticObjectMethod(clazz, methodID, arg0);
    };
    
};

#endif // COM_MOJANG_BLAZE3D_PLATFORM_GLSTATEMANAGER$LOGICOP_HPP