// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef COM_MOJANG_BLAZE3D_PLATFORM_GLSTATEMANAGER$CAPABILITYTRACKER_HPP
#define COM_MOJANG_BLAZE3D_PLATFORM_GLSTATEMANAGER$CAPABILITYTRACKER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: com.mojang.blaze3d.platform.GlStateManager$CapabilityTracker
 * Remapped: com/mojang/blaze3d/platform/GlStateManager$b
 */
namespace GlStateManager$CapabilityTracker {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("com/mojang/blaze3d/platform/GlStateManager$b", "com/mojang/blaze3d/platform/GlStateManager$BooleanState", "com/mojang/blaze3d/platform/GlStateManager$class_1018", "com/mojang/blaze3d/platform/GlStateManager$CapabilityTracker", "com/mojang/blaze3d/platform/GlStateManager$C_3116_"));
        }
        return cachedClass;
    };

    // getter for private field com.mojang.blaze3d.platform.GlStateManager$CapabilityTracker#cap
    static jint get_field_cap(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "state", "field_5050", "cap", "f_84585_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field com.mojang.blaze3d.platform.GlStateManager$CapabilityTracker#cap
    static void set_field_cap(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "state", "field_5050", "cap", "f_84585_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field com.mojang.blaze3d.platform.GlStateManager$CapabilityTracker#state
    static jboolean get_field_state(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "enabled", "field_5051", "state", "f_84586_"), "Z");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetBooleanField(obj, fieldID);
    };

    // setter for static private field com.mojang.blaze3d.platform.GlStateManager$CapabilityTracker#state
    static void set_field_state(const jobject &obj, const jboolean &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "enabled", "field_5051", "state", "f_84586_"), "Z");
        return MinecraftSDK::env->SetBooleanField(obj, fieldID, value);
    };

    static jmethodID methodID_disable() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "disable", "method_4469", "disable", "m_84589_"), "()V");
    }

    static void disable(const jobject& obj) {
                
       const auto methodID = methodID_disable();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_enable() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "enable", "method_4471", "enable", "m_84592_"), "()V");
    }

    static void enable(const jobject& obj) {
                
       const auto methodID = methodID_enable();
       MinecraftSDK::env->CallVoidMethod(obj, methodID);
    };
    
    static jmethodID methodID_setState() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "setEnabled", "method_4470", "setState", "m_84590_"), "(Z)V");
    }

    static void setState(const jobject& obj, const jboolean& arg0) {
                
       const auto methodID = methodID_setState();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
};

#endif // COM_MOJANG_BLAZE3D_PLATFORM_GLSTATEMANAGER$CAPABILITYTRACKER_HPP