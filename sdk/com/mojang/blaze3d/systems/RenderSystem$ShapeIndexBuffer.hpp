// WARNING: This code was automatically generated by MinecraftCppSDK.
// It is highly recommended to not modify this file directly.
// Any changes made to this file will be overwritten by the next generation. 

#ifndef COM_MOJANG_BLAZE3D_SYSTEMS_RENDERSYSTEM$SHAPEINDEXBUFFER_HPP
#define COM_MOJANG_BLAZE3D_SYSTEMS_RENDERSYSTEM$SHAPEINDEXBUFFER_HPP
#include <sdk.hpp>


/*
 * Minecraft class
 * Original: com.mojang.blaze3d.systems.RenderSystem$ShapeIndexBuffer
 * Remapped: com/mojang/blaze3d/systems/RenderSystem$a
 */
namespace RenderSystem$ShapeIndexBuffer {
    static jclass self() {
        static jclass cachedClass = nullptr;
        if (cachedClass == nullptr) {
            cachedClass = MinecraftSDK::env->FindClass(MinecraftSDK::getRemapped("com/mojang/blaze3d/systems/RenderSystem$a", "com/mojang/blaze3d/systems/RenderSystem$AutoStorageIndexBuffer", "com/mojang/blaze3d/systems/RenderSystem$class_5590", "com/mojang/blaze3d/systems/RenderSystem$ShapeIndexBuffer", "com/mojang/blaze3d/systems/RenderSystem$C_141293_"));
        }
        return cachedClass;
    };

    // getter for private field com.mojang.blaze3d.systems.RenderSystem$ShapeIndexBuffer#vertexCountInShape
    static jint get_field_vertexCountInShape(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "vertexStride", "field_27332", "vertexCountInShape", "f_157465_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field com.mojang.blaze3d.systems.RenderSystem$ShapeIndexBuffer#vertexCountInShape
    static void set_field_vertexCountInShape(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("a", "vertexStride", "field_27332", "vertexCountInShape", "f_157465_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field com.mojang.blaze3d.systems.RenderSystem$ShapeIndexBuffer#vertexCountInTriangulated
    static jint get_field_vertexCountInTriangulated(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "indexStride", "field_27333", "vertexCountInTriangulated", "f_157466_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field com.mojang.blaze3d.systems.RenderSystem$ShapeIndexBuffer#vertexCountInTriangulated
    static void set_field_vertexCountInTriangulated(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("b", "indexStride", "field_27333", "vertexCountInTriangulated", "f_157466_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field com.mojang.blaze3d.systems.RenderSystem$ShapeIndexBuffer#triangulator
    static jobject get_field_triangulator(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "generator", "field_27334", "triangulator", "f_157467_"), "Lcom/mojang/blaze3d/systems/RenderSystem$a$a;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field com.mojang.blaze3d.systems.RenderSystem$ShapeIndexBuffer#triangulator
    static void set_field_triangulator(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("c", "generator", "field_27334", "triangulator", "f_157467_"), "Lcom/mojang/blaze3d/systems/RenderSystem$a$a;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field com.mojang.blaze3d.systems.RenderSystem$ShapeIndexBuffer#id
    static jint get_field_id(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "name", "field_27335", "id", "f_157468_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field com.mojang.blaze3d.systems.RenderSystem$ShapeIndexBuffer#id
    static void set_field_id(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("d", "name", "field_27335", "id", "f_157468_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    // getter for private field com.mojang.blaze3d.systems.RenderSystem$ShapeIndexBuffer#indexType
    static jobject get_field_indexType(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "type", "field_27336", "indexType", "f_157469_"), "Lfbn$b;");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetObjectField(obj, fieldID);
    };

    // setter for static private field com.mojang.blaze3d.systems.RenderSystem$ShapeIndexBuffer#indexType
    static void set_field_indexType(const jobject &obj, const jobject &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("e", "type", "field_27336", "indexType", "f_157469_"), "Lfbn$b;");
        return MinecraftSDK::env->SetObjectField(obj, fieldID, value);
    };

    // getter for private field com.mojang.blaze3d.systems.RenderSystem$ShapeIndexBuffer#size
    static jint get_field_size(const jobject &obj) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "indexCount", "field_27337", "size", "f_157470_"), "I");
        if(fieldID == nullptr) { return 0; }
        
        return MinecraftSDK::env->GetIntField(obj, fieldID);
    };

    // setter for static private field com.mojang.blaze3d.systems.RenderSystem$ShapeIndexBuffer#size
    static void set_field_size(const jobject &obj, const jint &value) {
        const auto fieldID = MinecraftSDK::env->GetFieldID(self(), MinecraftSDK::getRemapped("f", "indexCount", "field_27337", "size", "f_157470_"), "I");
        return MinecraftSDK::env->SetIntField(obj, fieldID, value);
    };

    static jmethodID methodID_isLargeEnough() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "hasStorage", "method_43409", "isLargeEnough", "m_221944_"), "(I)Z");
    }

    static jboolean isLargeEnough(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_isLargeEnough();
       return MinecraftSDK::env->CallBooleanMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_bindAndGrow() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("b", "bind", "method_43410", "bindAndGrow", "m_221946_"), "(I)V");
    }

    static void bindAndGrow(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_bindAndGrow();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_grow() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("c", "ensureStorage", "method_31920", "grow", "m_157476_"), "(I)V");
    }

    static void grow(const jobject& obj, const jint& arg0) {
                
       const auto methodID = methodID_grow();
       MinecraftSDK::env->CallVoidMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getIndexConsumer() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "intConsumer", "method_31922", "getIndexConsumer", "m_157478_"), "(Ljava/nio/ByteBuffer;)Lit/unimi/dsi/fastutil/ints/IntConsumer;");
    }

    static jobject getIndexConsumer(const jobject& obj, const jobject& arg0) {
                
       const auto methodID = methodID_getIndexConsumer();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID, arg0);
    };
    
    static jmethodID methodID_getIndexType() {
       const auto clazz = self();
       return MinecraftSDK::env->GetMethodID(clazz, MinecraftSDK::getRemapped("a", "type", "method_31924", "getIndexType", "m_157483_"), "()Lfbn$b;");
    }

    static jobject getIndexType(const jobject& obj) {
                
       const auto methodID = methodID_getIndexType();
       return MinecraftSDK::env->CallObjectMethod(obj, methodID);
    };
    
};

#endif // COM_MOJANG_BLAZE3D_SYSTEMS_RENDERSYSTEM$SHAPEINDEXBUFFER_HPP